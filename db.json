{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.266c1c.css","path":"main.266c1c.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.096dc6.js","path":"slider.096dc6.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.266c1c.js","path":"main.266c1c.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.906508.js","path":"mobile.906508.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/50篇Android干货文章.md","hash":"fa39c4ef8e83b3783efaeb85c3a96331527c4538","modified":1519700939184},{"_id":"source/_posts/Activity和Service之间通过接口进行通信.md","hash":"c31933d9ed9e72cbe90500dd41737d9751e274e3","modified":1506057577076},{"_id":"source/_posts/Android单元测试.md","hash":"8c353befa5f035eb775b59fbd7a36be75ca712d8","modified":1506055861284},{"_id":"source/_posts/ButterKnife的学习和使用.md","hash":"1d9f46590e9181953fcea13722e1062ef27ec9b5","modified":1507534203440},{"_id":"source/_posts/Bitmap内存优化.md","hash":"98a2155b066cdae26f8b79750a1cd0ddf5fd34d8","modified":1506324956906},{"_id":"source/_posts/Chronometer的学习和使用.md","hash":"e27e50dd102cac3941b24e6c43d7390d56234fbe","modified":1507686515609},{"_id":"source/_posts/EventLog含义.md","hash":"a4ca1bb151ea16ed7be9cfc150856e10c7192056","modified":1519970557199},{"_id":"source/_posts/Intent的高级写法.md","hash":"38eb3d265fd2c4530231947980526351f20c1fad","modified":1506584403127},{"_id":"source/_posts/Launcher移植学习.md","hash":"dc580ba244c52b6398ec7e5a216ce1a9f869191c","modified":1520475305078},{"_id":"source/_posts/L6735M平台上如何配置才能使SN号码唯一.md","hash":"c8391949a84028b3486a02918b6f9cb5c20122f0","modified":1506047005696},{"_id":"source/_posts/ListView界面点击按键的时候会显示快捷搜索框.md","hash":"f37a021ca03a370382fba9dff61ca3159e205df9","modified":1505984160317},{"_id":"source/_posts/Observer观察者模式.md","hash":"3f7a87285ef47bc6c29df4aa82633a7096b493a0","modified":1506057492344},{"_id":"source/_posts/ShadowView的学习和使用.md","hash":"51feab39580655a4d2d9259dd20f354cf7d373c1","modified":1506762279606},{"_id":"source/_posts/Snackbar的学习和使用.md","hash":"619350e1fd5ebc3d6453fc380821cb3825ff4ce6","modified":1506666026161},{"_id":"source/_posts/Toast优化.md","hash":"5d92c5cf500d6a12167725341e272e93d598ed42","modified":1506050112900},{"_id":"source/_posts/USSD.md","hash":"716e4da13af043dc3b23d16b465a4a6cef6ee021","modified":1520473803094},{"_id":"source/_posts/adb-shell-input-text源码分析.md","hash":"434aaab1cd5984768c40372329e533eff9b48ac6","modified":1506322878571},{"_id":"source/_posts/adb命令集合.md","hash":"267d53699f8c9c960affb26bebb4409a989d69d3","modified":1516782604804},{"_id":"source/_posts/android-res下资源命名规则.md","hash":"b6436a3049b547d693b41b7314bec0c33c6b15ee","modified":1506325297198},{"_id":"source/_posts/android中media的url.md","hash":"6e27d7cf3db356e82fa194520735b2a6c24c66ed","modified":1505972977581},{"_id":"source/_posts/android清理缓存功能的实现.md","hash":"a93abdfc0b8f17bbdd702e796a88ce1b0eabb08a","modified":1505964071421},{"_id":"source/_posts/ccache.md","hash":"88baf07fcbfbc400c59a57902fb296cecacca6a0","modified":1505984881489},{"_id":"source/_posts/framework下添加一个自定义的服务.md","hash":"1b94a68171d16b2d8fe326f1890ba470c3d6250a","modified":1506322015063},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1501232707547},{"_id":"source/_posts/jack编译报错.md","hash":"9ab7c1196d7a2e3e104592838f0d11b247a92daf","modified":1505803036146},{"_id":"source/_posts/menu菜单的解析.md","hash":"8136f10e82b0b1a6463c74dd1d0674b1ebd20128","modified":1505984970725},{"_id":"source/_posts/setDescendantFocusability的参数含义.md","hash":"ca5c679f1c243a2b98446d846ffe21201acc99bb","modified":1505973272921},{"_id":"source/_posts/shutdown-selinux.md","hash":"87c7db4c08467bc0a3c49a1b01c8dc723680d45c","modified":1505973451713},{"_id":"source/_posts/sqlite-rawQuery.md","hash":"5b535e34e0d8d9ad9b5ffd5fa51497ac10ad769a","modified":1506048396864},{"_id":"source/_posts/support-features.md","hash":"ff57f006b2cc7f05f63842d0a7f1afe57455ece3","modified":1505985218077},{"_id":"source/_posts/ubuntu下cocos2dx学习.md","hash":"d6331d0a25ed336bfa4443babe1dbda041b03a75","modified":1506325056318},{"_id":"source/_posts/ubuntu搜狗输入法无法输入中文.md","hash":"335196535f330da3fba8842dc9db70e4fb4254fc","modified":1505964121653},{"_id":"source/_posts/wifi热点名称保存读取.md","hash":"425694db65492a35a463e440bf3b5c93529ed1ff","modified":1506052622736},{"_id":"source/_posts/两个Activity之间通过接口进行通信.md","hash":"4d41c37e6c1636f622f929a8046b5fe925030285","modified":1506057543828},{"_id":"source/_posts/为用户生成有趣的头像.md","hash":"36041765502279091deabf989857dae4ec41e5e8","modified":1519969422203},{"_id":"source/_posts/使用AIDL调用CountryDetector中的接口来获取国家编码.md","hash":"cb699f65e37195ef38fb1bfdac930cc9ebc8a501","modified":1506064265652},{"_id":"source/_posts/保存大文件到sqlite数据库.md","hash":"d3eff1cf8d66ac1af339ec3f8ee23673878824fb","modified":1506057640188},{"_id":"source/_posts/修改SIMToolkit的显示名称.md","hash":"c19905bcf423732d0ab44839f82fee3303a21d17","modified":1506324611498},{"_id":"source/_posts/修改wifi热点默认密码.md","hash":"b3d759c5e32fcc14907b6c843ca02a3fc96d8ed2","modified":1506047478616},{"_id":"source/_posts/修改某些分区表中的某些分区之后不起作用.md","hash":"6777350611a55dffa0cc39c4e2f03ecbfccb9408","modified":1506045631780},{"_id":"source/_posts/修改默认Launcher.md","hash":"c2f51a417970b9569bf43921872e2fabd0e36548","modified":1505980916493},{"_id":"source/_posts/修改默认日期.md","hash":"ffe2206a1cc6a5967208d518e2f7e23fa3124147","modified":1505980449889},{"_id":"source/_posts/修改默认的两个闹钟震动打开.md","hash":"0011ebacf54a9d775f16fddca5150ee7722b95c2","modified":1506047144624},{"_id":"source/_posts/全局对话框.md","hash":"86dcccaa07cad186e3923dd51540b00ec45ea265","modified":1506071233403},{"_id":"source/_posts/关闭NavigationBar.md","hash":"4a86ebbeca3e0377192a833cc9f2148625285793","modified":1506056410948},{"_id":"source/_posts/内存消耗测试.md","hash":"7fe9cf232714626b14832bba53f0d040999f43ca","modified":1506325386054},{"_id":"source/_posts/减缓按键长按事件的处理速度.md","hash":"f385513fce51ec87aa7406ce27dc5aa7206cb498","modified":1505984081557},{"_id":"source/_posts/动态壁纸的学习和使用.md","hash":"08b0963ca03db9da2ec1e0414de685a8df9a4c0d","modified":1506739575503},{"_id":"source/_posts/反编译查看google向导设置息屏时间121000.md","hash":"fcc2910ba551b9b6456eb07bf3f5d6a2772896cd","modified":1506324802610},{"_id":"source/_posts/同时支持两个文件名不同的布局.md","hash":"8428ee70bd7d420f2a7a9d4c4c04929fa258c8d7","modified":1506048834808},{"_id":"source/_posts/圆形的Imageview.md","hash":"b54d8a67985c3aee203ee14113c6482eb5f31e69","modified":1506047586076},{"_id":"source/_posts/在关闭飞行模式之后蓝牙打不开.md","hash":"e80286e529e82110c13f96da3aed6b6a2feed2b4","modified":1506048516880},{"_id":"source/_posts/在刷机之后Camera有可能会消失.md","hash":"56672ff1a4aeec28040b426f76c73f52f93ac8e6","modified":1506323795015},{"_id":"source/_posts/如何去掉AccentedEnglish.md","hash":"9b3dc4d94b8a148ee8f1421676e0f54d2b549f4e","modified":1506060314532},{"_id":"source/_posts/如何在下载好图片之后更新Gallery.md","hash":"5ca511eba98cf2f980382cc98441c68890e0fed0","modified":1506059765964},{"_id":"source/_posts/如何编译ICU资源.md","hash":"fa94be167b7ca650f79e89cc6c02550bb1f66236","modified":1506053622636},{"_id":"source/_posts/如何解析voicemail-conf-xml文件.md","hash":"bed0e1acbe9407e7c6c5f7bc4096037d81a6f09e","modified":1506050199964},{"_id":"source/_posts/如何让EditText不自动获取焦点.md","hash":"dac8524a0d519c0b261404cc8128cce8f20a5555","modified":1506322681671},{"_id":"source/_posts/如何让Launcher支持横屏显示.md","hash":"bf283d9e5ae9a55653aa9900430726d478190bbd","modified":1505982825829},{"_id":"source/_posts/如何通过代码动态设置语言.md","hash":"f36e0c6d0a4c65329ad7d0005c55b03622569854","modified":1506059246136},{"_id":"source/_posts/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤.md","hash":"81a64a2d5aca9ad4b1e9e7f7f388c9c05658ff0e","modified":1506052948716},{"_id":"source/_posts/客制化USB-CDROM.md","hash":"f339b0f3a7c2e3f8d7f752cd017d520ca4a84111","modified":1506322335899},{"_id":"source/_posts/工厂方法模式.md","hash":"7475032d8ea4f7ed99f16e62ea0ccb2728d97368","modified":1506057427920},{"_id":"source/_posts/工厂测试中SD卡测试失败.md","hash":"d255f3faf6c9d3cde82f128d11fdc5bee1075153","modified":1505973499529},{"_id":"source/_posts/性能测试.md","hash":"266b82d0ee0dbb9394c79b6d6341c3d7950ca507","modified":1506325444594},{"_id":"source/_posts/提高进程优先级.md","hash":"9e536af5d1e15a69b0c3c075c58e3dfe8130ac32","modified":1505973533041},{"_id":"source/_posts/收到短信后未振动手机.md","hash":"78121d30f56fc4181954e73872886e9f62f2f346","modified":1506057991492},{"_id":"source/_posts/数据连接默认开关.md","hash":"ae1f8789438ce125f57fa8edcd48a8326c9c0a18","modified":1506050499488},{"_id":"source/_posts/杀进程的脚本.md","hash":"540685325da28b2ab51a13d88f447a7ec4a4f62a","modified":1505974556425},{"_id":"source/_posts/应用开机自启动.md","hash":"2d04a9a5b28f11e0c74f63d6ada583101ef65a5d","modified":1506042691700},{"_id":"source/_posts/根据SDK版本号判断使用哪个类中的方法.md","hash":"f5606262c2661f0a47cb65821d7a3be418f4eacf","modified":1506045402300},{"_id":"source/_posts/根据控件的ID名称获取控件的ID值.md","hash":"32fb27d0f9299620bf731795fec2e78ef247f765","modified":1505973323985},{"_id":"source/_posts/沉浸式学习.md","hash":"d1c1fa1f069d753950b275e376c54f0f61ffdf2a","modified":1506667529221},{"_id":"source/_posts/添加MoreRingtone菜单.md","hash":"8b9a99b782347239846e033885268eda598550df","modified":1506060639448},{"_id":"source/_posts/添加代码禁用GoogleCamera.md","hash":"d9dbdf9ab0afa41f47d5cb8e74cb2bab1fd62f2e","modified":1506059501256},{"_id":"source/_posts/添加水印效果.md","hash":"323e55ddc5e29a71fd7c30fd9eb925bee07cebe5","modified":1506044919880},{"_id":"source/_posts/短信转彩信条数限制.md","hash":"023ef56197fa52b33f5942f9437acc86d23f7813","modified":1505973335017},{"_id":"source/_posts/第一次插卡弹出apn对话框.md","hash":"68a6e44cb749d4c819f9857e0011e6b366829c39","modified":1506048276444},{"_id":"source/_posts/游戏框架.md","hash":"cb7c025719382e79debb398615f767c1341b0a6b","modified":1506325500746},{"_id":"source/_posts/给APK进行系统签名.md","hash":"26a3c2c00ed1e1ec6714bf1b7682ff8f1e5ccbe7","modified":1506322420787},{"_id":"source/_posts/耳机模式下播放音乐再拍照音乐会卡顿.md","hash":"9e593163d5269fc630d84e4c75417f8225bea4b0","modified":1505983677281},{"_id":"source/_posts/网络请求.md","hash":"45436a1b534e6b552423a3761b4d4781085aaaee","modified":1506057097720},{"_id":"source/_posts/背光亮度设置后待机界面快捷图标不会随之变化.md","hash":"1bb755d7399eb98ee6cd9ac100d8ef50685a0afb","modified":1506052665956},{"_id":"source/_posts/联系人编辑界面上的号码输入框无法输入加号.md","hash":"60f6aebfa8e9013d40f9fdec1a4919ae2638d6e9","modified":1505984429865},{"_id":"source/_posts/自定义EditText的光标颜色.md","hash":"93d5b07785e0d91d018c969f4c2c6d7aded59ecf","modified":1506041902628},{"_id":"source/_posts/解析assets文件夹下的xml文件.md","hash":"c18e4911db8f74b423559c39774709fa4ca474fb","modified":1506048436392},{"_id":"source/_posts/获取SIM卡的IMSI号码.md","hash":"213b946a182fb1e811643be74b13271464284f1e","modified":1506048030288},{"_id":"source/_posts/解析res-drawable下图片的另一种方式.md","hash":"bf1655c5bf3045af293b8f0469aa591e0029fffa","modified":1506321832527},{"_id":"source/_posts/设置seekbar每一格的进度.md","hash":"aee960deed41c31e7b0ff4c6c91f3adccf89abac","modified":1505983795337},{"_id":"source/_posts/通过代码创建快捷方式.md","hash":"0af57caa02369091ab1596fb73bdbc8e57c96e9c","modified":1505974415001},{"_id":"source/_posts/通过代码动态设置view的selector.md","hash":"25096cda10ba2c435db956fea49f79cef71f7f83","modified":1505974252597},{"_id":"source/_posts/通过代码模拟触屏和按键事件.md","hash":"2869d8df8acf8f8021eb4d503a35e5fa187490ef","modified":1505979222849},{"_id":"source/_posts/通过反射修改全局默认字体.md","hash":"40e19e2a61d8c4799255a198a2425056b6c6e740","modified":1506662099189},{"_id":"source/_posts/配置AGPS.md","hash":"cec4bcad49d88de776e9da669a14ca50747bab56","modified":1506058612816},{"_id":"source/_posts/通过反射获取FeatureOption中的所有字段的值.md","hash":"e3689025956b23e7595a80f03cfdfd01e01b08e5","modified":1506322164483},{"_id":"source/_posts/隐藏QuickSettings中的AutoRotate菜单.md","hash":"2285c12bebf458b4c3e02722e77f4acc2acd7eaf","modified":1506047246072},{"_id":"source/_posts/隐藏三个点的Overflow菜单.md","hash":"a1d929d243897db5f18d7c2d06dc220fd1363023","modified":1505973705681},{"_id":"source/_posts/预置桌面快捷方式.md","hash":"58d1b20ea3b9ab1e85a4229317ce9070491ee24c","modified":1505983988069},{"_id":"source/_posts/预置了PDFViewer之后会报错.md","hash":"dc255761bd7bcf9a5f5229facdc394e29833c8bc","modified":1506047365416},{"_id":"source/_posts/默认打开wifi热点.md","hash":"e3836175b26bca4dac3af793d70179499634366b","modified":1506324269535},{"_id":"source/_posts/面试题集合.md","hash":"89f1b25a9dd104c578341a5a6afeb3b1700bffd5","modified":1507688290657},{"_id":"source/_posts/35个Java代码性能优化总结.md","hash":"c55eb56e43dd45327434233a0b88c08f4d942441","modified":1507616400373},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1501230611000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1501230611000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1501230611000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1501230611000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1501230611000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1501230611000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1501230611000},{"_id":"themes/yilia/_config.yml","hash":"cf5a324b56662522291f062b986229fb0590d9de","modified":1501233968451},{"_id":"themes/yilia/README.md","hash":"86757b00d393bd4956a252d92a469f11f2ae8914","modified":1501230611000},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1501230611000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1501230611000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1501230611000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1501230611000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1501230611000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1501230611000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1501230611000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1501230611000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1501230611000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1501230611000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1501230611000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1501230611000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1501230611000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501230611000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501230611000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1501230611000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1501230611000},{"_id":"themes/yilia/.git/index","hash":"96168ab9f52cffb946086d9c65c10ce7635695c3","modified":1505962906773},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1501230611000},{"_id":"themes/yilia/source/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1501230611000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501230584000},{"_id":"themes/yilia/source/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501230611000},{"_id":"themes/yilia/source/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1501230611000},{"_id":"themes/yilia/source/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1501230611000},{"_id":"themes/yilia/.git/config","hash":"006b8967ccecc0d260a343e3a129467114c28a83","modified":1501230611000},{"_id":"themes/yilia/.git/packed-refs","hash":"6526a81a90a7f96dba4cceb2c37d82bfc4839290","modified":1501230611000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1501230611000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1501230611000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1501230611000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1501230611000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9bb1a4918c1b1ee62ce0a71381990a1978c51b2a","modified":1501230611000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1501230611000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1501230611000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1501230611000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1501230611000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1501230611000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1501230611000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1501230611000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1501230611000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1501230611000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1501230611000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1501230611000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1501230611000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1501230611000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1501230611000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1501230611000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1501230611000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1501230611000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1501230611000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1501230611000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1501230611000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1501230611000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"b75e8fff732292fa26b5a0b47cd253d4281e321a","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"9bfcbd9e71401b6da6b2bbbe61e97625ca247b7a","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1501230611000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1501230584000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1501230611000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"285293d900ea3cb448a33ebe3e6fc617ef78a45f","modified":1501230584000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501230611000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501230611000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1501230611000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1501230611000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501230611000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501230584000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"241253b6f4e9e319941d33632a99072a970f6d7f","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"171b130d25c36f496e4b43e3808707a8f1897729","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1501230611000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4d8071322662d313a09ff7b2e716002870d8c94c","modified":1501230611000},{"_id":"themes/yilia/.git/objects/pack/pack-780db22f6880d24861c4203e638dc729a18bdd3f.idx","hash":"aa9dfee43bbb960f6511e54f43a6712f1e81866a","modified":1501230611000},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1501230611000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"241253b6f4e9e319941d33632a99072a970f6d7f","modified":1501230611000},{"_id":"themes/yilia/.git/objects/pack/pack-780db22f6880d24861c4203e638dc729a18bdd3f.pack","hash":"2b1e7912340fd292f00d20d26276ce28840fd79c","modified":1501230611000},{"_id":"public/content.json","hash":"239ce243d06044c7d336d02ea5ad34057b7c77bc","modified":1520478076957},{"_id":"public/2018/03/08/Launcher移植学习/index.html","hash":"d9050956d93a812a616a1ba76902591dbfeb4fc6","modified":1520478078423},{"_id":"public/2018/03/08/USSD/index.html","hash":"e7b2d7ea301c1dc009ac292f245772dedfa860c6","modified":1520478079090},{"_id":"public/2018/02/27/为用户生成有趣的头像/index.html","hash":"cb1111f6d1ea45da47dc6924bebeb58d9069c086","modified":1520478079172},{"_id":"public/2017/10/11/面试题集合/index.html","hash":"26ffa6d1f4d91c4a16f97997fba036bba10e7b73","modified":1520478079172},{"_id":"public/2017/10/11/Chronometer的学习和使用/index.html","hash":"eafef320e8eaf9ea6e4d106528439140744a0dab","modified":1520478079172},{"_id":"public/2017/10/10/35个Java代码性能优化总结/index.html","hash":"b838aabbba278b154d7f7f5682b2aa4f47759e03","modified":1520478079172},{"_id":"public/2017/10/09/ButterKnife的学习和使用/index.html","hash":"af3925d008047d03b6e5ed8b71e560d37673967a","modified":1520478079173},{"_id":"public/2018/03/02/EventLog含义/index.html","hash":"9a530884e4aeaa66fb99858115d0b9e55f9af71f","modified":1520478079173},{"_id":"public/2018/02/27/50篇Android干货文章/index.html","hash":"f708db1de787fe997c9db5ee050f39fa0c3d0e26","modified":1520478079173},{"_id":"public/2017/09/30/ShadowView的学习和使用/index.html","hash":"450dd8b864035439b86721927389aea712d7a635","modified":1520478079173},{"_id":"public/2017/09/28/Intent的高级写法/index.html","hash":"b6e78c196075a6f6bd90d5a5ecf0a9a397db18bf","modified":1520478079196},{"_id":"public/2017/09/29/通过反射修改全局默认字体/index.html","hash":"f8f8144008e53ad728c12ba8ea1c6ac43a22114f","modified":1520478079213},{"_id":"public/2017/09/29/沉浸式学习/index.html","hash":"47a6670f110b76ff8f232b5096f44166b03826b0","modified":1520478079214},{"_id":"public/2017/09/29/Snackbar的学习和使用/index.html","hash":"51301d4e41165dc5ea40dbbb1cf7d0a1e684a4d7","modified":1520478079214},{"_id":"public/2017/09/25/游戏框架/index.html","hash":"9c1a97d665cbf1b57de51a79867ea6a27bb902d5","modified":1520478079214},{"_id":"public/2017/09/25/性能测试/index.html","hash":"fc4dcf068be2518146696db660ac503a2c93ee8e","modified":1520478079214},{"_id":"public/2017/09/25/ubuntu下cocos2dx学习/index.html","hash":"348bde381b24e4d200b04a0214a9216bf0150de9","modified":1520478079214},{"_id":"public/2017/09/25/Bitmap内存优化/index.html","hash":"39cfb96135efc08f8ab007b7032f09f740a2ec9e","modified":1520478079215},{"_id":"public/2017/09/25/反编译查看google向导设置息屏时间121000/index.html","hash":"bf419cb36e7823d18572732416cdceb432b78303","modified":1520478079215},{"_id":"public/2017/09/25/修改SIMToolkit的显示名称/index.html","hash":"1b7bf9838b6f3b579afccdecc58f9ae3b40e2e80","modified":1520478079215},{"_id":"public/2017/09/25/默认打开wifi热点/index.html","hash":"20d0a314d4984ac22345928830b65525668c688d","modified":1520478079215},{"_id":"public/2017/09/25/在刷机之后Camera有可能会消失/index.html","hash":"fe58938f56c7fe3be76a2a2bc3de6af6c21252c4","modified":1520478079215},{"_id":"public/2017/09/25/adb-shell-input-text源码分析/index.html","hash":"b1eb22ea14955f70dd280becef5b24dcce246a5c","modified":1520478079215},{"_id":"public/2017/09/25/如何让EditText不自动获取焦点/index.html","hash":"de723ade79f393853fa7f491a3de0a76d802ee2a","modified":1520478079215},{"_id":"public/2017/09/25/给APK进行系统签名/index.html","hash":"a3913372a9b44f7c7b600bca237a927798c4966c","modified":1520478079215},{"_id":"public/2017/09/25/客制化USB-CDROM/index.html","hash":"81213c836c59c90ca39c5fc7f6fb6a666c4f9234","modified":1520478079215},{"_id":"public/2017/09/25/通过反射获取FeatureOption中的所有字段的值/index.html","hash":"344ccfad9c3b5e4a4caebf0a127c3fb966d711ea","modified":1520478079216},{"_id":"public/2017/09/25/解析res-drawable下图片的另一种方式/index.html","hash":"4709c9d074a7639e8025b4f0d698563ed6c3e665","modified":1520478079216},{"_id":"public/2017/09/25/动态壁纸的学习和使用/index.html","hash":"0e36ad2b495b240a944864173e3b00047844951d","modified":1520478079216},{"_id":"public/2017/09/25/内存消耗测试/index.html","hash":"53bd90f3e034526d6b439606919795dab391faf8","modified":1520478079216},{"_id":"public/2017/09/25/android-res下资源命名规则/index.html","hash":"b13eb582d1b8be43b7ac616a4f2e630add4463c2","modified":1520478079216},{"_id":"public/2017/09/22/使用AIDL调用CountryDetector中的接口来获取国家编码/index.html","hash":"d6e433cba2da8e4a4c235ede7b0ee4f3a1ca2615","modified":1520478079216},{"_id":"public/2017/09/22/全局对话框/index.html","hash":"a172cf8e6d52dc0c988c725e5bb7da68aae30e5c","modified":1520478079216},{"_id":"public/2017/09/22/添加MoreRingtone菜单/index.html","hash":"b1767236c72a7aba456351b872636fda2d893752","modified":1520478079216},{"_id":"public/2017/09/22/如何去掉AccentedEnglish/index.html","hash":"5f941b44076e3b9f3b32ffd3203a35e1d7f0e9cd","modified":1520478079216},{"_id":"public/2017/09/22/如何在下载好图片之后更新Gallery/index.html","hash":"7394e54da882fa6e3b9d6e950cea5e2325ffe7fd","modified":1520478079216},{"_id":"public/2017/09/22/添加代码禁用GoogleCamera/index.html","hash":"08f65c61e4d2f1c2796b9c5103b2cc1cfb988acb","modified":1520478079217},{"_id":"public/2017/09/22/如何通过代码动态设置语言/index.html","hash":"83b7eaad9a3b230afa690459a7563465dc9e5a0b","modified":1520478079217},{"_id":"public/2017/09/22/配置AGPS/index.html","hash":"8a3d169392de85d7fb42385dedbaa78b1d32b60b","modified":1520478079217},{"_id":"public/2017/09/22/收到短信后未振动手机/index.html","hash":"4635962e8d566413c2ce6aed65146573df4fdf9d","modified":1520478079217},{"_id":"public/2017/09/22/Activity和Service之间通过接口进行通信/index.html","hash":"c010b71d809c20ea0af11f4d495ffdef9aab0dc9","modified":1520478079217},{"_id":"public/2017/09/22/保存大文件到sqlite数据库/index.html","hash":"0897a61af8e63dfb4a27699a5f872a6a64eaf861","modified":1520478079217},{"_id":"public/2017/09/22/两个Activity之间通过接口进行通信/index.html","hash":"40835c7e6fec5bbf643b7cca36de04202806b431","modified":1520478079217},{"_id":"public/2017/09/22/Observer观察者模式/index.html","hash":"c5f50585fd0f9bb009b66210d61cca61ffe979f8","modified":1520478079217},{"_id":"public/2017/09/22/工厂方法模式/index.html","hash":"deb391679ca0a8f263673ef38b46d32989b94c7f","modified":1520478079217},{"_id":"public/2017/09/22/关闭NavigationBar/index.html","hash":"084e4c85b166353dae1d79fc96355a73981ea799","modified":1520478079217},{"_id":"public/2017/09/22/Android单元测试/index.html","hash":"7b0608d6a0f3cc871f77aea46b80b4609e0b1718","modified":1520478079218},{"_id":"public/2017/09/22/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤/index.html","hash":"71efef2ff62fe47925e7b6b351f93ac8a058e0bf","modified":1520478079218},{"_id":"public/2017/09/22/如何编译ICU资源/index.html","hash":"20089661fa9d33f7fb1458bf37aa6c0ab901eec2","modified":1520478079218},{"_id":"public/2017/09/22/网络请求/index.html","hash":"8759f4641596968e46525dcc1a22b74ea31e839b","modified":1520478079218},{"_id":"public/2017/09/22/背光亮度设置后待机界面快捷图标不会随之变化/index.html","hash":"a51781179890ba15a1cd0aa096397a6323af4323","modified":1520478079218},{"_id":"public/2017/09/22/数据连接默认开关/index.html","hash":"afe9a71ed09d06466a91f90cc520f8e7b7264fc3","modified":1520478079218},{"_id":"public/2017/09/22/如何解析voicemail-conf-xml文件/index.html","hash":"9cb85dc0d3f1474d540b50f9c5d27cf577be1046","modified":1520478079218},{"_id":"public/2017/09/22/Toast优化/index.html","hash":"58a270089e6e513d1b903cd671721ad8b47fd095","modified":1520478079218},{"_id":"public/2017/09/22/同时支持两个文件名不同的布局/index.html","hash":"849ef7539340f5f62455b7b2807851727e36ae2e","modified":1520478079218},{"_id":"public/2017/09/22/在关闭飞行模式之后蓝牙打不开/index.html","hash":"739a7e2d0fec7793ca220455ff2cd43c7e80126c","modified":1520478079219},{"_id":"public/2017/09/22/解析assets文件夹下的xml文件/index.html","hash":"1c8ac0e3140ea6a65633a06203585a99546c9e7c","modified":1520478079219},{"_id":"public/2017/09/22/sqlite-rawQuery/index.html","hash":"be1874c266e182468ce4d267c7ce5de1aa22a74a","modified":1520478079219},{"_id":"public/2017/09/22/第一次插卡弹出apn对话框/index.html","hash":"3c8599b11ee290550dcdaab915ede097f9a771c2","modified":1520478079219},{"_id":"public/2017/09/22/获取SIM卡的IMSI号码/index.html","hash":"adacd9509daf04f008b0deabb74d1d14b4b6efae","modified":1520478079219},{"_id":"public/2017/09/22/圆形的Imageview/index.html","hash":"011f26c986c37f7b62fecc33899a40c0e35a4121","modified":1520478079219},{"_id":"public/2017/09/22/修改wifi热点默认密码/index.html","hash":"4b4b1a66aa122148d92f2377cd6fe65332c4c9fb","modified":1520478079219},{"_id":"public/2017/09/22/预置了PDFViewer之后会报错/index.html","hash":"6895783f41847fcb6c999b2012bbd87b4163d82d","modified":1520478079220},{"_id":"public/2017/09/22/隐藏QuickSettings中的AutoRotate菜单/index.html","hash":"596583a35136bdca3f2a9fdd3acf24dbf982798e","modified":1520478079220},{"_id":"public/2017/09/22/L6735M平台上如何配置才能使SN号码唯一/index.html","hash":"6228039ccb5e62fe36d47d472eb98b7900d521e2","modified":1520478079220},{"_id":"public/2017/09/22/修改默认的两个闹钟震动打开/index.html","hash":"ccf9c982e9ee97391614cffed5c0fae827e90730","modified":1520478079220},{"_id":"public/2017/09/22/修改某些分区表中的某些分区之后不起作用/index.html","hash":"ade3147349876671a5e56f380a003d52aa874783","modified":1520478079220},{"_id":"public/2017/09/22/根据SDK版本号判断使用哪个类中的方法/index.html","hash":"0ca696c5c22e0cb8c27631ba60691269119ce9d5","modified":1520478079220},{"_id":"public/2017/09/22/添加水印效果/index.html","hash":"61d5459e82accd98975346e6377f5fa6394403bb","modified":1520478079220},{"_id":"public/2017/09/22/wifi热点名称保存读取/index.html","hash":"25d983a3cebf8f804837ab77028fc4ee6dfb438e","modified":1520478079221},{"_id":"public/2017/09/22/应用开机自启动/index.html","hash":"91e052e2b0e8b7b762524b25bd53e3a60f2c592a","modified":1520478079221},{"_id":"public/2017/09/21/support-features/index.html","hash":"c3d5547ffed1add28606abd9f4852cbee99e2016","modified":1520478079221},{"_id":"public/2017/09/21/menu菜单的解析/index.html","hash":"78e72057e1a7381c9b660ce8048b63447f8e31cb","modified":1520478079221},{"_id":"public/2017/09/21/联系人编辑界面上的号码输入框无法输入加号/index.html","hash":"0c95e7fe2c7e851cca1c19d640d50e662616e007","modified":1520478079221},{"_id":"public/2017/09/21/ListView界面点击按键的时候会显示快捷搜索框/index.html","hash":"6ce03fb7c05afb5eb176a9e9c6cf16f0e3ffd850","modified":1520478079221},{"_id":"public/2017/09/21/减缓按键长按事件的处理速度/index.html","hash":"fc5286ace6cb2afa8268026c756262b067e82654","modified":1520478079221},{"_id":"public/2017/09/21/预置桌面快捷方式/index.html","hash":"8885e1b577ec5847e17e4dabc5293f004f55df2f","modified":1520478079221},{"_id":"public/2017/09/21/设置seekbar每一格的进度/index.html","hash":"8c4829e5e01dca8f301c39cda12210683f5b431d","modified":1520478079221},{"_id":"public/2017/09/21/耳机模式下播放音乐再拍照音乐会卡顿/index.html","hash":"5121d22e9f82e1b4983874de31342f8f04cf4a4f","modified":1520478079222},{"_id":"public/2017/09/21/adb命令集合/index.html","hash":"175caacd97228e0df311ce4a4d33c44c1c877b6b","modified":1520478079222},{"_id":"public/2017/09/21/ccache/index.html","hash":"c492d81d667e005f02e08b559d5348eaabe7a8a3","modified":1520478079222},{"_id":"public/2017/09/21/修改默认日期/index.html","hash":"76413ebddc1c0ce5a8acae762d0d2b9cd0ae6933","modified":1520478079222},{"_id":"public/2017/09/21/杀进程的脚本/index.html","hash":"a507eb1a6422d3c326ca46c517633e035f4a2225","modified":1520478079222},{"_id":"public/2017/09/21/通过代码创建快捷方式/index.html","hash":"e36514284383e4f71d4e84bdc59dddaca2723520","modified":1520478079222},{"_id":"public/2017/09/21/通过代码动态设置view的selector/index.html","hash":"00bd7b0e73cb78ec669494e74276e3e66482d1ff","modified":1520478079222},{"_id":"public/2017/09/21/通过代码模拟触屏和按键事件/index.html","hash":"982173a739e4ccb53c2aeb46357fedd1abc236d3","modified":1520478079222},{"_id":"public/2017/09/21/如何让Launcher支持横屏显示/index.html","hash":"f8b2824bab1f8851d81201c6d33b1ee0d83fef8a","modified":1520478079222},{"_id":"public/2017/09/21/修改默认Launcher/index.html","hash":"e9e151d1eef63a33e6301ec954fefa7596bc27fd","modified":1520478079222},{"_id":"public/2017/09/21/隐藏三个点的Overflow菜单/index.html","hash":"7103b51f17bb7d50b60deb09273b6fdee73f1f0a","modified":1520478079223},{"_id":"public/2017/09/21/自定义EditText的光标颜色/index.html","hash":"5c7cba307842405aa4bcc036be1b961c4981cd4d","modified":1520478079223},{"_id":"public/2017/09/21/setDescendantFocusability的参数含义/index.html","hash":"b6ead13687fbb437a3e9319bcbe33520a5134eef","modified":1520478079223},{"_id":"public/2017/09/21/android中media的url/index.html","hash":"e3259353ace811ed2cb3d0c4e9cd451e1d6a1c7d","modified":1520478079223},{"_id":"public/2017/09/21/android清理缓存功能的实现/index.html","hash":"15ac86c1962f1f9b958be424a1eb278674974636","modified":1520478079223},{"_id":"public/2017/09/21/提高进程优先级/index.html","hash":"a08f542bcb0d2e5ffc3e65f2391d747602a16bcc","modified":1520478079223},{"_id":"public/2017/09/21/ubuntu搜狗输入法无法输入中文/index.html","hash":"e84cbf459a088cbe107ebc0b18d8981dbdf97ce7","modified":1520478079223},{"_id":"public/2017/09/19/shutdown-selinux/index.html","hash":"b0ac16021e33b3b80db104ebb2a45b530638eeee","modified":1520478079223},{"_id":"public/2017/09/19/framework下添加一个自定义的服务/index.html","hash":"501acf6cacfbed4d38b45e7fb272a9a9a7bd001d","modified":1520478079223},{"_id":"public/2017/09/19/jack编译报错/index.html","hash":"381fbc06c810cc446314adcb30c0c3ce25d69fb6","modified":1520478079224},{"_id":"public/2017/09/21/短信转彩信条数限制/index.html","hash":"1906925320101cb353efd4f0c513a8acb84f69c2","modified":1520478079224},{"_id":"public/2017/09/21/根据控件的ID名称获取控件的ID值/index.html","hash":"73a02863173d74b796eb869e5b3c30e925ace3e9","modified":1520478079224},{"_id":"public/2017/07/28/hello-world/index.html","hash":"6efaabd381dc3ed5e2b541574e5f91bbef80daff","modified":1520478079224},{"_id":"public/archives/index.html","hash":"c5a0670fa07d6a57bed159a99a3a82fc3de795af","modified":1520478079224},{"_id":"public/archives/page/4/index.html","hash":"2d51658458074d3067515e1d06bb19c1000c5604","modified":1520478079224},{"_id":"public/archives/page/2/index.html","hash":"4c8d7f685279ee9f6d0b5744b55928ecc2b0631c","modified":1520478079224},{"_id":"public/archives/page/3/index.html","hash":"7a57984cb23c2d46119856fe6c5f10ae24829063","modified":1520478079224},{"_id":"public/archives/page/5/index.html","hash":"e0132336bb834f8bbcf5998c01139ca8842a6447","modified":1520478079224},{"_id":"public/archives/page/6/index.html","hash":"a34a0f3f6d09fdf197d04812a753788017b10f16","modified":1520478079225},{"_id":"public/archives/page/7/index.html","hash":"2306f98c5757e08af5b9fc340c33ed7443513a31","modified":1520478079225},{"_id":"public/archives/page/8/index.html","hash":"1aae3ee93019b8b16dd49cef08ec2ea771f086a2","modified":1520478079225},{"_id":"public/archives/page/9/index.html","hash":"69411bad48d331b5550a8d1c79134ab9622a7f2c","modified":1520478079225},{"_id":"public/archives/page/10/index.html","hash":"9d949843dba5d3be4d929b69fc6c9f91761bdcc8","modified":1520478079225},{"_id":"public/archives/2017/index.html","hash":"b638755c2639b01c27a860dc3db43a283f62f686","modified":1520478079225},{"_id":"public/archives/2017/page/4/index.html","hash":"3a5ca82ed5dd586515e2749ba0ea4d25faaffc31","modified":1520478079225},{"_id":"public/archives/2017/page/2/index.html","hash":"88f4686b1707462aad85d24ed5968237584283cb","modified":1520478079225},{"_id":"public/archives/2017/page/3/index.html","hash":"da40f8624358a9609e4a130b9e0f771a9607d632","modified":1520478079225},{"_id":"public/archives/2017/page/5/index.html","hash":"a36208e86d7717ba7ff05510b82a399031366f31","modified":1520478079226},{"_id":"public/archives/2017/page/6/index.html","hash":"63e9c0780402124e565d336e286e1f60b8b1e0b2","modified":1520478079226},{"_id":"public/archives/2017/page/7/index.html","hash":"41404bfcabd93e6b5b52905d11706d0a0b121c40","modified":1520478079226},{"_id":"public/archives/2017/page/8/index.html","hash":"956cb3f848e893c510eda64a32e467f145859a61","modified":1520478079226},{"_id":"public/archives/2017/page/9/index.html","hash":"5574bba69ecb98505ea003c774fc3894c1254d70","modified":1520478079226},{"_id":"public/archives/2017/page/10/index.html","hash":"850b9da9f67b7fae2b5053fc5271e6d7596bcc43","modified":1520478079226},{"_id":"public/archives/2017/07/index.html","hash":"188f2a2ba7e0b4ada8950d5a4e91e3d28352d90d","modified":1520478079226},{"_id":"public/archives/2017/09/index.html","hash":"3d8ce777b80bb24330e7578015b5a994a50a43ac","modified":1520478079226},{"_id":"public/archives/2017/09/page/4/index.html","hash":"456b10d8af6841ccd470579e27d1adf4eebc5531","modified":1520478079226},{"_id":"public/archives/2017/09/page/2/index.html","hash":"74e5fb04093f6333d545c516081a8147158aed8f","modified":1520478079226},{"_id":"public/archives/2017/09/page/3/index.html","hash":"d2cbd456464bfe58686d5d200bea8614784d3ba5","modified":1520478079227},{"_id":"public/archives/2017/09/page/5/index.html","hash":"451fabafc3eb94b5f5356ffa37d72556959e99cd","modified":1520478079227},{"_id":"public/archives/2017/09/page/6/index.html","hash":"39798ca49041b81dea217868b13d61306a594e83","modified":1520478079227},{"_id":"public/archives/2017/09/page/7/index.html","hash":"739f8629dd34549378cb677cc968c91efc427f29","modified":1520478079227},{"_id":"public/archives/2017/09/page/8/index.html","hash":"0bedb9eca4b4734c6ecdc2d98490b4f578573eb7","modified":1520478079227},{"_id":"public/archives/2017/09/page/9/index.html","hash":"ea2af1086af773b8072cf190a0ed770df05ac0fe","modified":1520478079227},{"_id":"public/2017/09/21/工厂测试中SD卡测试失败/index.html","hash":"cfc6906e02bc3dac0fce60a84d57920a856bf047","modified":1520478079227},{"_id":"public/archives/2017/09/page/10/index.html","hash":"0b819361bbd36b729406e07166062c75e418146c","modified":1520478079227},{"_id":"public/archives/2017/10/index.html","hash":"be25491b1782c59d782005755350f502d137084f","modified":1520478079228},{"_id":"public/index.html","hash":"6fa2518b7ff57347cb921d6932644ecc9f6ceceb","modified":1520478079228},{"_id":"public/archives/2018/index.html","hash":"88eb3460938e1f06dc802878b86158adff035d5a","modified":1520478079228},{"_id":"public/archives/2018/02/index.html","hash":"0815938d33bb9aee24aa6ba666bcef9930d9c21e","modified":1520478079228},{"_id":"public/archives/2018/03/index.html","hash":"c84bc0b97271af752d46da217810c89fa71106d1","modified":1520478079228},{"_id":"public/page/2/index.html","hash":"6f725830697a32fd19a691ea63c364e29d2a5d9e","modified":1520478079228},{"_id":"public/page/3/index.html","hash":"3d594a299f92562aad79ad85505763a9a6671cfa","modified":1520478079228},{"_id":"public/page/4/index.html","hash":"01d1b1feb92300a5f0dbdbf7132a9a7064f71cea","modified":1520478079228},{"_id":"public/page/5/index.html","hash":"00c4aba16bf8b14b577850820ff9de0ea2d01009","modified":1520478079229},{"_id":"public/page/6/index.html","hash":"574f784346fb3275a1bd7e40b6ef31f3253d6cc9","modified":1520478079229},{"_id":"public/page/7/index.html","hash":"09c437b4cdc363d99b3838c12c40237d1f0c0b40","modified":1520478079229},{"_id":"public/page/8/index.html","hash":"56013123c2358b3eafad14ba934190ff3812aeae","modified":1520478079229},{"_id":"public/page/9/index.html","hash":"3e865928f366b3ac69d490ab7beaccd407abae24","modified":1520478079229},{"_id":"public/page/10/index.html","hash":"ab4a3d0fad43b300f50d1feb2c1fddb9a3cb93ae","modified":1520478079229},{"_id":"public/archives/page/11/index.html","hash":"f58bee2c1e07ad748e8dd6c8bb4e76cf1800e081","modified":1520478079234},{"_id":"public/page/11/index.html","hash":"7293c29f73f929956ba695ac232546a0c9951da3","modified":1520478079235},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1520478079235},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1520478079235},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1520478079235},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1520478079235},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1520478079235},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1520478079235},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1520478079235},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1520478079235},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1520478079235},{"_id":"public/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1520478079242},{"_id":"public/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1520478079242},{"_id":"public/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1520478079242},{"_id":"public/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1520478079242}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"50篇Android干货文章","date":"2018-02-27T03:08:41.000Z","_content":"\n\nhttp://blog.csdn.net/cym492224103/article/details/73239306","source":"_posts/50篇Android干货文章.md","raw":"---\ntitle: 50篇Android干货文章\ndate: 2018-02-27 11:08:41\ntags:\n---\n\n\nhttp://blog.csdn.net/cym492224103/article/details/73239306","slug":"50篇Android干货文章","published":1,"updated":"2018-02-27T03:08:59.184Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz8n0000ardx37d93y4b","content":"<p><a href=\"http://blog.csdn.net/cym492224103/article/details/73239306\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/cym492224103/article/details/73239306</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://blog.csdn.net/cym492224103/article/details/73239306\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/cym492224103/article/details/73239306</a></p>\n"},{"title":"Android单元测试","date":"2017-09-22T04:48:21.000Z","_content":"## 1.测试Activity?\n``` Java\npublic class ActivityTest extends ActivityInstrumentationTestCase2<HelloWorldActivity>{\n    private Activity activity;\n    private TextView textView;\n    public ActivityTest(){\n        super(\"com.qust.zq.math.test\",HelloWorldActivity.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        activity = this.getActivity();\n        textView = (TextView)activity.findViewById(R.id.textView);\n    }\n    public void testTextContent() throws Exception{\n        assertEquals(\"hello world\",textView.getText().toString());\n    }\n    public void testTextComponent() throws Exception{\n        assertNotNull(textView);\n    }\n}\n```\n\n## 2.测试ContentProvider?\n``` Java\npublic class ContentProviderTest extends ProviderTestCase2<FriendProvider>{\n    private Cursor cursor;\n    private String name;\n    public ContentProviderTest(){\n        super(FriendProvider.class,\"com.qust.zq.math.test\");\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        try{\n            cursor = getProvider().query(Uri.parse(\"content://com.qust.zq.math.test/friend/\"),null,null,null,null);\n            if(cursor.moveToFirst()){\n                name = cursor.getString(cursor.getColumnIndex(\"name\"));\n            }\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n    public void testCursor() throws Exception{\n        assertNotNull(cursor);\n    }\n    public void testName(){\n        assertEquals(\"xiaozhang\",name);        //这里的查询结果的记录条数为0???????\n    }\n}\n```\n\n## 3.测试Service?\n\n``` Java\npublic class ServiceTest extends ServiceTestCase<MyService>{\n    private MyService service;\n    public ServiceTest(){\n        super(MyService.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        Intent intent = new Intent(mContext,MyService.class);        //这里的mContext是ServiceTestCase中的成员变量\n        startService(intent);\n        service = getService();\n    }\n    public void testService(){\n        assertNotNull(service);\n    }\n    public void testResource(){\n        assertEquals(\"test service\",service.getString(R.string.app_name));\n    }\n}\n```\n\n## 4.测试普通类?\n\n``` Java\npublic class MyClass{\n    private String name = \"Android\";\n    public String getName(){\n        return name;\n    }\n}\n\npublic class Test extends AndroidTestCase{\n    private MyClass myClass;\n    protected void setUp() throws Exception{\n        super.setUp();\n        myClass = new MyClass();\n    }\n    public void testName(){\n        assertEquals(\"Android\",myClass.getName());\n    }\n}\n```","source":"_posts/Android单元测试.md","raw":"---\ntitle: Android单元测试\ndate: 2017-09-22 12:48:21\ntags:\n---\n## 1.测试Activity?\n``` Java\npublic class ActivityTest extends ActivityInstrumentationTestCase2<HelloWorldActivity>{\n    private Activity activity;\n    private TextView textView;\n    public ActivityTest(){\n        super(\"com.qust.zq.math.test\",HelloWorldActivity.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        activity = this.getActivity();\n        textView = (TextView)activity.findViewById(R.id.textView);\n    }\n    public void testTextContent() throws Exception{\n        assertEquals(\"hello world\",textView.getText().toString());\n    }\n    public void testTextComponent() throws Exception{\n        assertNotNull(textView);\n    }\n}\n```\n\n## 2.测试ContentProvider?\n``` Java\npublic class ContentProviderTest extends ProviderTestCase2<FriendProvider>{\n    private Cursor cursor;\n    private String name;\n    public ContentProviderTest(){\n        super(FriendProvider.class,\"com.qust.zq.math.test\");\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        try{\n            cursor = getProvider().query(Uri.parse(\"content://com.qust.zq.math.test/friend/\"),null,null,null,null);\n            if(cursor.moveToFirst()){\n                name = cursor.getString(cursor.getColumnIndex(\"name\"));\n            }\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n    public void testCursor() throws Exception{\n        assertNotNull(cursor);\n    }\n    public void testName(){\n        assertEquals(\"xiaozhang\",name);        //这里的查询结果的记录条数为0???????\n    }\n}\n```\n\n## 3.测试Service?\n\n``` Java\npublic class ServiceTest extends ServiceTestCase<MyService>{\n    private MyService service;\n    public ServiceTest(){\n        super(MyService.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        Intent intent = new Intent(mContext,MyService.class);        //这里的mContext是ServiceTestCase中的成员变量\n        startService(intent);\n        service = getService();\n    }\n    public void testService(){\n        assertNotNull(service);\n    }\n    public void testResource(){\n        assertEquals(\"test service\",service.getString(R.string.app_name));\n    }\n}\n```\n\n## 4.测试普通类?\n\n``` Java\npublic class MyClass{\n    private String name = \"Android\";\n    public String getName(){\n        return name;\n    }\n}\n\npublic class Test extends AndroidTestCase{\n    private MyClass myClass;\n    protected void setUp() throws Exception{\n        super.setUp();\n        myClass = new MyClass();\n    }\n    public void testName(){\n        assertEquals(\"Android\",myClass.getName());\n    }\n}\n```","slug":"Android单元测试","published":1,"updated":"2017-09-22T04:51:01.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9b0001ardxw5o4zp3q","content":"<h2 id=\"1-测试Activity\"><a href=\"#1-测试Activity\" class=\"headerlink\" title=\"1.测试Activity?\"></a>1.测试Activity?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivityInstrumentationTestCase2</span>&lt;<span class=\"title\">HelloWorldActivity</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView textView;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ActivityTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">\"com.qust.zq.math.test\"</span>,HelloWorldActivity.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        activity = <span class=\"keyword\">this</span>.getActivity();</div><div class=\"line\">        textView = (TextView)activity.findViewById(R.id.textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextContent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"hello world\"</span>,textView.getText().toString());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextComponent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-测试ContentProvider\"><a href=\"#2-测试ContentProvider\" class=\"headerlink\" title=\"2.测试ContentProvider?\"></a>2.测试ContentProvider?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContentProviderTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ProviderTestCase2</span>&lt;<span class=\"title\">FriendProvider</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Cursor cursor;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContentProviderTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(FriendProvider.class,<span class=\"string\">\"com.qust.zq.math.test\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            cursor = getProvider().query(Uri.parse(<span class=\"string\">\"content://com.qust.zq.math.test/friend/\"</span>),<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(cursor.moveToFirst())&#123;</div><div class=\"line\">                name = cursor.getString(cursor.getColumnIndex(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testCursor</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(cursor);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"xiaozhang\"</span>,name);        <span class=\"comment\">//这里的查询结果的记录条数为0???????</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-测试Service\"><a href=\"#3-测试Service\" class=\"headerlink\" title=\"3.测试Service?\"></a>3.测试Service?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServiceTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceTestCase</span>&lt;<span class=\"title\">MyService</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyService service;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServiceTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(MyService.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(mContext,MyService.class);        <span class=\"comment\">//这里的mContext是ServiceTestCase中的成员变量</span></div><div class=\"line\">        startService(intent);</div><div class=\"line\">        service = getService();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testService</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertNotNull(service);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testResource</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"test service\"</span>,service.getString(R.string.app_name));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-测试普通类\"><a href=\"#4-测试普通类\" class=\"headerlink\" title=\"4.测试普通类?\"></a>4.测试普通类?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"Android\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyClass myClass;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        myClass = <span class=\"keyword\">new</span> MyClass();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"Android\"</span>,myClass.getName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-测试Activity\"><a href=\"#1-测试Activity\" class=\"headerlink\" title=\"1.测试Activity?\"></a>1.测试Activity?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivityInstrumentationTestCase2</span>&lt;<span class=\"title\">HelloWorldActivity</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView textView;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ActivityTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">\"com.qust.zq.math.test\"</span>,HelloWorldActivity.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        activity = <span class=\"keyword\">this</span>.getActivity();</div><div class=\"line\">        textView = (TextView)activity.findViewById(R.id.textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextContent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"hello world\"</span>,textView.getText().toString());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextComponent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-测试ContentProvider\"><a href=\"#2-测试ContentProvider\" class=\"headerlink\" title=\"2.测试ContentProvider?\"></a>2.测试ContentProvider?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContentProviderTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ProviderTestCase2</span>&lt;<span class=\"title\">FriendProvider</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Cursor cursor;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContentProviderTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(FriendProvider.class,<span class=\"string\">\"com.qust.zq.math.test\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            cursor = getProvider().query(Uri.parse(<span class=\"string\">\"content://com.qust.zq.math.test/friend/\"</span>),<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(cursor.moveToFirst())&#123;</div><div class=\"line\">                name = cursor.getString(cursor.getColumnIndex(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testCursor</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(cursor);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"xiaozhang\"</span>,name);        <span class=\"comment\">//这里的查询结果的记录条数为0???????</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-测试Service\"><a href=\"#3-测试Service\" class=\"headerlink\" title=\"3.测试Service?\"></a>3.测试Service?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServiceTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceTestCase</span>&lt;<span class=\"title\">MyService</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyService service;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServiceTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(MyService.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(mContext,MyService.class);        <span class=\"comment\">//这里的mContext是ServiceTestCase中的成员变量</span></div><div class=\"line\">        startService(intent);</div><div class=\"line\">        service = getService();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testService</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertNotNull(service);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testResource</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"test service\"</span>,service.getString(R.string.app_name));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-测试普通类\"><a href=\"#4-测试普通类\" class=\"headerlink\" title=\"4.测试普通类?\"></a>4.测试普通类?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"Android\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyClass myClass;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        myClass = <span class=\"keyword\">new</span> MyClass();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"Android\"</span>,myClass.getName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Activity和Service之间通过接口进行通信","date":"2017-09-22T05:19:22.000Z","_content":"``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startService(new Intent(MainActivity.this,MainService.class));\n        MainService.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle();\n    }\n}\n\npublic class MainService extends Service{\n    public void onCreate(){\n        super.onCreate();\n        if(listener!=null){\n            listener.updateTitle(\"hello\");\n        }\n    }\n    public IBinder onBind(Intent intent){\n        return null;\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","source":"_posts/Activity和Service之间通过接口进行通信.md","raw":"---\ntitle: Activity和Service之间通过接口进行通信\ndate: 2017-09-22 13:19:22\ntags:\n---\n``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startService(new Intent(MainActivity.this,MainService.class));\n        MainService.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle();\n    }\n}\n\npublic class MainService extends Service{\n    public void onCreate(){\n        super.onCreate();\n        if(listener!=null){\n            listener.updateTitle(\"hello\");\n        }\n    }\n    public IBinder onBind(Intent intent){\n        return null;\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","slug":"Activity和Service之间通过接口进行通信","published":1,"updated":"2017-09-22T05:19:37.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9e0002ardx7wf5i5nc","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startService(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,MainService.class));</div><div class=\"line\">        MainService.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainService</span> <span class=\"keyword\">extends</span> <span class=\"title\">Service</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"keyword\">if</span>(listener!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            listener.updateTitle(<span class=\"string\">\"hello\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IBinder <span class=\"title\">onBind</span><span class=\"params\">(Intent intent)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startService(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,MainService.class));</div><div class=\"line\">        MainService.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainService</span> <span class=\"keyword\">extends</span> <span class=\"title\">Service</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"keyword\">if</span>(listener!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            listener.updateTitle(<span class=\"string\">\"hello\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IBinder <span class=\"title\">onBind</span><span class=\"params\">(Intent intent)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"ButterKnife的学习和使用","date":"2017-10-09T06:56:45.000Z","_content":"Butter Knife\n============\n### 1.添加依赖\n```groovy\ndependencies {\n  compile 'com.jakewharton:butterknife:8.8.1'\n  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'\n}\n```\n### 2.用法\n\nField and method binding for Android views which uses annotation processing to generate boilerplate\ncode for you.\n\n * Eliminate `findViewById` calls by using `@BindView` on fields.\n * Group multiple views in a list or array. Operate on all of them at once with actions,\n   setters, or properties.\n * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others.\n * Eliminate resource lookups by using resource annotations on fields.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R.id.user) EditText username;\n  @BindView(R.id.pass) EditText password;\n\n  @BindString(R.string.login_error) String loginErrorMessage;\n\n  @OnClick(R.id.submit) void submit() {\n    // TODO call server...\n  }\n\n  @Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n}\n```\n\nFor documentation and additional information see [the website][3].\n\n__Remember: A butter knife is like [a dagger][1] only infinitely less sharp.__\n\n\n\nDownload\n--------\n\n```groovy\ndependencies {\n  compile 'com.jakewharton:butterknife:8.8.1'\n  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'\n}\n```\n\nSnapshots of the development version are available in [Sonatype's `snapshots` repository][snap].\n\n\n\nLibrary projects\n--------------------\n\nTo use Butter Knife in a library, add the plugin to your `buildscript`:\n\n```groovy\nbuildscript {\n  repositories {\n    mavenCentral()\n   }\n  dependencies {\n    classpath 'com.jakewharton:butterknife-gradle-plugin:8.8.1'\n  }\n}\n```\n\nand then apply it in your module:\n\n```groovy\napply plugin: 'com.android.library'\napply plugin: 'com.jakewharton.butterknife'\n```\n\nNow make sure you use `R2` instead of `R` inside all Butter Knife annotations.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R2.id.user) EditText username;\n  @BindView(R2.id.pass) EditText password;\n...\n}\n```\n\n\n\nLicense\n-------\n\n    Copyright 2013 Jake Wharton\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n\n [1]: http://square.github.com/dagger/\n [2]: https://search.maven.org/remote_content?g=com.jakewharton&a=butterknife&v=LATEST\n [3]: http://jakewharton.github.com/butterknife/\n [snap]: https://oss.sonatype.org/content/repositories/snapshots/","source":"_posts/ButterKnife的学习和使用.md","raw":"---\ntitle: ButterKnife的学习和使用\ndate: 2017-10-09 14:56:45\ntags:\n---\nButter Knife\n============\n### 1.添加依赖\n```groovy\ndependencies {\n  compile 'com.jakewharton:butterknife:8.8.1'\n  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'\n}\n```\n### 2.用法\n\nField and method binding for Android views which uses annotation processing to generate boilerplate\ncode for you.\n\n * Eliminate `findViewById` calls by using `@BindView` on fields.\n * Group multiple views in a list or array. Operate on all of them at once with actions,\n   setters, or properties.\n * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others.\n * Eliminate resource lookups by using resource annotations on fields.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R.id.user) EditText username;\n  @BindView(R.id.pass) EditText password;\n\n  @BindString(R.string.login_error) String loginErrorMessage;\n\n  @OnClick(R.id.submit) void submit() {\n    // TODO call server...\n  }\n\n  @Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n}\n```\n\nFor documentation and additional information see [the website][3].\n\n__Remember: A butter knife is like [a dagger][1] only infinitely less sharp.__\n\n\n\nDownload\n--------\n\n```groovy\ndependencies {\n  compile 'com.jakewharton:butterknife:8.8.1'\n  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'\n}\n```\n\nSnapshots of the development version are available in [Sonatype's `snapshots` repository][snap].\n\n\n\nLibrary projects\n--------------------\n\nTo use Butter Knife in a library, add the plugin to your `buildscript`:\n\n```groovy\nbuildscript {\n  repositories {\n    mavenCentral()\n   }\n  dependencies {\n    classpath 'com.jakewharton:butterknife-gradle-plugin:8.8.1'\n  }\n}\n```\n\nand then apply it in your module:\n\n```groovy\napply plugin: 'com.android.library'\napply plugin: 'com.jakewharton.butterknife'\n```\n\nNow make sure you use `R2` instead of `R` inside all Butter Knife annotations.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R2.id.user) EditText username;\n  @BindView(R2.id.pass) EditText password;\n...\n}\n```\n\n\n\nLicense\n-------\n\n    Copyright 2013 Jake Wharton\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n\n [1]: http://square.github.com/dagger/\n [2]: https://search.maven.org/remote_content?g=com.jakewharton&a=butterknife&v=LATEST\n [3]: http://jakewharton.github.com/butterknife/\n [snap]: https://oss.sonatype.org/content/repositories/snapshots/","slug":"ButterKnife的学习和使用","published":1,"updated":"2017-10-09T07:30:03.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9f0003ardxnskxoixe","content":"<h1 id=\"Butter-Knife\"><a href=\"#Butter-Knife\" class=\"headerlink\" title=\"Butter Knife\"></a>Butter Knife</h1><h3 id=\"1-添加依赖\"><a href=\"#1-添加依赖\" class=\"headerlink\" title=\"1.添加依赖\"></a>1.添加依赖</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">  compile <span class=\"string\">'com.jakewharton:butterknife:8.8.1'</span></div><div class=\"line\">  annotationProcessor <span class=\"string\">'com.jakewharton:butterknife-compiler:8.8.1'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><p>Field and method binding for Android views which uses annotation processing to generate boilerplate<br>code for you.</p>\n<ul>\n<li>Eliminate <code>findViewById</code> calls by using <code>@BindView</code> on fields.</li>\n<li>Group multiple views in a list or array. Operate on all of them at once with actions,<br>setters, or properties.</li>\n<li>Eliminate anonymous inner-classes for listeners by annotating methods with <code>@OnClick</code> and others.</li>\n<li>Eliminate resource lookups by using resource annotations on fields.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R.id.user) EditText username;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R.id.pass) EditText password;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@BindString</span>(R.string.login_error) String loginErrorMessage;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@OnClick</span>(R.id.submit) <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">submit</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// TODO call server...</span></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    setContentView(R.layout.simple_activity);</div><div class=\"line\">    ButterKnife.bind(<span class=\"keyword\">this</span>);</div><div class=\"line\">    <span class=\"comment\">// TODO Use fields...</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>For documentation and additional information see <a href=\"http://jakewharton.github.com/butterknife/\" target=\"_blank\" rel=\"external\">the website</a>.</p>\n<p><strong>Remember: A butter knife is like <a href=\"http://square.github.com/dagger/\" target=\"_blank\" rel=\"external\">a dagger</a> only infinitely less sharp.</strong></p>\n<h2 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download\"></a>Download</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">  compile <span class=\"string\">'com.jakewharton:butterknife:8.8.1'</span></div><div class=\"line\">  annotationProcessor <span class=\"string\">'com.jakewharton:butterknife-compiler:8.8.1'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Snapshots of the development version are available in <a href=\"https://oss.sonatype.org/content/repositories/snapshots/\" target=\"_blank\" rel=\"external\">Sonatype’s <code>snapshots</code> repository</a>.</p>\n<h2 id=\"Library-projects\"><a href=\"#Library-projects\" class=\"headerlink\" title=\"Library projects\"></a>Library projects</h2><p>To use Butter Knife in a library, add the plugin to your <code>buildscript</code>:</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\">  repositories &#123;</div><div class=\"line\">    mavenCentral()</div><div class=\"line\">   &#125;</div><div class=\"line\">  dependencies &#123;</div><div class=\"line\">    classpath <span class=\"string\">'com.jakewharton:butterknife-gradle-plugin:8.8.1'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>and then apply it in your module:</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'com.android.library'</span></div><div class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'com.jakewharton.butterknife'</span></div></pre></td></tr></table></figure>\n<p>Now make sure you use <code>R2</code> instead of <code>R</code> inside all Butter Knife annotations.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R2.id.user) EditText username;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R2.id.pass) EditText password;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><pre><code>Copyright 2013 Jake Wharton\n\nLicensed under the Apache License, Version 2.0 (the &quot;License&quot;);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an &quot;AS IS&quot; BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Butter-Knife\"><a href=\"#Butter-Knife\" class=\"headerlink\" title=\"Butter Knife\"></a>Butter Knife</h1><h3 id=\"1-添加依赖\"><a href=\"#1-添加依赖\" class=\"headerlink\" title=\"1.添加依赖\"></a>1.添加依赖</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">  compile <span class=\"string\">'com.jakewharton:butterknife:8.8.1'</span></div><div class=\"line\">  annotationProcessor <span class=\"string\">'com.jakewharton:butterknife-compiler:8.8.1'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-用法\"><a href=\"#2-用法\" class=\"headerlink\" title=\"2.用法\"></a>2.用法</h3><p>Field and method binding for Android views which uses annotation processing to generate boilerplate<br>code for you.</p>\n<ul>\n<li>Eliminate <code>findViewById</code> calls by using <code>@BindView</code> on fields.</li>\n<li>Group multiple views in a list or array. Operate on all of them at once with actions,<br>setters, or properties.</li>\n<li>Eliminate anonymous inner-classes for listeners by annotating methods with <code>@OnClick</code> and others.</li>\n<li>Eliminate resource lookups by using resource annotations on fields.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R.id.user) EditText username;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R.id.pass) EditText password;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@BindString</span>(R.string.login_error) String loginErrorMessage;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@OnClick</span>(R.id.submit) <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">submit</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// TODO call server...</span></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    setContentView(R.layout.simple_activity);</div><div class=\"line\">    ButterKnife.bind(<span class=\"keyword\">this</span>);</div><div class=\"line\">    <span class=\"comment\">// TODO Use fields...</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>For documentation and additional information see <a href=\"http://jakewharton.github.com/butterknife/\" target=\"_blank\" rel=\"external\">the website</a>.</p>\n<p><strong>Remember: A butter knife is like <a href=\"http://square.github.com/dagger/\" target=\"_blank\" rel=\"external\">a dagger</a> only infinitely less sharp.</strong></p>\n<h2 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download\"></a>Download</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">  compile <span class=\"string\">'com.jakewharton:butterknife:8.8.1'</span></div><div class=\"line\">  annotationProcessor <span class=\"string\">'com.jakewharton:butterknife-compiler:8.8.1'</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Snapshots of the development version are available in <a href=\"https://oss.sonatype.org/content/repositories/snapshots/\" target=\"_blank\" rel=\"external\">Sonatype’s <code>snapshots</code> repository</a>.</p>\n<h2 id=\"Library-projects\"><a href=\"#Library-projects\" class=\"headerlink\" title=\"Library projects\"></a>Library projects</h2><p>To use Butter Knife in a library, add the plugin to your <code>buildscript</code>:</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\">  repositories &#123;</div><div class=\"line\">    mavenCentral()</div><div class=\"line\">   &#125;</div><div class=\"line\">  dependencies &#123;</div><div class=\"line\">    classpath <span class=\"string\">'com.jakewharton:butterknife-gradle-plugin:8.8.1'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>and then apply it in your module:</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'com.android.library'</span></div><div class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'com.jakewharton.butterknife'</span></div></pre></td></tr></table></figure>\n<p>Now make sure you use <code>R2</code> instead of <code>R</code> inside all Butter Knife annotations.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExampleActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R2.id.user) EditText username;</div><div class=\"line\">  <span class=\"meta\">@BindView</span>(R2.id.pass) EditText password;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><pre><code>Copyright 2013 Jake Wharton\n\nLicensed under the Apache License, Version 2.0 (the &quot;License&quot;);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an &quot;AS IS&quot; BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"title":"Bitmap内存优化","date":"2017-09-25T07:35:36.000Z","_content":"1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收\n参考：http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\n例如：\n获取Drawable的几种方法\n((BitmapDrawable) Drawable.createFromStream(is, \"test.png\")).getBitmap();\n\n2.在必须使用Bitmap的地方\na.使用BitmapFactory.Options指定解码选项\nBitmapFactory.Options opts = new BitmapFactory.Options();\nopts.inPurgeable = true;\t\t\t\t\t\t\t\t\t\t\t\t\t//设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。\n//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。\n//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：  \n//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。\nopts.inPreferredConfig = Bitmap.Config.ARGB_4444;\t\t//这个属性可以减少图片占用的内存大小,节约一半内存\n\nb.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收\n\nc.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析\n\nd.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存\n\ne.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭\n\nf.要及时回收Bitmap内存，并将bitmap设置为null\nBitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。\n仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。\n所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。\n这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。\n所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。\n例如：\nif(bitmap != null && !bitmap.isRecycled()){ \n        // 回收并且置为null\n        bitmap.recycle(); \n        bitmap = null; \n} \nSystem.gc();\n\ng.在解析图片内存溢出的时候捕获Error重新解析\n\n例如：\nprivate void decodeBitmap(String path){\n\tBitmap bitmap = null;\n\ttry {\n\t\t// 实例化Bitmap\n\t\tbitmap = BitmapFactory.decodeFile(path);\n\t} catch (OutOfMemoryError e) {\n\t\te.printStackTrace();\n\t\tSystem.gc();\n\t\tdecodeBitmap(path);\n\t\t\n\t}\n}\n\nh.尝试使用cocos2dx做《WorldCup》的动态壁纸？\n\ni.查看是否有内存泄露\n\n可以使用Eclipse中的DDMS视图查看\n先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了\n如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加\n\nj.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR\n\nk.研究一下gallery加载图片的方法\n\nl.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，\n使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】\n \nm.如何在WallpaperService.Engine中使用Animation???\n\nn.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：\n//decodeStream直接调用 JNI>>nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。\n\no.通过程序设定增强内存处理效率和自定义堆内存大小。","source":"_posts/Bitmap内存优化.md","raw":"---\ntitle: Bitmap内存优化\ndate: 2017-09-25 15:35:36\ntags:\n---\n1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收\n参考：http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\n例如：\n获取Drawable的几种方法\n((BitmapDrawable) Drawable.createFromStream(is, \"test.png\")).getBitmap();\n\n2.在必须使用Bitmap的地方\na.使用BitmapFactory.Options指定解码选项\nBitmapFactory.Options opts = new BitmapFactory.Options();\nopts.inPurgeable = true;\t\t\t\t\t\t\t\t\t\t\t\t\t//设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。\n//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。\n//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：  \n//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。\nopts.inPreferredConfig = Bitmap.Config.ARGB_4444;\t\t//这个属性可以减少图片占用的内存大小,节约一半内存\n\nb.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收\n\nc.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析\n\nd.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存\n\ne.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭\n\nf.要及时回收Bitmap内存，并将bitmap设置为null\nBitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。\n仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。\n所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。\n这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。\n所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。\n例如：\nif(bitmap != null && !bitmap.isRecycled()){ \n        // 回收并且置为null\n        bitmap.recycle(); \n        bitmap = null; \n} \nSystem.gc();\n\ng.在解析图片内存溢出的时候捕获Error重新解析\n\n例如：\nprivate void decodeBitmap(String path){\n\tBitmap bitmap = null;\n\ttry {\n\t\t// 实例化Bitmap\n\t\tbitmap = BitmapFactory.decodeFile(path);\n\t} catch (OutOfMemoryError e) {\n\t\te.printStackTrace();\n\t\tSystem.gc();\n\t\tdecodeBitmap(path);\n\t\t\n\t}\n}\n\nh.尝试使用cocos2dx做《WorldCup》的动态壁纸？\n\ni.查看是否有内存泄露\n\n可以使用Eclipse中的DDMS视图查看\n先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了\n如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加\n\nj.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR\n\nk.研究一下gallery加载图片的方法\n\nl.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，\n使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】\n \nm.如何在WallpaperService.Engine中使用Animation???\n\nn.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：\n//decodeStream直接调用 JNI>>nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。\n\no.通过程序设定增强内存处理效率和自定义堆内存大小。","slug":"Bitmap内存优化","published":1,"updated":"2017-09-25T07:35:56.906Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9h0004ardxfrr95mfz","content":"<p>1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收<br>参考：<a href=\"http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html</a><br>例如：<br>获取Drawable的几种方法<br>((BitmapDrawable) Drawable.createFromStream(is, “test.png”)).getBitmap();</p>\n<p>2.在必须使用Bitmap的地方<br>a.使用BitmapFactory.Options指定解码选项<br>BitmapFactory.Options opts = new BitmapFactory.Options();<br>opts.inPurgeable = true;                                                    //设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。<br>//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。<br>//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：<br>//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。<br>opts.inPreferredConfig = Bitmap.Config.ARGB_4444;        //这个属性可以减少图片占用的内存大小,节约一半内存</p>\n<p>b.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收</p>\n<p>c.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析</p>\n<p>d.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存</p>\n<p>e.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭</p>\n<p>f.要及时回收Bitmap内存，并将bitmap设置为null<br>Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。<br>仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。<br>所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。<br>这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。<br>所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。<br>例如：<br>if(bitmap != null &amp;&amp; !bitmap.isRecycled()){<br>        // 回收并且置为null<br>        bitmap.recycle();<br>        bitmap = null;<br>}<br>System.gc();</p>\n<p>g.在解析图片内存溢出的时候捕获Error重新解析</p>\n<p>例如：<br>private void decodeBitmap(String path){<br>    Bitmap bitmap = null;<br>    try {<br>        // 实例化Bitmap<br>        bitmap = BitmapFactory.decodeFile(path);<br>    } catch (OutOfMemoryError e) {<br>        e.printStackTrace();<br>        System.gc();<br>        decodeBitmap(path);</p>\n<pre><code>}\n</code></pre><p>}</p>\n<p>h.尝试使用cocos2dx做《WorldCup》的动态壁纸？</p>\n<p>i.查看是否有内存泄露</p>\n<p>可以使用Eclipse中的DDMS视图查看<br>先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了<br>如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加</p>\n<p>j.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR</p>\n<p>k.研究一下gallery加载图片的方法</p>\n<p>l.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，<br>使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】</p>\n<p>m.如何在WallpaperService.Engine中使用Animation???</p>\n<p>n.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：<br>//decodeStream直接调用 JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。</p>\n<p>o.通过程序设定增强内存处理效率和自定义堆内存大小。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收<br>参考：<a href=\"http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html</a><br>例如：<br>获取Drawable的几种方法<br>((BitmapDrawable) Drawable.createFromStream(is, “test.png”)).getBitmap();</p>\n<p>2.在必须使用Bitmap的地方<br>a.使用BitmapFactory.Options指定解码选项<br>BitmapFactory.Options opts = new BitmapFactory.Options();<br>opts.inPurgeable = true;                                                    //设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。<br>//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。<br>//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：<br>//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。<br>opts.inPreferredConfig = Bitmap.Config.ARGB_4444;        //这个属性可以减少图片占用的内存大小,节约一半内存</p>\n<p>b.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收</p>\n<p>c.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析</p>\n<p>d.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存</p>\n<p>e.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭</p>\n<p>f.要及时回收Bitmap内存，并将bitmap设置为null<br>Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。<br>仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。<br>所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。<br>这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。<br>所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。<br>例如：<br>if(bitmap != null &amp;&amp; !bitmap.isRecycled()){<br>        // 回收并且置为null<br>        bitmap.recycle();<br>        bitmap = null;<br>}<br>System.gc();</p>\n<p>g.在解析图片内存溢出的时候捕获Error重新解析</p>\n<p>例如：<br>private void decodeBitmap(String path){<br>    Bitmap bitmap = null;<br>    try {<br>        // 实例化Bitmap<br>        bitmap = BitmapFactory.decodeFile(path);<br>    } catch (OutOfMemoryError e) {<br>        e.printStackTrace();<br>        System.gc();<br>        decodeBitmap(path);</p>\n<pre><code>}\n</code></pre><p>}</p>\n<p>h.尝试使用cocos2dx做《WorldCup》的动态壁纸？</p>\n<p>i.查看是否有内存泄露</p>\n<p>可以使用Eclipse中的DDMS视图查看<br>先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了<br>如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加</p>\n<p>j.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR</p>\n<p>k.研究一下gallery加载图片的方法</p>\n<p>l.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，<br>使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】</p>\n<p>m.如何在WallpaperService.Engine中使用Animation???</p>\n<p>n.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：<br>//decodeStream直接调用 JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。</p>\n<p>o.通过程序设定增强内存处理效率和自定义堆内存大小。</p>\n"},{"title":"Chronometer的学习和使用","date":"2017-10-11T01:45:28.000Z","_content":"### 1.布局\n``` xml\n<Chronometer\n    android:id=\"@+id/text_timer\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"25dp\"\n    android:format=\"%s\"\n    android:textColor=\"#cccccc\"\n    android:textSize=\"30sp\"\n    android:textStyle=\"bold\" />\n```\n\n接下来的使用更加方便，直接:\n``` Java\n// 将计时器清零\ntext_timer.setBase(SystemClock.elapsedRealtime());\n//开始计时\ntext_timer.start();\n```\n但是会遇到一个问题，也是我们的高能环节:\n在你调用stop的时候，计时暂停，然后在调用start的时候，会发现时间不是从暂停的那个点来开始的，而是你一共开始计时的时间。\n这时候就要我们来解决这个问题了。\n具体解决思路:\n\n暂停的时候，记录当前的时间，在点击开始，start之前，要将你一共开始计时的时间  减去  暂停了的时间。\n关键就在于这个暂停了多长时间，暂停的时间就是我们一共计时的时间 减去 当时暂停的时间。\n明了。\n上代码:\n``` Java\ncase R.id.start_btn:\n    if (mRecordTime != 0) {\n        text_timer.setBase(text_timer.getBase() + (SystemClock.elapsedRealtime() - mRecordTime));\n    } else {\n        text_timer.setBase(SystemClock.elapsedRealtime());\n    }\n    text_timer.start();\n    break;\ncase R.id.stop_btn:\n    text_timer.stop();\n    mRecordTime = SystemClock.elapsedRealtime();\n    break;\n```","source":"_posts/Chronometer的学习和使用.md","raw":"---\ntitle: Chronometer的学习和使用\ndate: 2017-10-11 09:45:28\ntags:\n---\n### 1.布局\n``` xml\n<Chronometer\n    android:id=\"@+id/text_timer\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"25dp\"\n    android:format=\"%s\"\n    android:textColor=\"#cccccc\"\n    android:textSize=\"30sp\"\n    android:textStyle=\"bold\" />\n```\n\n接下来的使用更加方便，直接:\n``` Java\n// 将计时器清零\ntext_timer.setBase(SystemClock.elapsedRealtime());\n//开始计时\ntext_timer.start();\n```\n但是会遇到一个问题，也是我们的高能环节:\n在你调用stop的时候，计时暂停，然后在调用start的时候，会发现时间不是从暂停的那个点来开始的，而是你一共开始计时的时间。\n这时候就要我们来解决这个问题了。\n具体解决思路:\n\n暂停的时候，记录当前的时间，在点击开始，start之前，要将你一共开始计时的时间  减去  暂停了的时间。\n关键就在于这个暂停了多长时间，暂停的时间就是我们一共计时的时间 减去 当时暂停的时间。\n明了。\n上代码:\n``` Java\ncase R.id.start_btn:\n    if (mRecordTime != 0) {\n        text_timer.setBase(text_timer.getBase() + (SystemClock.elapsedRealtime() - mRecordTime));\n    } else {\n        text_timer.setBase(SystemClock.elapsedRealtime());\n    }\n    text_timer.start();\n    break;\ncase R.id.stop_btn:\n    text_timer.stop();\n    mRecordTime = SystemClock.elapsedRealtime();\n    break;\n```","slug":"Chronometer的学习和使用","published":1,"updated":"2017-10-11T01:48:35.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9j0005ardxjfag3f9g","content":"<h3 id=\"1-布局\"><a href=\"#1-布局\" class=\"headerlink\" title=\"1.布局\"></a>1.布局</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Chronometer</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/text_timer\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"25dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:format</span>=<span class=\"string\">\"%s\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#cccccc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>接下来的使用更加方便，直接:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 将计时器清零</span></div><div class=\"line\">text_timer.setBase(SystemClock.elapsedRealtime());</div><div class=\"line\"><span class=\"comment\">//开始计时</span></div><div class=\"line\">text_timer.start();</div></pre></td></tr></table></figure></p>\n<p>但是会遇到一个问题，也是我们的高能环节:<br>在你调用stop的时候，计时暂停，然后在调用start的时候，会发现时间不是从暂停的那个点来开始的，而是你一共开始计时的时间。<br>这时候就要我们来解决这个问题了。<br>具体解决思路:</p>\n<p>暂停的时候，记录当前的时间，在点击开始，start之前，要将你一共开始计时的时间  减去  暂停了的时间。<br>关键就在于这个暂停了多长时间，暂停的时间就是我们一共计时的时间 减去 当时暂停的时间。<br>明了。<br>上代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.start_btn:</div><div class=\"line\">    <span class=\"keyword\">if</span> (mRecordTime != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        text_timer.setBase(text_timer.getBase() + (SystemClock.elapsedRealtime() - mRecordTime));</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        text_timer.setBase(SystemClock.elapsedRealtime());</div><div class=\"line\">    &#125;</div><div class=\"line\">    text_timer.start();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\"><span class=\"keyword\">case</span> R.id.stop_btn:</div><div class=\"line\">    text_timer.stop();</div><div class=\"line\">    mRecordTime = SystemClock.elapsedRealtime();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-布局\"><a href=\"#1-布局\" class=\"headerlink\" title=\"1.布局\"></a>1.布局</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Chronometer</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/text_timer\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"25dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:format</span>=<span class=\"string\">\"%s\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#cccccc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>接下来的使用更加方便，直接:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 将计时器清零</span></div><div class=\"line\">text_timer.setBase(SystemClock.elapsedRealtime());</div><div class=\"line\"><span class=\"comment\">//开始计时</span></div><div class=\"line\">text_timer.start();</div></pre></td></tr></table></figure></p>\n<p>但是会遇到一个问题，也是我们的高能环节:<br>在你调用stop的时候，计时暂停，然后在调用start的时候，会发现时间不是从暂停的那个点来开始的，而是你一共开始计时的时间。<br>这时候就要我们来解决这个问题了。<br>具体解决思路:</p>\n<p>暂停的时候，记录当前的时间，在点击开始，start之前，要将你一共开始计时的时间  减去  暂停了的时间。<br>关键就在于这个暂停了多长时间，暂停的时间就是我们一共计时的时间 减去 当时暂停的时间。<br>明了。<br>上代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.start_btn:</div><div class=\"line\">    <span class=\"keyword\">if</span> (mRecordTime != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        text_timer.setBase(text_timer.getBase() + (SystemClock.elapsedRealtime() - mRecordTime));</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        text_timer.setBase(SystemClock.elapsedRealtime());</div><div class=\"line\">    &#125;</div><div class=\"line\">    text_timer.start();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\"><span class=\"keyword\">case</span> R.id.stop_btn:</div><div class=\"line\">    text_timer.stop();</div><div class=\"line\">    mRecordTime = SystemClock.elapsedRealtime();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n"},{"title":"EventLog含义","date":"2018-03-02T05:33:11.000Z","_content":"本文转载自gityuan:http://gityuan.com/2016/05/15/event-log/\n\n1、手机设备连接电脑\n\n2、执行命令:\n```\nadb shell\n```\n\n3、执行命令:\n```\ncat /system/etc/event-log-tags\n```\n通过上面的3步骤，即可查看Event所有的tags\n\n\n\n抓取Events log命令:\n```\nadb logcat -v threadtime -t 4096 -b events\n```\n该命令会输出带有时间点、进程号等信息的events log。\n\n\n下面列举tag可能使用的部分场景:\n```\nam_low_memory:位于AMS.killAllBackgroundProcesses或者AMS.appDiedLocked，记录当前Lru进程队列长度。\nam_pss:位于AMS.recordPssSampleLocked(\nam_meminfo:位于AMS.dumpApplicationMemoryUsage\nam_proc_start:位于AMS.startProcessLocked，启动进程\nam_proc_bound:位于AMS.attachApplicationLocked\nam_kill: 位于ProcessRecord.kill，杀掉进程\nam_anr: 位于AMS.appNotResponding\nam_crash:位于AMS.handleApplicationCrashInner\nam_wtf:位于AMS.handleApplicationWtf\nam_activity_launch_time:位于ActivityRecord.reportLaunchTimeLocked()，后面两个参数分别是thisTime和 totalTime.\nam_activity_fully_drawn_time:位于ActivityRecord.reportFullyDrawnLocked, 后面两个参数分别是thisTime和 totalTime\nam_broadcast_discard_filter:位于BroadcastQueue.logBroadcastReceiverDiscardLocked\nam_broadcast_discard_app:位于BroadcastQueue.logBroadcastReceiverDiscardLocked\n```\n\nActivity生命周期相关的方法:\n```\nam_on_resume_called: 位于AT.performResumeActivity\nam_on_paused_called: 位于AT.performPauseActivity, performDestroyActivity\nam_resume_activity: 位于AS.resumeTopActivityInnerLocked\nam_pause_activity: 位于AS.startPausingLocked\nam_finish_activity: 位于AS.finishActivityLocked, removeHistoryRecordsForAppLocked\nam_destroy_activity: 位于AS.destroyActivityLocked\nam_focused_activity: 位于AMS.setFocusedActivityLocked, clearFocusedActivity\nam_restart_activity: 位于ASS.realStartActivityLocked\nam_create_activity: 位于ASS.startActivityUncheckedLocked\nam_new_intent: 位于ASS.startActivityUncheckedLocked\nam_task_to_front: 位于AS.moveTaskToFrontLocked\n```\n\n下面列举tag可能使用的部分场景:\n```\npower_sleep_requested: 位于PMS.goToSleepNoUpdateLocked\npower_screen_state:位于Notifer.handleEarlyInteractiveChange, handleLateInteractiveChange\nbattery_level: [19,3660,352] //剩余电量19%, 电池电压3.66v, 电池温度35.2℃\npower_screen_state: [0,3,0,0] // 灭屏状态(0), 屏幕超时(3). 当然还有其他设备管理策略(1),其他理由都为用户行为(2)\npower_screen_state: [1,0,0,0] // 亮屏状态(1)\n```\n\n补充:\n```\nam_proc_start (User|1|5),(PID|1|5),(UID|1|5),(Process Name|3),(Type|3),(Component|3)\n\nam_proc_start:[0,9227,10002,com.android.browser,contentprovider,com.android.browser/.provider.BrowserProvider2]\n\n(User|1|5) ==> 名字为User, 数据类型为1，数据单位为5)\n```\n\n> \n数据类型:\n1: int\n2: long\n3: string\n4: list\n数据单位:\n1: Number of objects(对象个数)\n2: Number of bytes(字节数)\n3: Number of milliseconds(毫秒)\n4: Number of allocations(分配个数)\n5: Id\n6: Percent(百分比)\n\n---\n\n> \n举例:\n进程启动: UserId=0, pid=9227, uid=10002, ProcessName=com.android.browser, 数据类型=ContentProvider, 组件=com.android.browser/.provider.BrowserProvider2","source":"_posts/EventLog含义.md","raw":"---\ntitle: EventLog含义\ndate: 2018-03-02 13:33:11\ntags:\n---\n本文转载自gityuan:http://gityuan.com/2016/05/15/event-log/\n\n1、手机设备连接电脑\n\n2、执行命令:\n```\nadb shell\n```\n\n3、执行命令:\n```\ncat /system/etc/event-log-tags\n```\n通过上面的3步骤，即可查看Event所有的tags\n\n\n\n抓取Events log命令:\n```\nadb logcat -v threadtime -t 4096 -b events\n```\n该命令会输出带有时间点、进程号等信息的events log。\n\n\n下面列举tag可能使用的部分场景:\n```\nam_low_memory:位于AMS.killAllBackgroundProcesses或者AMS.appDiedLocked，记录当前Lru进程队列长度。\nam_pss:位于AMS.recordPssSampleLocked(\nam_meminfo:位于AMS.dumpApplicationMemoryUsage\nam_proc_start:位于AMS.startProcessLocked，启动进程\nam_proc_bound:位于AMS.attachApplicationLocked\nam_kill: 位于ProcessRecord.kill，杀掉进程\nam_anr: 位于AMS.appNotResponding\nam_crash:位于AMS.handleApplicationCrashInner\nam_wtf:位于AMS.handleApplicationWtf\nam_activity_launch_time:位于ActivityRecord.reportLaunchTimeLocked()，后面两个参数分别是thisTime和 totalTime.\nam_activity_fully_drawn_time:位于ActivityRecord.reportFullyDrawnLocked, 后面两个参数分别是thisTime和 totalTime\nam_broadcast_discard_filter:位于BroadcastQueue.logBroadcastReceiverDiscardLocked\nam_broadcast_discard_app:位于BroadcastQueue.logBroadcastReceiverDiscardLocked\n```\n\nActivity生命周期相关的方法:\n```\nam_on_resume_called: 位于AT.performResumeActivity\nam_on_paused_called: 位于AT.performPauseActivity, performDestroyActivity\nam_resume_activity: 位于AS.resumeTopActivityInnerLocked\nam_pause_activity: 位于AS.startPausingLocked\nam_finish_activity: 位于AS.finishActivityLocked, removeHistoryRecordsForAppLocked\nam_destroy_activity: 位于AS.destroyActivityLocked\nam_focused_activity: 位于AMS.setFocusedActivityLocked, clearFocusedActivity\nam_restart_activity: 位于ASS.realStartActivityLocked\nam_create_activity: 位于ASS.startActivityUncheckedLocked\nam_new_intent: 位于ASS.startActivityUncheckedLocked\nam_task_to_front: 位于AS.moveTaskToFrontLocked\n```\n\n下面列举tag可能使用的部分场景:\n```\npower_sleep_requested: 位于PMS.goToSleepNoUpdateLocked\npower_screen_state:位于Notifer.handleEarlyInteractiveChange, handleLateInteractiveChange\nbattery_level: [19,3660,352] //剩余电量19%, 电池电压3.66v, 电池温度35.2℃\npower_screen_state: [0,3,0,0] // 灭屏状态(0), 屏幕超时(3). 当然还有其他设备管理策略(1),其他理由都为用户行为(2)\npower_screen_state: [1,0,0,0] // 亮屏状态(1)\n```\n\n补充:\n```\nam_proc_start (User|1|5),(PID|1|5),(UID|1|5),(Process Name|3),(Type|3),(Component|3)\n\nam_proc_start:[0,9227,10002,com.android.browser,contentprovider,com.android.browser/.provider.BrowserProvider2]\n\n(User|1|5) ==> 名字为User, 数据类型为1，数据单位为5)\n```\n\n> \n数据类型:\n1: int\n2: long\n3: string\n4: list\n数据单位:\n1: Number of objects(对象个数)\n2: Number of bytes(字节数)\n3: Number of milliseconds(毫秒)\n4: Number of allocations(分配个数)\n5: Id\n6: Percent(百分比)\n\n---\n\n> \n举例:\n进程启动: UserId=0, pid=9227, uid=10002, ProcessName=com.android.browser, 数据类型=ContentProvider, 组件=com.android.browser/.provider.BrowserProvider2","slug":"EventLog含义","published":1,"updated":"2018-03-02T06:02:37.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9k0006ardx44441q9u","content":"<p>本文转载自gityuan:<a href=\"http://gityuan.com/2016/05/15/event-log/\" target=\"_blank\" rel=\"external\">http://gityuan.com/2016/05/15/event-log/</a></p>\n<p>1、手机设备连接电脑</p>\n<p>2、执行命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell</div></pre></td></tr></table></figure></p>\n<p>3、执行命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /system/etc/event-log-tags</div></pre></td></tr></table></figure></p>\n<p>通过上面的3步骤，即可查看Event所有的tags</p>\n<p>抓取Events log命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb logcat -v threadtime -t 4096 -b events</div></pre></td></tr></table></figure></p>\n<p>该命令会输出带有时间点、进程号等信息的events log。</p>\n<p>下面列举tag可能使用的部分场景:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_low_memory:位于AMS.killAllBackgroundProcesses或者AMS.appDiedLocked，记录当前Lru进程队列长度。</div><div class=\"line\">am_pss:位于AMS.recordPssSampleLocked(</div><div class=\"line\">am_meminfo:位于AMS.dumpApplicationMemoryUsage</div><div class=\"line\">am_proc_start:位于AMS.startProcessLocked，启动进程</div><div class=\"line\">am_proc_bound:位于AMS.attachApplicationLocked</div><div class=\"line\">am_kill: 位于ProcessRecord.kill，杀掉进程</div><div class=\"line\">am_anr: 位于AMS.appNotResponding</div><div class=\"line\">am_crash:位于AMS.handleApplicationCrashInner</div><div class=\"line\">am_wtf:位于AMS.handleApplicationWtf</div><div class=\"line\">am_activity_launch_time:位于ActivityRecord.reportLaunchTimeLocked()，后面两个参数分别是thisTime和 totalTime.</div><div class=\"line\">am_activity_fully_drawn_time:位于ActivityRecord.reportFullyDrawnLocked, 后面两个参数分别是thisTime和 totalTime</div><div class=\"line\">am_broadcast_discard_filter:位于BroadcastQueue.logBroadcastReceiverDiscardLocked</div><div class=\"line\">am_broadcast_discard_app:位于BroadcastQueue.logBroadcastReceiverDiscardLocked</div></pre></td></tr></table></figure></p>\n<p>Activity生命周期相关的方法:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_on_resume_called: 位于AT.performResumeActivity</div><div class=\"line\">am_on_paused_called: 位于AT.performPauseActivity, performDestroyActivity</div><div class=\"line\">am_resume_activity: 位于AS.resumeTopActivityInnerLocked</div><div class=\"line\">am_pause_activity: 位于AS.startPausingLocked</div><div class=\"line\">am_finish_activity: 位于AS.finishActivityLocked, removeHistoryRecordsForAppLocked</div><div class=\"line\">am_destroy_activity: 位于AS.destroyActivityLocked</div><div class=\"line\">am_focused_activity: 位于AMS.setFocusedActivityLocked, clearFocusedActivity</div><div class=\"line\">am_restart_activity: 位于ASS.realStartActivityLocked</div><div class=\"line\">am_create_activity: 位于ASS.startActivityUncheckedLocked</div><div class=\"line\">am_new_intent: 位于ASS.startActivityUncheckedLocked</div><div class=\"line\">am_task_to_front: 位于AS.moveTaskToFrontLocked</div></pre></td></tr></table></figure></p>\n<p>下面列举tag可能使用的部分场景:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">power_sleep_requested: 位于PMS.goToSleepNoUpdateLocked</div><div class=\"line\">power_screen_state:位于Notifer.handleEarlyInteractiveChange, handleLateInteractiveChange</div><div class=\"line\">battery_level: [19,3660,352] //剩余电量19%, 电池电压3.66v, 电池温度35.2℃</div><div class=\"line\">power_screen_state: [0,3,0,0] // 灭屏状态(0), 屏幕超时(3). 当然还有其他设备管理策略(1),其他理由都为用户行为(2)</div><div class=\"line\">power_screen_state: [1,0,0,0] // 亮屏状态(1)</div></pre></td></tr></table></figure></p>\n<p>补充:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_proc_start (User|1|5),(PID|1|5),(UID|1|5),(Process Name|3),(Type|3),(Component|3)</div><div class=\"line\"></div><div class=\"line\">am_proc_start:[0,9227,10002,com.android.browser,contentprovider,com.android.browser/.provider.BrowserProvider2]</div><div class=\"line\"></div><div class=\"line\">(User|1|5) ==&gt; 名字为User, 数据类型为1，数据单位为5)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>数据类型:<br>1: int<br>2: long<br>3: string<br>4: list<br>数据单位:<br>1: Number of objects(对象个数)<br>2: Number of bytes(字节数)<br>3: Number of milliseconds(毫秒)<br>4: Number of allocations(分配个数)<br>5: Id<br>6: Percent(百分比)</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>举例:<br>进程启动: UserId=0, pid=9227, uid=10002, ProcessName=com.android.browser, 数据类型=ContentProvider, 组件=com.android.browser/.provider.BrowserProvider2</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>本文转载自gityuan:<a href=\"http://gityuan.com/2016/05/15/event-log/\" target=\"_blank\" rel=\"external\">http://gityuan.com/2016/05/15/event-log/</a></p>\n<p>1、手机设备连接电脑</p>\n<p>2、执行命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell</div></pre></td></tr></table></figure></p>\n<p>3、执行命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /system/etc/event-log-tags</div></pre></td></tr></table></figure></p>\n<p>通过上面的3步骤，即可查看Event所有的tags</p>\n<p>抓取Events log命令:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb logcat -v threadtime -t 4096 -b events</div></pre></td></tr></table></figure></p>\n<p>该命令会输出带有时间点、进程号等信息的events log。</p>\n<p>下面列举tag可能使用的部分场景:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_low_memory:位于AMS.killAllBackgroundProcesses或者AMS.appDiedLocked，记录当前Lru进程队列长度。</div><div class=\"line\">am_pss:位于AMS.recordPssSampleLocked(</div><div class=\"line\">am_meminfo:位于AMS.dumpApplicationMemoryUsage</div><div class=\"line\">am_proc_start:位于AMS.startProcessLocked，启动进程</div><div class=\"line\">am_proc_bound:位于AMS.attachApplicationLocked</div><div class=\"line\">am_kill: 位于ProcessRecord.kill，杀掉进程</div><div class=\"line\">am_anr: 位于AMS.appNotResponding</div><div class=\"line\">am_crash:位于AMS.handleApplicationCrashInner</div><div class=\"line\">am_wtf:位于AMS.handleApplicationWtf</div><div class=\"line\">am_activity_launch_time:位于ActivityRecord.reportLaunchTimeLocked()，后面两个参数分别是thisTime和 totalTime.</div><div class=\"line\">am_activity_fully_drawn_time:位于ActivityRecord.reportFullyDrawnLocked, 后面两个参数分别是thisTime和 totalTime</div><div class=\"line\">am_broadcast_discard_filter:位于BroadcastQueue.logBroadcastReceiverDiscardLocked</div><div class=\"line\">am_broadcast_discard_app:位于BroadcastQueue.logBroadcastReceiverDiscardLocked</div></pre></td></tr></table></figure></p>\n<p>Activity生命周期相关的方法:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_on_resume_called: 位于AT.performResumeActivity</div><div class=\"line\">am_on_paused_called: 位于AT.performPauseActivity, performDestroyActivity</div><div class=\"line\">am_resume_activity: 位于AS.resumeTopActivityInnerLocked</div><div class=\"line\">am_pause_activity: 位于AS.startPausingLocked</div><div class=\"line\">am_finish_activity: 位于AS.finishActivityLocked, removeHistoryRecordsForAppLocked</div><div class=\"line\">am_destroy_activity: 位于AS.destroyActivityLocked</div><div class=\"line\">am_focused_activity: 位于AMS.setFocusedActivityLocked, clearFocusedActivity</div><div class=\"line\">am_restart_activity: 位于ASS.realStartActivityLocked</div><div class=\"line\">am_create_activity: 位于ASS.startActivityUncheckedLocked</div><div class=\"line\">am_new_intent: 位于ASS.startActivityUncheckedLocked</div><div class=\"line\">am_task_to_front: 位于AS.moveTaskToFrontLocked</div></pre></td></tr></table></figure></p>\n<p>下面列举tag可能使用的部分场景:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">power_sleep_requested: 位于PMS.goToSleepNoUpdateLocked</div><div class=\"line\">power_screen_state:位于Notifer.handleEarlyInteractiveChange, handleLateInteractiveChange</div><div class=\"line\">battery_level: [19,3660,352] //剩余电量19%, 电池电压3.66v, 电池温度35.2℃</div><div class=\"line\">power_screen_state: [0,3,0,0] // 灭屏状态(0), 屏幕超时(3). 当然还有其他设备管理策略(1),其他理由都为用户行为(2)</div><div class=\"line\">power_screen_state: [1,0,0,0] // 亮屏状态(1)</div></pre></td></tr></table></figure></p>\n<p>补充:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">am_proc_start (User|1|5),(PID|1|5),(UID|1|5),(Process Name|3),(Type|3),(Component|3)</div><div class=\"line\"></div><div class=\"line\">am_proc_start:[0,9227,10002,com.android.browser,contentprovider,com.android.browser/.provider.BrowserProvider2]</div><div class=\"line\"></div><div class=\"line\">(User|1|5) ==&gt; 名字为User, 数据类型为1，数据单位为5)</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>数据类型:<br>1: int<br>2: long<br>3: string<br>4: list<br>数据单位:<br>1: Number of objects(对象个数)<br>2: Number of bytes(字节数)<br>3: Number of milliseconds(毫秒)<br>4: Number of allocations(分配个数)<br>5: Id<br>6: Percent(百分比)</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>举例:<br>进程启动: UserId=0, pid=9227, uid=10002, ProcessName=com.android.browser, 数据类型=ContentProvider, 组件=com.android.browser/.provider.BrowserProvider2</p>\n</blockquote>\n"},{"title":"Intent的高级写法","date":"2017-09-28T07:39:49.000Z","_content":"\n\nIntent的高级写法?\n\n1.普通写Intent的方法和缺陷\n\n普通activity a要调用起activity b页面会这么写:\nMainActivity.java\n``` Java\nIntent intent = new Intent(MainActivity.this, SecondActivity.class);\nintent.putExtra(\"is_index\", message);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(\"is_index\");\n    ...\n}\n```\n\n> \n上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。\nso，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。\n\n2.优化写Intent\n\nMainActivity.java\n``` Java\nIntent intent = SecondActivity.newIndexIntent(this, text);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\nprivate final static String IS_INDEX = \"is_index\";\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(IS_INDEX);\n    ...\n}\npublic static Intent newIndexIntent(Context context, String message) {\n    Intent newIntent = new Intent(context, b.class);\n    newIntent.putExtra(IS_INDEX, message);\n    return newIntent;\n}\n```","source":"_posts/Intent的高级写法.md","raw":"---\ntitle: Intent的高级写法\ndate: 2017-09-28 15:39:49\ntags:\n---\n\n\nIntent的高级写法?\n\n1.普通写Intent的方法和缺陷\n\n普通activity a要调用起activity b页面会这么写:\nMainActivity.java\n``` Java\nIntent intent = new Intent(MainActivity.this, SecondActivity.class);\nintent.putExtra(\"is_index\", message);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(\"is_index\");\n    ...\n}\n```\n\n> \n上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。\nso，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。\n\n2.优化写Intent\n\nMainActivity.java\n``` Java\nIntent intent = SecondActivity.newIndexIntent(this, text);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\nprivate final static String IS_INDEX = \"is_index\";\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(IS_INDEX);\n    ...\n}\npublic static Intent newIndexIntent(Context context, String message) {\n    Intent newIntent = new Intent(context, b.class);\n    newIntent.putExtra(IS_INDEX, message);\n    return newIntent;\n}\n```","slug":"Intent的高级写法","published":1,"updated":"2017-09-28T07:40:03.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9l0007ardxrnxxtcf4","content":"<p>Intent的高级写法?</p>\n<p>1.普通写Intent的方法和缺陷</p>\n<p>普通activity a要调用起activity b页面会这么写:<br>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>, SecondActivity.class);</div><div class=\"line\">intent.putExtra(<span class=\"string\">\"is_index\"</span>, message);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(<span class=\"string\">\"is_index\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。<br>so，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。</p>\n</blockquote>\n<p>2.优化写Intent</p>\n<p>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = SecondActivity.newIndexIntent(<span class=\"keyword\">this</span>, text);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String IS_INDEX = <span class=\"string\">\"is_index\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(IS_INDEX);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Intent <span class=\"title\">newIndexIntent</span><span class=\"params\">(Context context, String message)</span> </span>&#123;</div><div class=\"line\">    Intent newIntent = <span class=\"keyword\">new</span> Intent(context, b.class);</div><div class=\"line\">    newIntent.putExtra(IS_INDEX, message);</div><div class=\"line\">    <span class=\"keyword\">return</span> newIntent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Intent的高级写法?</p>\n<p>1.普通写Intent的方法和缺陷</p>\n<p>普通activity a要调用起activity b页面会这么写:<br>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>, SecondActivity.class);</div><div class=\"line\">intent.putExtra(<span class=\"string\">\"is_index\"</span>, message);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(<span class=\"string\">\"is_index\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。<br>so，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。</p>\n</blockquote>\n<p>2.优化写Intent</p>\n<p>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = SecondActivity.newIndexIntent(<span class=\"keyword\">this</span>, text);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String IS_INDEX = <span class=\"string\">\"is_index\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(IS_INDEX);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Intent <span class=\"title\">newIndexIntent</span><span class=\"params\">(Context context, String message)</span> </span>&#123;</div><div class=\"line\">    Intent newIntent = <span class=\"keyword\">new</span> Intent(context, b.class);</div><div class=\"line\">    newIntent.putExtra(IS_INDEX, message);</div><div class=\"line\">    <span class=\"keyword\">return</span> newIntent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Launcher移植学习","date":"2018-03-08T01:50:39.000Z","_content":"1.移植R5的Tecno_Launcher2????\n\n解决:\n移植完毕\n\n2.添加接口setStatusBarBg()？？？\n\n解决:\n需要修改以下几个文件\n``` Java\n//frameworks/base/core/java/android/app/StatusBarManager.java\npublic void setStatusBarBg(int statusBarBg) {\t\t\t\t\t//添加 setStatusBarBg(int color) 方法\n    try {\n        final IStatusBarService svc = getService();\n        if (svc != null) {\n            mService.setStatusBarBg(statusBarBg);\n        }\n    } catch (RemoteException ex) {\n        /// M: system process is dead anyway.\n        throw new RuntimeException(ex);\n    }\n}\n\n//frameworks/base/core/java/com/android/internal/statusbar/IStatusBarService.aidl\nvoid setStatusBarBg(int color);\t\t\t\t\t\t\t\t\t//添加 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口\n\n//frameworks/base/services/java/com/android/server/StatusBarManagerService.java\npublic void setStatusBarBg(int statusBarBg) {\t\t\t\t\t//实现 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口\n    if (mBar != null) {\n        try {\n            mBar.setStatusBarBg(statusBarBg);\n        } catch (RemoteException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n\n//frameworks/base/core/java/com/android/internal/statusbar/IStatusBar.aidl\nvoid setStatusBarBg(int color);\t\t\t\t\t\t\t\t\t//添加 IStatusBar.aidl 中的 setStatusBarBg(int color)接口\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java\npublic void setStatusBarBg(int statusBarBg) {\n    synchronized (mList) {\n        mHandler.obtainMessage(MSG_SET_STATUSBAR, statusBarBg, 0, null).sendToTarget();\n    }\n}\n//在H(Handler)中添加对MSG_SET_STATUSBAR的处理\ncase MSG_SET_STATUSBAR:\n    mCallbacks.setStatusBarBg(msg.arg1);\n    break;\n//在 CommandQueue.Callbacks 接口中添加 setStatusBarBg() 接口\nsetStatusBarBg(int color)\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java\npublic void setStatusBarBg(int color){}\t\t\t\t//在这里实现 CommandQueue.Callbacks 中的 setStatusBarBg()接口\n\n//frameworks\\base\\packages\\systemui\\src\\com\\android\\systemui\\statusbar\\phone\\PhoneStatusBar.java\textends BaseStatusBar\npublic void setStatusBarBg(int color) {\n    mStatusBarView.setBackgroundColor(color);\t\t//这里也有对 CommandQueue.Callbacks 中的 setStatusBarBg()接口的实现\n}\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java\t中有对 setBackgroundColor()的实现\n@RemotableViewMethod\npublic void setBackgroundColor(int color) {\n    if (mBackground instanceof ColorDrawable) {\n        ((ColorDrawable) mBackground.mutate()).setColor(color);\n        computeOpaqueFlags();\n        mBackgroundResource = 0;\n    } else {\n        setBackground(new ColorDrawable(color));\n    }\n}\n```\n\n3.修改 Apps 和 Widgets 字体的大小和宽度？？？\n\n解决:\n在 AppsCustomizeTabHost.java 文件的 onFinishInflate() 方法中修改\n``` Java\n//Apps\ntabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, 25);\ntabView.setWidth(129);\n//Widgets\nwidgettabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, 25);\nwidgettabView.setWidth(250);\n```\n\n4.AppsCustomizerTabHost 上右边的两个按钮 market_button 和 tecno_order_button ？？？\n\n解决:\n将 apps_customize_pane.xml 中的 RelativeLayout中的 android:layout_marginLeft 改为 187dp 就能在tab下面显示一条完美的横线了\nmarket_button还是没有显示出来\n\n5.如何将 AppsCustomizerTabHost 下面蓝色的 indicator 替换为 三角箭头????\n\n解决:\n只要将 values/styles.xml 文件中的 TabIndicator 的\n``` xml\n<item name=\"android:background\">@drawable/tab_widget_indicator_selector</item>\n修改为\n<item name=\"android:background\">@drawable/buttonbarbackground</item>\n```\n\n6.修改Launcher里面应用图标大小，应用字体大小？？？\n\n解决:\nPagedViewIcon.java中添加 setTextSize(12); 设置应用标题的字体\n在 dimens.xml 文件中修改如何参数来修改图标的大小\n``` xml\n<dimen name=\"app_icon_size\">54dp</dimen>\t\t\t\t\n<dimen name=\"apps_customize_cell_width\">100dp</dimen>\n<dimen name=\"apps_customize_cell_height\">140dp</dimen>\n```\n\n7.有些应用的图标显示会比较大，如《梦宝谷》？？？\n\n解决:\n已去掉该应用，去掉该应用的方法参考《问题55》\n\n8.apps_customize_pane.xml 上的 market_button 按钮还是没有显示出来？？？\n\n解决:\n只要预置了Goole Play store就会显示出来\n\n9.在widget列表界面每一项的右下角添加一个指示 n * m 的 图标？？？\n\n解决:\n添加一个DimsView自定义View\n\n10. widget 列表的绘制？？？\n\n解决:\n在 PagedViewGridLayout.java的 dispatchDraw()方法中绘制 widget 列表的横线和竖线\n``` Java\n//mFirstLine = 240;\t\t\t\t\t\t\t\t\t\t\t\t//这个变量可以去掉的，因为在cellWidth中控制widget的高度和宽度之后就可以控制 mFirstLine 的大小了\ncanvas.drawLine(0, mFirstLine, 480, mFirstLine, mPaint);\t\t//在这里只需要将 720 改为 480 ，将 360 改为 240 就可以了\ncanvas.drawLine(0, mFirstLine*2, 480, mFirstLine*2, mPaint);\ncanvas.drawLine(0, mFirstLine*3, 480, mFirstLine*3, mPaint);\ncanvas.drawLine(240, 0, 240, mFirstLine*3, mPaint);\n```\n\n11. 控制每一个widget列表项的大小？？？\n\n解决:\n在 apps_customize_widget_add.xml 文件中有每一个列表项的布局\t\t//注意这里用的是 apps_customize_widget_add.xml 而不是 apps_customize_widget.xml\n在 AppsCustomizePagedView.java 的 syncWidgetPageItems()方法中将每一个 widget 添加到列表中\nfinal int cellWidth = 217;\t\t//用于控制每一个widget的显示宽度\t\t\t\t\nfinal int cellHeight = 190;\t\t//用于控制每一个widget的显示高度\t\t\t这样控制是不是不太好，是不是应该控制每一个 cellHeight 计算公式中的变量来控制比较好\n\n12.apps列表下面的 indicator ????\n\n解决:\n在 AllAppPageControlView.java 文件中有 pageID = { R.drawable.page_unit_nor, R.drawable.page_unit_active };\t//这两张图片就是下面的indicator图片\n在 PagedView.java 中使用 AllAppPageControlView\n\n13.widget列表下面的 indicator 不会随页数的变化而变化？？？\n\n解决:\n主要在 AllAppPageControlView.java 中添加\n``` Java\npublic void bindWidgetView(AppsCustomizePagedView allapppage) {\n    Log.v(\"sw98\",\"bindPageView allapppage.mCurrentPage == \"+allapppage.mCurrentPage);\n    Log.v(\"sw98\",\"bindPageView allapppage.mNumAppsPages() == \"+allapppage.mNumAppsPages);\n    this.count = allapppage.mNumWidgetPages;\n    mPagedView = allapppage;\n}\n```\n\n14.app列表和widget列表的黑色背景怎么改？？？\n\n解决:\n只要将 TECNO_THEME_SUPPORT 的宏打开为yes就可以了\n\n15.修改Hotseat上图标的大小？？？\n\n解决:\n将values/dimens.xml文件中的hotseat_cell_width改为64dp\n将layout-port/hotseat.xml文件中的android:layout_width改为match_parent\n\n16.去掉widget列表上第一个小部件《应用》小部件的缩略图？？？\n\n17.点击Menu键的时候会右移一大块？？？\n\n解决:\n//packages/apps/Tecno_Launcher2/src/com/android/launcher2/Hotseat.java 文件中把 720 都改为 480 即可\n\n18.修改Folder的布局？？？\n\n解决:\n修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 centerAboutIcon()方法中的\n``` Java\nlp.width = 480;\nlp.height = 800;\nlp.x = 80;\nlp.y = 100;\n修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 onMeasure()方法中\nint contentWidthSpec = MeasureSpec.makeMeasureSpec(430, MeasureSpec.EXACTLY);\nint contentHeightSpec = MeasureSpec.makeMeasureSpec(650, MeasureSpec.EXACTLY);\n```\n\n19.Folder文件夹中可以存放的应用数量在哪里设定？？？\n\n解决:\n// packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 的构造函数 public Folder() 中有如下数值\n``` Java\nmMaxCountX = 3;//res.getInteger(R.integer.folder_max_count_x);\nmMaxCountY = 5;//res.getInteger(R.integer.folder_max_count_y);\nmMaxNumItems = 15;\n```\n\n20.修改桌面下方页面控制pageControl的显示位置？？？\n\n解决:\n只要修改 packages/apps/Tecno_Launcher2/res/layout-port/launcher.xml 中的 PageControlView(R.id.pageControl) 的 android:layout_marginBottom=\"80dp\" 即可\n\n21.修改上 Folder 文件夹图标的大小？？？Folder文件夹的大小和app的大小不太一致????????\n\n解决:\n``` xml\n<dimen name=\"folder_preview_size\">48dp</dimen>\n```\n\n22.替换主页面上应用列表按钮的资源图片？？？\n\n解决:\n//只要替换下面这两张图片就行了\npackages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps.png\npackages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps_pressed.png\t\t//这张图片还需要替换\n\n23.修改编辑屏幕的布局？？？\n\n解决:\n替换为 R5 的 Tecno_Launcher 就可以了\n\n24.Folder 文件夹在编辑的时候没有显示删除图标？？\n\n25.GlobalDialog关机对话框中的图片资源乱，需要编译哪些模块？？\n\n解决:\n在修改了frameworks/base/core/res/res/下的资源后GlobalDialog关机对话框中的图片资源乱掉了\n首先应该将 out/target/common/obj/APPS/framework-res_intermediates 文件夹彻底删除\n再重新编译push ./mk -t mm frameworks/base/core/res/res\n再重新编译push ./mk -t mm frameworks/base\n再重新编译push ./mk -t mm frameworks/base/policy\n\n26.左边的Hotseat启动不了 Theme 和 Wallpaper ？？？\n\n解决:\nUnable to find explicit activity class {com.android.launcher/com.android.launcher2.ThemeChooser}; have you declared this activity in your AndroidManifest.xml?\nTheme启动不了:重新添加一个ThemeChooserTest\n真正有效的解决方法:\n``` Java\n在LauncherApplication.java中将 PackageManager.COMPONENT_ENABLED_STATE_DISABLED 改为 PackageManager.COMPONENT_ENABLED_STATE_ENABLED\t再运行一次,再改回去\nstatic final ComponentName DISABLED_ACTIVITY_COMPONENTNAME = new ComponentName(\"com.android.launcher\", \"com.android.launcher2.ThemeChooser\");\nmPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_ENABLED, 0);\t\t//启用ThemeChooser\nmPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_DISABLED, 0);\t//禁用ThemeChooser\n```\n上面的代码只要运行一次之后就永久生效，不管是否重启，由于一开始TECNO_THEME_SUPPORT的宏没有打开，导致运行了一次禁用 ThemeChooser 的代码，把ThemeChooser永远禁用了，需要再运行一次启用ThemeChooser的代码才能把应用给显示出来\n\nwallpaper 启动不了:将 Tecno_Wallpaper 应用拷贝过来编译push就行了\n\n27.设置了主题之后，动态壁纸没有替换？？？\n\n解决:\n需要将R5上的packages/wallpaper/ 目录下的动态壁纸的应用也一起移植过来\n\n《简约》风格的主题没有设置之后没起作用？？？？\n需要修改frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg 默认壁纸\n需要添加《问题29》所修改的主题图标功能\n\n28.workspace 上的 widget 列表没有显示出来？？？需要稍微调一下布局\n\n解决:\n//代码中有\n``` Java\nwidgettabView.setText(\"\");\nwidgettabView.setClickable(false);\nwidgettabView.setLayoutParams(new LinearLayout.LayoutParams(0, LayoutParams.WRAP_CONTENT, 5));\t//widget列表显示是有显示的，但没有标题Widgets,显示出来之后也不能跳转到widget列表页\n```\n\n29.workspace 上的应用的图标没有跟着主题的变化而变化？？？\n\n解决:\n``` Java\n//声明接口\n//在frameworks/base/core/java/android/content/pm/PackageManager.java\t 中添加 getFancyDrawable()接口\npublic abstract Drawable getFancyDrawable(String packageName, int resid,ApplicationInfo appInfo);\n\n//声明api\n//在frameworks/base/api/current.txt 文件需要添加api接口声明\nmethod public abstract android.graphics.drawable.Drawable getFancyDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);\nmethod public android.graphics.drawable.Drawable getFancyDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);\n\n//实现接口\n//在frameworks/base/core/java/android/app/ApplicationPackageManager.java 中实现getFancyDrawable()接口\n//在frameworks/base/test-runner/src/android/test/mock/MockPackageManager.java 中也需要实现getFancyDrawable()接口\n\n//调用接口\n//在frameworks/base/core/java/android/content/pm/PackageItemInfo.java中的调用这个方法\npublic Drawable loadIcon(PackageManager pm) {\n    if (icon != 0) {\n        Drawable dr = null;\t\t\n        if(FeatureOption.TECNO_THEME_SUPPORT) {\n            dr = pm.getFancyDrawable(packageName,icon,getApplicationInfo());\t\t//在这里调用getFancyDrawable()方法\n        } else {\n            dr = pm.getDrawable(packageName, icon, getApplicationInfo());\n        }\n        if (dr != null) {\n            return dr;\n        }\n    }\n    return loadDefaultIcon(pm);\n}\n```\n\n30.下拉状态栏StatusBar上通知栏的布局怎么修改？？\n\n解决:\n``` xml\n//symbols.xml\n<java-symbol type=\"id\" name=\"img_back\" />\n<java-symbol type=\"drawable\" name=\"notify_panel_notification_icon_bg\" />\n<java-symbol type=\"drawable\" name=\"notify_panel_notification_icon_bg2\" />\n```\n\n``` Java\n//Notification.java 在 RemoteViews applyStandardTemplate()方法上添加\ncontentView.setImageViewResource(R.id.img_back, R.drawable.notify_panel_notification_icon_bg2);\n//上面这几个貌似不需要添加，添加了之后很多应用程序会报错？？？？？？？？？？？？？？？\n\n//notification_template_base.xml文件中添加 img_frame 和 img_back\n\n//在drawable-hdpi下添加替换如下图片\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_low_normal.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_low_pressed.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_normal.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_normal_pressed.9.png\nframeworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg.png\nframeworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg2.png\n```\n\n31.workspace 上的 Folder 文件夹里面放上15个快捷方式的时候没有显示完全???\n\n解决:\n``` xml\n//在 user_folder.xml 中有\n<com.android.launcher2.CellLayout\n...\nlauncher:cellWidth=\"@dimen/folder_cell_width\"\t\t//这个参数控制Folder文件夹中每一个item的宽度\nlauncher:cellHeight=\"@dimen/folder_cell_height\"/>\t//这个参数控制Folder文件夹中每一个item的高度\n//在 dimens.xml 中有\n<dimen name=\"folder_cell_width\">74dp</dimen>\n<dimen name=\"folder_cell_height\">85dp</dimen>\t\t//要修改每一个Folder中Item的高度只需要修改这个参数为 80dp 就可以了\n```\n\n32.StatusBar上的某些字符串没有翻译,在中文下也显示英文???\n\n解决:\n//在frameworks/base/packages/SystemUI/res/values-zh/strings.xml文件中添加如下字符串即可\n``` xml\n<string name=\"torch\">手电筒</string>\n<string name=\"calculator\">计算器</string>\n<string name=\"camera\">相机</string>\n<string name=\"recorder\">录音机</string>\n<string name=\"stopWatch\">计时器</string>\n<string name=\"notify\">通知</string>\n<string name=\"onoff\">开关</string>\n<string name=\"wifihotspot\">WLAN热点</string>\n<string name=\"delete_all\">移除所有应用</string>\n<string name=\"app_manager\">管理应用</string>\n```\n\n33.通知栏上的每一条通知的标题没有显示黑色???每一条通知的圈圈里面的图片在哪里替换????\n\n解决:\n//标题黑色:\n//frameworks/base/core/res/res/values/styles.xml\n``` xml\n<style name=\"TextAppearance.StatusBar.EventContent.Title\">\n    <item name=\"android:textColor\">#ffffff</item>\t\t//把 #ffffff 修改为 #000000 就可以了\n</style>\n```\n//圈圈里面的图片:\n这个貌似需要在每个发送通知的地方修改\n\n34.如何修改Notification上的黑色背景???\n\n解决:\n//frameworks/base/packages/SystemUI/res/colors.xml\n``` xml\n<color name=\"notification_panel_solid_background\">#ffffffff</color>\t//把这里原来的#ff000000修改为#ffffffff就行了\n```\n\n35.某些APK打开之后会报错???如时钟,settings中的某些地方???貌似有ActionBar的地方都会报错？？？\n\n解决:\n修改Notification引起的报错\n还不知道是什么原因引起的报错，但知道怎么修改可以让它不报错，只要将《问题30》中frameworks/base/core/res下的修改全部还原之后就可以了\n\n36.Folder上的四个小图标是怎么画出来的?????\n\n37.修改 innertheme1 主题中的默认壁纸？？？\n\n解决:\n``` Java\n//在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/ThemePreview.java 中有\nInputStream is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\n//需要将innertheme1的默认壁纸改为从innertheme1的文件夹中获取吗？？可以修改代码如下\ntry{\n    is = context.getAssets().open(\"innertheme1/wallpaper.png\");\n}catch(Exception e){\n    e.printStackTrace();\n    is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\t\t\t\n}\n```\n//默认壁纸所在路径，默认壁纸貌似必须使用.jpg格式的图片\nframeworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg\n\t\n38.如何添加TECNO主题上的动态壁纸？？？？\n\n解决:\n需要将R5上的packages/wallpaper下的 Leaves 和 WorldCup 主题应用拷贝过来，并编译push到手机上，在ProjectConfig.mk和common.mk文件中添加宏控\n\n39.预置 Tecno_Launcher2 的时候需不需要先编译Launcher2然后再编译Tecno_Launcher2????\n\n解决:\n不需要，只要在TECNO_Launcher2的Android.mk文件中添加 LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 就OK了\n\n40.时钟Widget添加到桌面上之后显示不正常？？？？\n\n解决:\n在DigitalAppWidgetProvider.java中的updateClock()方法中有\n``` Java\nfloat ratio = WidgetUtils.getScaleRatio(context, newOptions, appWidgetId);\nWidgetUtils.setClockSize(context, widget, ratio);\t\t\t\t//只要把最后一个参数ratio改为1就可以显示正常了\ndensity:1.5 minHeight:24 lblBox:28.35 widget_height:193.5\t\t//或者可以修改这里的minHeight\nratio:((1.5 * 24) - 28.35) / (193.5 - 28.35) = 0.046321526\n```\n\n41.研究一下动态壁纸是如何添加的？？？\n\n解决:\n请参考《08月29日学习笔记》\n\n42.将StatusBar切换到Switch页面的时候会出现\"只能拨打紧急呼救电话\"字符串被遮挡的现象？？？\n\n解决:\n只要在PhoneStatusBar.java中修改\n``` Java\nmSettingsButtonListener \t监听器中添加代码隐藏该字符串即可 mCarrierLabelGemini.setVisibility(View.GONE);\nmNotificationButtonListener 监听器中添加代码显示该文本框即可 mCarrierLabelGemini.setVisibility(View.VISIBLE);\n```\n\n43.Notification通知栏上的左边的小圆圈图标显示不正常，下面有一小段显示不全？？？\n\n解决:\n//在frameworks/base/packages/SystemUI/res/values/dimens.xml\n``` xml\n<dimen name=\"notification_divider_height\">3dp</dimen>\t//只要将这里的3dp修改为0dp就行了\n```\n\n44.Wallpaper如何选中当前壁纸？？？\n\n解决:\n//MyLocalGridViewAdapter.java\n``` Java\nPreferencesService service = new PreferencesService(mContext);\nif(service.getPreferencesPosition() == position){\t\t\t//这里的\n    holder.current_setted.setVisibility(View.VISIBLE);\n}else{\n    holder.current_setted.setVisibility(View.INVISIBLE);\n}\n\n//PreferencesService.java\npublic int getPreferencesPosition(){\n    int WallpaperPosition;\n    SharedPreferences preferences = context.getSharedPreferences(\"TecnoWallpaper\", Context.MODE_PRIVATE);\n    WallpaperPosition = preferences.getInt(\"WallpaperPosition\", Constants.Extra.defaultsLocalWallpaper);\t//public static final int defaultsLocalWallpaper = 1;\n    return WallpaperPosition;\t\t//这里的位置需要和当前壁纸相对应,只需要修改这个地方就可以了\n}\n```\n\n45.状态栏上的Torch打不开？？？\n\n解决:\n在 PhoneStatusBar.java 上有 context.sendBroadcast(new Intent(\"TorchDirectOpen\"));\t\t//这个地方发送了一个广播打开Torch\n将R5上的FlashLight直接移植过来就可以了\n\n46.状态栏上的机主信息显示不全，有图片的时候不显示机主名称？？？\n\n解决:\n因为R.id.user_textview文本框显示太小了\n只需要在 quick_settings_tile_user.xml 中将 R.id.user_imageview 的属性修改为如下即可\nandroid:layout_height=\"0dp\"\nandroid:layout_weight=\"1\"\n\n47. adb shell如何按照进程名称杀死进程com.android.systemui？？？\n\n48.锁屏界面上的闹钟显示不全？？？\n\n解决:\nkeyguard_status_view.xml 中有 R.id.alarm_status 这个控件显示闹钟信息\n\n49.主题列表界面来蓝牙配对请求等通知的时候背景显示主界面？？？\n\n解决:\n去掉ThemeChooser的\nandroid:launchMode=\"singleTask\"\n\n50.添加了 img_back 和 img_frame 之后很多应用都会报错？？？\n\n51.点击主界面菜单上的《搜索》菜单项报错？？？\n\n解决:\n``` Java\n//这里我添加了捕获异常的处理\ntry {\n    startActivity();\n} catch(ActivityNotFoundException e) {\n    Toast.makeText(mContext,\"There is no app found to support this action!\").show();\n}\nLauncher.java\ncase MENU_SEARCH:\n    ComponentName componentNameSearch = new ComponentName(\"com.google.android.googlequicksearchbox\", \"com.google.android.googlequicksearchbox.SearchActivity\");\t\t//添加google包之后就不会报错了\n    Intent mintentSearch = new Intent();\n    mintentSearch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    mintentSearch.setComponent(componentNameSearch);\n    startActivity(mintentSearch);\n    break;\n```\n\n52.点击主界面菜单上的《分享》菜单项报错？？？\n\n解决:\n``` Java\nLauncher.java\ncase MENU_SHARE:\n    ComponentName componetName1 = new ComponentName(\"com.zzd.share\", \"com.zzd.share.ShareTestActivity\");\t\t//这个应用是哪一个？？ShareTest\n    Intent mintent1 = new Intent();\n    mintent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    mintent1.setComponent(componetName1);\n    startActivity(mintent1);\n    break;\n```\n在 packages/apps 下添加上 ShareTest 应用就可以了\n\n53.卸载应用的时候会显示两个背景？？？桌面和主菜单界面？？？？\n\n分析:\n《卸载》按钮:\n//DeleteDropTarget.java 中有\n``` Java\nsetText(isUninstall ? R.string.delete_target_uninstall_label : R.string.delete_target_label);\n//DeleteDropTarget.java文件中有\nprivate void completeDrop(DragObject d) {\n    ...\n    if (isAllAppsApplication(d.dragSource, item)) {\n        mLauncher.startApplicationUninstallActivity((ApplicationInfo) item);\t\t//卸载应用的方法\n    }\n    ...\n}\n```\n《应用详情》按钮:\n//InfoDropTarget.java 中有\n``` Java\npublic boolean acceptDrop(DragObject d) {\n    ...\n    if (componentName != null) {\n        mLauncher.startApplicationDetailsActivity(componentName);\t\t\t\t\t//查看应用详情的方法\n    }\n    ...\n}\n```\n《workspace/hotseat没有空间》\n//Workspace.java 中有\n``` Java\npublic boolean acceptDrop(DragObject d) {\n    ...\n    mLauncher.showOutOfSpaceMessage(isHotseat);\t\t\t\t\t\t\t\t\t\t//弹出Toast显示没空间的方法\n    ...\n}\n```\n解决:\n只要在上面3个地方都添加上 mLauncher.hideWorkspace(); 方法将workspace/hotseat/pagecontrol 都隐藏了就可以了\n现在替换为最新版的TECNO_Launcher2就OK了\n\n54.状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824\n\n解决:\n直接在Launcher.java的onStop()方法中添加 mStatusBarManager.setStatusBarBg(0xff000000);\t\t//直接添加，不要添加任何判断\n//改为在startActivity()方法中判断，再设置背景\n\n55.《梦宝谷》应用在什么地方？？？\n\n解决:\n应用在 mediatek/platform/mt6572/binary/3rd-party/free/Mobage/Mobage.apk\n在 ProjectConfig.mk文件中 有 MTK_DENA_MOBAGE_APP 宏用来控制是否编译这个应用\n\n56.点击进入应用列表界面的时候加载较慢？？？？\n\n解决:\n经过内存优化之后稍微有点改善\n\n57.切换语言或主题之后会很卡？？？\n\n解决:\n经过内存优化之后稍微有点改善\n\n58.USB connected通知前面的标签图标显示白色？？？\n\n分析:\n``` Java\nIntent intent = new Intent();\nintent.setClass(mContext, com.android.systemui.usb.UsbStorageActivity.class);\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nPendingIntent pi = PendingIntent.getActivity(mContext, 0, intent, 0);\n//发送通知\nsetUsbStorageNotification(com.android.internal.R.string.usb_storage_notification_title com.android.internal.R.string.usb_storage_notification_message, com.android.internal.R.drawable.stat_sys_data_usb,false, true, pi);\n在 Notification.java 中的 applyStandardTemplate() 方法中添加 contentView.setInt(R.id.icon, \"setBackgroundResource\", R.drawable.notify_panel_notification_icon_bg2);\n```\n解决:\n//这个只需要将frameworks/base/core/res/res/layout/notification_template_*.xml的icon的android:background都改为蓝色的圆圈就行了\n\n59.研究一下FlashLight的直接打开闪光灯的Receiver的代码？？？\n\n60.Bug16662 [BUG](主菜单)操作过程中主菜单排序错误????\n\n61.App列表的行数和列数在哪里确定？？？\n\n解决:\n``` Java\n//在workspace.java文件中有\nprivate static final int DEFAULT_CELL_COUNT_Y = 4;\t\t\t\t\t\t//默认列数\nint cellCountY = DEFAULT_CELL_COUNT_Y;\t\t\t\t\t\t\t\t\t//这里默认就为4，这里的4是 workspace 上的4，而不是 AppsCustomizePagedView 上的 4\ncellCountY = a.getInt(R.styleable.Workspace_cellCountY, cellCountY);\t//在config.xml文件中有    <integer name=\"cell_count_y\">4</integer>\n//APP列表:\t\tPagedViewCellLayout.java\n?????????????????????\n\n//Widget列表:\tPagedViewGridLayout.java\nAppsCustomizePagedView.java 文件中有\n//syncWidgetPageItems()方法中有\nif(mLauncher.isAddMode){\n\tmWidgetCountY = 2;\t//添加模式\n} else {\n\tmWidgetCountY = 3;\t//正常模式\n}\n//syncPages()方法中有\nPagedViewGridLayout layout = new PagedViewGridLayout(context, mWidgetCountX, mWidgetCountY);\n```\n\n62.截屏的时候显示通知栏还是正方形的？？\n\n分析:\n``` Java\n在 GlobalScreenShot.java文件中有\nmNotificationBuilder\n.setContentTitle(r.getString(R.string.screenshot_saved_title))\n.setContentText(r.getString(R.string.screenshot_saved_text))\n.setContentIntent(PendingIntent.getActivity(params.context, 0, launchIntent, 0))\n.setWhen(System.currentTimeMillis())\n.setAutoCancel(true);\n```\n\n解决:\n还是需要在 frameworks/base/core/res/res/layout/notification_template_big_picture.xml 中将 R.id.icon 的 background 修改为 notify_panel_notification_icon_bg\n\n63.Bug16901 创建直接拨号或直接发短信快捷方式的时候，快捷方式图标显示不正常？？？\n\n解决:\n``` Java\nM:packages/apps/ContactsCommon/src/com/android/contacts/common/list/ShortcutIntentBuilder.java\nprivate Bitmap generatePhoneNumberIcon(){\n    ...\n    dst.set(iconWidth - ((int) (80 * density)) - 30, 29, iconWidth - 30, ((int) (80 * density)) + 30);\t\t//微调这里的参数就行了\n    ...\n}\n```\n\n64.在设置主题的时候左右滑动数组越界报错的问题？？？\n\n解决:\n``` Java\n//在ThemePreview.java的getView()方法中判断themePreviewList的元素是否为0，若为0则重新加载一遍 loadThemes()\nif(themePreviewList.size() == 0){\n    loadThemes(mCurrentThemeName);\n}\n```\n\n65.在 Launcher.java的 onPause()中状态栏设置背景颜色的时候有问题？？？\n\n解决:\n``` Java\n//onPause()方法\nActivityManager am = (ActivityManager)this.getSystemService(Context.ACTIVITY_SERVICE);\nComponentName cn = am.getRunningTasks(1).get(0).topActivity;\n//将上面的方法移植到boolean startActivity()方法中就可以解决大部分，如mms,phone等\n```\n\n66.Settings热底座上的add按钮？？？\n\n分析:\n``` Java\nHotseat.java\naddButton.setOnClickListener(new View.OnClickListener() {\n\tpublic void onClick(View v) {}\n});\nHotseat.java\nallAppButton.setOnClickListener(new OnClickListener(){\n\tpublic void onClick(View v) {\n\t\tmLauncher.onClickAllAppsButton(v);\n\t}\n});\n\nLauncher.java\npublic void onClickAllAppsButton(View v) {\n\tif(isArrange){\n\t\treturn;\n\t}\n\tmAppsCustomizeTabHost.selectAppsTab();\n\tshowAllApps(true);\n\tmAppsCustomizeTabHost.getContentTypeForTabTag(AppsCustomizeTabHost.APPS_TAB_TAG);\n}\n```\n\n67.Launcher.addMode模式下添加widget列表显示3行？？？\n\n分析:\n//复现方法\n1.进入到Direct message widget选择联系人，连续按两次返回键，widget列表没有消失\n2.点击AppsCustomizeTabHost上的apps选项卡，进入到app列表\n3.按返回键退出add mode,再进入到add mode就会直接显示3行widget列表\n\n68.将主题设置为《world cup》之后启动《RF 2013》world cup会意外停止？？？《WorldCup》主题和《Leaves》主题的效果都有待优化？？？\n\n```\nLog:\nE/AndroidRuntime(12461): FATAL EXCEPTION: Thread-470\nE/AndroidRuntime(12461): Process: com.android.worldcup, PID: 12461\nE/AndroidRuntime(12461): java.lang.NullPointerException\nE/AndroidRuntime(12461): \tat android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1083)\nE/AndroidRuntime(12461): \tat android.graphics.Canvas.drawBitmap(Canvas.java:1139)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.drawPaillette(WallpaperService.java:283)\t\t\t\t\t\t//这里会有问题？？？\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.draw(WallpaperService.java:318)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.doDraw(WallpaperService.java:405)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.run(WallpaperService.java:349)\n\n原因:在 WallpaperService.java 的 drawPaillette() 方法中有一个 BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\t\t//这个地方解析的时候会出错，就会导致解析出来的图片为空，导致NullPointerException\n只要将 WallpaperService.java 的 drawPaillette() 方法中添加一个图片非空的判断就行了，具体修改代码如下\n解决:\nif(paillette_array[0] != null){\t\t\t\t\t\t\t//添加非空判断\n    canvas.drawBitmap(paillette_array[0],0,0,null);\n}\n```\n\n69.状态栏上的亮度调节栏应该在设置为非自动模式之后设置为不可用？？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java中的监听器和初始化seekBar的地方添加\nmSeekbar.setEnabled(nAutomatic == 1 ? false : true);\n```\n\n70.从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？\n\n解决:\n同《问题75》\n\n71.在删除应用的时候出现问题？？？内存溢出？？？\n\n```\n分析:\n01-01 08:02:40.468685   964  1021 W System.err: Caused by: java.lang.OutOfMemoryError\n01-01 08:02:40.469218   964  1021 W System.err: \tat android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)\n01-01 08:02:40.469362   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:609)\n01-01 08:02:40.469441   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeResourceStream(BitmapFactory.java:444)\n01-01 08:02:40.469510   964  1021 W System.err: \tat android.graphics.drawable.Drawable.createFromResourceStream(Drawable.java:840)\n01-01 08:02:40.469579   964  1021 W System.err: \tat android.content.res.Resources.loadDrawable(Resources.java:2166)\n01-01 08:02:40.469664   964  1021 W System.err: \tat android.content.res.Resources.getDrawable(Resources.java:710)\n01-01 08:02:40.469748   964  1021 W System.err: \tat android.app.ApplicationPackageManager.getDrawable(ApplicationPackageManager.java:946)\t\t\t\t//这里会有问题？？？\n01-01 08:02:40.469826   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.getWidgetPreview(AppsCustomizePagedView.java:2033)\t\t\t\n01-01 08:02:40.469902   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.loadWidgetPreviewsInBackground(AppsCustomizePagedView.java:2340)\n01-01 08:02:40.469991   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.access$200(AppsCustomizePagedView.java:212)\n01-01 08:02:40.470071   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView$8.run(AppsCustomizePagedView.java:1906)\n01-01 08:02:40.470252   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:180)\n01-01 08:02:40.470338   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:168)\n01-01 08:02:40.470427   964  1021 W System.err: \tat android.os.AsyncTask$2.call(AsyncTask.java:288)\n01-01 08:02:40.470497   964  1021 W System.err: \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\n01-01 08:02:40.470558   964  1021 W System.err: \t... 3 more\n\nResources r = getResourcesForApplication(appInfo);\ndr = r.getDrawable(resid);\t\t\t\t\t\t\t//log显示是在这里出现的问题？？\n```\n\n72.优化《WorldCup》主题和《Leaves》主题的显示效果和内存？？？？\n\n解决:\n在使用BitmapFactory.decodeStream()方法加载图片之后效果好了一点\n\n73.在开机的时候如何禁止一些服务的启动？？？\n\n74.一些三方apk的名称和控制方法？？？\n\n解决:\n点心省电\t\tTecno_DUBattery\t\t\t\t\t\tTECNO_DUBATTERY_APP\n电影工作室\tpackages/apps/VideoEditor\t\t\tMTK_ENABLE_VIDEO_EDITOR\n手机管家\t\tTencent_Mobile_Manager_Slim\t\t\tMTK_TENCENT_MOBILE_MANAGER_SLIM_SUPPORT\n待办事项\t\tmediatek/packages/apps/Todos\n梦宝谷\t\tMobage\t\t\t\t\t\t\t\tMTK_DENA_MOBAGE_APP\n墨迹天气国际\tTecno_MoWeather\t\t\t\t\t\tTecno_MoWeather_APP\n安卓优化大师\tTecno_DUSpeed\t\t\t\t\t\tTecno_DUSpeed_APP\n\n75.从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java 文件中有\nprotected class NotificationClicker implements View.OnClickListener {\n    public void onClick(View v){\t\t\t//通知栏某一项的点击事件\n        ...\n        StatusBarManager mStatusBarManager = (StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE);\n        mStatusBarManager.setStatusBarBg(0xff000000);\t//将状态栏的颜色修改为黑色\n        ...\n    }\n}\n```\n\n76.在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？\n\n解决:\n``` Java\n//在packages/apps/TECNO_Launcher2/src/com/android/launcher2/Launcher.java上有\nvoid startApplicationDetailsActivity(ComponentName componentName) {\n    String packageName = componentName.getPackageName();\n    Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.fromParts(\"package\", packageName, null));\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);\n    startActivitySafely(null, intent, \"startApplicationDetailsActivity\");\n    mStatusBarManager.setStatusBarBg(0xff000000);\t\t//在这里将状态栏设置为黑色\n}\n```\n\n77.从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？\n\n解决:\n``` Java\n//在frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java文件中有\nprivate void startSettingsActivity(Intent intent, boolean onlyProvisioned) {\n    if (onlyProvisioned && !getService().isDeviceProvisioned()) return;\n    try {\n        // Dismiss the lock screen when Settings starts.\n        ActivityManagerNative.getDefault().dismissKeyguardOnNextActivity();\n    } catch (RemoteException e) {\n    }\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\n    mContext.startActivityAsUser(intent, new UserHandle(UserHandle.USER_CURRENT));\n    //Bug17319 modified for statusbarbg 2014/09/17:begin\n    ((android.app.StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE)).setStatusBarBg(0xff000000);\t//在这里将状态栏的背景设置为黑色\n    //Bug17319 modified for statusbarbg 2014/09/17:end\n    collapsePanels();\n}\n```\n\n78.先进入Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？\n\n解决:\n在 frameworks/base/policy/src/com/android/internal/policy/impl/keyguard/KeyguardServiceDelegate.java 文件中添加代码将状态栏的颜色修改为透明\n但解锁了之后在回到应用界面，状态栏又会跳闪，参考《问题81》在解锁之后将状态栏修改为黑色\n\n79.在hotseat上切换fm/music功能的时候会出现divide by zero异常？？？\n\n分析:\n``` Java\n//从Log中看应该是CellLayout.java文件中的997行有\nresult[0] = (x - hStartPadding) / (mCellWidth + mWidthGap);\t\t//这里有个除0的异常，需要捕获异常\nmCellWidth = a.getDimensionPixelSize(R.styleable.CellLayout_cellWidth, 10);\n```\n\n80.从hotseat上启动FM和Music的时候状态栏也会闪？？？\n\n解决:\n//Music的跳转在 MusicControl.java文件中\n//FM的跳转在什么地方？？在 LauncherAppWidgetHostView.java 文件中\n\n81.解锁成功在什么地方？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/Keyguard/src/com/android/keyguard/KeyguardHostView.java文件中\nprivate void showNextSecurityScreenOrFinish(boolean authenticated, boolean showBouncer) {\n    //可以在这里将状态栏的背景颜色设置为黑色\n    //这里可以添加代码判断一下是不是Launcher界面，如果不是Launcher界面就将状态栏设置为黑色\n}\n```\n\n82.在 AppsCustomizePagedView.java 文件中的2055行会报内存溢出的异常？？？\n\n分析:\n同《问题71》\n\n83.\"Setup Wizard has stopped\" ?????\n\n```\nLog:\nNo Activity found to handle Intent{act=android.intent.action.MAIN cat=[android.intent.category.HOME]}\n解决:\npush完Launcher之后重启一下就可以了\n```\n\n84.workspace 上 folder文件夹好像太小了，包不住两个应用？？？\n\n解决:\n用R5的新的Launcher就可以了\n\n85.在添加widget的时候，状态栏背景会变黑？？？\n\n解决:\n```\n//在 Launcher.java 文件的 setWorkspaceBackground() 方法中有\nmStatusBarManager.setStatusBarBg(0x75000000);\t//把这里改为0xff000000就行了\n```\n\n86.状态栏跳变总结？？？\n\n解决:\n《问题02》\t添加setStatusBarBg()接口\n《问题54》\t状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824\n《问题65》\t在Launcher.java的onPause()中状态栏设置背景颜色的时候有问题？？？\n《问题70》\t从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？\n《问题75》\t从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？\n《问题76》\t在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？\n《问题77》\t从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？\n《问题78》\t先进如Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？\n《问题80》\t从hotseat上启动FM和Music的时候状态栏也会闪？？？\n《问题81》\t解锁成功之后将状态栏设置为黑色？？？\n《问题85》\t在添加widget的时候，状态栏背景会变黑？？？\n《问题91》\t点击Home键的时候状态栏跳变？？？\n最后只要在 Launcher.java 的 onPause() 方法中添加 setStatusBarBg(0xff000000); 就行了\n\n最终解决方法:\n只要将 frameworks/base/services/java/com/android/server/StatusBarManagerService.java 中 setStatusBarBg() 的方法实现给去掉就都ok了\npublic void setStatusBarBg(int statusBarBg) {\n}\n\n\n87.《Sound Recorder》在通知栏上的背景小图标还是白色的？？？\n\n解决:\n参考《问题98》\n\n88.在 frameworks/base/core/java/android/app/ApplicationPackageManager.java 的946行会报OOM错？？？\n\n```\n分析:\n//ApplicationPackageManager.java\nResources r = getResourcesForApplication(appInfo);\ndr = r.getDrawable(resid);\t\t\t\t\t\t\t//这里报错？？\n同《问题71》\n```\n\n89.在锁屏界面添加《Message》短信widget之后，再从锁屏界面跳转到《Message》就会出现状态栏跳闪？？？\n\n解决:\n参考《问题86最终解决方法》\n\n90.在添加 Driver 的 widget 的时候报错？？？\n\n分析:\n```\nLog:\n01-01 23:44:42.768: E/AndroidRuntime(25435): Caused by: java.lang.NullPointerException\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.estimateItemPosition(Workspace.java:392)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.getFinalPositionForDropAnimation(Workspace.java:3536)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.animateWidgetDrop(Workspace.java:3573)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.completeTwoStageWidgetDrop(Launcher.java:1686)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.onActivityResult(Launcher.java:1619)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.Activity.dispatchActivityResult(Activity.java:5456)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.ActivityThread.deliverResults(ActivityThread.java:3549)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \t... 11 more\n```\n\n91.点击Home键的时候状态栏跳变？？？\n\n分析:\n貌似点击Home键的时候就会调用Launcher上的onPause()方法\n解决:\n参考《问题86最终解决方法》\n\n92.添加widget跳转的方法在什么地方？？？\n\n解决:\n添加widget跳转\t在 Launcher.java 上有 addAppWidgetImpl()方法\n添加shortcut跳转\t在 Launcher.java 上有 processShortcut()方法\n\n93.AppsCustomizePagedView 上的《Edit》菜单有时会不显示？？？\n\n解决:\n设计如此，只有在《Own order》排序模式下才会显示\n\n94.R5的不同点？？？\n\nTabHost上的google play图标显示不太清楚\t\t\t已修改（替换为R5的Launcher就行了）\n主题不同，主题列表不同，主题数量不同（多了两个主题）\t已修改（替换为R5的Launcher就行了）\nAppsCustomizePagedView的加载动画不太一样\t\t已修改（替换为R5的Launcher就行了）\n在AddMode的时候的背景不透明\t\t\t\t\t\t已修改（替换为R5的Launcher就行了）\n锁屏界面的壁纸不一致\t\t\t\t\t\t\t已修改（替换为R5的Launcher就行了）\n在状态栏上的FlashLight的图标不会改变？？\t\t\t\t这个貌似需要修改很多代码\n\n95.为什么H5的Settings/Apps/Running 中 RAM 的使用率这么高？？？\n\n解决:\n因为R5是1G内存，H5是512M内存，在代码中写死了，\nRunningProcessView.java\n\n96.Bug20323 锁屏界面解锁的时候背景是黑色的？？？\n\n解决:\nM:frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java\n将 PhoneWindowManager.java 中的 doesForceHide() 函数的返回值改为 return false; 就ok了，谢谢鑫哥\n\n\n97.主题预览界面的图片不是全屏的，左右有黑边？？？\n\n解决:只要替换innertheme下的预览图片就可以了\n\n98.《Sound Record》在状态栏上的通知前面的图标不一致????\n\n分析:\n这个是在<Sound Recorder>应用内部自己添加的通知布局，需要在《SoundRecorder》应用内部修改\n解决:\n只要在 packages/apps/SoundRecorder/res/layout/notification.xml 的 app_icon 的 background 改为 notify_panel_notification_icon_bg.png(这张图片在frameworks/base/core/res/res/drawable-hdpi下)\n再替换两张图片\npackages/apps/SoundRecorder/res/drawable-hdpi/notification_pause_am.png\npackages/apps/SoundRecorder/res/drawable-hdpi/notification_stop_am.png\n\n99.在壁纸->动态壁纸->WorldCup预览界面中横屏的时候会报错？？？\n\n解决:\n好像有人把动态壁纸的预览页面强制设置为竖屏的了\n\n100.从《Recent App》上启动 App Manager 会报错？？？\n\n```\nLog:\n01-01 08:00:18.991: E/AndroidRuntime(6474): android.content.res.Resources$NotFoundException: File res/layout/detail_dialog.xml from drawable resource ID #0x7f030000\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2152)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.getDrawable(Resources.java:710)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.app.ApplicationPackageManager.getFancyDrawable(ApplicationPackageManager.java:890)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.pm.PackageItemInfo.loadIcon(PackageItemInfo.java:144)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$AppEntry.ensureIconLocked(ApplicationsState.java:145)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$BackgroundHandler.handleMessage(ApplicationsState.java:1017)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Looper.loop(Looper.java:193)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.HandlerThread.run(HandlerThread.java:61)\n01-01 08:00:18.991: E/AndroidRuntime(6474): Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #40: invalid drawable tag ScrollView\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2148)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \t... 8 more\n```\n\n101.锁屏界面解锁的时候有问题？？？黑色的圈圈和花环对不起来\n\n解决:莫名奇妙就好了\n\n102.为什么在Hotseat上显示的phone会变成这个com.google.android.dialer/com.android.dialer.DialtactsActivity？？？\n\n分析:\ncom.google.android.dialer/com.android.dialer.DialtactsActivity\t\t//为什么在Hotseat上显示的phone会变成这个？？？\ncom.android.dialer/.DialtactsActivity\n解决:\n去掉Google包中的GoogleOneTimeInitializer就可以了\n\n103.添加App列表和widget列表翻页功能？？？\n\n解决:\n只要在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/PagedView.java 的 onTouchEvent() 方法中的case 1,case 2中做一下处理就可以了\n\n104.Bug19127修改锁屏界面上时钟的显示大小??\n\n解决:\n修改 frameworks/base/packages/Keyguard/res/layout-800x480/keyguard_status_view.xml 中的 clock_text 这个TextView的 textSize 从59dp 修改为55dp\n\n105.在日历的快捷方式上显示日期？？？\n\n分析:\n如何实时更新\n忽略:\n客户已同意不做改功能\n\n106.H5在SD卡上写东西的时候不成功？？Flash Share在接受文件的时候创建文件文件夹失败，接收文件失败？？？\n\n107.近期任务中的图标好像不是主题里面的图标？？？？\n\n解决:\n修改 RecentTasksLoader.java 中的 getDrawable() 改为 getFancyDrawable() 就可以了\n\n108.Bug19250 在不插卡的时候在状态栏上显示两个信号图标？？？\n\n解决:\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java\t\t\t//这个文件中添加用于控制显示两个信号图标\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java\t//这个文件中添加用于控制在不插卡的时候显示信号图标\n\n109.Bug19333 修改下载的时候在状态栏显示的图标？？？\n\n解决:\n\"Download complete\" 字符串在 packages/providers/DownloadProvider/res/values/strings.xml\tnotification_download_complete\n发送通知的地方:packages/providers/DownloadProvider/src/com/android/providers/downloads/DownloadNotifier.java\t中有 builder.setSmallIcon(android.R.drawable.stat_sys_download);\t//这个图片就是通知栏上看不清除的图片\n//只要替换下面的这几张图片就可以了\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim0.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim1.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim2.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim3.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim4.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim5.png\n\n110.Bug16669 去掉Settings/Action/Double click to wake up 选项？？？\n\n解决:\npackages/apps/ActionSettings/src/com/sagereal/actions/CustomPreferenceActivity.java\t中将所有的 R.id.double_click_wake 都换成 0\npackages/apps/ActionSettings/res/xml/preference_header.xml\t\t\t\t\t\t\t中将\tdouble_click_wake 注释掉\n\n111.Bug19187 在FileManager中打开文本文件，横屏的时候字体变大？？？\n\n解决:\npackages/apps/HTMLViewer/AndroidManifest.xml\t//将这个文件中的 HTMLViewerActivity 中添加 android:screenOrientation=\"portrait\" 强制将这个Activity设置为竖屏，不让它可以横屏显示\n\n112.TecnoBug262 Settings->Apps->App info 中下面的权限前面的图标显示不清楚？？？\n\n解决:\nframeworks/base/core/java/android/content/pm/PackageItemInfo.java 文件中有 loadNormalIcon() 方法\nframeworks/base/core/java/android/widget/AppSecurityPermission.java 文件中的 loadGroupIcon() 方法中的 loadIcon() 方法替换成 loadNormalIcon() 方法\n还需要将frameworks/base/core/res/res/drawable-hdpi/下面的以 perm_group_ 开头的图片替换为R5下面同名的29张图片\n\n113.TecnoBug260 计算器横屏的时候删除按钮不显示C？？？\n\n解决:\npackages/apps/Calculator/res/layout-port/main.xml\t在这个文件中 R.id.del 按钮中添加 android:text=\"@string/mtk_clear\" 就行了\n\n114.在RecentApp中短信的图标有时会显示不正常？？？\n\n分析:\n从Log中可以看出近期任务的短信图标有时候会显示成\tcom_android_mms_title_message.png\t而有时候会显示成\tcom_android_mms_ic_launcher_mms.png\t\t但这里还没有找到具体原因为什么会变成\tcom_android_mms_title_message.png\n解决:\n只要在innertheme下添加\t\tcom_android_mms_title_message.png\t就可以了\n\n115.Bug19523 开机出现报错？？？\n\n分析:\n从aee_exp的dbg文件中可以看出\njava.lang.NullPointerException\nat com.android.keyguard.KeyguardBubblesOperate$4.handleMessage(KeyguardBubblesOperate.java:571)\nat android.os.Handler.dispatchMessage(Handler.java:110)\nat android.os.Looper.loop(Looper.java:193)\nat android.app.ActivityThread.main(ActivityThread.java:5299)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:515)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\nat dalvik.system.NativeStart.main(Native Method)\n解决:\n在 KeyguardBubblesOperate.java 中添加上非空判断\n\n116.修改按键音？？\n\n解决:\n需要将 PhoneWindow.java 和 PhoneWindowManager.java 中修改\n\n117.强度测试 《Ripple》和《Triangular space》动态壁纸会报错？？？\n\n分析:\n```\n//Ripple\n10-23 11:05:49.786 E/AndroidRuntime( 3834): FATAL EXCEPTION: main\n10-23 11:05:49.786 E/AndroidRuntime( 3834): Process: com.vlife.wallpaper.resource.number5082, PID: 3834\n10-23 11:05:49.786 E/AndroidRuntime( 3834): java.lang.NullPointerException\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.i(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.g(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq$2.run(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.handleCallback(Handler.java:808)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.dispatchMessage(Handler.java:103)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Looper.loop(Looper.java:193)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.app.ActivityThread.main(ActivityThread.java:5309)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invokeNative(Native Method)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invoke(Method.java:515)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:824)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:640)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at dalvik.system.NativeStart.main(Native Method)\n//Triangle\n```\n解决:\n只要替换为上海提供的新的APK就可以了\n\n118.notification panel will show 'Emergency calls only - rongweidi' ???\n\n119.在锁屏界面上的FM widget上点击录音按钮界面会跳闪？？？\n\n解决:\n只要将录音的按钮的图标替换为透明的图标就可以了，不知道为什么？？\n这里需要注意的是widget的布局文件在 layout-hdpi-800x480 文件夹中，图片在 drawable-hdpi-800x480 文件夹中，不要找错地方\n\n120.卸载应用的对话框好像没有换肤？？？\n\n121.将 Settings 中的 Security 修改为和其他的设置项都对齐？？？\n\n解决:\nM:packages/apps/Settings/res/layout/preference_header_button_item.xml\n只要将 android:layout_marginEnd 去掉就可以了","source":"_posts/Launcher移植学习.md","raw":"---\ntitle: Launcher移植学习\ndate: 2018-03-08 09:50:39\ntags:\n---\n1.移植R5的Tecno_Launcher2????\n\n解决:\n移植完毕\n\n2.添加接口setStatusBarBg()？？？\n\n解决:\n需要修改以下几个文件\n``` Java\n//frameworks/base/core/java/android/app/StatusBarManager.java\npublic void setStatusBarBg(int statusBarBg) {\t\t\t\t\t//添加 setStatusBarBg(int color) 方法\n    try {\n        final IStatusBarService svc = getService();\n        if (svc != null) {\n            mService.setStatusBarBg(statusBarBg);\n        }\n    } catch (RemoteException ex) {\n        /// M: system process is dead anyway.\n        throw new RuntimeException(ex);\n    }\n}\n\n//frameworks/base/core/java/com/android/internal/statusbar/IStatusBarService.aidl\nvoid setStatusBarBg(int color);\t\t\t\t\t\t\t\t\t//添加 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口\n\n//frameworks/base/services/java/com/android/server/StatusBarManagerService.java\npublic void setStatusBarBg(int statusBarBg) {\t\t\t\t\t//实现 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口\n    if (mBar != null) {\n        try {\n            mBar.setStatusBarBg(statusBarBg);\n        } catch (RemoteException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n\n//frameworks/base/core/java/com/android/internal/statusbar/IStatusBar.aidl\nvoid setStatusBarBg(int color);\t\t\t\t\t\t\t\t\t//添加 IStatusBar.aidl 中的 setStatusBarBg(int color)接口\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java\npublic void setStatusBarBg(int statusBarBg) {\n    synchronized (mList) {\n        mHandler.obtainMessage(MSG_SET_STATUSBAR, statusBarBg, 0, null).sendToTarget();\n    }\n}\n//在H(Handler)中添加对MSG_SET_STATUSBAR的处理\ncase MSG_SET_STATUSBAR:\n    mCallbacks.setStatusBarBg(msg.arg1);\n    break;\n//在 CommandQueue.Callbacks 接口中添加 setStatusBarBg() 接口\nsetStatusBarBg(int color)\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java\npublic void setStatusBarBg(int color){}\t\t\t\t//在这里实现 CommandQueue.Callbacks 中的 setStatusBarBg()接口\n\n//frameworks\\base\\packages\\systemui\\src\\com\\android\\systemui\\statusbar\\phone\\PhoneStatusBar.java\textends BaseStatusBar\npublic void setStatusBarBg(int color) {\n    mStatusBarView.setBackgroundColor(color);\t\t//这里也有对 CommandQueue.Callbacks 中的 setStatusBarBg()接口的实现\n}\n\n//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java\t中有对 setBackgroundColor()的实现\n@RemotableViewMethod\npublic void setBackgroundColor(int color) {\n    if (mBackground instanceof ColorDrawable) {\n        ((ColorDrawable) mBackground.mutate()).setColor(color);\n        computeOpaqueFlags();\n        mBackgroundResource = 0;\n    } else {\n        setBackground(new ColorDrawable(color));\n    }\n}\n```\n\n3.修改 Apps 和 Widgets 字体的大小和宽度？？？\n\n解决:\n在 AppsCustomizeTabHost.java 文件的 onFinishInflate() 方法中修改\n``` Java\n//Apps\ntabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, 25);\ntabView.setWidth(129);\n//Widgets\nwidgettabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, 25);\nwidgettabView.setWidth(250);\n```\n\n4.AppsCustomizerTabHost 上右边的两个按钮 market_button 和 tecno_order_button ？？？\n\n解决:\n将 apps_customize_pane.xml 中的 RelativeLayout中的 android:layout_marginLeft 改为 187dp 就能在tab下面显示一条完美的横线了\nmarket_button还是没有显示出来\n\n5.如何将 AppsCustomizerTabHost 下面蓝色的 indicator 替换为 三角箭头????\n\n解决:\n只要将 values/styles.xml 文件中的 TabIndicator 的\n``` xml\n<item name=\"android:background\">@drawable/tab_widget_indicator_selector</item>\n修改为\n<item name=\"android:background\">@drawable/buttonbarbackground</item>\n```\n\n6.修改Launcher里面应用图标大小，应用字体大小？？？\n\n解决:\nPagedViewIcon.java中添加 setTextSize(12); 设置应用标题的字体\n在 dimens.xml 文件中修改如何参数来修改图标的大小\n``` xml\n<dimen name=\"app_icon_size\">54dp</dimen>\t\t\t\t\n<dimen name=\"apps_customize_cell_width\">100dp</dimen>\n<dimen name=\"apps_customize_cell_height\">140dp</dimen>\n```\n\n7.有些应用的图标显示会比较大，如《梦宝谷》？？？\n\n解决:\n已去掉该应用，去掉该应用的方法参考《问题55》\n\n8.apps_customize_pane.xml 上的 market_button 按钮还是没有显示出来？？？\n\n解决:\n只要预置了Goole Play store就会显示出来\n\n9.在widget列表界面每一项的右下角添加一个指示 n * m 的 图标？？？\n\n解决:\n添加一个DimsView自定义View\n\n10. widget 列表的绘制？？？\n\n解决:\n在 PagedViewGridLayout.java的 dispatchDraw()方法中绘制 widget 列表的横线和竖线\n``` Java\n//mFirstLine = 240;\t\t\t\t\t\t\t\t\t\t\t\t//这个变量可以去掉的，因为在cellWidth中控制widget的高度和宽度之后就可以控制 mFirstLine 的大小了\ncanvas.drawLine(0, mFirstLine, 480, mFirstLine, mPaint);\t\t//在这里只需要将 720 改为 480 ，将 360 改为 240 就可以了\ncanvas.drawLine(0, mFirstLine*2, 480, mFirstLine*2, mPaint);\ncanvas.drawLine(0, mFirstLine*3, 480, mFirstLine*3, mPaint);\ncanvas.drawLine(240, 0, 240, mFirstLine*3, mPaint);\n```\n\n11. 控制每一个widget列表项的大小？？？\n\n解决:\n在 apps_customize_widget_add.xml 文件中有每一个列表项的布局\t\t//注意这里用的是 apps_customize_widget_add.xml 而不是 apps_customize_widget.xml\n在 AppsCustomizePagedView.java 的 syncWidgetPageItems()方法中将每一个 widget 添加到列表中\nfinal int cellWidth = 217;\t\t//用于控制每一个widget的显示宽度\t\t\t\t\nfinal int cellHeight = 190;\t\t//用于控制每一个widget的显示高度\t\t\t这样控制是不是不太好，是不是应该控制每一个 cellHeight 计算公式中的变量来控制比较好\n\n12.apps列表下面的 indicator ????\n\n解决:\n在 AllAppPageControlView.java 文件中有 pageID = { R.drawable.page_unit_nor, R.drawable.page_unit_active };\t//这两张图片就是下面的indicator图片\n在 PagedView.java 中使用 AllAppPageControlView\n\n13.widget列表下面的 indicator 不会随页数的变化而变化？？？\n\n解决:\n主要在 AllAppPageControlView.java 中添加\n``` Java\npublic void bindWidgetView(AppsCustomizePagedView allapppage) {\n    Log.v(\"sw98\",\"bindPageView allapppage.mCurrentPage == \"+allapppage.mCurrentPage);\n    Log.v(\"sw98\",\"bindPageView allapppage.mNumAppsPages() == \"+allapppage.mNumAppsPages);\n    this.count = allapppage.mNumWidgetPages;\n    mPagedView = allapppage;\n}\n```\n\n14.app列表和widget列表的黑色背景怎么改？？？\n\n解决:\n只要将 TECNO_THEME_SUPPORT 的宏打开为yes就可以了\n\n15.修改Hotseat上图标的大小？？？\n\n解决:\n将values/dimens.xml文件中的hotseat_cell_width改为64dp\n将layout-port/hotseat.xml文件中的android:layout_width改为match_parent\n\n16.去掉widget列表上第一个小部件《应用》小部件的缩略图？？？\n\n17.点击Menu键的时候会右移一大块？？？\n\n解决:\n//packages/apps/Tecno_Launcher2/src/com/android/launcher2/Hotseat.java 文件中把 720 都改为 480 即可\n\n18.修改Folder的布局？？？\n\n解决:\n修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 centerAboutIcon()方法中的\n``` Java\nlp.width = 480;\nlp.height = 800;\nlp.x = 80;\nlp.y = 100;\n修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 onMeasure()方法中\nint contentWidthSpec = MeasureSpec.makeMeasureSpec(430, MeasureSpec.EXACTLY);\nint contentHeightSpec = MeasureSpec.makeMeasureSpec(650, MeasureSpec.EXACTLY);\n```\n\n19.Folder文件夹中可以存放的应用数量在哪里设定？？？\n\n解决:\n// packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 的构造函数 public Folder() 中有如下数值\n``` Java\nmMaxCountX = 3;//res.getInteger(R.integer.folder_max_count_x);\nmMaxCountY = 5;//res.getInteger(R.integer.folder_max_count_y);\nmMaxNumItems = 15;\n```\n\n20.修改桌面下方页面控制pageControl的显示位置？？？\n\n解决:\n只要修改 packages/apps/Tecno_Launcher2/res/layout-port/launcher.xml 中的 PageControlView(R.id.pageControl) 的 android:layout_marginBottom=\"80dp\" 即可\n\n21.修改上 Folder 文件夹图标的大小？？？Folder文件夹的大小和app的大小不太一致????????\n\n解决:\n``` xml\n<dimen name=\"folder_preview_size\">48dp</dimen>\n```\n\n22.替换主页面上应用列表按钮的资源图片？？？\n\n解决:\n//只要替换下面这两张图片就行了\npackages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps.png\npackages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps_pressed.png\t\t//这张图片还需要替换\n\n23.修改编辑屏幕的布局？？？\n\n解决:\n替换为 R5 的 Tecno_Launcher 就可以了\n\n24.Folder 文件夹在编辑的时候没有显示删除图标？？\n\n25.GlobalDialog关机对话框中的图片资源乱，需要编译哪些模块？？\n\n解决:\n在修改了frameworks/base/core/res/res/下的资源后GlobalDialog关机对话框中的图片资源乱掉了\n首先应该将 out/target/common/obj/APPS/framework-res_intermediates 文件夹彻底删除\n再重新编译push ./mk -t mm frameworks/base/core/res/res\n再重新编译push ./mk -t mm frameworks/base\n再重新编译push ./mk -t mm frameworks/base/policy\n\n26.左边的Hotseat启动不了 Theme 和 Wallpaper ？？？\n\n解决:\nUnable to find explicit activity class {com.android.launcher/com.android.launcher2.ThemeChooser}; have you declared this activity in your AndroidManifest.xml?\nTheme启动不了:重新添加一个ThemeChooserTest\n真正有效的解决方法:\n``` Java\n在LauncherApplication.java中将 PackageManager.COMPONENT_ENABLED_STATE_DISABLED 改为 PackageManager.COMPONENT_ENABLED_STATE_ENABLED\t再运行一次,再改回去\nstatic final ComponentName DISABLED_ACTIVITY_COMPONENTNAME = new ComponentName(\"com.android.launcher\", \"com.android.launcher2.ThemeChooser\");\nmPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_ENABLED, 0);\t\t//启用ThemeChooser\nmPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_DISABLED, 0);\t//禁用ThemeChooser\n```\n上面的代码只要运行一次之后就永久生效，不管是否重启，由于一开始TECNO_THEME_SUPPORT的宏没有打开，导致运行了一次禁用 ThemeChooser 的代码，把ThemeChooser永远禁用了，需要再运行一次启用ThemeChooser的代码才能把应用给显示出来\n\nwallpaper 启动不了:将 Tecno_Wallpaper 应用拷贝过来编译push就行了\n\n27.设置了主题之后，动态壁纸没有替换？？？\n\n解决:\n需要将R5上的packages/wallpaper/ 目录下的动态壁纸的应用也一起移植过来\n\n《简约》风格的主题没有设置之后没起作用？？？？\n需要修改frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg 默认壁纸\n需要添加《问题29》所修改的主题图标功能\n\n28.workspace 上的 widget 列表没有显示出来？？？需要稍微调一下布局\n\n解决:\n//代码中有\n``` Java\nwidgettabView.setText(\"\");\nwidgettabView.setClickable(false);\nwidgettabView.setLayoutParams(new LinearLayout.LayoutParams(0, LayoutParams.WRAP_CONTENT, 5));\t//widget列表显示是有显示的，但没有标题Widgets,显示出来之后也不能跳转到widget列表页\n```\n\n29.workspace 上的应用的图标没有跟着主题的变化而变化？？？\n\n解决:\n``` Java\n//声明接口\n//在frameworks/base/core/java/android/content/pm/PackageManager.java\t 中添加 getFancyDrawable()接口\npublic abstract Drawable getFancyDrawable(String packageName, int resid,ApplicationInfo appInfo);\n\n//声明api\n//在frameworks/base/api/current.txt 文件需要添加api接口声明\nmethod public abstract android.graphics.drawable.Drawable getFancyDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);\nmethod public android.graphics.drawable.Drawable getFancyDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);\n\n//实现接口\n//在frameworks/base/core/java/android/app/ApplicationPackageManager.java 中实现getFancyDrawable()接口\n//在frameworks/base/test-runner/src/android/test/mock/MockPackageManager.java 中也需要实现getFancyDrawable()接口\n\n//调用接口\n//在frameworks/base/core/java/android/content/pm/PackageItemInfo.java中的调用这个方法\npublic Drawable loadIcon(PackageManager pm) {\n    if (icon != 0) {\n        Drawable dr = null;\t\t\n        if(FeatureOption.TECNO_THEME_SUPPORT) {\n            dr = pm.getFancyDrawable(packageName,icon,getApplicationInfo());\t\t//在这里调用getFancyDrawable()方法\n        } else {\n            dr = pm.getDrawable(packageName, icon, getApplicationInfo());\n        }\n        if (dr != null) {\n            return dr;\n        }\n    }\n    return loadDefaultIcon(pm);\n}\n```\n\n30.下拉状态栏StatusBar上通知栏的布局怎么修改？？\n\n解决:\n``` xml\n//symbols.xml\n<java-symbol type=\"id\" name=\"img_back\" />\n<java-symbol type=\"drawable\" name=\"notify_panel_notification_icon_bg\" />\n<java-symbol type=\"drawable\" name=\"notify_panel_notification_icon_bg2\" />\n```\n\n``` Java\n//Notification.java 在 RemoteViews applyStandardTemplate()方法上添加\ncontentView.setImageViewResource(R.id.img_back, R.drawable.notify_panel_notification_icon_bg2);\n//上面这几个貌似不需要添加，添加了之后很多应用程序会报错？？？？？？？？？？？？？？？\n\n//notification_template_base.xml文件中添加 img_frame 和 img_back\n\n//在drawable-hdpi下添加替换如下图片\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_low_normal.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_low_pressed.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_normal.9.png\nframeworks/base/core/res/res/drawable-hdpi/notification_bg_normal_pressed.9.png\nframeworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg.png\nframeworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg2.png\n```\n\n31.workspace 上的 Folder 文件夹里面放上15个快捷方式的时候没有显示完全???\n\n解决:\n``` xml\n//在 user_folder.xml 中有\n<com.android.launcher2.CellLayout\n...\nlauncher:cellWidth=\"@dimen/folder_cell_width\"\t\t//这个参数控制Folder文件夹中每一个item的宽度\nlauncher:cellHeight=\"@dimen/folder_cell_height\"/>\t//这个参数控制Folder文件夹中每一个item的高度\n//在 dimens.xml 中有\n<dimen name=\"folder_cell_width\">74dp</dimen>\n<dimen name=\"folder_cell_height\">85dp</dimen>\t\t//要修改每一个Folder中Item的高度只需要修改这个参数为 80dp 就可以了\n```\n\n32.StatusBar上的某些字符串没有翻译,在中文下也显示英文???\n\n解决:\n//在frameworks/base/packages/SystemUI/res/values-zh/strings.xml文件中添加如下字符串即可\n``` xml\n<string name=\"torch\">手电筒</string>\n<string name=\"calculator\">计算器</string>\n<string name=\"camera\">相机</string>\n<string name=\"recorder\">录音机</string>\n<string name=\"stopWatch\">计时器</string>\n<string name=\"notify\">通知</string>\n<string name=\"onoff\">开关</string>\n<string name=\"wifihotspot\">WLAN热点</string>\n<string name=\"delete_all\">移除所有应用</string>\n<string name=\"app_manager\">管理应用</string>\n```\n\n33.通知栏上的每一条通知的标题没有显示黑色???每一条通知的圈圈里面的图片在哪里替换????\n\n解决:\n//标题黑色:\n//frameworks/base/core/res/res/values/styles.xml\n``` xml\n<style name=\"TextAppearance.StatusBar.EventContent.Title\">\n    <item name=\"android:textColor\">#ffffff</item>\t\t//把 #ffffff 修改为 #000000 就可以了\n</style>\n```\n//圈圈里面的图片:\n这个貌似需要在每个发送通知的地方修改\n\n34.如何修改Notification上的黑色背景???\n\n解决:\n//frameworks/base/packages/SystemUI/res/colors.xml\n``` xml\n<color name=\"notification_panel_solid_background\">#ffffffff</color>\t//把这里原来的#ff000000修改为#ffffffff就行了\n```\n\n35.某些APK打开之后会报错???如时钟,settings中的某些地方???貌似有ActionBar的地方都会报错？？？\n\n解决:\n修改Notification引起的报错\n还不知道是什么原因引起的报错，但知道怎么修改可以让它不报错，只要将《问题30》中frameworks/base/core/res下的修改全部还原之后就可以了\n\n36.Folder上的四个小图标是怎么画出来的?????\n\n37.修改 innertheme1 主题中的默认壁纸？？？\n\n解决:\n``` Java\n//在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/ThemePreview.java 中有\nInputStream is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\n//需要将innertheme1的默认壁纸改为从innertheme1的文件夹中获取吗？？可以修改代码如下\ntry{\n    is = context.getAssets().open(\"innertheme1/wallpaper.png\");\n}catch(Exception e){\n    e.printStackTrace();\n    is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\t\t\t\n}\n```\n//默认壁纸所在路径，默认壁纸貌似必须使用.jpg格式的图片\nframeworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg\n\t\n38.如何添加TECNO主题上的动态壁纸？？？？\n\n解决:\n需要将R5上的packages/wallpaper下的 Leaves 和 WorldCup 主题应用拷贝过来，并编译push到手机上，在ProjectConfig.mk和common.mk文件中添加宏控\n\n39.预置 Tecno_Launcher2 的时候需不需要先编译Launcher2然后再编译Tecno_Launcher2????\n\n解决:\n不需要，只要在TECNO_Launcher2的Android.mk文件中添加 LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 就OK了\n\n40.时钟Widget添加到桌面上之后显示不正常？？？？\n\n解决:\n在DigitalAppWidgetProvider.java中的updateClock()方法中有\n``` Java\nfloat ratio = WidgetUtils.getScaleRatio(context, newOptions, appWidgetId);\nWidgetUtils.setClockSize(context, widget, ratio);\t\t\t\t//只要把最后一个参数ratio改为1就可以显示正常了\ndensity:1.5 minHeight:24 lblBox:28.35 widget_height:193.5\t\t//或者可以修改这里的minHeight\nratio:((1.5 * 24) - 28.35) / (193.5 - 28.35) = 0.046321526\n```\n\n41.研究一下动态壁纸是如何添加的？？？\n\n解决:\n请参考《08月29日学习笔记》\n\n42.将StatusBar切换到Switch页面的时候会出现\"只能拨打紧急呼救电话\"字符串被遮挡的现象？？？\n\n解决:\n只要在PhoneStatusBar.java中修改\n``` Java\nmSettingsButtonListener \t监听器中添加代码隐藏该字符串即可 mCarrierLabelGemini.setVisibility(View.GONE);\nmNotificationButtonListener 监听器中添加代码显示该文本框即可 mCarrierLabelGemini.setVisibility(View.VISIBLE);\n```\n\n43.Notification通知栏上的左边的小圆圈图标显示不正常，下面有一小段显示不全？？？\n\n解决:\n//在frameworks/base/packages/SystemUI/res/values/dimens.xml\n``` xml\n<dimen name=\"notification_divider_height\">3dp</dimen>\t//只要将这里的3dp修改为0dp就行了\n```\n\n44.Wallpaper如何选中当前壁纸？？？\n\n解决:\n//MyLocalGridViewAdapter.java\n``` Java\nPreferencesService service = new PreferencesService(mContext);\nif(service.getPreferencesPosition() == position){\t\t\t//这里的\n    holder.current_setted.setVisibility(View.VISIBLE);\n}else{\n    holder.current_setted.setVisibility(View.INVISIBLE);\n}\n\n//PreferencesService.java\npublic int getPreferencesPosition(){\n    int WallpaperPosition;\n    SharedPreferences preferences = context.getSharedPreferences(\"TecnoWallpaper\", Context.MODE_PRIVATE);\n    WallpaperPosition = preferences.getInt(\"WallpaperPosition\", Constants.Extra.defaultsLocalWallpaper);\t//public static final int defaultsLocalWallpaper = 1;\n    return WallpaperPosition;\t\t//这里的位置需要和当前壁纸相对应,只需要修改这个地方就可以了\n}\n```\n\n45.状态栏上的Torch打不开？？？\n\n解决:\n在 PhoneStatusBar.java 上有 context.sendBroadcast(new Intent(\"TorchDirectOpen\"));\t\t//这个地方发送了一个广播打开Torch\n将R5上的FlashLight直接移植过来就可以了\n\n46.状态栏上的机主信息显示不全，有图片的时候不显示机主名称？？？\n\n解决:\n因为R.id.user_textview文本框显示太小了\n只需要在 quick_settings_tile_user.xml 中将 R.id.user_imageview 的属性修改为如下即可\nandroid:layout_height=\"0dp\"\nandroid:layout_weight=\"1\"\n\n47. adb shell如何按照进程名称杀死进程com.android.systemui？？？\n\n48.锁屏界面上的闹钟显示不全？？？\n\n解决:\nkeyguard_status_view.xml 中有 R.id.alarm_status 这个控件显示闹钟信息\n\n49.主题列表界面来蓝牙配对请求等通知的时候背景显示主界面？？？\n\n解决:\n去掉ThemeChooser的\nandroid:launchMode=\"singleTask\"\n\n50.添加了 img_back 和 img_frame 之后很多应用都会报错？？？\n\n51.点击主界面菜单上的《搜索》菜单项报错？？？\n\n解决:\n``` Java\n//这里我添加了捕获异常的处理\ntry {\n    startActivity();\n} catch(ActivityNotFoundException e) {\n    Toast.makeText(mContext,\"There is no app found to support this action!\").show();\n}\nLauncher.java\ncase MENU_SEARCH:\n    ComponentName componentNameSearch = new ComponentName(\"com.google.android.googlequicksearchbox\", \"com.google.android.googlequicksearchbox.SearchActivity\");\t\t//添加google包之后就不会报错了\n    Intent mintentSearch = new Intent();\n    mintentSearch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    mintentSearch.setComponent(componentNameSearch);\n    startActivity(mintentSearch);\n    break;\n```\n\n52.点击主界面菜单上的《分享》菜单项报错？？？\n\n解决:\n``` Java\nLauncher.java\ncase MENU_SHARE:\n    ComponentName componetName1 = new ComponentName(\"com.zzd.share\", \"com.zzd.share.ShareTestActivity\");\t\t//这个应用是哪一个？？ShareTest\n    Intent mintent1 = new Intent();\n    mintent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    mintent1.setComponent(componetName1);\n    startActivity(mintent1);\n    break;\n```\n在 packages/apps 下添加上 ShareTest 应用就可以了\n\n53.卸载应用的时候会显示两个背景？？？桌面和主菜单界面？？？？\n\n分析:\n《卸载》按钮:\n//DeleteDropTarget.java 中有\n``` Java\nsetText(isUninstall ? R.string.delete_target_uninstall_label : R.string.delete_target_label);\n//DeleteDropTarget.java文件中有\nprivate void completeDrop(DragObject d) {\n    ...\n    if (isAllAppsApplication(d.dragSource, item)) {\n        mLauncher.startApplicationUninstallActivity((ApplicationInfo) item);\t\t//卸载应用的方法\n    }\n    ...\n}\n```\n《应用详情》按钮:\n//InfoDropTarget.java 中有\n``` Java\npublic boolean acceptDrop(DragObject d) {\n    ...\n    if (componentName != null) {\n        mLauncher.startApplicationDetailsActivity(componentName);\t\t\t\t\t//查看应用详情的方法\n    }\n    ...\n}\n```\n《workspace/hotseat没有空间》\n//Workspace.java 中有\n``` Java\npublic boolean acceptDrop(DragObject d) {\n    ...\n    mLauncher.showOutOfSpaceMessage(isHotseat);\t\t\t\t\t\t\t\t\t\t//弹出Toast显示没空间的方法\n    ...\n}\n```\n解决:\n只要在上面3个地方都添加上 mLauncher.hideWorkspace(); 方法将workspace/hotseat/pagecontrol 都隐藏了就可以了\n现在替换为最新版的TECNO_Launcher2就OK了\n\n54.状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824\n\n解决:\n直接在Launcher.java的onStop()方法中添加 mStatusBarManager.setStatusBarBg(0xff000000);\t\t//直接添加，不要添加任何判断\n//改为在startActivity()方法中判断，再设置背景\n\n55.《梦宝谷》应用在什么地方？？？\n\n解决:\n应用在 mediatek/platform/mt6572/binary/3rd-party/free/Mobage/Mobage.apk\n在 ProjectConfig.mk文件中 有 MTK_DENA_MOBAGE_APP 宏用来控制是否编译这个应用\n\n56.点击进入应用列表界面的时候加载较慢？？？？\n\n解决:\n经过内存优化之后稍微有点改善\n\n57.切换语言或主题之后会很卡？？？\n\n解决:\n经过内存优化之后稍微有点改善\n\n58.USB connected通知前面的标签图标显示白色？？？\n\n分析:\n``` Java\nIntent intent = new Intent();\nintent.setClass(mContext, com.android.systemui.usb.UsbStorageActivity.class);\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nPendingIntent pi = PendingIntent.getActivity(mContext, 0, intent, 0);\n//发送通知\nsetUsbStorageNotification(com.android.internal.R.string.usb_storage_notification_title com.android.internal.R.string.usb_storage_notification_message, com.android.internal.R.drawable.stat_sys_data_usb,false, true, pi);\n在 Notification.java 中的 applyStandardTemplate() 方法中添加 contentView.setInt(R.id.icon, \"setBackgroundResource\", R.drawable.notify_panel_notification_icon_bg2);\n```\n解决:\n//这个只需要将frameworks/base/core/res/res/layout/notification_template_*.xml的icon的android:background都改为蓝色的圆圈就行了\n\n59.研究一下FlashLight的直接打开闪光灯的Receiver的代码？？？\n\n60.Bug16662 [BUG](主菜单)操作过程中主菜单排序错误????\n\n61.App列表的行数和列数在哪里确定？？？\n\n解决:\n``` Java\n//在workspace.java文件中有\nprivate static final int DEFAULT_CELL_COUNT_Y = 4;\t\t\t\t\t\t//默认列数\nint cellCountY = DEFAULT_CELL_COUNT_Y;\t\t\t\t\t\t\t\t\t//这里默认就为4，这里的4是 workspace 上的4，而不是 AppsCustomizePagedView 上的 4\ncellCountY = a.getInt(R.styleable.Workspace_cellCountY, cellCountY);\t//在config.xml文件中有    <integer name=\"cell_count_y\">4</integer>\n//APP列表:\t\tPagedViewCellLayout.java\n?????????????????????\n\n//Widget列表:\tPagedViewGridLayout.java\nAppsCustomizePagedView.java 文件中有\n//syncWidgetPageItems()方法中有\nif(mLauncher.isAddMode){\n\tmWidgetCountY = 2;\t//添加模式\n} else {\n\tmWidgetCountY = 3;\t//正常模式\n}\n//syncPages()方法中有\nPagedViewGridLayout layout = new PagedViewGridLayout(context, mWidgetCountX, mWidgetCountY);\n```\n\n62.截屏的时候显示通知栏还是正方形的？？\n\n分析:\n``` Java\n在 GlobalScreenShot.java文件中有\nmNotificationBuilder\n.setContentTitle(r.getString(R.string.screenshot_saved_title))\n.setContentText(r.getString(R.string.screenshot_saved_text))\n.setContentIntent(PendingIntent.getActivity(params.context, 0, launchIntent, 0))\n.setWhen(System.currentTimeMillis())\n.setAutoCancel(true);\n```\n\n解决:\n还是需要在 frameworks/base/core/res/res/layout/notification_template_big_picture.xml 中将 R.id.icon 的 background 修改为 notify_panel_notification_icon_bg\n\n63.Bug16901 创建直接拨号或直接发短信快捷方式的时候，快捷方式图标显示不正常？？？\n\n解决:\n``` Java\nM:packages/apps/ContactsCommon/src/com/android/contacts/common/list/ShortcutIntentBuilder.java\nprivate Bitmap generatePhoneNumberIcon(){\n    ...\n    dst.set(iconWidth - ((int) (80 * density)) - 30, 29, iconWidth - 30, ((int) (80 * density)) + 30);\t\t//微调这里的参数就行了\n    ...\n}\n```\n\n64.在设置主题的时候左右滑动数组越界报错的问题？？？\n\n解决:\n``` Java\n//在ThemePreview.java的getView()方法中判断themePreviewList的元素是否为0，若为0则重新加载一遍 loadThemes()\nif(themePreviewList.size() == 0){\n    loadThemes(mCurrentThemeName);\n}\n```\n\n65.在 Launcher.java的 onPause()中状态栏设置背景颜色的时候有问题？？？\n\n解决:\n``` Java\n//onPause()方法\nActivityManager am = (ActivityManager)this.getSystemService(Context.ACTIVITY_SERVICE);\nComponentName cn = am.getRunningTasks(1).get(0).topActivity;\n//将上面的方法移植到boolean startActivity()方法中就可以解决大部分，如mms,phone等\n```\n\n66.Settings热底座上的add按钮？？？\n\n分析:\n``` Java\nHotseat.java\naddButton.setOnClickListener(new View.OnClickListener() {\n\tpublic void onClick(View v) {}\n});\nHotseat.java\nallAppButton.setOnClickListener(new OnClickListener(){\n\tpublic void onClick(View v) {\n\t\tmLauncher.onClickAllAppsButton(v);\n\t}\n});\n\nLauncher.java\npublic void onClickAllAppsButton(View v) {\n\tif(isArrange){\n\t\treturn;\n\t}\n\tmAppsCustomizeTabHost.selectAppsTab();\n\tshowAllApps(true);\n\tmAppsCustomizeTabHost.getContentTypeForTabTag(AppsCustomizeTabHost.APPS_TAB_TAG);\n}\n```\n\n67.Launcher.addMode模式下添加widget列表显示3行？？？\n\n分析:\n//复现方法\n1.进入到Direct message widget选择联系人，连续按两次返回键，widget列表没有消失\n2.点击AppsCustomizeTabHost上的apps选项卡，进入到app列表\n3.按返回键退出add mode,再进入到add mode就会直接显示3行widget列表\n\n68.将主题设置为《world cup》之后启动《RF 2013》world cup会意外停止？？？《WorldCup》主题和《Leaves》主题的效果都有待优化？？？\n\n```\nLog:\nE/AndroidRuntime(12461): FATAL EXCEPTION: Thread-470\nE/AndroidRuntime(12461): Process: com.android.worldcup, PID: 12461\nE/AndroidRuntime(12461): java.lang.NullPointerException\nE/AndroidRuntime(12461): \tat android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1083)\nE/AndroidRuntime(12461): \tat android.graphics.Canvas.drawBitmap(Canvas.java:1139)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.drawPaillette(WallpaperService.java:283)\t\t\t\t\t\t//这里会有问题？？？\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.draw(WallpaperService.java:318)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.doDraw(WallpaperService.java:405)\nE/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.run(WallpaperService.java:349)\n\n原因:在 WallpaperService.java 的 drawPaillette() 方法中有一个 BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\t\t//这个地方解析的时候会出错，就会导致解析出来的图片为空，导致NullPointerException\n只要将 WallpaperService.java 的 drawPaillette() 方法中添加一个图片非空的判断就行了，具体修改代码如下\n解决:\nif(paillette_array[0] != null){\t\t\t\t\t\t\t//添加非空判断\n    canvas.drawBitmap(paillette_array[0],0,0,null);\n}\n```\n\n69.状态栏上的亮度调节栏应该在设置为非自动模式之后设置为不可用？？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java中的监听器和初始化seekBar的地方添加\nmSeekbar.setEnabled(nAutomatic == 1 ? false : true);\n```\n\n70.从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？\n\n解决:\n同《问题75》\n\n71.在删除应用的时候出现问题？？？内存溢出？？？\n\n```\n分析:\n01-01 08:02:40.468685   964  1021 W System.err: Caused by: java.lang.OutOfMemoryError\n01-01 08:02:40.469218   964  1021 W System.err: \tat android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)\n01-01 08:02:40.469362   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:609)\n01-01 08:02:40.469441   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeResourceStream(BitmapFactory.java:444)\n01-01 08:02:40.469510   964  1021 W System.err: \tat android.graphics.drawable.Drawable.createFromResourceStream(Drawable.java:840)\n01-01 08:02:40.469579   964  1021 W System.err: \tat android.content.res.Resources.loadDrawable(Resources.java:2166)\n01-01 08:02:40.469664   964  1021 W System.err: \tat android.content.res.Resources.getDrawable(Resources.java:710)\n01-01 08:02:40.469748   964  1021 W System.err: \tat android.app.ApplicationPackageManager.getDrawable(ApplicationPackageManager.java:946)\t\t\t\t//这里会有问题？？？\n01-01 08:02:40.469826   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.getWidgetPreview(AppsCustomizePagedView.java:2033)\t\t\t\n01-01 08:02:40.469902   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.loadWidgetPreviewsInBackground(AppsCustomizePagedView.java:2340)\n01-01 08:02:40.469991   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.access$200(AppsCustomizePagedView.java:212)\n01-01 08:02:40.470071   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView$8.run(AppsCustomizePagedView.java:1906)\n01-01 08:02:40.470252   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:180)\n01-01 08:02:40.470338   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:168)\n01-01 08:02:40.470427   964  1021 W System.err: \tat android.os.AsyncTask$2.call(AsyncTask.java:288)\n01-01 08:02:40.470497   964  1021 W System.err: \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\n01-01 08:02:40.470558   964  1021 W System.err: \t... 3 more\n\nResources r = getResourcesForApplication(appInfo);\ndr = r.getDrawable(resid);\t\t\t\t\t\t\t//log显示是在这里出现的问题？？\n```\n\n72.优化《WorldCup》主题和《Leaves》主题的显示效果和内存？？？？\n\n解决:\n在使用BitmapFactory.decodeStream()方法加载图片之后效果好了一点\n\n73.在开机的时候如何禁止一些服务的启动？？？\n\n74.一些三方apk的名称和控制方法？？？\n\n解决:\n点心省电\t\tTecno_DUBattery\t\t\t\t\t\tTECNO_DUBATTERY_APP\n电影工作室\tpackages/apps/VideoEditor\t\t\tMTK_ENABLE_VIDEO_EDITOR\n手机管家\t\tTencent_Mobile_Manager_Slim\t\t\tMTK_TENCENT_MOBILE_MANAGER_SLIM_SUPPORT\n待办事项\t\tmediatek/packages/apps/Todos\n梦宝谷\t\tMobage\t\t\t\t\t\t\t\tMTK_DENA_MOBAGE_APP\n墨迹天气国际\tTecno_MoWeather\t\t\t\t\t\tTecno_MoWeather_APP\n安卓优化大师\tTecno_DUSpeed\t\t\t\t\t\tTecno_DUSpeed_APP\n\n75.从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java 文件中有\nprotected class NotificationClicker implements View.OnClickListener {\n    public void onClick(View v){\t\t\t//通知栏某一项的点击事件\n        ...\n        StatusBarManager mStatusBarManager = (StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE);\n        mStatusBarManager.setStatusBarBg(0xff000000);\t//将状态栏的颜色修改为黑色\n        ...\n    }\n}\n```\n\n76.在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？\n\n解决:\n``` Java\n//在packages/apps/TECNO_Launcher2/src/com/android/launcher2/Launcher.java上有\nvoid startApplicationDetailsActivity(ComponentName componentName) {\n    String packageName = componentName.getPackageName();\n    Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.fromParts(\"package\", packageName, null));\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);\n    startActivitySafely(null, intent, \"startApplicationDetailsActivity\");\n    mStatusBarManager.setStatusBarBg(0xff000000);\t\t//在这里将状态栏设置为黑色\n}\n```\n\n77.从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？\n\n解决:\n``` Java\n//在frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java文件中有\nprivate void startSettingsActivity(Intent intent, boolean onlyProvisioned) {\n    if (onlyProvisioned && !getService().isDeviceProvisioned()) return;\n    try {\n        // Dismiss the lock screen when Settings starts.\n        ActivityManagerNative.getDefault().dismissKeyguardOnNextActivity();\n    } catch (RemoteException e) {\n    }\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\n    mContext.startActivityAsUser(intent, new UserHandle(UserHandle.USER_CURRENT));\n    //Bug17319 modified for statusbarbg 2014/09/17:begin\n    ((android.app.StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE)).setStatusBarBg(0xff000000);\t//在这里将状态栏的背景设置为黑色\n    //Bug17319 modified for statusbarbg 2014/09/17:end\n    collapsePanels();\n}\n```\n\n78.先进入Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？\n\n解决:\n在 frameworks/base/policy/src/com/android/internal/policy/impl/keyguard/KeyguardServiceDelegate.java 文件中添加代码将状态栏的颜色修改为透明\n但解锁了之后在回到应用界面，状态栏又会跳闪，参考《问题81》在解锁之后将状态栏修改为黑色\n\n79.在hotseat上切换fm/music功能的时候会出现divide by zero异常？？？\n\n分析:\n``` Java\n//从Log中看应该是CellLayout.java文件中的997行有\nresult[0] = (x - hStartPadding) / (mCellWidth + mWidthGap);\t\t//这里有个除0的异常，需要捕获异常\nmCellWidth = a.getDimensionPixelSize(R.styleable.CellLayout_cellWidth, 10);\n```\n\n80.从hotseat上启动FM和Music的时候状态栏也会闪？？？\n\n解决:\n//Music的跳转在 MusicControl.java文件中\n//FM的跳转在什么地方？？在 LauncherAppWidgetHostView.java 文件中\n\n81.解锁成功在什么地方？？？\n\n解决:\n``` Java\n//在 frameworks/base/packages/Keyguard/src/com/android/keyguard/KeyguardHostView.java文件中\nprivate void showNextSecurityScreenOrFinish(boolean authenticated, boolean showBouncer) {\n    //可以在这里将状态栏的背景颜色设置为黑色\n    //这里可以添加代码判断一下是不是Launcher界面，如果不是Launcher界面就将状态栏设置为黑色\n}\n```\n\n82.在 AppsCustomizePagedView.java 文件中的2055行会报内存溢出的异常？？？\n\n分析:\n同《问题71》\n\n83.\"Setup Wizard has stopped\" ?????\n\n```\nLog:\nNo Activity found to handle Intent{act=android.intent.action.MAIN cat=[android.intent.category.HOME]}\n解决:\npush完Launcher之后重启一下就可以了\n```\n\n84.workspace 上 folder文件夹好像太小了，包不住两个应用？？？\n\n解决:\n用R5的新的Launcher就可以了\n\n85.在添加widget的时候，状态栏背景会变黑？？？\n\n解决:\n```\n//在 Launcher.java 文件的 setWorkspaceBackground() 方法中有\nmStatusBarManager.setStatusBarBg(0x75000000);\t//把这里改为0xff000000就行了\n```\n\n86.状态栏跳变总结？？？\n\n解决:\n《问题02》\t添加setStatusBarBg()接口\n《问题54》\t状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824\n《问题65》\t在Launcher.java的onPause()中状态栏设置背景颜色的时候有问题？？？\n《问题70》\t从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？\n《问题75》\t从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？\n《问题76》\t在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？\n《问题77》\t从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？\n《问题78》\t先进如Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？\n《问题80》\t从hotseat上启动FM和Music的时候状态栏也会闪？？？\n《问题81》\t解锁成功之后将状态栏设置为黑色？？？\n《问题85》\t在添加widget的时候，状态栏背景会变黑？？？\n《问题91》\t点击Home键的时候状态栏跳变？？？\n最后只要在 Launcher.java 的 onPause() 方法中添加 setStatusBarBg(0xff000000); 就行了\n\n最终解决方法:\n只要将 frameworks/base/services/java/com/android/server/StatusBarManagerService.java 中 setStatusBarBg() 的方法实现给去掉就都ok了\npublic void setStatusBarBg(int statusBarBg) {\n}\n\n\n87.《Sound Recorder》在通知栏上的背景小图标还是白色的？？？\n\n解决:\n参考《问题98》\n\n88.在 frameworks/base/core/java/android/app/ApplicationPackageManager.java 的946行会报OOM错？？？\n\n```\n分析:\n//ApplicationPackageManager.java\nResources r = getResourcesForApplication(appInfo);\ndr = r.getDrawable(resid);\t\t\t\t\t\t\t//这里报错？？\n同《问题71》\n```\n\n89.在锁屏界面添加《Message》短信widget之后，再从锁屏界面跳转到《Message》就会出现状态栏跳闪？？？\n\n解决:\n参考《问题86最终解决方法》\n\n90.在添加 Driver 的 widget 的时候报错？？？\n\n分析:\n```\nLog:\n01-01 23:44:42.768: E/AndroidRuntime(25435): Caused by: java.lang.NullPointerException\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.estimateItemPosition(Workspace.java:392)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.getFinalPositionForDropAnimation(Workspace.java:3536)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.animateWidgetDrop(Workspace.java:3573)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.completeTwoStageWidgetDrop(Launcher.java:1686)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.onActivityResult(Launcher.java:1619)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.Activity.dispatchActivityResult(Activity.java:5456)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.ActivityThread.deliverResults(ActivityThread.java:3549)\n01-01 23:44:42.768: E/AndroidRuntime(25435): \t... 11 more\n```\n\n91.点击Home键的时候状态栏跳变？？？\n\n分析:\n貌似点击Home键的时候就会调用Launcher上的onPause()方法\n解决:\n参考《问题86最终解决方法》\n\n92.添加widget跳转的方法在什么地方？？？\n\n解决:\n添加widget跳转\t在 Launcher.java 上有 addAppWidgetImpl()方法\n添加shortcut跳转\t在 Launcher.java 上有 processShortcut()方法\n\n93.AppsCustomizePagedView 上的《Edit》菜单有时会不显示？？？\n\n解决:\n设计如此，只有在《Own order》排序模式下才会显示\n\n94.R5的不同点？？？\n\nTabHost上的google play图标显示不太清楚\t\t\t已修改（替换为R5的Launcher就行了）\n主题不同，主题列表不同，主题数量不同（多了两个主题）\t已修改（替换为R5的Launcher就行了）\nAppsCustomizePagedView的加载动画不太一样\t\t已修改（替换为R5的Launcher就行了）\n在AddMode的时候的背景不透明\t\t\t\t\t\t已修改（替换为R5的Launcher就行了）\n锁屏界面的壁纸不一致\t\t\t\t\t\t\t已修改（替换为R5的Launcher就行了）\n在状态栏上的FlashLight的图标不会改变？？\t\t\t\t这个貌似需要修改很多代码\n\n95.为什么H5的Settings/Apps/Running 中 RAM 的使用率这么高？？？\n\n解决:\n因为R5是1G内存，H5是512M内存，在代码中写死了，\nRunningProcessView.java\n\n96.Bug20323 锁屏界面解锁的时候背景是黑色的？？？\n\n解决:\nM:frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java\n将 PhoneWindowManager.java 中的 doesForceHide() 函数的返回值改为 return false; 就ok了，谢谢鑫哥\n\n\n97.主题预览界面的图片不是全屏的，左右有黑边？？？\n\n解决:只要替换innertheme下的预览图片就可以了\n\n98.《Sound Record》在状态栏上的通知前面的图标不一致????\n\n分析:\n这个是在<Sound Recorder>应用内部自己添加的通知布局，需要在《SoundRecorder》应用内部修改\n解决:\n只要在 packages/apps/SoundRecorder/res/layout/notification.xml 的 app_icon 的 background 改为 notify_panel_notification_icon_bg.png(这张图片在frameworks/base/core/res/res/drawable-hdpi下)\n再替换两张图片\npackages/apps/SoundRecorder/res/drawable-hdpi/notification_pause_am.png\npackages/apps/SoundRecorder/res/drawable-hdpi/notification_stop_am.png\n\n99.在壁纸->动态壁纸->WorldCup预览界面中横屏的时候会报错？？？\n\n解决:\n好像有人把动态壁纸的预览页面强制设置为竖屏的了\n\n100.从《Recent App》上启动 App Manager 会报错？？？\n\n```\nLog:\n01-01 08:00:18.991: E/AndroidRuntime(6474): android.content.res.Resources$NotFoundException: File res/layout/detail_dialog.xml from drawable resource ID #0x7f030000\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2152)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.getDrawable(Resources.java:710)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.app.ApplicationPackageManager.getFancyDrawable(ApplicationPackageManager.java:890)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.pm.PackageItemInfo.loadIcon(PackageItemInfo.java:144)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$AppEntry.ensureIconLocked(ApplicationsState.java:145)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$BackgroundHandler.handleMessage(ApplicationsState.java:1017)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Looper.loop(Looper.java:193)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.HandlerThread.run(HandlerThread.java:61)\n01-01 08:00:18.991: E/AndroidRuntime(6474): Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #40: invalid drawable tag ScrollView\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2148)\n01-01 08:00:18.991: E/AndroidRuntime(6474): \t... 8 more\n```\n\n101.锁屏界面解锁的时候有问题？？？黑色的圈圈和花环对不起来\n\n解决:莫名奇妙就好了\n\n102.为什么在Hotseat上显示的phone会变成这个com.google.android.dialer/com.android.dialer.DialtactsActivity？？？\n\n分析:\ncom.google.android.dialer/com.android.dialer.DialtactsActivity\t\t//为什么在Hotseat上显示的phone会变成这个？？？\ncom.android.dialer/.DialtactsActivity\n解决:\n去掉Google包中的GoogleOneTimeInitializer就可以了\n\n103.添加App列表和widget列表翻页功能？？？\n\n解决:\n只要在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/PagedView.java 的 onTouchEvent() 方法中的case 1,case 2中做一下处理就可以了\n\n104.Bug19127修改锁屏界面上时钟的显示大小??\n\n解决:\n修改 frameworks/base/packages/Keyguard/res/layout-800x480/keyguard_status_view.xml 中的 clock_text 这个TextView的 textSize 从59dp 修改为55dp\n\n105.在日历的快捷方式上显示日期？？？\n\n分析:\n如何实时更新\n忽略:\n客户已同意不做改功能\n\n106.H5在SD卡上写东西的时候不成功？？Flash Share在接受文件的时候创建文件文件夹失败，接收文件失败？？？\n\n107.近期任务中的图标好像不是主题里面的图标？？？？\n\n解决:\n修改 RecentTasksLoader.java 中的 getDrawable() 改为 getFancyDrawable() 就可以了\n\n108.Bug19250 在不插卡的时候在状态栏上显示两个信号图标？？？\n\n解决:\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java\t\t\t//这个文件中添加用于控制显示两个信号图标\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java\t//这个文件中添加用于控制在不插卡的时候显示信号图标\n\n109.Bug19333 修改下载的时候在状态栏显示的图标？？？\n\n解决:\n\"Download complete\" 字符串在 packages/providers/DownloadProvider/res/values/strings.xml\tnotification_download_complete\n发送通知的地方:packages/providers/DownloadProvider/src/com/android/providers/downloads/DownloadNotifier.java\t中有 builder.setSmallIcon(android.R.drawable.stat_sys_download);\t//这个图片就是通知栏上看不清除的图片\n//只要替换下面的这几张图片就可以了\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim0.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim1.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim2.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim3.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim4.png\nframeworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim5.png\n\n110.Bug16669 去掉Settings/Action/Double click to wake up 选项？？？\n\n解决:\npackages/apps/ActionSettings/src/com/sagereal/actions/CustomPreferenceActivity.java\t中将所有的 R.id.double_click_wake 都换成 0\npackages/apps/ActionSettings/res/xml/preference_header.xml\t\t\t\t\t\t\t中将\tdouble_click_wake 注释掉\n\n111.Bug19187 在FileManager中打开文本文件，横屏的时候字体变大？？？\n\n解决:\npackages/apps/HTMLViewer/AndroidManifest.xml\t//将这个文件中的 HTMLViewerActivity 中添加 android:screenOrientation=\"portrait\" 强制将这个Activity设置为竖屏，不让它可以横屏显示\n\n112.TecnoBug262 Settings->Apps->App info 中下面的权限前面的图标显示不清楚？？？\n\n解决:\nframeworks/base/core/java/android/content/pm/PackageItemInfo.java 文件中有 loadNormalIcon() 方法\nframeworks/base/core/java/android/widget/AppSecurityPermission.java 文件中的 loadGroupIcon() 方法中的 loadIcon() 方法替换成 loadNormalIcon() 方法\n还需要将frameworks/base/core/res/res/drawable-hdpi/下面的以 perm_group_ 开头的图片替换为R5下面同名的29张图片\n\n113.TecnoBug260 计算器横屏的时候删除按钮不显示C？？？\n\n解决:\npackages/apps/Calculator/res/layout-port/main.xml\t在这个文件中 R.id.del 按钮中添加 android:text=\"@string/mtk_clear\" 就行了\n\n114.在RecentApp中短信的图标有时会显示不正常？？？\n\n分析:\n从Log中可以看出近期任务的短信图标有时候会显示成\tcom_android_mms_title_message.png\t而有时候会显示成\tcom_android_mms_ic_launcher_mms.png\t\t但这里还没有找到具体原因为什么会变成\tcom_android_mms_title_message.png\n解决:\n只要在innertheme下添加\t\tcom_android_mms_title_message.png\t就可以了\n\n115.Bug19523 开机出现报错？？？\n\n分析:\n从aee_exp的dbg文件中可以看出\njava.lang.NullPointerException\nat com.android.keyguard.KeyguardBubblesOperate$4.handleMessage(KeyguardBubblesOperate.java:571)\nat android.os.Handler.dispatchMessage(Handler.java:110)\nat android.os.Looper.loop(Looper.java:193)\nat android.app.ActivityThread.main(ActivityThread.java:5299)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:515)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\nat dalvik.system.NativeStart.main(Native Method)\n解决:\n在 KeyguardBubblesOperate.java 中添加上非空判断\n\n116.修改按键音？？\n\n解决:\n需要将 PhoneWindow.java 和 PhoneWindowManager.java 中修改\n\n117.强度测试 《Ripple》和《Triangular space》动态壁纸会报错？？？\n\n分析:\n```\n//Ripple\n10-23 11:05:49.786 E/AndroidRuntime( 3834): FATAL EXCEPTION: main\n10-23 11:05:49.786 E/AndroidRuntime( 3834): Process: com.vlife.wallpaper.resource.number5082, PID: 3834\n10-23 11:05:49.786 E/AndroidRuntime( 3834): java.lang.NullPointerException\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.i(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.g(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq$2.run(Unknown Source)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.handleCallback(Handler.java:808)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.dispatchMessage(Handler.java:103)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Looper.loop(Looper.java:193)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.app.ActivityThread.main(ActivityThread.java:5309)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invokeNative(Native Method)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invoke(Method.java:515)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:824)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:640)\n10-23 11:05:49.786 E/AndroidRuntime( 3834): at dalvik.system.NativeStart.main(Native Method)\n//Triangle\n```\n解决:\n只要替换为上海提供的新的APK就可以了\n\n118.notification panel will show 'Emergency calls only - rongweidi' ???\n\n119.在锁屏界面上的FM widget上点击录音按钮界面会跳闪？？？\n\n解决:\n只要将录音的按钮的图标替换为透明的图标就可以了，不知道为什么？？\n这里需要注意的是widget的布局文件在 layout-hdpi-800x480 文件夹中，图片在 drawable-hdpi-800x480 文件夹中，不要找错地方\n\n120.卸载应用的对话框好像没有换肤？？？\n\n121.将 Settings 中的 Security 修改为和其他的设置项都对齐？？？\n\n解决:\nM:packages/apps/Settings/res/layout/preference_header_button_item.xml\n只要将 android:layout_marginEnd 去掉就可以了","slug":"Launcher移植学习","published":1,"updated":"2018-03-08T02:15:05.078Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9n0008ardx6dg4u3d8","content":"<p>1.移植R5的Tecno_Launcher2????</p>\n<p>解决:<br>移植完毕</p>\n<p>2.添加接口setStatusBarBg()？？？</p>\n<p>解决:<br>需要修改以下几个文件<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/android/app/StatusBarManager.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//添加 setStatusBarBg(int color) 方法</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> IStatusBarService svc = getService();</div><div class=\"line\">        <span class=\"keyword\">if</span> (svc != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mService.setStatusBarBg(statusBarBg);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RemoteException ex) &#123;</div><div class=\"line\">        <span class=\"comment\">/// M: system process is dead anyway.</span></div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(ex);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/com/android/internal/statusbar/IStatusBarService.aidl</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//添加 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/services/java/com/android/server/StatusBarManagerService.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//实现 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (mBar != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            mBar.setStatusBarBg(statusBarBg);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (RemoteException ex) &#123;</div><div class=\"line\">            ex.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/com/android/internal/statusbar/IStatusBar.aidl</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//添加 IStatusBar.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mList) &#123;</div><div class=\"line\">        mHandler.obtainMessage(MSG_SET_STATUSBAR, statusBarBg, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>).sendToTarget();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//在H(Handler)中添加对MSG_SET_STATUSBAR的处理</span></div><div class=\"line\"><span class=\"keyword\">case</span> MSG_SET_STATUSBAR:</div><div class=\"line\">    mCallbacks.setStatusBarBg(msg.arg1);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\"><span class=\"comment\">//在 CommandQueue.Callbacks 接口中添加 setStatusBarBg() 接口</span></div><div class=\"line\">setStatusBarBg(<span class=\"keyword\">int</span> color)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>&#123;&#125;\t\t\t\t<span class=\"comment\">//在这里实现 CommandQueue.Callbacks 中的 setStatusBarBg()接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks\\base\\packages\\systemui\\src\\com\\android\\systemui\\statusbar\\phone\\PhoneStatusBar.java\textends BaseStatusBar</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</div><div class=\"line\">    mStatusBarView.setBackgroundColor(color);\t\t<span class=\"comment\">//这里也有对 CommandQueue.Callbacks 中的 setStatusBarBg()接口的实现</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java\t中有对 setBackgroundColor()的实现</span></div><div class=\"line\"><span class=\"meta\">@RemotableViewMethod</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBackgroundColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mBackground <span class=\"keyword\">instanceof</span> ColorDrawable) &#123;</div><div class=\"line\">        ((ColorDrawable) mBackground.mutate()).setColor(color);</div><div class=\"line\">        computeOpaqueFlags();</div><div class=\"line\">        mBackgroundResource = <span class=\"number\">0</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        setBackground(<span class=\"keyword\">new</span> ColorDrawable(color));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.修改 Apps 和 Widgets 字体的大小和宽度？？？</p>\n<p>解决:<br>在 AppsCustomizeTabHost.java 文件的 onFinishInflate() 方法中修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Apps</span></div><div class=\"line\">tabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, <span class=\"number\">25</span>);</div><div class=\"line\">tabView.setWidth(<span class=\"number\">129</span>);</div><div class=\"line\"><span class=\"comment\">//Widgets</span></div><div class=\"line\">widgettabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, <span class=\"number\">25</span>);</div><div class=\"line\">widgettabView.setWidth(<span class=\"number\">250</span>);</div></pre></td></tr></table></figure></p>\n<p>4.AppsCustomizerTabHost 上右边的两个按钮 market_button 和 tecno_order_button ？？？</p>\n<p>解决:<br>将 apps_customize_pane.xml 中的 RelativeLayout中的 android:layout_marginLeft 改为 187dp 就能在tab下面显示一条完美的横线了<br>market_button还是没有显示出来</p>\n<p>5.如何将 AppsCustomizerTabHost 下面蓝色的 indicator 替换为 三角箭头????</p>\n<p>解决:<br>只要将 values/styles.xml 文件中的 TabIndicator 的<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/tab_widget_indicator_selector<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\">修改为</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/buttonbarbackground<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>6.修改Launcher里面应用图标大小，应用字体大小？？？</p>\n<p>解决:<br>PagedViewIcon.java中添加 setTextSize(12); 设置应用标题的字体<br>在 dimens.xml 文件中修改如何参数来修改图标的大小<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app_icon_size\"</span>&gt;</span>54dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t\t\t\t</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apps_customize_cell_width\"</span>&gt;</span>100dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apps_customize_cell_height\"</span>&gt;</span>140dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>7.有些应用的图标显示会比较大，如《梦宝谷》？？？</p>\n<p>解决:<br>已去掉该应用，去掉该应用的方法参考《问题55》</p>\n<p>8.apps_customize_pane.xml 上的 market_button 按钮还是没有显示出来？？？</p>\n<p>解决:<br>只要预置了Goole Play store就会显示出来</p>\n<p>9.在widget列表界面每一项的右下角添加一个指示 n * m 的 图标？？？</p>\n<p>解决:<br>添加一个DimsView自定义View</p>\n<ol>\n<li>widget 列表的绘制？？？</li>\n</ol>\n<p>解决:<br>在 PagedViewGridLayout.java的 dispatchDraw()方法中绘制 widget 列表的横线和竖线<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mFirstLine = 240;\t\t\t\t\t\t\t\t\t\t\t\t//这个变量可以去掉的，因为在cellWidth中控制widget的高度和宽度之后就可以控制 mFirstLine 的大小了</span></div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine, <span class=\"number\">480</span>, mFirstLine, mPaint);\t\t<span class=\"comment\">//在这里只需要将 720 改为 480 ，将 360 改为 240 就可以了</span></div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine*<span class=\"number\">2</span>, <span class=\"number\">480</span>, mFirstLine*<span class=\"number\">2</span>, mPaint);</div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine*<span class=\"number\">3</span>, <span class=\"number\">480</span>, mFirstLine*<span class=\"number\">3</span>, mPaint);</div><div class=\"line\">canvas.drawLine(<span class=\"number\">240</span>, <span class=\"number\">0</span>, <span class=\"number\">240</span>, mFirstLine*<span class=\"number\">3</span>, mPaint);</div></pre></td></tr></table></figure></p>\n<ol>\n<li>控制每一个widget列表项的大小？？？</li>\n</ol>\n<p>解决:<br>在 apps_customize_widget_add.xml 文件中有每一个列表项的布局        //注意这里用的是 apps_customize_widget_add.xml 而不是 apps_customize_widget.xml<br>在 AppsCustomizePagedView.java 的 syncWidgetPageItems()方法中将每一个 widget 添加到列表中<br>final int cellWidth = 217;        //用于控制每一个widget的显示宽度<br>final int cellHeight = 190;        //用于控制每一个widget的显示高度            这样控制是不是不太好，是不是应该控制每一个 cellHeight 计算公式中的变量来控制比较好</p>\n<p>12.apps列表下面的 indicator ????</p>\n<p>解决:<br>在 AllAppPageControlView.java 文件中有 pageID = { R.drawable.page_unit_nor, R.drawable.page_unit_active };    //这两张图片就是下面的indicator图片<br>在 PagedView.java 中使用 AllAppPageControlView</p>\n<p>13.widget列表下面的 indicator 不会随页数的变化而变化？？？</p>\n<p>解决:<br>主要在 AllAppPageControlView.java 中添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">bindWidgetView</span><span class=\"params\">(AppsCustomizePagedView allapppage)</span> </span>&#123;</div><div class=\"line\">    Log.v(<span class=\"string\">\"sw98\"</span>,<span class=\"string\">\"bindPageView allapppage.mCurrentPage == \"</span>+allapppage.mCurrentPage);</div><div class=\"line\">    Log.v(<span class=\"string\">\"sw98\"</span>,<span class=\"string\">\"bindPageView allapppage.mNumAppsPages() == \"</span>+allapppage.mNumAppsPages);</div><div class=\"line\">    <span class=\"keyword\">this</span>.count = allapppage.mNumWidgetPages;</div><div class=\"line\">    mPagedView = allapppage;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>14.app列表和widget列表的黑色背景怎么改？？？</p>\n<p>解决:<br>只要将 TECNO_THEME_SUPPORT 的宏打开为yes就可以了</p>\n<p>15.修改Hotseat上图标的大小？？？</p>\n<p>解决:<br>将values/dimens.xml文件中的hotseat_cell_width改为64dp<br>将layout-port/hotseat.xml文件中的android:layout_width改为match_parent</p>\n<p>16.去掉widget列表上第一个小部件《应用》小部件的缩略图？？？</p>\n<p>17.点击Menu键的时候会右移一大块？？？</p>\n<p>解决:<br>//packages/apps/Tecno_Launcher2/src/com/android/launcher2/Hotseat.java 文件中把 720 都改为 480 即可</p>\n<p>18.修改Folder的布局？？？</p>\n<p>解决:<br>修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 centerAboutIcon()方法中的<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">lp.width = <span class=\"number\">480</span>;</div><div class=\"line\">lp.height = <span class=\"number\">800</span>;</div><div class=\"line\">lp.x = <span class=\"number\">80</span>;</div><div class=\"line\">lp.y = <span class=\"number\">100</span>;</div><div class=\"line\">修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 onMeasure()方法中</div><div class=\"line\"><span class=\"keyword\">int</span> contentWidthSpec = MeasureSpec.makeMeasureSpec(<span class=\"number\">430</span>, MeasureSpec.EXACTLY);</div><div class=\"line\"><span class=\"keyword\">int</span> contentHeightSpec = MeasureSpec.makeMeasureSpec(<span class=\"number\">650</span>, MeasureSpec.EXACTLY);</div></pre></td></tr></table></figure></p>\n<p>19.Folder文件夹中可以存放的应用数量在哪里设定？？？</p>\n<p>解决:<br>// packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 的构造函数 public Folder() 中有如下数值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mMaxCountX = <span class=\"number\">3</span>;<span class=\"comment\">//res.getInteger(R.integer.folder_max_count_x);</span></div><div class=\"line\">mMaxCountY = <span class=\"number\">5</span>;<span class=\"comment\">//res.getInteger(R.integer.folder_max_count_y);</span></div><div class=\"line\">mMaxNumItems = <span class=\"number\">15</span>;</div></pre></td></tr></table></figure></p>\n<p>20.修改桌面下方页面控制pageControl的显示位置？？？</p>\n<p>解决:<br>只要修改 packages/apps/Tecno_Launcher2/res/layout-port/launcher.xml 中的 PageControlView(R.id.pageControl) 的 android:layout_marginBottom=”80dp” 即可</p>\n<p>21.修改上 Folder 文件夹图标的大小？？？Folder文件夹的大小和app的大小不太一致????????</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_preview_size\"</span>&gt;</span>48dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>22.替换主页面上应用列表按钮的资源图片？？？</p>\n<p>解决:<br>//只要替换下面这两张图片就行了<br>packages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps.png<br>packages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps_pressed.png        //这张图片还需要替换</p>\n<p>23.修改编辑屏幕的布局？？？</p>\n<p>解决:<br>替换为 R5 的 Tecno_Launcher 就可以了</p>\n<p>24.Folder 文件夹在编辑的时候没有显示删除图标？？</p>\n<p>25.GlobalDialog关机对话框中的图片资源乱，需要编译哪些模块？？</p>\n<p>解决:<br>在修改了frameworks/base/core/res/res/下的资源后GlobalDialog关机对话框中的图片资源乱掉了<br>首先应该将 out/target/common/obj/APPS/framework-res_intermediates 文件夹彻底删除<br>再重新编译push ./mk -t mm frameworks/base/core/res/res<br>再重新编译push ./mk -t mm frameworks/base<br>再重新编译push ./mk -t mm frameworks/base/policy</p>\n<p>26.左边的Hotseat启动不了 Theme 和 Wallpaper ？？？</p>\n<p>解决:<br>Unable to find explicit activity class {com.android.launcher/com.android.launcher2.ThemeChooser}; have you declared this activity in your AndroidManifest.xml?<br>Theme启动不了:重新添加一个ThemeChooserTest<br>真正有效的解决方法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在LauncherApplication.java中将 PackageManager.COMPONENT_ENABLED_STATE_DISABLED 改为 PackageManager.COMPONENT_ENABLED_STATE_ENABLED\t再运行一次,再改回去</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ComponentName DISABLED_ACTIVITY_COMPONENTNAME = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher\"</span>, <span class=\"string\">\"com.android.launcher2.ThemeChooser\"</span>);</div><div class=\"line\">mPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_ENABLED, <span class=\"number\">0</span>);\t\t<span class=\"comment\">//启用ThemeChooser</span></div><div class=\"line\">mPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_DISABLED, <span class=\"number\">0</span>);\t<span class=\"comment\">//禁用ThemeChooser</span></div></pre></td></tr></table></figure></p>\n<p>上面的代码只要运行一次之后就永久生效，不管是否重启，由于一开始TECNO_THEME_SUPPORT的宏没有打开，导致运行了一次禁用 ThemeChooser 的代码，把ThemeChooser永远禁用了，需要再运行一次启用ThemeChooser的代码才能把应用给显示出来</p>\n<p>wallpaper 启动不了:将 Tecno_Wallpaper 应用拷贝过来编译push就行了</p>\n<p>27.设置了主题之后，动态壁纸没有替换？？？</p>\n<p>解决:<br>需要将R5上的packages/wallpaper/ 目录下的动态壁纸的应用也一起移植过来</p>\n<p>《简约》风格的主题没有设置之后没起作用？？？？<br>需要修改frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg 默认壁纸<br>需要添加《问题29》所修改的主题图标功能</p>\n<p>28.workspace 上的 widget 列表没有显示出来？？？需要稍微调一下布局</p>\n<p>解决:<br>//代码中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">widgettabView.setText(<span class=\"string\">\"\"</span>);</div><div class=\"line\">widgettabView.setClickable(<span class=\"keyword\">false</span>);</div><div class=\"line\">widgettabView.setLayoutParams(<span class=\"keyword\">new</span> LinearLayout.LayoutParams(<span class=\"number\">0</span>, LayoutParams.WRAP_CONTENT, <span class=\"number\">5</span>));\t<span class=\"comment\">//widget列表显示是有显示的，但没有标题Widgets,显示出来之后也不能跳转到widget列表页</span></div></pre></td></tr></table></figure></p>\n<p>29.workspace 上的应用的图标没有跟着主题的变化而变化？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//声明接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/content/pm/PackageManager.java\t 中添加 getFancyDrawable()接口</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(String packageName, <span class=\"keyword\">int</span> resid,ApplicationInfo appInfo)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明api</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/api/current.txt 文件需要添加api接口声明</span></div><div class=\"line\">method <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> android.graphics.drawable.<span class=\"function\">Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(java.lang.String, <span class=\"keyword\">int</span>, android.content.pm.ApplicationInfo)</span></span>;</div><div class=\"line\">method <span class=\"keyword\">public</span> android.graphics.drawable.<span class=\"function\">Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(java.lang.String, <span class=\"keyword\">int</span>, android.content.pm.ApplicationInfo)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//实现接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/app/ApplicationPackageManager.java 中实现getFancyDrawable()接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/test-runner/src/android/test/mock/MockPackageManager.java 中也需要实现getFancyDrawable()接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//调用接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/content/pm/PackageItemInfo.java中的调用这个方法</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Drawable <span class=\"title\">loadIcon</span><span class=\"params\">(PackageManager pm)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (icon != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        Drawable dr = <span class=\"keyword\">null</span>;\t\t</div><div class=\"line\">        <span class=\"keyword\">if</span>(FeatureOption.TECNO_THEME_SUPPORT) &#123;</div><div class=\"line\">            dr = pm.getFancyDrawable(packageName,icon,getApplicationInfo());\t\t<span class=\"comment\">//在这里调用getFancyDrawable()方法</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            dr = pm.getDrawable(packageName, icon, getApplicationInfo());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (dr != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> dr;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> loadDefaultIcon(pm);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>30.下拉状态栏StatusBar上通知栏的布局怎么修改？？</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//symbols.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"img_back\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"drawable\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify_panel_notification_icon_bg\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"drawable\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify_panel_notification_icon_bg2\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Notification.java 在 RemoteViews applyStandardTemplate()方法上添加</span></div><div class=\"line\">contentView.setImageViewResource(R.id.img_back, R.drawable.notify_panel_notification_icon_bg2);</div><div class=\"line\"><span class=\"comment\">//上面这几个貌似不需要添加，添加了之后很多应用程序会报错？？？？？？？？？？？？？？？</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//notification_template_base.xml文件中添加 img_frame 和 img_back</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//在drawable-hdpi下添加替换如下图片</span></div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_low_normal.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_low_pressed.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_normal.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_normal_pressed.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg2.png</div></pre></td></tr></table></figure>\n<p>31.workspace 上的 Folder 文件夹里面放上15个快捷方式的时候没有显示完全???</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在 user_folder.xml 中有</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.android.launcher2.CellLayout</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">...</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">launcher:cellWidth</span>=<span class=\"string\">\"@dimen/folder_cell_width\"</span>\t\t//这个参数控制<span class=\"attr\">Folder</span>文件夹中每一个<span class=\"attr\">item</span>的宽度</span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">launcher:cellHeight</span>=<span class=\"string\">\"@dimen/folder_cell_height\"</span>/&gt;</span>\t//这个参数控制Folder文件夹中每一个item的高度</div><div class=\"line\">//在 dimens.xml 中有</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_cell_width\"</span>&gt;</span>74dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_cell_height\"</span>&gt;</span>85dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t\t//要修改每一个Folder中Item的高度只需要修改这个参数为 80dp 就可以了</div></pre></td></tr></table></figure></p>\n<p>32.StatusBar上的某些字符串没有翻译,在中文下也显示英文???</p>\n<p>解决:<br>//在frameworks/base/packages/SystemUI/res/values-zh/strings.xml文件中添加如下字符串即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"torch\"</span>&gt;</span>手电筒<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"calculator\"</span>&gt;</span>计算器<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"camera\"</span>&gt;</span>相机<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"recorder\"</span>&gt;</span>录音机<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"stopWatch\"</span>&gt;</span>计时器<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify\"</span>&gt;</span>通知<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"onoff\"</span>&gt;</span>开关<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"wifihotspot\"</span>&gt;</span>WLAN热点<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"delete_all\"</span>&gt;</span>移除所有应用<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app_manager\"</span>&gt;</span>管理应用<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>33.通知栏上的每一条通知的标题没有显示黑色???每一条通知的圈圈里面的图片在哪里替换????</p>\n<p>解决:<br>//标题黑色:<br>//frameworks/base/core/res/res/values/styles.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"TextAppearance.StatusBar.EventContent.Title\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:textColor\"</span>&gt;</span>#ffffff<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t\t//把 #ffffff 修改为 #000000 就可以了</span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>//圈圈里面的图片:<br>这个貌似需要在每个发送通知的地方修改</p>\n<p>34.如何修改Notification上的黑色背景???</p>\n<p>解决:<br>//frameworks/base/packages/SystemUI/res/colors.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notification_panel_solid_background\"</span>&gt;</span>#ffffffff<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span>\t//把这里原来的#ff000000修改为#ffffffff就行了</div></pre></td></tr></table></figure></p>\n<p>35.某些APK打开之后会报错???如时钟,settings中的某些地方???貌似有ActionBar的地方都会报错？？？</p>\n<p>解决:<br>修改Notification引起的报错<br>还不知道是什么原因引起的报错，但知道怎么修改可以让它不报错，只要将《问题30》中frameworks/base/core/res下的修改全部还原之后就可以了</p>\n<p>36.Folder上的四个小图标是怎么画出来的?????</p>\n<p>37.修改 innertheme1 主题中的默认壁纸？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/ThemePreview.java 中有</span></div><div class=\"line\">InputStream is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);</div><div class=\"line\"><span class=\"comment\">//需要将innertheme1的默认壁纸改为从innertheme1的文件夹中获取吗？？可以修改代码如下</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    is = context.getAssets().open(<span class=\"string\">\"innertheme1/wallpaper.png\"</span>);</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">    is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\t\t\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//默认壁纸所在路径，默认壁纸貌似必须使用.jpg格式的图片<br>frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg</p>\n<p>38.如何添加TECNO主题上的动态壁纸？？？？</p>\n<p>解决:<br>需要将R5上的packages/wallpaper下的 Leaves 和 WorldCup 主题应用拷贝过来，并编译push到手机上，在ProjectConfig.mk和common.mk文件中添加宏控</p>\n<p>39.预置 Tecno_Launcher2 的时候需不需要先编译Launcher2然后再编译Tecno_Launcher2????</p>\n<p>解决:<br>不需要，只要在TECNO_Launcher2的Android.mk文件中添加 LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 就OK了</p>\n<p>40.时钟Widget添加到桌面上之后显示不正常？？？？</p>\n<p>解决:<br>在DigitalAppWidgetProvider.java中的updateClock()方法中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">float</span> ratio = WidgetUtils.getScaleRatio(context, newOptions, appWidgetId);</div><div class=\"line\">WidgetUtils.setClockSize(context, widget, ratio);\t\t\t\t<span class=\"comment\">//只要把最后一个参数ratio改为1就可以显示正常了</span></div><div class=\"line\">density:<span class=\"number\">1.5</span> minHeight:<span class=\"number\">24</span> lblBox:<span class=\"number\">28.35</span> widget_height:<span class=\"number\">193.5</span>\t\t<span class=\"comment\">//或者可以修改这里的minHeight</span></div><div class=\"line\">ratio:((<span class=\"number\">1.5</span> * <span class=\"number\">24</span>) - <span class=\"number\">28.35</span>) / (<span class=\"number\">193.5</span> - <span class=\"number\">28.35</span>) = <span class=\"number\">0.046321526</span></div></pre></td></tr></table></figure></p>\n<p>41.研究一下动态壁纸是如何添加的？？？</p>\n<p>解决:<br>请参考《08月29日学习笔记》</p>\n<p>42.将StatusBar切换到Switch页面的时候会出现”只能拨打紧急呼救电话”字符串被遮挡的现象？？？</p>\n<p>解决:<br>只要在PhoneStatusBar.java中修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mSettingsButtonListener \t监听器中添加代码隐藏该字符串即可 mCarrierLabelGemini.setVisibility(View.GONE);</div><div class=\"line\">mNotificationButtonListener 监听器中添加代码显示该文本框即可 mCarrierLabelGemini.setVisibility(View.VISIBLE);</div></pre></td></tr></table></figure></p>\n<p>43.Notification通知栏上的左边的小圆圈图标显示不正常，下面有一小段显示不全？？？</p>\n<p>解决:<br>//在frameworks/base/packages/SystemUI/res/values/dimens.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notification_divider_height\"</span>&gt;</span>3dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t//只要将这里的3dp修改为0dp就行了</div></pre></td></tr></table></figure></p>\n<p>44.Wallpaper如何选中当前壁纸？？？</p>\n<p>解决:<br>//MyLocalGridViewAdapter.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">PreferencesService service = <span class=\"keyword\">new</span> PreferencesService(mContext);</div><div class=\"line\"><span class=\"keyword\">if</span>(service.getPreferencesPosition() == position)&#123;\t\t\t<span class=\"comment\">//这里的</span></div><div class=\"line\">    holder.current_setted.setVisibility(View.VISIBLE);</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    holder.current_setted.setVisibility(View.INVISIBLE);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//PreferencesService.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPreferencesPosition</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> WallpaperPosition;</div><div class=\"line\">    SharedPreferences preferences = context.getSharedPreferences(<span class=\"string\">\"TecnoWallpaper\"</span>, Context.MODE_PRIVATE);</div><div class=\"line\">    WallpaperPosition = preferences.getInt(<span class=\"string\">\"WallpaperPosition\"</span>, Constants.Extra.defaultsLocalWallpaper);\t<span class=\"comment\">//public static final int defaultsLocalWallpaper = 1;</span></div><div class=\"line\">    <span class=\"keyword\">return</span> WallpaperPosition;\t\t<span class=\"comment\">//这里的位置需要和当前壁纸相对应,只需要修改这个地方就可以了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>45.状态栏上的Torch打不开？？？</p>\n<p>解决:<br>在 PhoneStatusBar.java 上有 context.sendBroadcast(new Intent(“TorchDirectOpen”));        //这个地方发送了一个广播打开Torch<br>将R5上的FlashLight直接移植过来就可以了</p>\n<p>46.状态栏上的机主信息显示不全，有图片的时候不显示机主名称？？？</p>\n<p>解决:<br>因为R.id.user_textview文本框显示太小了<br>只需要在 quick_settings_tile_user.xml 中将 R.id.user_imageview 的属性修改为如下即可<br>android:layout_height=”0dp”<br>android:layout_weight=”1”</p>\n<ol>\n<li>adb shell如何按照进程名称杀死进程com.android.systemui？？？</li>\n</ol>\n<p>48.锁屏界面上的闹钟显示不全？？？</p>\n<p>解决:<br>keyguard_status_view.xml 中有 R.id.alarm_status 这个控件显示闹钟信息</p>\n<p>49.主题列表界面来蓝牙配对请求等通知的时候背景显示主界面？？？</p>\n<p>解决:<br>去掉ThemeChooser的<br>android:launchMode=”singleTask”</p>\n<p>50.添加了 img_back 和 img_frame 之后很多应用都会报错？？？</p>\n<p>51.点击主界面菜单上的《搜索》菜单项报错？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这里我添加了捕获异常的处理</span></div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    startActivity();</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span>(ActivityNotFoundException e) &#123;</div><div class=\"line\">    Toast.makeText(mContext,<span class=\"string\">\"There is no app found to support this action!\"</span>).show();</div><div class=\"line\">&#125;</div><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"keyword\">case</span> MENU_SEARCH:</div><div class=\"line\">    ComponentName componentNameSearch = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.google.android.googlequicksearchbox\"</span>, <span class=\"string\">\"com.google.android.googlequicksearchbox.SearchActivity\"</span>);\t\t<span class=\"comment\">//添加google包之后就不会报错了</span></div><div class=\"line\">    Intent mintentSearch = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    mintentSearch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    mintentSearch.setComponent(componentNameSearch);</div><div class=\"line\">    startActivity(mintentSearch);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>52.点击主界面菜单上的《分享》菜单项报错？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"keyword\">case</span> MENU_SHARE:</div><div class=\"line\">    ComponentName componetName1 = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.zzd.share\"</span>, <span class=\"string\">\"com.zzd.share.ShareTestActivity\"</span>);\t\t<span class=\"comment\">//这个应用是哪一个？？ShareTest</span></div><div class=\"line\">    Intent mintent1 = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    mintent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    mintent1.setComponent(componetName1);</div><div class=\"line\">    startActivity(mintent1);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>在 packages/apps 下添加上 ShareTest 应用就可以了</p>\n<p>53.卸载应用的时候会显示两个背景？？？桌面和主菜单界面？？？？</p>\n<p>分析:<br>《卸载》按钮:<br>//DeleteDropTarget.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">setText(isUninstall ? R.string.delete_target_uninstall_label : R.string.delete_target_label);</div><div class=\"line\"><span class=\"comment\">//DeleteDropTarget.java文件中有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">completeDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">if</span> (isAllAppsApplication(d.dragSource, item)) &#123;</div><div class=\"line\">        mLauncher.startApplicationUninstallActivity((ApplicationInfo) item);\t\t<span class=\"comment\">//卸载应用的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>《应用详情》按钮:<br>//InfoDropTarget.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">acceptDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">if</span> (componentName != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        mLauncher.startApplicationDetailsActivity(componentName);\t\t\t\t\t<span class=\"comment\">//查看应用详情的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>《workspace/hotseat没有空间》<br>//Workspace.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">acceptDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mLauncher.showOutOfSpaceMessage(isHotseat);\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//弹出Toast显示没空间的方法</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>解决:<br>只要在上面3个地方都添加上 mLauncher.hideWorkspace(); 方法将workspace/hotseat/pagecontrol 都隐藏了就可以了<br>现在替换为最新版的TECNO_Launcher2就OK了</p>\n<p>54.状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824</p>\n<p>解决:<br>直接在Launcher.java的onStop()方法中添加 mStatusBarManager.setStatusBarBg(0xff000000);        //直接添加，不要添加任何判断<br>//改为在startActivity()方法中判断，再设置背景</p>\n<p>55.《梦宝谷》应用在什么地方？？？</p>\n<p>解决:<br>应用在 mediatek/platform/mt6572/binary/3rd-party/free/Mobage/Mobage.apk<br>在 ProjectConfig.mk文件中 有 MTK_DENA_MOBAGE_APP 宏用来控制是否编译这个应用</p>\n<p>56.点击进入应用列表界面的时候加载较慢？？？？</p>\n<p>解决:<br>经过内存优化之后稍微有点改善</p>\n<p>57.切换语言或主题之后会很卡？？？</p>\n<p>解决:<br>经过内存优化之后稍微有点改善</p>\n<p>58.USB connected通知前面的标签图标显示白色？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setClass(mContext, com.android.systemui.usb.UsbStorageActivity.class);</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">PendingIntent pi = PendingIntent.getActivity(mContext, <span class=\"number\">0</span>, intent, <span class=\"number\">0</span>);</div><div class=\"line\"><span class=\"comment\">//发送通知</span></div><div class=\"line\">setUsbStorageNotification(com.android.internal.R.string.usb_storage_notification_title com.android.internal.R.string.usb_storage_notification_message, com.android.internal.R.drawable.stat_sys_data_usb,<span class=\"keyword\">false</span>, <span class=\"keyword\">true</span>, pi);</div><div class=\"line\">在 Notification.java 中的 applyStandardTemplate() 方法中添加 contentView.setInt(R.id.icon, <span class=\"string\">\"setBackgroundResource\"</span>, R.drawable.notify_panel_notification_icon_bg2);</div></pre></td></tr></table></figure></p>\n<p>解决:<br>//这个只需要将frameworks/base/core/res/res/layout/notification<em>template</em>*.xml的icon的android:background都改为蓝色的圆圈就行了</p>\n<p>59.研究一下FlashLight的直接打开闪光灯的Receiver的代码？？？</p>\n<p>60.Bug16662 <a href=\"主菜单\">BUG</a>操作过程中主菜单排序错误????</p>\n<p>61.App列表的行数和列数在哪里确定？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在workspace.java文件中有</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DEFAULT_CELL_COUNT_Y = <span class=\"number\">4</span>;\t\t\t\t\t\t<span class=\"comment\">//默认列数</span></div><div class=\"line\"><span class=\"keyword\">int</span> cellCountY = DEFAULT_CELL_COUNT_Y;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//这里默认就为4，这里的4是 workspace 上的4，而不是 AppsCustomizePagedView 上的 4</span></div><div class=\"line\">cellCountY = a.getInt(R.styleable.Workspace_cellCountY, cellCountY);\t<span class=\"comment\">//在config.xml文件中有    &lt;integer name=\"cell_count_y\"&gt;4&lt;/integer&gt;</span></div><div class=\"line\"><span class=\"comment\">//APP列表:\t\tPagedViewCellLayout.java</span></div><div class=\"line\">?????????????????????</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Widget列表:\tPagedViewGridLayout.java</span></div><div class=\"line\">AppsCustomizePagedView.java 文件中有</div><div class=\"line\"><span class=\"comment\">//syncWidgetPageItems()方法中有</span></div><div class=\"line\"><span class=\"keyword\">if</span>(mLauncher.isAddMode)&#123;</div><div class=\"line\">\tmWidgetCountY = <span class=\"number\">2</span>;\t<span class=\"comment\">//添加模式</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\tmWidgetCountY = <span class=\"number\">3</span>;\t<span class=\"comment\">//正常模式</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//syncPages()方法中有</span></div><div class=\"line\">PagedViewGridLayout layout = <span class=\"keyword\">new</span> PagedViewGridLayout(context, mWidgetCountX, mWidgetCountY);</div></pre></td></tr></table></figure></p>\n<p>62.截屏的时候显示通知栏还是正方形的？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在 GlobalScreenShot.java文件中有</div><div class=\"line\">mNotificationBuilder</div><div class=\"line\">.setContentTitle(r.getString(R.string.screenshot_saved_title))</div><div class=\"line\">.setContentText(r.getString(R.string.screenshot_saved_text))</div><div class=\"line\">.setContentIntent(PendingIntent.getActivity(params.context, <span class=\"number\">0</span>, launchIntent, <span class=\"number\">0</span>))</div><div class=\"line\">.setWhen(System.currentTimeMillis())</div><div class=\"line\">.setAutoCancel(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>解决:<br>还是需要在 frameworks/base/core/res/res/layout/notification_template_big_picture.xml 中将 R.id.icon 的 background 修改为 notify_panel_notification_icon_bg</p>\n<p>63.Bug16901 创建直接拨号或直接发短信快捷方式的时候，快捷方式图标显示不正常？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:packages/apps/ContactsCommon/src/com/android/contacts/common/list/ShortcutIntentBuilder.java</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">generatePhoneNumberIcon</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    dst.set(iconWidth - ((<span class=\"keyword\">int</span>) (<span class=\"number\">80</span> * density)) - <span class=\"number\">30</span>, <span class=\"number\">29</span>, iconWidth - <span class=\"number\">30</span>, ((<span class=\"keyword\">int</span>) (<span class=\"number\">80</span> * density)) + <span class=\"number\">30</span>);\t\t<span class=\"comment\">//微调这里的参数就行了</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>64.在设置主题的时候左右滑动数组越界报错的问题？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在ThemePreview.java的getView()方法中判断themePreviewList的元素是否为0，若为0则重新加载一遍 loadThemes()</span></div><div class=\"line\"><span class=\"keyword\">if</span>(themePreviewList.size() == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">    loadThemes(mCurrentThemeName);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>65.在 Launcher.java的 onPause()中状态栏设置背景颜色的时候有问题？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//onPause()方法</span></div><div class=\"line\">ActivityManager am = (ActivityManager)<span class=\"keyword\">this</span>.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">ComponentName cn = am.getRunningTasks(<span class=\"number\">1</span>).get(<span class=\"number\">0</span>).topActivity;</div><div class=\"line\"><span class=\"comment\">//将上面的方法移植到boolean startActivity()方法中就可以解决大部分，如mms,phone等</span></div></pre></td></tr></table></figure></p>\n<p>66.Settings热底座上的add按钮？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hotseat.java</div><div class=\"line\">addButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">Hotseat.java</div><div class=\"line\">allAppButton.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">\t\tmLauncher.onClickAllAppsButton(v);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickAllAppsButton</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(isArrange)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tmAppsCustomizeTabHost.selectAppsTab();</div><div class=\"line\">\tshowAllApps(<span class=\"keyword\">true</span>);</div><div class=\"line\">\tmAppsCustomizeTabHost.getContentTypeForTabTag(AppsCustomizeTabHost.APPS_TAB_TAG);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>67.Launcher.addMode模式下添加widget列表显示3行？？？</p>\n<p>分析:<br>//复现方法<br>1.进入到Direct message widget选择联系人，连续按两次返回键，widget列表没有消失<br>2.点击AppsCustomizeTabHost上的apps选项卡，进入到app列表<br>3.按返回键退出add mode,再进入到add mode就会直接显示3行widget列表</p>\n<p>68.将主题设置为《world cup》之后启动《RF 2013》world cup会意外停止？？？《WorldCup》主题和《Leaves》主题的效果都有待优化？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">E/AndroidRuntime(12461): FATAL EXCEPTION: Thread-470</div><div class=\"line\">E/AndroidRuntime(12461): Process: com.android.worldcup, PID: 12461</div><div class=\"line\">E/AndroidRuntime(12461): java.lang.NullPointerException</div><div class=\"line\">E/AndroidRuntime(12461): \tat android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1083)</div><div class=\"line\">E/AndroidRuntime(12461): \tat android.graphics.Canvas.drawBitmap(Canvas.java:1139)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.drawPaillette(WallpaperService.java:283)\t\t\t\t\t\t//这里会有问题？？？</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.draw(WallpaperService.java:318)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.doDraw(WallpaperService.java:405)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.run(WallpaperService.java:349)</div><div class=\"line\"></div><div class=\"line\">原因:在 WallpaperService.java 的 drawPaillette() 方法中有一个 BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\t\t//这个地方解析的时候会出错，就会导致解析出来的图片为空，导致NullPointerException</div><div class=\"line\">只要将 WallpaperService.java 的 drawPaillette() 方法中添加一个图片非空的判断就行了，具体修改代码如下</div><div class=\"line\">解决:</div><div class=\"line\">if(paillette_array[0] != null)&#123;\t\t\t\t\t\t\t//添加非空判断</div><div class=\"line\">    canvas.drawBitmap(paillette_array[0],0,0,null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>69.状态栏上的亮度调节栏应该在设置为非自动模式之后设置为不可用？？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java中的监听器和初始化seekBar的地方添加</span></div><div class=\"line\">mSeekbar.setEnabled(nAutomatic == <span class=\"number\">1</span> ? <span class=\"keyword\">false</span> : <span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>70.从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？</p>\n<p>解决:<br>同《问题75》</p>\n<p>71.在删除应用的时候出现问题？？？内存溢出？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">分析:</div><div class=\"line\">01-01 08:02:40.468685   964  1021 W System.err: Caused by: java.lang.OutOfMemoryError</div><div class=\"line\">01-01 08:02:40.469218   964  1021 W System.err: \tat android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)</div><div class=\"line\">01-01 08:02:40.469362   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:609)</div><div class=\"line\">01-01 08:02:40.469441   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeResourceStream(BitmapFactory.java:444)</div><div class=\"line\">01-01 08:02:40.469510   964  1021 W System.err: \tat android.graphics.drawable.Drawable.createFromResourceStream(Drawable.java:840)</div><div class=\"line\">01-01 08:02:40.469579   964  1021 W System.err: \tat android.content.res.Resources.loadDrawable(Resources.java:2166)</div><div class=\"line\">01-01 08:02:40.469664   964  1021 W System.err: \tat android.content.res.Resources.getDrawable(Resources.java:710)</div><div class=\"line\">01-01 08:02:40.469748   964  1021 W System.err: \tat android.app.ApplicationPackageManager.getDrawable(ApplicationPackageManager.java:946)\t\t\t\t//这里会有问题？？？</div><div class=\"line\">01-01 08:02:40.469826   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.getWidgetPreview(AppsCustomizePagedView.java:2033)\t\t\t</div><div class=\"line\">01-01 08:02:40.469902   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.loadWidgetPreviewsInBackground(AppsCustomizePagedView.java:2340)</div><div class=\"line\">01-01 08:02:40.469991   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.access$200(AppsCustomizePagedView.java:212)</div><div class=\"line\">01-01 08:02:40.470071   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView$8.run(AppsCustomizePagedView.java:1906)</div><div class=\"line\">01-01 08:02:40.470252   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:180)</div><div class=\"line\">01-01 08:02:40.470338   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:168)</div><div class=\"line\">01-01 08:02:40.470427   964  1021 W System.err: \tat android.os.AsyncTask$2.call(AsyncTask.java:288)</div><div class=\"line\">01-01 08:02:40.470497   964  1021 W System.err: \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)</div><div class=\"line\">01-01 08:02:40.470558   964  1021 W System.err: \t... 3 more</div><div class=\"line\"></div><div class=\"line\">Resources r = getResourcesForApplication(appInfo);</div><div class=\"line\">dr = r.getDrawable(resid);\t\t\t\t\t\t\t//log显示是在这里出现的问题？？</div></pre></td></tr></table></figure>\n<p>72.优化《WorldCup》主题和《Leaves》主题的显示效果和内存？？？？</p>\n<p>解决:<br>在使用BitmapFactory.decodeStream()方法加载图片之后效果好了一点</p>\n<p>73.在开机的时候如何禁止一些服务的启动？？？</p>\n<p>74.一些三方apk的名称和控制方法？？？</p>\n<p>解决:<br>点心省电        Tecno_DUBattery                        TECNO_DUBATTERY_APP<br>电影工作室    packages/apps/VideoEditor            MTK_ENABLE_VIDEO_EDITOR<br>手机管家        Tencent_Mobile_Manager_Slim            MTK_TENCENT_MOBILE_MANAGER_SLIM_SUPPORT<br>待办事项        mediatek/packages/apps/Todos<br>梦宝谷        Mobage                                MTK_DENA_MOBAGE_APP<br>墨迹天气国际    Tecno_MoWeather                        Tecno_MoWeather_APP<br>安卓优化大师    Tecno_DUSpeed                        Tecno_DUSpeed_APP</p>\n<p>75.从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java 文件中有</span></div><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotificationClicker</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;\t\t\t<span class=\"comment\">//通知栏某一项的点击事件</span></div><div class=\"line\">        ...</div><div class=\"line\">        StatusBarManager mStatusBarManager = (StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE);</div><div class=\"line\">        mStatusBarManager.setStatusBarBg(<span class=\"number\">0xff000000</span>);\t<span class=\"comment\">//将状态栏的颜色修改为黑色</span></div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>76.在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在packages/apps/TECNO_Launcher2/src/com/android/launcher2/Launcher.java上有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">startApplicationDetailsActivity</span><span class=\"params\">(ComponentName componentName)</span> </span>&#123;</div><div class=\"line\">    String packageName = componentName.getPackageName();</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.fromParts(<span class=\"string\">\"package\"</span>, packageName, <span class=\"keyword\">null</span>));</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);</div><div class=\"line\">    startActivitySafely(<span class=\"keyword\">null</span>, intent, <span class=\"string\">\"startApplicationDetailsActivity\"</span>);</div><div class=\"line\">    mStatusBarManager.setStatusBarBg(<span class=\"number\">0xff000000</span>);\t\t<span class=\"comment\">//在这里将状态栏设置为黑色</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>77.从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java文件中有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">startSettingsActivity</span><span class=\"params\">(Intent intent, <span class=\"keyword\">boolean</span> onlyProvisioned)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (onlyProvisioned &amp;&amp; !getService().isDeviceProvisioned()) <span class=\"keyword\">return</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// Dismiss the lock screen when Settings starts.</span></div><div class=\"line\">        ActivityManagerNative.getDefault().dismissKeyguardOnNextActivity();</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RemoteException e) &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);</div><div class=\"line\">    mContext.startActivityAsUser(intent, <span class=\"keyword\">new</span> UserHandle(UserHandle.USER_CURRENT));</div><div class=\"line\">    <span class=\"comment\">//Bug17319 modified for statusbarbg 2014/09/17:begin</span></div><div class=\"line\">    ((android.app.StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE)).setStatusBarBg(<span class=\"number\">0xff000000</span>);\t<span class=\"comment\">//在这里将状态栏的背景设置为黑色</span></div><div class=\"line\">    <span class=\"comment\">//Bug17319 modified for statusbarbg 2014/09/17:end</span></div><div class=\"line\">    collapsePanels();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>78.先进入Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？</p>\n<p>解决:<br>在 frameworks/base/policy/src/com/android/internal/policy/impl/keyguard/KeyguardServiceDelegate.java 文件中添加代码将状态栏的颜色修改为透明<br>但解锁了之后在回到应用界面，状态栏又会跳闪，参考《问题81》在解锁之后将状态栏修改为黑色</p>\n<p>79.在hotseat上切换fm/music功能的时候会出现divide by zero异常？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//从Log中看应该是CellLayout.java文件中的997行有</span></div><div class=\"line\">result[<span class=\"number\">0</span>] = (x - hStartPadding) / (mCellWidth + mWidthGap);\t\t<span class=\"comment\">//这里有个除0的异常，需要捕获异常</span></div><div class=\"line\">mCellWidth = a.getDimensionPixelSize(R.styleable.CellLayout_cellWidth, <span class=\"number\">10</span>);</div></pre></td></tr></table></figure></p>\n<p>80.从hotseat上启动FM和Music的时候状态栏也会闪？？？</p>\n<p>解决:<br>//Music的跳转在 MusicControl.java文件中<br>//FM的跳转在什么地方？？在 LauncherAppWidgetHostView.java 文件中</p>\n<p>81.解锁成功在什么地方？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/Keyguard/src/com/android/keyguard/KeyguardHostView.java文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showNextSecurityScreenOrFinish</span><span class=\"params\">(<span class=\"keyword\">boolean</span> authenticated, <span class=\"keyword\">boolean</span> showBouncer)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//可以在这里将状态栏的背景颜色设置为黑色</span></div><div class=\"line\">    <span class=\"comment\">//这里可以添加代码判断一下是不是Launcher界面，如果不是Launcher界面就将状态栏设置为黑色</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>82.在 AppsCustomizePagedView.java 文件中的2055行会报内存溢出的异常？？？</p>\n<p>分析:<br>同《问题71》</p>\n<p>83.”Setup Wizard has stopped” ?????</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">No Activity found to handle Intent&#123;act=android.intent.action.MAIN cat=[android.intent.category.HOME]&#125;</div><div class=\"line\">解决:</div><div class=\"line\">push完Launcher之后重启一下就可以了</div></pre></td></tr></table></figure>\n<p>84.workspace 上 folder文件夹好像太小了，包不住两个应用？？？</p>\n<p>解决:<br>用R5的新的Launcher就可以了</p>\n<p>85.在添加widget的时候，状态栏背景会变黑？？？</p>\n<p>解决:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在 Launcher.java 文件的 setWorkspaceBackground() 方法中有</div><div class=\"line\">mStatusBarManager.setStatusBarBg(0x75000000);\t//把这里改为0xff000000就行了</div></pre></td></tr></table></figure></p>\n<p>86.状态栏跳变总结？？？</p>\n<p>解决:<br>《问题02》    添加setStatusBarBg()接口<br>《问题54》    状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824<br>《问题65》    在Launcher.java的onPause()中状态栏设置背景颜色的时候有问题？？？<br>《问题70》    从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？<br>《问题75》    从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？<br>《问题76》    在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？<br>《问题77》    从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？<br>《问题78》    先进如Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？<br>《问题80》    从hotseat上启动FM和Music的时候状态栏也会闪？？？<br>《问题81》    解锁成功之后将状态栏设置为黑色？？？<br>《问题85》    在添加widget的时候，状态栏背景会变黑？？？<br>《问题91》    点击Home键的时候状态栏跳变？？？<br>最后只要在 Launcher.java 的 onPause() 方法中添加 setStatusBarBg(0xff000000); 就行了</p>\n<p>最终解决方法:<br>只要将 frameworks/base/services/java/com/android/server/StatusBarManagerService.java 中 setStatusBarBg() 的方法实现给去掉就都ok了<br>public void setStatusBarBg(int statusBarBg) {<br>}</p>\n<p>87.《Sound Recorder》在通知栏上的背景小图标还是白色的？？？</p>\n<p>解决:<br>参考《问题98》</p>\n<p>88.在 frameworks/base/core/java/android/app/ApplicationPackageManager.java 的946行会报OOM错？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">分析:</div><div class=\"line\">//ApplicationPackageManager.java</div><div class=\"line\">Resources r = getResourcesForApplication(appInfo);</div><div class=\"line\">dr = r.getDrawable(resid);\t\t\t\t\t\t\t//这里报错？？</div><div class=\"line\">同《问题71》</div></pre></td></tr></table></figure>\n<p>89.在锁屏界面添加《Message》短信widget之后，再从锁屏界面跳转到《Message》就会出现状态栏跳闪？？？</p>\n<p>解决:<br>参考《问题86最终解决方法》</p>\n<p>90.在添加 Driver 的 widget 的时候报错？？？</p>\n<p>分析:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): Caused by: java.lang.NullPointerException</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.estimateItemPosition(Workspace.java:392)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.getFinalPositionForDropAnimation(Workspace.java:3536)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.animateWidgetDrop(Workspace.java:3573)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.completeTwoStageWidgetDrop(Launcher.java:1686)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.onActivityResult(Launcher.java:1619)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.Activity.dispatchActivityResult(Activity.java:5456)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.ActivityThread.deliverResults(ActivityThread.java:3549)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \t... 11 more</div></pre></td></tr></table></figure></p>\n<p>91.点击Home键的时候状态栏跳变？？？</p>\n<p>分析:<br>貌似点击Home键的时候就会调用Launcher上的onPause()方法<br>解决:<br>参考《问题86最终解决方法》</p>\n<p>92.添加widget跳转的方法在什么地方？？？</p>\n<p>解决:<br>添加widget跳转    在 Launcher.java 上有 addAppWidgetImpl()方法<br>添加shortcut跳转    在 Launcher.java 上有 processShortcut()方法</p>\n<p>93.AppsCustomizePagedView 上的《Edit》菜单有时会不显示？？？</p>\n<p>解决:<br>设计如此，只有在《Own order》排序模式下才会显示</p>\n<p>94.R5的不同点？？？</p>\n<p>TabHost上的google play图标显示不太清楚            已修改（替换为R5的Launcher就行了）<br>主题不同，主题列表不同，主题数量不同（多了两个主题）    已修改（替换为R5的Launcher就行了）<br>AppsCustomizePagedView的加载动画不太一样        已修改（替换为R5的Launcher就行了）<br>在AddMode的时候的背景不透明                        已修改（替换为R5的Launcher就行了）<br>锁屏界面的壁纸不一致                            已修改（替换为R5的Launcher就行了）<br>在状态栏上的FlashLight的图标不会改变？？                这个貌似需要修改很多代码</p>\n<p>95.为什么H5的Settings/Apps/Running 中 RAM 的使用率这么高？？？</p>\n<p>解决:<br>因为R5是1G内存，H5是512M内存，在代码中写死了，<br>RunningProcessView.java</p>\n<p>96.Bug20323 锁屏界面解锁的时候背景是黑色的？？？</p>\n<p>解决:<br>M:frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java<br>将 PhoneWindowManager.java 中的 doesForceHide() 函数的返回值改为 return false; 就ok了，谢谢鑫哥</p>\n<p>97.主题预览界面的图片不是全屏的，左右有黑边？？？</p>\n<p>解决:只要替换innertheme下的预览图片就可以了</p>\n<p>98.《Sound Record》在状态栏上的通知前面的图标不一致????</p>\n<p>分析:<br>这个是在<sound recorder=\"\">应用内部自己添加的通知布局，需要在《SoundRecorder》应用内部修改<br>解决:<br>只要在 packages/apps/SoundRecorder/res/layout/notification.xml 的 app_icon 的 background 改为 notify_panel_notification_icon_bg.png(这张图片在frameworks/base/core/res/res/drawable-hdpi下)<br>再替换两张图片<br>packages/apps/SoundRecorder/res/drawable-hdpi/notification_pause_am.png<br>packages/apps/SoundRecorder/res/drawable-hdpi/notification_stop_am.png</sound></p>\n<p>99.在壁纸-&gt;动态壁纸-&gt;WorldCup预览界面中横屏的时候会报错？？？</p>\n<p>解决:<br>好像有人把动态壁纸的预览页面强制设置为竖屏的了</p>\n<p>100.从《Recent App》上启动 App Manager 会报错？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): android.content.res.Resources$NotFoundException: File res/layout/detail_dialog.xml from drawable resource ID #0x7f030000</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2152)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.getDrawable(Resources.java:710)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.app.ApplicationPackageManager.getFancyDrawable(ApplicationPackageManager.java:890)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.pm.PackageItemInfo.loadIcon(PackageItemInfo.java:144)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$AppEntry.ensureIconLocked(ApplicationsState.java:145)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$BackgroundHandler.handleMessage(ApplicationsState.java:1017)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.HandlerThread.run(HandlerThread.java:61)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #40: invalid drawable tag ScrollView</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2148)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \t... 8 more</div></pre></td></tr></table></figure>\n<p>101.锁屏界面解锁的时候有问题？？？黑色的圈圈和花环对不起来</p>\n<p>解决:莫名奇妙就好了</p>\n<p>102.为什么在Hotseat上显示的phone会变成这个com.google.android.dialer/com.android.dialer.DialtactsActivity？？？</p>\n<p>分析:<br>com.google.android.dialer/com.android.dialer.DialtactsActivity        //为什么在Hotseat上显示的phone会变成这个？？？<br>com.android.dialer/.DialtactsActivity<br>解决:<br>去掉Google包中的GoogleOneTimeInitializer就可以了</p>\n<p>103.添加App列表和widget列表翻页功能？？？</p>\n<p>解决:<br>只要在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/PagedView.java 的 onTouchEvent() 方法中的case 1,case 2中做一下处理就可以了</p>\n<p>104.Bug19127修改锁屏界面上时钟的显示大小??</p>\n<p>解决:<br>修改 frameworks/base/packages/Keyguard/res/layout-800x480/keyguard_status_view.xml 中的 clock_text 这个TextView的 textSize 从59dp 修改为55dp</p>\n<p>105.在日历的快捷方式上显示日期？？？</p>\n<p>分析:<br>如何实时更新<br>忽略:<br>客户已同意不做改功能</p>\n<p>106.H5在SD卡上写东西的时候不成功？？Flash Share在接受文件的时候创建文件文件夹失败，接收文件失败？？？</p>\n<p>107.近期任务中的图标好像不是主题里面的图标？？？？</p>\n<p>解决:<br>修改 RecentTasksLoader.java 中的 getDrawable() 改为 getFancyDrawable() 就可以了</p>\n<p>108.Bug19250 在不插卡的时候在状态栏上显示两个信号图标？？？</p>\n<p>解决:<br>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java            //这个文件中添加用于控制显示两个信号图标<br>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java    //这个文件中添加用于控制在不插卡的时候显示信号图标</p>\n<p>109.Bug19333 修改下载的时候在状态栏显示的图标？？？</p>\n<p>解决:<br>“Download complete” 字符串在 packages/providers/DownloadProvider/res/values/strings.xml    notification_download_complete<br>发送通知的地方:packages/providers/DownloadProvider/src/com/android/providers/downloads/DownloadNotifier.java    中有 builder.setSmallIcon(android.R.drawable.stat_sys_download);    //这个图片就是通知栏上看不清除的图片<br>//只要替换下面的这几张图片就可以了<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim0.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim1.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim2.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim3.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim4.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim5.png</p>\n<p>110.Bug16669 去掉Settings/Action/Double click to wake up 选项？？？</p>\n<p>解决:<br>packages/apps/ActionSettings/src/com/sagereal/actions/CustomPreferenceActivity.java    中将所有的 R.id.double_click_wake 都换成 0<br>packages/apps/ActionSettings/res/xml/preference_header.xml                            中将    double_click_wake 注释掉</p>\n<p>111.Bug19187 在FileManager中打开文本文件，横屏的时候字体变大？？？</p>\n<p>解决:<br>packages/apps/HTMLViewer/AndroidManifest.xml    //将这个文件中的 HTMLViewerActivity 中添加 android:screenOrientation=”portrait” 强制将这个Activity设置为竖屏，不让它可以横屏显示</p>\n<p>112.TecnoBug262 Settings-&gt;Apps-&gt;App info 中下面的权限前面的图标显示不清楚？？？</p>\n<p>解决:<br>frameworks/base/core/java/android/content/pm/PackageItemInfo.java 文件中有 loadNormalIcon() 方法<br>frameworks/base/core/java/android/widget/AppSecurityPermission.java 文件中的 loadGroupIcon() 方法中的 loadIcon() 方法替换成 loadNormalIcon() 方法<br>还需要将frameworks/base/core/res/res/drawable-hdpi/下面的以 perm<em>group</em> 开头的图片替换为R5下面同名的29张图片</p>\n<p>113.TecnoBug260 计算器横屏的时候删除按钮不显示C？？？</p>\n<p>解决:<br>packages/apps/Calculator/res/layout-port/main.xml    在这个文件中 R.id.del 按钮中添加 android:text=”@string/mtk_clear” 就行了</p>\n<p>114.在RecentApp中短信的图标有时会显示不正常？？？</p>\n<p>分析:<br>从Log中可以看出近期任务的短信图标有时候会显示成    com_android_mms_title_message.png    而有时候会显示成    com_android_mms_ic_launcher_mms.png        但这里还没有找到具体原因为什么会变成    com_android_mms_title_message.png<br>解决:<br>只要在innertheme下添加        com_android_mms_title_message.png    就可以了</p>\n<p>115.Bug19523 开机出现报错？？？</p>\n<p>分析:<br>从aee_exp的dbg文件中可以看出<br>java.lang.NullPointerException<br>at com.android.keyguard.KeyguardBubblesOperate$4.handleMessage(KeyguardBubblesOperate.java:571)<br>at android.os.Handler.dispatchMessage(Handler.java:110)<br>at android.os.Looper.loop(Looper.java:193)<br>at android.app.ActivityThread.main(ActivityThread.java:5299)<br>at java.lang.reflect.Method.invokeNative(Native Method)<br>at java.lang.reflect.Method.invoke(Method.java:515)<br>at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)<br>at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)<br>at dalvik.system.NativeStart.main(Native Method)<br>解决:<br>在 KeyguardBubblesOperate.java 中添加上非空判断</p>\n<p>116.修改按键音？？</p>\n<p>解决:<br>需要将 PhoneWindow.java 和 PhoneWindowManager.java 中修改</p>\n<p>117.强度测试 《Ripple》和《Triangular space》动态壁纸会报错？？？</p>\n<p>分析:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Ripple</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): FATAL EXCEPTION: main</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): Process: com.vlife.wallpaper.resource.number5082, PID: 3834</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): java.lang.NullPointerException</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.i(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.g(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq$2.run(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.handleCallback(Handler.java:808)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.dispatchMessage(Handler.java:103)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.app.ActivityThread.main(ActivityThread.java:5309)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:824)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:640)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">//Triangle</div></pre></td></tr></table></figure></p>\n<p>解决:<br>只要替换为上海提供的新的APK就可以了</p>\n<p>118.notification panel will show ‘Emergency calls only - rongweidi’ ???</p>\n<p>119.在锁屏界面上的FM widget上点击录音按钮界面会跳闪？？？</p>\n<p>解决:<br>只要将录音的按钮的图标替换为透明的图标就可以了，不知道为什么？？<br>这里需要注意的是widget的布局文件在 layout-hdpi-800x480 文件夹中，图片在 drawable-hdpi-800x480 文件夹中，不要找错地方</p>\n<p>120.卸载应用的对话框好像没有换肤？？？</p>\n<p>121.将 Settings 中的 Security 修改为和其他的设置项都对齐？？？</p>\n<p>解决:<br>M:packages/apps/Settings/res/layout/preference_header_button_item.xml<br>只要将 android:layout_marginEnd 去掉就可以了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.移植R5的Tecno_Launcher2????</p>\n<p>解决:<br>移植完毕</p>\n<p>2.添加接口setStatusBarBg()？？？</p>\n<p>解决:<br>需要修改以下几个文件<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/android/app/StatusBarManager.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//添加 setStatusBarBg(int color) 方法</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> IStatusBarService svc = getService();</div><div class=\"line\">        <span class=\"keyword\">if</span> (svc != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mService.setStatusBarBg(statusBarBg);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RemoteException ex) &#123;</div><div class=\"line\">        <span class=\"comment\">/// M: system process is dead anyway.</span></div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(ex);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/com/android/internal/statusbar/IStatusBarService.aidl</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//添加 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/services/java/com/android/server/StatusBarManagerService.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//实现 IStatusBarService.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (mBar != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            mBar.setStatusBarBg(statusBarBg);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (RemoteException ex) &#123;</div><div class=\"line\">            ex.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/core/java/com/android/internal/statusbar/IStatusBar.aidl</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//添加 IStatusBar.aidl 中的 setStatusBarBg(int color)接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> statusBarBg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mList) &#123;</div><div class=\"line\">        mHandler.obtainMessage(MSG_SET_STATUSBAR, statusBarBg, <span class=\"number\">0</span>, <span class=\"keyword\">null</span>).sendToTarget();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//在H(Handler)中添加对MSG_SET_STATUSBAR的处理</span></div><div class=\"line\"><span class=\"keyword\">case</span> MSG_SET_STATUSBAR:</div><div class=\"line\">    mCallbacks.setStatusBarBg(msg.arg1);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\"><span class=\"comment\">//在 CommandQueue.Callbacks 接口中添加 setStatusBarBg() 接口</span></div><div class=\"line\">setStatusBarBg(<span class=\"keyword\">int</span> color)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>&#123;&#125;\t\t\t\t<span class=\"comment\">//在这里实现 CommandQueue.Callbacks 中的 setStatusBarBg()接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks\\base\\packages\\systemui\\src\\com\\android\\systemui\\statusbar\\phone\\PhoneStatusBar.java\textends BaseStatusBar</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setStatusBarBg</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</div><div class=\"line\">    mStatusBarView.setBackgroundColor(color);\t\t<span class=\"comment\">//这里也有对 CommandQueue.Callbacks 中的 setStatusBarBg()接口的实现</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBarView.java\t中有对 setBackgroundColor()的实现</span></div><div class=\"line\"><span class=\"meta\">@RemotableViewMethod</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBackgroundColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mBackground <span class=\"keyword\">instanceof</span> ColorDrawable) &#123;</div><div class=\"line\">        ((ColorDrawable) mBackground.mutate()).setColor(color);</div><div class=\"line\">        computeOpaqueFlags();</div><div class=\"line\">        mBackgroundResource = <span class=\"number\">0</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        setBackground(<span class=\"keyword\">new</span> ColorDrawable(color));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.修改 Apps 和 Widgets 字体的大小和宽度？？？</p>\n<p>解决:<br>在 AppsCustomizeTabHost.java 文件的 onFinishInflate() 方法中修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Apps</span></div><div class=\"line\">tabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, <span class=\"number\">25</span>);</div><div class=\"line\">tabView.setWidth(<span class=\"number\">129</span>);</div><div class=\"line\"><span class=\"comment\">//Widgets</span></div><div class=\"line\">widgettabView.setTextSize(TypedValue.COMPLEX_UNIT_PX, <span class=\"number\">25</span>);</div><div class=\"line\">widgettabView.setWidth(<span class=\"number\">250</span>);</div></pre></td></tr></table></figure></p>\n<p>4.AppsCustomizerTabHost 上右边的两个按钮 market_button 和 tecno_order_button ？？？</p>\n<p>解决:<br>将 apps_customize_pane.xml 中的 RelativeLayout中的 android:layout_marginLeft 改为 187dp 就能在tab下面显示一条完美的横线了<br>market_button还是没有显示出来</p>\n<p>5.如何将 AppsCustomizerTabHost 下面蓝色的 indicator 替换为 三角箭头????</p>\n<p>解决:<br>只要将 values/styles.xml 文件中的 TabIndicator 的<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/tab_widget_indicator_selector<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div><div class=\"line\">修改为</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:background\"</span>&gt;</span>@drawable/buttonbarbackground<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>6.修改Launcher里面应用图标大小，应用字体大小？？？</p>\n<p>解决:<br>PagedViewIcon.java中添加 setTextSize(12); 设置应用标题的字体<br>在 dimens.xml 文件中修改如何参数来修改图标的大小<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app_icon_size\"</span>&gt;</span>54dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t\t\t\t</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apps_customize_cell_width\"</span>&gt;</span>100dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apps_customize_cell_height\"</span>&gt;</span>140dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>7.有些应用的图标显示会比较大，如《梦宝谷》？？？</p>\n<p>解决:<br>已去掉该应用，去掉该应用的方法参考《问题55》</p>\n<p>8.apps_customize_pane.xml 上的 market_button 按钮还是没有显示出来？？？</p>\n<p>解决:<br>只要预置了Goole Play store就会显示出来</p>\n<p>9.在widget列表界面每一项的右下角添加一个指示 n * m 的 图标？？？</p>\n<p>解决:<br>添加一个DimsView自定义View</p>\n<ol>\n<li>widget 列表的绘制？？？</li>\n</ol>\n<p>解决:<br>在 PagedViewGridLayout.java的 dispatchDraw()方法中绘制 widget 列表的横线和竖线<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mFirstLine = 240;\t\t\t\t\t\t\t\t\t\t\t\t//这个变量可以去掉的，因为在cellWidth中控制widget的高度和宽度之后就可以控制 mFirstLine 的大小了</span></div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine, <span class=\"number\">480</span>, mFirstLine, mPaint);\t\t<span class=\"comment\">//在这里只需要将 720 改为 480 ，将 360 改为 240 就可以了</span></div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine*<span class=\"number\">2</span>, <span class=\"number\">480</span>, mFirstLine*<span class=\"number\">2</span>, mPaint);</div><div class=\"line\">canvas.drawLine(<span class=\"number\">0</span>, mFirstLine*<span class=\"number\">3</span>, <span class=\"number\">480</span>, mFirstLine*<span class=\"number\">3</span>, mPaint);</div><div class=\"line\">canvas.drawLine(<span class=\"number\">240</span>, <span class=\"number\">0</span>, <span class=\"number\">240</span>, mFirstLine*<span class=\"number\">3</span>, mPaint);</div></pre></td></tr></table></figure></p>\n<ol>\n<li>控制每一个widget列表项的大小？？？</li>\n</ol>\n<p>解决:<br>在 apps_customize_widget_add.xml 文件中有每一个列表项的布局        //注意这里用的是 apps_customize_widget_add.xml 而不是 apps_customize_widget.xml<br>在 AppsCustomizePagedView.java 的 syncWidgetPageItems()方法中将每一个 widget 添加到列表中<br>final int cellWidth = 217;        //用于控制每一个widget的显示宽度<br>final int cellHeight = 190;        //用于控制每一个widget的显示高度            这样控制是不是不太好，是不是应该控制每一个 cellHeight 计算公式中的变量来控制比较好</p>\n<p>12.apps列表下面的 indicator ????</p>\n<p>解决:<br>在 AllAppPageControlView.java 文件中有 pageID = { R.drawable.page_unit_nor, R.drawable.page_unit_active };    //这两张图片就是下面的indicator图片<br>在 PagedView.java 中使用 AllAppPageControlView</p>\n<p>13.widget列表下面的 indicator 不会随页数的变化而变化？？？</p>\n<p>解决:<br>主要在 AllAppPageControlView.java 中添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">bindWidgetView</span><span class=\"params\">(AppsCustomizePagedView allapppage)</span> </span>&#123;</div><div class=\"line\">    Log.v(<span class=\"string\">\"sw98\"</span>,<span class=\"string\">\"bindPageView allapppage.mCurrentPage == \"</span>+allapppage.mCurrentPage);</div><div class=\"line\">    Log.v(<span class=\"string\">\"sw98\"</span>,<span class=\"string\">\"bindPageView allapppage.mNumAppsPages() == \"</span>+allapppage.mNumAppsPages);</div><div class=\"line\">    <span class=\"keyword\">this</span>.count = allapppage.mNumWidgetPages;</div><div class=\"line\">    mPagedView = allapppage;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>14.app列表和widget列表的黑色背景怎么改？？？</p>\n<p>解决:<br>只要将 TECNO_THEME_SUPPORT 的宏打开为yes就可以了</p>\n<p>15.修改Hotseat上图标的大小？？？</p>\n<p>解决:<br>将values/dimens.xml文件中的hotseat_cell_width改为64dp<br>将layout-port/hotseat.xml文件中的android:layout_width改为match_parent</p>\n<p>16.去掉widget列表上第一个小部件《应用》小部件的缩略图？？？</p>\n<p>17.点击Menu键的时候会右移一大块？？？</p>\n<p>解决:<br>//packages/apps/Tecno_Launcher2/src/com/android/launcher2/Hotseat.java 文件中把 720 都改为 480 即可</p>\n<p>18.修改Folder的布局？？？</p>\n<p>解决:<br>修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 centerAboutIcon()方法中的<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">lp.width = <span class=\"number\">480</span>;</div><div class=\"line\">lp.height = <span class=\"number\">800</span>;</div><div class=\"line\">lp.x = <span class=\"number\">80</span>;</div><div class=\"line\">lp.y = <span class=\"number\">100</span>;</div><div class=\"line\">修改 packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 文件中的 onMeasure()方法中</div><div class=\"line\"><span class=\"keyword\">int</span> contentWidthSpec = MeasureSpec.makeMeasureSpec(<span class=\"number\">430</span>, MeasureSpec.EXACTLY);</div><div class=\"line\"><span class=\"keyword\">int</span> contentHeightSpec = MeasureSpec.makeMeasureSpec(<span class=\"number\">650</span>, MeasureSpec.EXACTLY);</div></pre></td></tr></table></figure></p>\n<p>19.Folder文件夹中可以存放的应用数量在哪里设定？？？</p>\n<p>解决:<br>// packages/apps/Tecno_Launcher2/src/com/android/launcher2/Folder.java 的构造函数 public Folder() 中有如下数值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mMaxCountX = <span class=\"number\">3</span>;<span class=\"comment\">//res.getInteger(R.integer.folder_max_count_x);</span></div><div class=\"line\">mMaxCountY = <span class=\"number\">5</span>;<span class=\"comment\">//res.getInteger(R.integer.folder_max_count_y);</span></div><div class=\"line\">mMaxNumItems = <span class=\"number\">15</span>;</div></pre></td></tr></table></figure></p>\n<p>20.修改桌面下方页面控制pageControl的显示位置？？？</p>\n<p>解决:<br>只要修改 packages/apps/Tecno_Launcher2/res/layout-port/launcher.xml 中的 PageControlView(R.id.pageControl) 的 android:layout_marginBottom=”80dp” 即可</p>\n<p>21.修改上 Folder 文件夹图标的大小？？？Folder文件夹的大小和app的大小不太一致????????</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_preview_size\"</span>&gt;</span>48dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>22.替换主页面上应用列表按钮的资源图片？？？</p>\n<p>解决:<br>//只要替换下面这两张图片就行了<br>packages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps.png<br>packages/apps/Tecno_Launcher2/res/drawable-hdpi/ic_allapps_pressed.png        //这张图片还需要替换</p>\n<p>23.修改编辑屏幕的布局？？？</p>\n<p>解决:<br>替换为 R5 的 Tecno_Launcher 就可以了</p>\n<p>24.Folder 文件夹在编辑的时候没有显示删除图标？？</p>\n<p>25.GlobalDialog关机对话框中的图片资源乱，需要编译哪些模块？？</p>\n<p>解决:<br>在修改了frameworks/base/core/res/res/下的资源后GlobalDialog关机对话框中的图片资源乱掉了<br>首先应该将 out/target/common/obj/APPS/framework-res_intermediates 文件夹彻底删除<br>再重新编译push ./mk -t mm frameworks/base/core/res/res<br>再重新编译push ./mk -t mm frameworks/base<br>再重新编译push ./mk -t mm frameworks/base/policy</p>\n<p>26.左边的Hotseat启动不了 Theme 和 Wallpaper ？？？</p>\n<p>解决:<br>Unable to find explicit activity class {com.android.launcher/com.android.launcher2.ThemeChooser}; have you declared this activity in your AndroidManifest.xml?<br>Theme启动不了:重新添加一个ThemeChooserTest<br>真正有效的解决方法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">在LauncherApplication.java中将 PackageManager.COMPONENT_ENABLED_STATE_DISABLED 改为 PackageManager.COMPONENT_ENABLED_STATE_ENABLED\t再运行一次,再改回去</div><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ComponentName DISABLED_ACTIVITY_COMPONENTNAME = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher\"</span>, <span class=\"string\">\"com.android.launcher2.ThemeChooser\"</span>);</div><div class=\"line\">mPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_ENABLED, <span class=\"number\">0</span>);\t\t<span class=\"comment\">//启用ThemeChooser</span></div><div class=\"line\">mPackageManager.setComponentEnabledSetting(DISABLED_ACTIVITY_COMPONENTNAME, PackageManager.COMPONENT_ENABLED_STATE_DISABLED, <span class=\"number\">0</span>);\t<span class=\"comment\">//禁用ThemeChooser</span></div></pre></td></tr></table></figure></p>\n<p>上面的代码只要运行一次之后就永久生效，不管是否重启，由于一开始TECNO_THEME_SUPPORT的宏没有打开，导致运行了一次禁用 ThemeChooser 的代码，把ThemeChooser永远禁用了，需要再运行一次启用ThemeChooser的代码才能把应用给显示出来</p>\n<p>wallpaper 启动不了:将 Tecno_Wallpaper 应用拷贝过来编译push就行了</p>\n<p>27.设置了主题之后，动态壁纸没有替换？？？</p>\n<p>解决:<br>需要将R5上的packages/wallpaper/ 目录下的动态壁纸的应用也一起移植过来</p>\n<p>《简约》风格的主题没有设置之后没起作用？？？？<br>需要修改frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg 默认壁纸<br>需要添加《问题29》所修改的主题图标功能</p>\n<p>28.workspace 上的 widget 列表没有显示出来？？？需要稍微调一下布局</p>\n<p>解决:<br>//代码中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">widgettabView.setText(<span class=\"string\">\"\"</span>);</div><div class=\"line\">widgettabView.setClickable(<span class=\"keyword\">false</span>);</div><div class=\"line\">widgettabView.setLayoutParams(<span class=\"keyword\">new</span> LinearLayout.LayoutParams(<span class=\"number\">0</span>, LayoutParams.WRAP_CONTENT, <span class=\"number\">5</span>));\t<span class=\"comment\">//widget列表显示是有显示的，但没有标题Widgets,显示出来之后也不能跳转到widget列表页</span></div></pre></td></tr></table></figure></p>\n<p>29.workspace 上的应用的图标没有跟着主题的变化而变化？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//声明接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/content/pm/PackageManager.java\t 中添加 getFancyDrawable()接口</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(String packageName, <span class=\"keyword\">int</span> resid,ApplicationInfo appInfo)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明api</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/api/current.txt 文件需要添加api接口声明</span></div><div class=\"line\">method <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> android.graphics.drawable.<span class=\"function\">Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(java.lang.String, <span class=\"keyword\">int</span>, android.content.pm.ApplicationInfo)</span></span>;</div><div class=\"line\">method <span class=\"keyword\">public</span> android.graphics.drawable.<span class=\"function\">Drawable <span class=\"title\">getFancyDrawable</span><span class=\"params\">(java.lang.String, <span class=\"keyword\">int</span>, android.content.pm.ApplicationInfo)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//实现接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/app/ApplicationPackageManager.java 中实现getFancyDrawable()接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/test-runner/src/android/test/mock/MockPackageManager.java 中也需要实现getFancyDrawable()接口</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//调用接口</span></div><div class=\"line\"><span class=\"comment\">//在frameworks/base/core/java/android/content/pm/PackageItemInfo.java中的调用这个方法</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Drawable <span class=\"title\">loadIcon</span><span class=\"params\">(PackageManager pm)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (icon != <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        Drawable dr = <span class=\"keyword\">null</span>;\t\t</div><div class=\"line\">        <span class=\"keyword\">if</span>(FeatureOption.TECNO_THEME_SUPPORT) &#123;</div><div class=\"line\">            dr = pm.getFancyDrawable(packageName,icon,getApplicationInfo());\t\t<span class=\"comment\">//在这里调用getFancyDrawable()方法</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            dr = pm.getDrawable(packageName, icon, getApplicationInfo());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (dr != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> dr;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> loadDefaultIcon(pm);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>30.下拉状态栏StatusBar上通知栏的布局怎么修改？？</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//symbols.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"id\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"img_back\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"drawable\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify_panel_notification_icon_bg\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">java-symbol</span> <span class=\"attr\">type</span>=<span class=\"string\">\"drawable\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify_panel_notification_icon_bg2\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//Notification.java 在 RemoteViews applyStandardTemplate()方法上添加</span></div><div class=\"line\">contentView.setImageViewResource(R.id.img_back, R.drawable.notify_panel_notification_icon_bg2);</div><div class=\"line\"><span class=\"comment\">//上面这几个貌似不需要添加，添加了之后很多应用程序会报错？？？？？？？？？？？？？？？</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//notification_template_base.xml文件中添加 img_frame 和 img_back</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//在drawable-hdpi下添加替换如下图片</span></div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_low_normal.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_low_pressed.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_normal.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notification_bg_normal_pressed.9.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg.png</div><div class=\"line\">frameworks/base/core/res/res/drawable-hdpi/notify_panel_notification_icon_bg2.png</div></pre></td></tr></table></figure>\n<p>31.workspace 上的 Folder 文件夹里面放上15个快捷方式的时候没有显示完全???</p>\n<p>解决:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在 user_folder.xml 中有</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.android.launcher2.CellLayout</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">...</span></span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">launcher:cellWidth</span>=<span class=\"string\">\"@dimen/folder_cell_width\"</span>\t\t//这个参数控制<span class=\"attr\">Folder</span>文件夹中每一个<span class=\"attr\">item</span>的宽度</span></div><div class=\"line\"><span class=\"tag\"><span class=\"attr\">launcher:cellHeight</span>=<span class=\"string\">\"@dimen/folder_cell_height\"</span>/&gt;</span>\t//这个参数控制Folder文件夹中每一个item的高度</div><div class=\"line\">//在 dimens.xml 中有</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_cell_width\"</span>&gt;</span>74dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"folder_cell_height\"</span>&gt;</span>85dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t\t//要修改每一个Folder中Item的高度只需要修改这个参数为 80dp 就可以了</div></pre></td></tr></table></figure></p>\n<p>32.StatusBar上的某些字符串没有翻译,在中文下也显示英文???</p>\n<p>解决:<br>//在frameworks/base/packages/SystemUI/res/values-zh/strings.xml文件中添加如下字符串即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"torch\"</span>&gt;</span>手电筒<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"calculator\"</span>&gt;</span>计算器<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"camera\"</span>&gt;</span>相机<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"recorder\"</span>&gt;</span>录音机<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"stopWatch\"</span>&gt;</span>计时器<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notify\"</span>&gt;</span>通知<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"onoff\"</span>&gt;</span>开关<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"wifihotspot\"</span>&gt;</span>WLAN热点<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"delete_all\"</span>&gt;</span>移除所有应用<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">string</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app_manager\"</span>&gt;</span>管理应用<span class=\"tag\">&lt;/<span class=\"name\">string</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>33.通知栏上的每一条通知的标题没有显示黑色???每一条通知的圈圈里面的图片在哪里替换????</p>\n<p>解决:<br>//标题黑色:<br>//frameworks/base/core/res/res/values/styles.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"TextAppearance.StatusBar.EventContent.Title\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:textColor\"</span>&gt;</span>#ffffff<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t\t//把 #ffffff 修改为 #000000 就可以了</span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>//圈圈里面的图片:<br>这个貌似需要在每个发送通知的地方修改</p>\n<p>34.如何修改Notification上的黑色背景???</p>\n<p>解决:<br>//frameworks/base/packages/SystemUI/res/colors.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notification_panel_solid_background\"</span>&gt;</span>#ffffffff<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span>\t//把这里原来的#ff000000修改为#ffffffff就行了</div></pre></td></tr></table></figure></p>\n<p>35.某些APK打开之后会报错???如时钟,settings中的某些地方???貌似有ActionBar的地方都会报错？？？</p>\n<p>解决:<br>修改Notification引起的报错<br>还不知道是什么原因引起的报错，但知道怎么修改可以让它不报错，只要将《问题30》中frameworks/base/core/res下的修改全部还原之后就可以了</p>\n<p>36.Folder上的四个小图标是怎么画出来的?????</p>\n<p>37.修改 innertheme1 主题中的默认壁纸？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/ThemePreview.java 中有</span></div><div class=\"line\">InputStream is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);</div><div class=\"line\"><span class=\"comment\">//需要将innertheme1的默认壁纸改为从innertheme1的文件夹中获取吗？？可以修改代码如下</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    is = context.getAssets().open(<span class=\"string\">\"innertheme1/wallpaper.png\"</span>);</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">    is = context.getResources().openRawResource(com.android.internal.R.drawable.default_wallpaper);\t\t\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//默认壁纸所在路径，默认壁纸貌似必须使用.jpg格式的图片<br>frameworks/base/core/res/res/drawable-nodip/default_wallpaper.jpg</p>\n<p>38.如何添加TECNO主题上的动态壁纸？？？？</p>\n<p>解决:<br>需要将R5上的packages/wallpaper下的 Leaves 和 WorldCup 主题应用拷贝过来，并编译push到手机上，在ProjectConfig.mk和common.mk文件中添加宏控</p>\n<p>39.预置 Tecno_Launcher2 的时候需不需要先编译Launcher2然后再编译Tecno_Launcher2????</p>\n<p>解决:<br>不需要，只要在TECNO_Launcher2的Android.mk文件中添加 LOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3 就OK了</p>\n<p>40.时钟Widget添加到桌面上之后显示不正常？？？？</p>\n<p>解决:<br>在DigitalAppWidgetProvider.java中的updateClock()方法中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">float</span> ratio = WidgetUtils.getScaleRatio(context, newOptions, appWidgetId);</div><div class=\"line\">WidgetUtils.setClockSize(context, widget, ratio);\t\t\t\t<span class=\"comment\">//只要把最后一个参数ratio改为1就可以显示正常了</span></div><div class=\"line\">density:<span class=\"number\">1.5</span> minHeight:<span class=\"number\">24</span> lblBox:<span class=\"number\">28.35</span> widget_height:<span class=\"number\">193.5</span>\t\t<span class=\"comment\">//或者可以修改这里的minHeight</span></div><div class=\"line\">ratio:((<span class=\"number\">1.5</span> * <span class=\"number\">24</span>) - <span class=\"number\">28.35</span>) / (<span class=\"number\">193.5</span> - <span class=\"number\">28.35</span>) = <span class=\"number\">0.046321526</span></div></pre></td></tr></table></figure></p>\n<p>41.研究一下动态壁纸是如何添加的？？？</p>\n<p>解决:<br>请参考《08月29日学习笔记》</p>\n<p>42.将StatusBar切换到Switch页面的时候会出现”只能拨打紧急呼救电话”字符串被遮挡的现象？？？</p>\n<p>解决:<br>只要在PhoneStatusBar.java中修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mSettingsButtonListener \t监听器中添加代码隐藏该字符串即可 mCarrierLabelGemini.setVisibility(View.GONE);</div><div class=\"line\">mNotificationButtonListener 监听器中添加代码显示该文本框即可 mCarrierLabelGemini.setVisibility(View.VISIBLE);</div></pre></td></tr></table></figure></p>\n<p>43.Notification通知栏上的左边的小圆圈图标显示不正常，下面有一小段显示不全？？？</p>\n<p>解决:<br>//在frameworks/base/packages/SystemUI/res/values/dimens.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dimen</span> <span class=\"attr\">name</span>=<span class=\"string\">\"notification_divider_height\"</span>&gt;</span>3dp<span class=\"tag\">&lt;/<span class=\"name\">dimen</span>&gt;</span>\t//只要将这里的3dp修改为0dp就行了</div></pre></td></tr></table></figure></p>\n<p>44.Wallpaper如何选中当前壁纸？？？</p>\n<p>解决:<br>//MyLocalGridViewAdapter.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">PreferencesService service = <span class=\"keyword\">new</span> PreferencesService(mContext);</div><div class=\"line\"><span class=\"keyword\">if</span>(service.getPreferencesPosition() == position)&#123;\t\t\t<span class=\"comment\">//这里的</span></div><div class=\"line\">    holder.current_setted.setVisibility(View.VISIBLE);</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    holder.current_setted.setVisibility(View.INVISIBLE);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//PreferencesService.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPreferencesPosition</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> WallpaperPosition;</div><div class=\"line\">    SharedPreferences preferences = context.getSharedPreferences(<span class=\"string\">\"TecnoWallpaper\"</span>, Context.MODE_PRIVATE);</div><div class=\"line\">    WallpaperPosition = preferences.getInt(<span class=\"string\">\"WallpaperPosition\"</span>, Constants.Extra.defaultsLocalWallpaper);\t<span class=\"comment\">//public static final int defaultsLocalWallpaper = 1;</span></div><div class=\"line\">    <span class=\"keyword\">return</span> WallpaperPosition;\t\t<span class=\"comment\">//这里的位置需要和当前壁纸相对应,只需要修改这个地方就可以了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>45.状态栏上的Torch打不开？？？</p>\n<p>解决:<br>在 PhoneStatusBar.java 上有 context.sendBroadcast(new Intent(“TorchDirectOpen”));        //这个地方发送了一个广播打开Torch<br>将R5上的FlashLight直接移植过来就可以了</p>\n<p>46.状态栏上的机主信息显示不全，有图片的时候不显示机主名称？？？</p>\n<p>解决:<br>因为R.id.user_textview文本框显示太小了<br>只需要在 quick_settings_tile_user.xml 中将 R.id.user_imageview 的属性修改为如下即可<br>android:layout_height=”0dp”<br>android:layout_weight=”1”</p>\n<ol>\n<li>adb shell如何按照进程名称杀死进程com.android.systemui？？？</li>\n</ol>\n<p>48.锁屏界面上的闹钟显示不全？？？</p>\n<p>解决:<br>keyguard_status_view.xml 中有 R.id.alarm_status 这个控件显示闹钟信息</p>\n<p>49.主题列表界面来蓝牙配对请求等通知的时候背景显示主界面？？？</p>\n<p>解决:<br>去掉ThemeChooser的<br>android:launchMode=”singleTask”</p>\n<p>50.添加了 img_back 和 img_frame 之后很多应用都会报错？？？</p>\n<p>51.点击主界面菜单上的《搜索》菜单项报错？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这里我添加了捕获异常的处理</span></div><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    startActivity();</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span>(ActivityNotFoundException e) &#123;</div><div class=\"line\">    Toast.makeText(mContext,<span class=\"string\">\"There is no app found to support this action!\"</span>).show();</div><div class=\"line\">&#125;</div><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"keyword\">case</span> MENU_SEARCH:</div><div class=\"line\">    ComponentName componentNameSearch = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.google.android.googlequicksearchbox\"</span>, <span class=\"string\">\"com.google.android.googlequicksearchbox.SearchActivity\"</span>);\t\t<span class=\"comment\">//添加google包之后就不会报错了</span></div><div class=\"line\">    Intent mintentSearch = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    mintentSearch.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    mintentSearch.setComponent(componentNameSearch);</div><div class=\"line\">    startActivity(mintentSearch);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>52.点击主界面菜单上的《分享》菜单项报错？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"keyword\">case</span> MENU_SHARE:</div><div class=\"line\">    ComponentName componetName1 = <span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.zzd.share\"</span>, <span class=\"string\">\"com.zzd.share.ShareTestActivity\"</span>);\t\t<span class=\"comment\">//这个应用是哪一个？？ShareTest</span></div><div class=\"line\">    Intent mintent1 = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    mintent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    mintent1.setComponent(componetName1);</div><div class=\"line\">    startActivity(mintent1);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div></pre></td></tr></table></figure></p>\n<p>在 packages/apps 下添加上 ShareTest 应用就可以了</p>\n<p>53.卸载应用的时候会显示两个背景？？？桌面和主菜单界面？？？？</p>\n<p>分析:<br>《卸载》按钮:<br>//DeleteDropTarget.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">setText(isUninstall ? R.string.delete_target_uninstall_label : R.string.delete_target_label);</div><div class=\"line\"><span class=\"comment\">//DeleteDropTarget.java文件中有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">completeDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">if</span> (isAllAppsApplication(d.dragSource, item)) &#123;</div><div class=\"line\">        mLauncher.startApplicationUninstallActivity((ApplicationInfo) item);\t\t<span class=\"comment\">//卸载应用的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>《应用详情》按钮:<br>//InfoDropTarget.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">acceptDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">if</span> (componentName != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        mLauncher.startApplicationDetailsActivity(componentName);\t\t\t\t\t<span class=\"comment\">//查看应用详情的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>《workspace/hotseat没有空间》<br>//Workspace.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">acceptDrop</span><span class=\"params\">(DragObject d)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mLauncher.showOutOfSpaceMessage(isHotseat);\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//弹出Toast显示没空间的方法</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>解决:<br>只要在上面3个地方都添加上 mLauncher.hideWorkspace(); 方法将workspace/hotseat/pagecontrol 都隐藏了就可以了<br>现在替换为最新版的TECNO_Launcher2就OK了</p>\n<p>54.状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824</p>\n<p>解决:<br>直接在Launcher.java的onStop()方法中添加 mStatusBarManager.setStatusBarBg(0xff000000);        //直接添加，不要添加任何判断<br>//改为在startActivity()方法中判断，再设置背景</p>\n<p>55.《梦宝谷》应用在什么地方？？？</p>\n<p>解决:<br>应用在 mediatek/platform/mt6572/binary/3rd-party/free/Mobage/Mobage.apk<br>在 ProjectConfig.mk文件中 有 MTK_DENA_MOBAGE_APP 宏用来控制是否编译这个应用</p>\n<p>56.点击进入应用列表界面的时候加载较慢？？？？</p>\n<p>解决:<br>经过内存优化之后稍微有点改善</p>\n<p>57.切换语言或主题之后会很卡？？？</p>\n<p>解决:<br>经过内存优化之后稍微有点改善</p>\n<p>58.USB connected通知前面的标签图标显示白色？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setClass(mContext, com.android.systemui.usb.UsbStorageActivity.class);</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">PendingIntent pi = PendingIntent.getActivity(mContext, <span class=\"number\">0</span>, intent, <span class=\"number\">0</span>);</div><div class=\"line\"><span class=\"comment\">//发送通知</span></div><div class=\"line\">setUsbStorageNotification(com.android.internal.R.string.usb_storage_notification_title com.android.internal.R.string.usb_storage_notification_message, com.android.internal.R.drawable.stat_sys_data_usb,<span class=\"keyword\">false</span>, <span class=\"keyword\">true</span>, pi);</div><div class=\"line\">在 Notification.java 中的 applyStandardTemplate() 方法中添加 contentView.setInt(R.id.icon, <span class=\"string\">\"setBackgroundResource\"</span>, R.drawable.notify_panel_notification_icon_bg2);</div></pre></td></tr></table></figure></p>\n<p>解决:<br>//这个只需要将frameworks/base/core/res/res/layout/notification<em>template</em>*.xml的icon的android:background都改为蓝色的圆圈就行了</p>\n<p>59.研究一下FlashLight的直接打开闪光灯的Receiver的代码？？？</p>\n<p>60.Bug16662 <a href=\"主菜单\">BUG</a>操作过程中主菜单排序错误????</p>\n<p>61.App列表的行数和列数在哪里确定？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在workspace.java文件中有</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DEFAULT_CELL_COUNT_Y = <span class=\"number\">4</span>;\t\t\t\t\t\t<span class=\"comment\">//默认列数</span></div><div class=\"line\"><span class=\"keyword\">int</span> cellCountY = DEFAULT_CELL_COUNT_Y;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//这里默认就为4，这里的4是 workspace 上的4，而不是 AppsCustomizePagedView 上的 4</span></div><div class=\"line\">cellCountY = a.getInt(R.styleable.Workspace_cellCountY, cellCountY);\t<span class=\"comment\">//在config.xml文件中有    &lt;integer name=\"cell_count_y\"&gt;4&lt;/integer&gt;</span></div><div class=\"line\"><span class=\"comment\">//APP列表:\t\tPagedViewCellLayout.java</span></div><div class=\"line\">?????????????????????</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//Widget列表:\tPagedViewGridLayout.java</span></div><div class=\"line\">AppsCustomizePagedView.java 文件中有</div><div class=\"line\"><span class=\"comment\">//syncWidgetPageItems()方法中有</span></div><div class=\"line\"><span class=\"keyword\">if</span>(mLauncher.isAddMode)&#123;</div><div class=\"line\">\tmWidgetCountY = <span class=\"number\">2</span>;\t<span class=\"comment\">//添加模式</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\tmWidgetCountY = <span class=\"number\">3</span>;\t<span class=\"comment\">//正常模式</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//syncPages()方法中有</span></div><div class=\"line\">PagedViewGridLayout layout = <span class=\"keyword\">new</span> PagedViewGridLayout(context, mWidgetCountX, mWidgetCountY);</div></pre></td></tr></table></figure></p>\n<p>62.截屏的时候显示通知栏还是正方形的？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">在 GlobalScreenShot.java文件中有</div><div class=\"line\">mNotificationBuilder</div><div class=\"line\">.setContentTitle(r.getString(R.string.screenshot_saved_title))</div><div class=\"line\">.setContentText(r.getString(R.string.screenshot_saved_text))</div><div class=\"line\">.setContentIntent(PendingIntent.getActivity(params.context, <span class=\"number\">0</span>, launchIntent, <span class=\"number\">0</span>))</div><div class=\"line\">.setWhen(System.currentTimeMillis())</div><div class=\"line\">.setAutoCancel(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>解决:<br>还是需要在 frameworks/base/core/res/res/layout/notification_template_big_picture.xml 中将 R.id.icon 的 background 修改为 notify_panel_notification_icon_bg</p>\n<p>63.Bug16901 创建直接拨号或直接发短信快捷方式的时候，快捷方式图标显示不正常？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:packages/apps/ContactsCommon/src/com/android/contacts/common/list/ShortcutIntentBuilder.java</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">generatePhoneNumberIcon</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    dst.set(iconWidth - ((<span class=\"keyword\">int</span>) (<span class=\"number\">80</span> * density)) - <span class=\"number\">30</span>, <span class=\"number\">29</span>, iconWidth - <span class=\"number\">30</span>, ((<span class=\"keyword\">int</span>) (<span class=\"number\">80</span> * density)) + <span class=\"number\">30</span>);\t\t<span class=\"comment\">//微调这里的参数就行了</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>64.在设置主题的时候左右滑动数组越界报错的问题？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在ThemePreview.java的getView()方法中判断themePreviewList的元素是否为0，若为0则重新加载一遍 loadThemes()</span></div><div class=\"line\"><span class=\"keyword\">if</span>(themePreviewList.size() == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">    loadThemes(mCurrentThemeName);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>65.在 Launcher.java的 onPause()中状态栏设置背景颜色的时候有问题？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//onPause()方法</span></div><div class=\"line\">ActivityManager am = (ActivityManager)<span class=\"keyword\">this</span>.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">ComponentName cn = am.getRunningTasks(<span class=\"number\">1</span>).get(<span class=\"number\">0</span>).topActivity;</div><div class=\"line\"><span class=\"comment\">//将上面的方法移植到boolean startActivity()方法中就可以解决大部分，如mms,phone等</span></div></pre></td></tr></table></figure></p>\n<p>66.Settings热底座上的add按钮？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hotseat.java</div><div class=\"line\">addButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">Hotseat.java</div><div class=\"line\">allAppButton.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">\t\tmLauncher.onClickAllAppsButton(v);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Launcher.java</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickAllAppsButton</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(isArrange)&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tmAppsCustomizeTabHost.selectAppsTab();</div><div class=\"line\">\tshowAllApps(<span class=\"keyword\">true</span>);</div><div class=\"line\">\tmAppsCustomizeTabHost.getContentTypeForTabTag(AppsCustomizeTabHost.APPS_TAB_TAG);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>67.Launcher.addMode模式下添加widget列表显示3行？？？</p>\n<p>分析:<br>//复现方法<br>1.进入到Direct message widget选择联系人，连续按两次返回键，widget列表没有消失<br>2.点击AppsCustomizeTabHost上的apps选项卡，进入到app列表<br>3.按返回键退出add mode,再进入到add mode就会直接显示3行widget列表</p>\n<p>68.将主题设置为《world cup》之后启动《RF 2013》world cup会意外停止？？？《WorldCup》主题和《Leaves》主题的效果都有待优化？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">E/AndroidRuntime(12461): FATAL EXCEPTION: Thread-470</div><div class=\"line\">E/AndroidRuntime(12461): Process: com.android.worldcup, PID: 12461</div><div class=\"line\">E/AndroidRuntime(12461): java.lang.NullPointerException</div><div class=\"line\">E/AndroidRuntime(12461): \tat android.graphics.Canvas.throwIfCannotDraw(Canvas.java:1083)</div><div class=\"line\">E/AndroidRuntime(12461): \tat android.graphics.Canvas.drawBitmap(Canvas.java:1139)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.drawPaillette(WallpaperService.java:283)\t\t\t\t\t\t//这里会有问题？？？</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.draw(WallpaperService.java:318)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.doDraw(WallpaperService.java:405)</div><div class=\"line\">E/AndroidRuntime(12461): \tat com.android.worldcup.WallpaperService$LiveWallpaperPainting.run(WallpaperService.java:349)</div><div class=\"line\"></div><div class=\"line\">原因:在 WallpaperService.java 的 drawPaillette() 方法中有一个 BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\t\t//这个地方解析的时候会出错，就会导致解析出来的图片为空，导致NullPointerException</div><div class=\"line\">只要将 WallpaperService.java 的 drawPaillette() 方法中添加一个图片非空的判断就行了，具体修改代码如下</div><div class=\"line\">解决:</div><div class=\"line\">if(paillette_array[0] != null)&#123;\t\t\t\t\t\t\t//添加非空判断</div><div class=\"line\">    canvas.drawBitmap(paillette_array[0],0,0,null);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>69.状态栏上的亮度调节栏应该在设置为非自动模式之后设置为不可用？？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java中的监听器和初始化seekBar的地方添加</span></div><div class=\"line\">mSeekbar.setEnabled(nAutomatic == <span class=\"number\">1</span> ? <span class=\"keyword\">false</span> : <span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>70.从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？</p>\n<p>解决:<br>同《问题75》</p>\n<p>71.在删除应用的时候出现问题？？？内存溢出？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">分析:</div><div class=\"line\">01-01 08:02:40.468685   964  1021 W System.err: Caused by: java.lang.OutOfMemoryError</div><div class=\"line\">01-01 08:02:40.469218   964  1021 W System.err: \tat android.graphics.BitmapFactory.nativeDecodeAsset(Native Method)</div><div class=\"line\">01-01 08:02:40.469362   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:609)</div><div class=\"line\">01-01 08:02:40.469441   964  1021 W System.err: \tat android.graphics.BitmapFactory.decodeResourceStream(BitmapFactory.java:444)</div><div class=\"line\">01-01 08:02:40.469510   964  1021 W System.err: \tat android.graphics.drawable.Drawable.createFromResourceStream(Drawable.java:840)</div><div class=\"line\">01-01 08:02:40.469579   964  1021 W System.err: \tat android.content.res.Resources.loadDrawable(Resources.java:2166)</div><div class=\"line\">01-01 08:02:40.469664   964  1021 W System.err: \tat android.content.res.Resources.getDrawable(Resources.java:710)</div><div class=\"line\">01-01 08:02:40.469748   964  1021 W System.err: \tat android.app.ApplicationPackageManager.getDrawable(ApplicationPackageManager.java:946)\t\t\t\t//这里会有问题？？？</div><div class=\"line\">01-01 08:02:40.469826   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.getWidgetPreview(AppsCustomizePagedView.java:2033)\t\t\t</div><div class=\"line\">01-01 08:02:40.469902   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.loadWidgetPreviewsInBackground(AppsCustomizePagedView.java:2340)</div><div class=\"line\">01-01 08:02:40.469991   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView.access$200(AppsCustomizePagedView.java:212)</div><div class=\"line\">01-01 08:02:40.470071   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizePagedView$8.run(AppsCustomizePagedView.java:1906)</div><div class=\"line\">01-01 08:02:40.470252   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:180)</div><div class=\"line\">01-01 08:02:40.470338   964  1021 W System.err: \tat com.android.launcher2.AppsCustomizeAsyncTask.doInBackground(AppsCustomizePagedView.java:168)</div><div class=\"line\">01-01 08:02:40.470427   964  1021 W System.err: \tat android.os.AsyncTask$2.call(AsyncTask.java:288)</div><div class=\"line\">01-01 08:02:40.470497   964  1021 W System.err: \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)</div><div class=\"line\">01-01 08:02:40.470558   964  1021 W System.err: \t... 3 more</div><div class=\"line\"></div><div class=\"line\">Resources r = getResourcesForApplication(appInfo);</div><div class=\"line\">dr = r.getDrawable(resid);\t\t\t\t\t\t\t//log显示是在这里出现的问题？？</div></pre></td></tr></table></figure>\n<p>72.优化《WorldCup》主题和《Leaves》主题的显示效果和内存？？？？</p>\n<p>解决:<br>在使用BitmapFactory.decodeStream()方法加载图片之后效果好了一点</p>\n<p>73.在开机的时候如何禁止一些服务的启动？？？</p>\n<p>74.一些三方apk的名称和控制方法？？？</p>\n<p>解决:<br>点心省电        Tecno_DUBattery                        TECNO_DUBATTERY_APP<br>电影工作室    packages/apps/VideoEditor            MTK_ENABLE_VIDEO_EDITOR<br>手机管家        Tencent_Mobile_Manager_Slim            MTK_TENCENT_MOBILE_MANAGER_SLIM_SUPPORT<br>待办事项        mediatek/packages/apps/Todos<br>梦宝谷        Mobage                                MTK_DENA_MOBAGE_APP<br>墨迹天气国际    Tecno_MoWeather                        Tecno_MoWeather_APP<br>安卓优化大师    Tecno_DUSpeed                        Tecno_DUSpeed_APP</p>\n<p>75.从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java 文件中有</span></div><div class=\"line\"><span class=\"keyword\">protected</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NotificationClicker</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;\t\t\t<span class=\"comment\">//通知栏某一项的点击事件</span></div><div class=\"line\">        ...</div><div class=\"line\">        StatusBarManager mStatusBarManager = (StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE);</div><div class=\"line\">        mStatusBarManager.setStatusBarBg(<span class=\"number\">0xff000000</span>);\t<span class=\"comment\">//将状态栏的颜色修改为黑色</span></div><div class=\"line\">        ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>76.在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在packages/apps/TECNO_Launcher2/src/com/android/launcher2/Launcher.java上有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">startApplicationDetailsActivity</span><span class=\"params\">(ComponentName componentName)</span> </span>&#123;</div><div class=\"line\">    String packageName = componentName.getPackageName();</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, Uri.fromParts(<span class=\"string\">\"package\"</span>, packageName, <span class=\"keyword\">null</span>));</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);</div><div class=\"line\">    startActivitySafely(<span class=\"keyword\">null</span>, intent, <span class=\"string\">\"startApplicationDetailsActivity\"</span>);</div><div class=\"line\">    mStatusBarManager.setStatusBarBg(<span class=\"number\">0xff000000</span>);\t\t<span class=\"comment\">//在这里将状态栏设置为黑色</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>77.从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java文件中有</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">startSettingsActivity</span><span class=\"params\">(Intent intent, <span class=\"keyword\">boolean</span> onlyProvisioned)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (onlyProvisioned &amp;&amp; !getService().isDeviceProvisioned()) <span class=\"keyword\">return</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// Dismiss the lock screen when Settings starts.</span></div><div class=\"line\">        ActivityManagerNative.getDefault().dismissKeyguardOnNextActivity();</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (RemoteException e) &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);</div><div class=\"line\">    mContext.startActivityAsUser(intent, <span class=\"keyword\">new</span> UserHandle(UserHandle.USER_CURRENT));</div><div class=\"line\">    <span class=\"comment\">//Bug17319 modified for statusbarbg 2014/09/17:begin</span></div><div class=\"line\">    ((android.app.StatusBarManager)mContext.getSystemService(Context.STATUS_BAR_SERVICE)).setStatusBarBg(<span class=\"number\">0xff000000</span>);\t<span class=\"comment\">//在这里将状态栏的背景设置为黑色</span></div><div class=\"line\">    <span class=\"comment\">//Bug17319 modified for statusbarbg 2014/09/17:end</span></div><div class=\"line\">    collapsePanels();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>78.先进入Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？</p>\n<p>解决:<br>在 frameworks/base/policy/src/com/android/internal/policy/impl/keyguard/KeyguardServiceDelegate.java 文件中添加代码将状态栏的颜色修改为透明<br>但解锁了之后在回到应用界面，状态栏又会跳闪，参考《问题81》在解锁之后将状态栏修改为黑色</p>\n<p>79.在hotseat上切换fm/music功能的时候会出现divide by zero异常？？？</p>\n<p>分析:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//从Log中看应该是CellLayout.java文件中的997行有</span></div><div class=\"line\">result[<span class=\"number\">0</span>] = (x - hStartPadding) / (mCellWidth + mWidthGap);\t\t<span class=\"comment\">//这里有个除0的异常，需要捕获异常</span></div><div class=\"line\">mCellWidth = a.getDimensionPixelSize(R.styleable.CellLayout_cellWidth, <span class=\"number\">10</span>);</div></pre></td></tr></table></figure></p>\n<p>80.从hotseat上启动FM和Music的时候状态栏也会闪？？？</p>\n<p>解决:<br>//Music的跳转在 MusicControl.java文件中<br>//FM的跳转在什么地方？？在 LauncherAppWidgetHostView.java 文件中</p>\n<p>81.解锁成功在什么地方？？？</p>\n<p>解决:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在 frameworks/base/packages/Keyguard/src/com/android/keyguard/KeyguardHostView.java文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showNextSecurityScreenOrFinish</span><span class=\"params\">(<span class=\"keyword\">boolean</span> authenticated, <span class=\"keyword\">boolean</span> showBouncer)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//可以在这里将状态栏的背景颜色设置为黑色</span></div><div class=\"line\">    <span class=\"comment\">//这里可以添加代码判断一下是不是Launcher界面，如果不是Launcher界面就将状态栏设置为黑色</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>82.在 AppsCustomizePagedView.java 文件中的2055行会报内存溢出的异常？？？</p>\n<p>分析:<br>同《问题71》</p>\n<p>83.”Setup Wizard has stopped” ?????</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">No Activity found to handle Intent&#123;act=android.intent.action.MAIN cat=[android.intent.category.HOME]&#125;</div><div class=\"line\">解决:</div><div class=\"line\">push完Launcher之后重启一下就可以了</div></pre></td></tr></table></figure>\n<p>84.workspace 上 folder文件夹好像太小了，包不住两个应用？？？</p>\n<p>解决:<br>用R5的新的Launcher就可以了</p>\n<p>85.在添加widget的时候，状态栏背景会变黑？？？</p>\n<p>解决:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在 Launcher.java 文件的 setWorkspaceBackground() 方法中有</div><div class=\"line\">mStatusBarManager.setStatusBarBg(0x75000000);\t//把这里改为0xff000000就行了</div></pre></td></tr></table></figure></p>\n<p>86.状态栏跳变总结？？？</p>\n<p>解决:<br>《问题02》    添加setStatusBarBg()接口<br>《问题54》    状态栏透明效果没有修改好？？？Message界面会跳闪？？？Bug16824<br>《问题65》    在Launcher.java的onPause()中状态栏设置背景颜色的时候有问题？？？<br>《问题70》    从 Notification 界面跳转到 《FM Radio》 界面，状态栏还是会闪？？？<br>《问题75》    从通知状态栏上进入到某个应用的时候状态栏会跳闪？？？<br>《问题76》    在主页面删除应用或查看应用详细信息的时候状态栏会跳闪？？？<br>《问题77》    从下拉状态栏跳转到《Data usage》状态栏也会跳闪？？？<br>《问题78》    先进如Message等应用,再按开关机键进入锁屏界面，锁屏界面状态栏会显示黑色？？？<br>《问题80》    从hotseat上启动FM和Music的时候状态栏也会闪？？？<br>《问题81》    解锁成功之后将状态栏设置为黑色？？？<br>《问题85》    在添加widget的时候，状态栏背景会变黑？？？<br>《问题91》    点击Home键的时候状态栏跳变？？？<br>最后只要在 Launcher.java 的 onPause() 方法中添加 setStatusBarBg(0xff000000); 就行了</p>\n<p>最终解决方法:<br>只要将 frameworks/base/services/java/com/android/server/StatusBarManagerService.java 中 setStatusBarBg() 的方法实现给去掉就都ok了<br>public void setStatusBarBg(int statusBarBg) {<br>}</p>\n<p>87.《Sound Recorder》在通知栏上的背景小图标还是白色的？？？</p>\n<p>解决:<br>参考《问题98》</p>\n<p>88.在 frameworks/base/core/java/android/app/ApplicationPackageManager.java 的946行会报OOM错？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">分析:</div><div class=\"line\">//ApplicationPackageManager.java</div><div class=\"line\">Resources r = getResourcesForApplication(appInfo);</div><div class=\"line\">dr = r.getDrawable(resid);\t\t\t\t\t\t\t//这里报错？？</div><div class=\"line\">同《问题71》</div></pre></td></tr></table></figure>\n<p>89.在锁屏界面添加《Message》短信widget之后，再从锁屏界面跳转到《Message》就会出现状态栏跳闪？？？</p>\n<p>解决:<br>参考《问题86最终解决方法》</p>\n<p>90.在添加 Driver 的 widget 的时候报错？？？</p>\n<p>分析:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): Caused by: java.lang.NullPointerException</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.estimateItemPosition(Workspace.java:392)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.getFinalPositionForDropAnimation(Workspace.java:3536)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Workspace.animateWidgetDrop(Workspace.java:3573)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.completeTwoStageWidgetDrop(Launcher.java:1686)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat com.android.launcher2.Launcher.onActivityResult(Launcher.java:1619)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.Activity.dispatchActivityResult(Activity.java:5456)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \tat android.app.ActivityThread.deliverResults(ActivityThread.java:3549)</div><div class=\"line\">01-01 23:44:42.768: E/AndroidRuntime(25435): \t... 11 more</div></pre></td></tr></table></figure></p>\n<p>91.点击Home键的时候状态栏跳变？？？</p>\n<p>分析:<br>貌似点击Home键的时候就会调用Launcher上的onPause()方法<br>解决:<br>参考《问题86最终解决方法》</p>\n<p>92.添加widget跳转的方法在什么地方？？？</p>\n<p>解决:<br>添加widget跳转    在 Launcher.java 上有 addAppWidgetImpl()方法<br>添加shortcut跳转    在 Launcher.java 上有 processShortcut()方法</p>\n<p>93.AppsCustomizePagedView 上的《Edit》菜单有时会不显示？？？</p>\n<p>解决:<br>设计如此，只有在《Own order》排序模式下才会显示</p>\n<p>94.R5的不同点？？？</p>\n<p>TabHost上的google play图标显示不太清楚            已修改（替换为R5的Launcher就行了）<br>主题不同，主题列表不同，主题数量不同（多了两个主题）    已修改（替换为R5的Launcher就行了）<br>AppsCustomizePagedView的加载动画不太一样        已修改（替换为R5的Launcher就行了）<br>在AddMode的时候的背景不透明                        已修改（替换为R5的Launcher就行了）<br>锁屏界面的壁纸不一致                            已修改（替换为R5的Launcher就行了）<br>在状态栏上的FlashLight的图标不会改变？？                这个貌似需要修改很多代码</p>\n<p>95.为什么H5的Settings/Apps/Running 中 RAM 的使用率这么高？？？</p>\n<p>解决:<br>因为R5是1G内存，H5是512M内存，在代码中写死了，<br>RunningProcessView.java</p>\n<p>96.Bug20323 锁屏界面解锁的时候背景是黑色的？？？</p>\n<p>解决:<br>M:frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java<br>将 PhoneWindowManager.java 中的 doesForceHide() 函数的返回值改为 return false; 就ok了，谢谢鑫哥</p>\n<p>97.主题预览界面的图片不是全屏的，左右有黑边？？？</p>\n<p>解决:只要替换innertheme下的预览图片就可以了</p>\n<p>98.《Sound Record》在状态栏上的通知前面的图标不一致????</p>\n<p>分析:<br>这个是在<sound recorder=\"\">应用内部自己添加的通知布局，需要在《SoundRecorder》应用内部修改<br>解决:<br>只要在 packages/apps/SoundRecorder/res/layout/notification.xml 的 app_icon 的 background 改为 notify_panel_notification_icon_bg.png(这张图片在frameworks/base/core/res/res/drawable-hdpi下)<br>再替换两张图片<br>packages/apps/SoundRecorder/res/drawable-hdpi/notification_pause_am.png<br>packages/apps/SoundRecorder/res/drawable-hdpi/notification_stop_am.png</sound></p>\n<p>99.在壁纸-&gt;动态壁纸-&gt;WorldCup预览界面中横屏的时候会报错？？？</p>\n<p>解决:<br>好像有人把动态壁纸的预览页面强制设置为竖屏的了</p>\n<p>100.从《Recent App》上启动 App Manager 会报错？？？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log:</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): android.content.res.Resources$NotFoundException: File res/layout/detail_dialog.xml from drawable resource ID #0x7f030000</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2152)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.getDrawable(Resources.java:710)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.app.ApplicationPackageManager.getFancyDrawable(ApplicationPackageManager.java:890)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.pm.PackageItemInfo.loadIcon(PackageItemInfo.java:144)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$AppEntry.ensureIconLocked(ApplicationsState.java:145)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat com.android.settings.applications.ApplicationsState$BackgroundHandler.handleMessage(ApplicationsState.java:1017)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.os.HandlerThread.run(HandlerThread.java:61)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): Caused by: org.xmlpull.v1.XmlPullParserException: Binary XML file line #40: invalid drawable tag ScrollView</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXmlInner(Drawable.java:933)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.graphics.drawable.Drawable.createFromXml(Drawable.java:877)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \tat android.content.res.Resources.loadDrawable(Resources.java:2148)</div><div class=\"line\">01-01 08:00:18.991: E/AndroidRuntime(6474): \t... 8 more</div></pre></td></tr></table></figure>\n<p>101.锁屏界面解锁的时候有问题？？？黑色的圈圈和花环对不起来</p>\n<p>解决:莫名奇妙就好了</p>\n<p>102.为什么在Hotseat上显示的phone会变成这个com.google.android.dialer/com.android.dialer.DialtactsActivity？？？</p>\n<p>分析:<br>com.google.android.dialer/com.android.dialer.DialtactsActivity        //为什么在Hotseat上显示的phone会变成这个？？？<br>com.android.dialer/.DialtactsActivity<br>解决:<br>去掉Google包中的GoogleOneTimeInitializer就可以了</p>\n<p>103.添加App列表和widget列表翻页功能？？？</p>\n<p>解决:<br>只要在 packages/apps/TECNO_Launcher2/src/com/android/launcher2/PagedView.java 的 onTouchEvent() 方法中的case 1,case 2中做一下处理就可以了</p>\n<p>104.Bug19127修改锁屏界面上时钟的显示大小??</p>\n<p>解决:<br>修改 frameworks/base/packages/Keyguard/res/layout-800x480/keyguard_status_view.xml 中的 clock_text 这个TextView的 textSize 从59dp 修改为55dp</p>\n<p>105.在日历的快捷方式上显示日期？？？</p>\n<p>分析:<br>如何实时更新<br>忽略:<br>客户已同意不做改功能</p>\n<p>106.H5在SD卡上写东西的时候不成功？？Flash Share在接受文件的时候创建文件文件夹失败，接收文件失败？？？</p>\n<p>107.近期任务中的图标好像不是主题里面的图标？？？？</p>\n<p>解决:<br>修改 RecentTasksLoader.java 中的 getDrawable() 改为 getFancyDrawable() 就可以了</p>\n<p>108.Bug19250 在不插卡的时候在状态栏上显示两个信号图标？？？</p>\n<p>解决:<br>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/SignalClusterView.java            //这个文件中添加用于控制显示两个信号图标<br>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkController.java    //这个文件中添加用于控制在不插卡的时候显示信号图标</p>\n<p>109.Bug19333 修改下载的时候在状态栏显示的图标？？？</p>\n<p>解决:<br>“Download complete” 字符串在 packages/providers/DownloadProvider/res/values/strings.xml    notification_download_complete<br>发送通知的地方:packages/providers/DownloadProvider/src/com/android/providers/downloads/DownloadNotifier.java    中有 builder.setSmallIcon(android.R.drawable.stat_sys_download);    //这个图片就是通知栏上看不清除的图片<br>//只要替换下面的这几张图片就可以了<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim0.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim1.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim2.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim3.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim4.png<br>frameworks/base/core/res/res/drawable-hdpi/stat_sys_download_anim5.png</p>\n<p>110.Bug16669 去掉Settings/Action/Double click to wake up 选项？？？</p>\n<p>解决:<br>packages/apps/ActionSettings/src/com/sagereal/actions/CustomPreferenceActivity.java    中将所有的 R.id.double_click_wake 都换成 0<br>packages/apps/ActionSettings/res/xml/preference_header.xml                            中将    double_click_wake 注释掉</p>\n<p>111.Bug19187 在FileManager中打开文本文件，横屏的时候字体变大？？？</p>\n<p>解决:<br>packages/apps/HTMLViewer/AndroidManifest.xml    //将这个文件中的 HTMLViewerActivity 中添加 android:screenOrientation=”portrait” 强制将这个Activity设置为竖屏，不让它可以横屏显示</p>\n<p>112.TecnoBug262 Settings-&gt;Apps-&gt;App info 中下面的权限前面的图标显示不清楚？？？</p>\n<p>解决:<br>frameworks/base/core/java/android/content/pm/PackageItemInfo.java 文件中有 loadNormalIcon() 方法<br>frameworks/base/core/java/android/widget/AppSecurityPermission.java 文件中的 loadGroupIcon() 方法中的 loadIcon() 方法替换成 loadNormalIcon() 方法<br>还需要将frameworks/base/core/res/res/drawable-hdpi/下面的以 perm<em>group</em> 开头的图片替换为R5下面同名的29张图片</p>\n<p>113.TecnoBug260 计算器横屏的时候删除按钮不显示C？？？</p>\n<p>解决:<br>packages/apps/Calculator/res/layout-port/main.xml    在这个文件中 R.id.del 按钮中添加 android:text=”@string/mtk_clear” 就行了</p>\n<p>114.在RecentApp中短信的图标有时会显示不正常？？？</p>\n<p>分析:<br>从Log中可以看出近期任务的短信图标有时候会显示成    com_android_mms_title_message.png    而有时候会显示成    com_android_mms_ic_launcher_mms.png        但这里还没有找到具体原因为什么会变成    com_android_mms_title_message.png<br>解决:<br>只要在innertheme下添加        com_android_mms_title_message.png    就可以了</p>\n<p>115.Bug19523 开机出现报错？？？</p>\n<p>分析:<br>从aee_exp的dbg文件中可以看出<br>java.lang.NullPointerException<br>at com.android.keyguard.KeyguardBubblesOperate$4.handleMessage(KeyguardBubblesOperate.java:571)<br>at android.os.Handler.dispatchMessage(Handler.java:110)<br>at android.os.Looper.loop(Looper.java:193)<br>at android.app.ActivityThread.main(ActivityThread.java:5299)<br>at java.lang.reflect.Method.invokeNative(Native Method)<br>at java.lang.reflect.Method.invoke(Method.java:515)<br>at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)<br>at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)<br>at dalvik.system.NativeStart.main(Native Method)<br>解决:<br>在 KeyguardBubblesOperate.java 中添加上非空判断</p>\n<p>116.修改按键音？？</p>\n<p>解决:<br>需要将 PhoneWindow.java 和 PhoneWindowManager.java 中修改</p>\n<p>117.强度测试 《Ripple》和《Triangular space》动态壁纸会报错？？？</p>\n<p>分析:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Ripple</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): FATAL EXCEPTION: main</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): Process: com.vlife.wallpaper.resource.number5082, PID: 3834</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): java.lang.NullPointerException</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.i(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq.g(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at n.nq$2.run(Unknown Source)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.handleCallback(Handler.java:808)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Handler.dispatchMessage(Handler.java:103)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at android.app.ActivityThread.main(ActivityThread.java:5309)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:824)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:640)</div><div class=\"line\">10-23 11:05:49.786 E/AndroidRuntime( 3834): at dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">//Triangle</div></pre></td></tr></table></figure></p>\n<p>解决:<br>只要替换为上海提供的新的APK就可以了</p>\n<p>118.notification panel will show ‘Emergency calls only - rongweidi’ ???</p>\n<p>119.在锁屏界面上的FM widget上点击录音按钮界面会跳闪？？？</p>\n<p>解决:<br>只要将录音的按钮的图标替换为透明的图标就可以了，不知道为什么？？<br>这里需要注意的是widget的布局文件在 layout-hdpi-800x480 文件夹中，图片在 drawable-hdpi-800x480 文件夹中，不要找错地方</p>\n<p>120.卸载应用的对话框好像没有换肤？？？</p>\n<p>121.将 Settings 中的 Security 修改为和其他的设置项都对齐？？？</p>\n<p>解决:<br>M:packages/apps/Settings/res/layout/preference_header_button_item.xml<br>只要将 android:layout_marginEnd 去掉就可以了</p>\n"},{"title":"L6735M平台上如何配置才能使SN号码唯一","date":"2017-09-22T02:20:50.000Z","_content":"alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig\n\nalps下搜索结果：\n```\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL\n```\n\nKK2版代码将序列号唯一功能的代码放到\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n\n所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件\nalps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h\n\n也可以直接放到mt_boot.c文件。\n另外，修改\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n``` c\nmt_boot_init(){\n    ...\n    key = readl(SERIAL_KEY_HI);\n    key = (key << 32) | readl(SERIAL_KEY_LO);\n    ...\n}\n```\n修改为\n``` c\nmt_boot_init(){\n    ...\n    key = get_devinfo_with_index(13);\n    key = (key << 32) | get_devinfo_with_index(12);\n    ...\n}\n```\n","source":"_posts/L6735M平台上如何配置才能使SN号码唯一.md","raw":"---\ntitle: L6735M平台上如何配置才能使SN号码唯一\ndate: 2017-09-22 10:20:50\ntags:\n---\nalps/bootable/bootloader/lk/app/mt_boot/mt_boot.c\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig\n\nalps下搜索结果：\n```\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL\n```\n\nKK2版代码将序列号唯一功能的代码放到\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n\n所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件\nalps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h\n\n也可以直接放到mt_boot.c文件。\n另外，修改\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n``` c\nmt_boot_init(){\n    ...\n    key = readl(SERIAL_KEY_HI);\n    key = (key << 32) | readl(SERIAL_KEY_LO);\n    ...\n}\n```\n修改为\n``` c\nmt_boot_init(){\n    ...\n    key = get_devinfo_with_index(13);\n    key = (key << 32) | get_devinfo_with_index(12);\n    ...\n}\n```\n","slug":"L6735M平台上如何配置才能使SN号码唯一","published":1,"updated":"2017-09-22T02:23:25.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9o0009ardx71j7xv4c","content":"<p>alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig</p>\n<p>alps下搜索结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL</div></pre></td></tr></table></figure></p>\n<p>KK2版代码将序列号唯一功能的代码放到<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c</p>\n<p>所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件<br>alps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h</chip></p>\n<p>也可以直接放到mt_boot.c文件。<br>另外，修改<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = readl(SERIAL_KEY_HI);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | readl(SERIAL_KEY_LO);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = get_devinfo_with_index(<span class=\"number\">13</span>);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | get_devinfo_with_index(<span class=\"number\">12</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig</p>\n<p>alps下搜索结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL</div></pre></td></tr></table></figure></p>\n<p>KK2版代码将序列号唯一功能的代码放到<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c</p>\n<p>所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件<br>alps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h</chip></p>\n<p>也可以直接放到mt_boot.c文件。<br>另外，修改<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = readl(SERIAL_KEY_HI);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | readl(SERIAL_KEY_LO);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = get_devinfo_with_index(<span class=\"number\">13</span>);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | get_devinfo_with_index(<span class=\"number\">12</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"ListView界面点击按键的时候会显示快捷搜索框","date":"2017-09-21T08:55:39.000Z","_content":"``` Java\nlistView.setTextFilterEnabled(false);\n```","source":"_posts/ListView界面点击按键的时候会显示快捷搜索框.md","raw":"---\ntitle: ListView界面点击按键的时候会显示快捷搜索框\ndate: 2017-09-21 16:55:39\ntags:\n---\n``` Java\nlistView.setTextFilterEnabled(false);\n```","slug":"ListView界面点击按键的时候会显示快捷搜索框","published":1,"updated":"2017-09-21T08:56:00.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9p000aardxz2vbm8ur","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView.setTextFilterEnabled(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView.setTextFilterEnabled(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>"},{"title":"Observer观察者模式","date":"2017-09-22T05:17:51.000Z","_content":"``` Java\npublic class Invarient{                                        //相当于View\n    private Observer observer;\n    public void template_method(){                            //相当于点击了一下按钮\n        observer.hook_varient();\n    }\n    protected void attach(Observer observer){                //相当于setOnClickListener(OnClickListener onClickListener)方法\n        this.observer = observer;\n    }\n}\npublic abstract class Observer{                                //相当于OnClickListener\n    public abstract void hook_varient();                    //相当于onClick(View v)方法\n}\npublic class ConcreteObserver_Varient extends Observer{        //相当于OnClickListener的实现类\n    public void hook_varient(){\n        System.out.println(\"hook_varient...\");\n    }\n}\npublic class Main{\n    public static void main(String[] args){\n        Invarient iv = new Invarient();                        \n        iv.attach(new ConcreteObserver_Varient());            \n        iv.template_method();\n    }\n}\n```","source":"_posts/Observer观察者模式.md","raw":"---\ntitle: Observer观察者模式\ndate: 2017-09-22 13:17:51\ntags:\n---\n``` Java\npublic class Invarient{                                        //相当于View\n    private Observer observer;\n    public void template_method(){                            //相当于点击了一下按钮\n        observer.hook_varient();\n    }\n    protected void attach(Observer observer){                //相当于setOnClickListener(OnClickListener onClickListener)方法\n        this.observer = observer;\n    }\n}\npublic abstract class Observer{                                //相当于OnClickListener\n    public abstract void hook_varient();                    //相当于onClick(View v)方法\n}\npublic class ConcreteObserver_Varient extends Observer{        //相当于OnClickListener的实现类\n    public void hook_varient(){\n        System.out.println(\"hook_varient...\");\n    }\n}\npublic class Main{\n    public static void main(String[] args){\n        Invarient iv = new Invarient();                        \n        iv.attach(new ConcreteObserver_Varient());            \n        iv.template_method();\n    }\n}\n```","slug":"Observer观察者模式","published":1,"updated":"2017-09-22T05:18:12.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9q000bardx95177d7q","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invarient</span></span>&#123;                                        <span class=\"comment\">//相当于View</span></div><div class=\"line\">    <span class=\"keyword\">private</span> Observer observer;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;                            <span class=\"comment\">//相当于点击了一下按钮</span></div><div class=\"line\">        observer.hook_varient();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">attach</span><span class=\"params\">(Observer observer)</span></span>&#123;                <span class=\"comment\">//相当于setOnClickListener(OnClickListener onClickListener)方法</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.observer = observer;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span></span>&#123;                                <span class=\"comment\">//相当于OnClickListener</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>;                    <span class=\"comment\">//相当于onClick(View v)方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteObserver_Varient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;        <span class=\"comment\">//相当于OnClickListener的实现类</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"hook_varient...\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Invarient iv = <span class=\"keyword\">new</span> Invarient();                        </div><div class=\"line\">        iv.attach(<span class=\"keyword\">new</span> ConcreteObserver_Varient());            </div><div class=\"line\">        iv.template_method();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invarient</span></span>&#123;                                        <span class=\"comment\">//相当于View</span></div><div class=\"line\">    <span class=\"keyword\">private</span> Observer observer;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;                            <span class=\"comment\">//相当于点击了一下按钮</span></div><div class=\"line\">        observer.hook_varient();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">attach</span><span class=\"params\">(Observer observer)</span></span>&#123;                <span class=\"comment\">//相当于setOnClickListener(OnClickListener onClickListener)方法</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.observer = observer;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span></span>&#123;                                <span class=\"comment\">//相当于OnClickListener</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>;                    <span class=\"comment\">//相当于onClick(View v)方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteObserver_Varient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;        <span class=\"comment\">//相当于OnClickListener的实现类</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"hook_varient...\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Invarient iv = <span class=\"keyword\">new</span> Invarient();                        </div><div class=\"line\">        iv.attach(<span class=\"keyword\">new</span> ConcreteObserver_Varient());            </div><div class=\"line\">        iv.template_method();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Snackbar的学习和使用","date":"2017-09-29T06:15:17.000Z","_content":"Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。\n\n1.Snackbar基本介绍\n\n使用Snackbar要导入com.android.support:design库。\n``` gradle\ndependencies {\n    ...\n    compile 'com.android.support:appcompat-v7:26.+'\n    ...\n}\n```\n\nSnackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。\n\nSnackbar的基本使用很简单，与Toast类似。\n``` Java\nSnackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();\n```\nmake()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。\n\nsetAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。\n``` Java\nSnackbar.make(coordinatorLayout, \"这是massage\", Snackbar.LENGTH_LONG).setAction(\"这是action\", new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Toast.makeText(MainActivity.this, \"你点击了action\", Toast.LENGTH_SHORT).show();\n     }\n }).show();\n```\n\n2.SnackbarUtil工具类\n``` Java\nimport android.graphics.Color;\nimport android.support.design.widget.Snackbar;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\n/**\n * Created by zq on 17-9-29.\n */\n\npublic class SnackbarUtil {\n\n    public static final int Info = 1;\n    public static final int Confirm = 2;\n    public static final int Warning = 3;\n    public static final int Alert = 4;\n\n    public static int red = 0xfff44336;\n    public static int green = 0xff4caf50;\n    public static int blue = 0xff2195f3;\n    public static int orange = 0xffffc107;\n\n    /**\n     * 短显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 短显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    //选择预设类型\n    private static void switchType(Snackbar snackbar, int type) {\n        switch (type) {\n            case Info:\n                setSnackbarColor(snackbar, blue);\n                break;\n            case Confirm:\n                setSnackbarColor(snackbar, green);\n                break;\n            case Warning:\n                setSnackbarColor(snackbar, orange);\n                break;\n            case Alert:\n                setSnackbarColor(snackbar, Color.YELLOW, red);\n                break;\n        }\n    }\n\n    /**\n     * 设置Snackbar背景颜色\n     *\n     * @param snackbar\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n        }\n    }\n\n    /**\n     * 设置Snackbar文字和背景颜色\n     *\n     * @param snackbar\n     * @param messageColor\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int messageColor, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);\n        }\n    }\n\n    /**\n     * 向Snackbar中添加view\n     *\n     * @param snackbar\n     * @param layoutId\n     * @param index    新加布局在Snackbar中的位置\n     */\n    public static void SnackbarAddView(Snackbar snackbar, int layoutId, int index) {\n        View snackbarview = snackbar.getView();\n        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;\n\n        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, null);\n\n        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n        p.gravity = Gravity.CENTER_VERTICAL;\n\n        snackbarLayout.addView(add_view, index, p);\n    }\n\n}\n```","source":"_posts/Snackbar的学习和使用.md","raw":"---\ntitle: Snackbar的学习和使用\ndate: 2017-09-29 14:15:17\ntags:\n---\nSnackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。\n\n1.Snackbar基本介绍\n\n使用Snackbar要导入com.android.support:design库。\n``` gradle\ndependencies {\n    ...\n    compile 'com.android.support:appcompat-v7:26.+'\n    ...\n}\n```\n\nSnackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。\n\nSnackbar的基本使用很简单，与Toast类似。\n``` Java\nSnackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();\n```\nmake()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。\n\nsetAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。\n``` Java\nSnackbar.make(coordinatorLayout, \"这是massage\", Snackbar.LENGTH_LONG).setAction(\"这是action\", new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Toast.makeText(MainActivity.this, \"你点击了action\", Toast.LENGTH_SHORT).show();\n     }\n }).show();\n```\n\n2.SnackbarUtil工具类\n``` Java\nimport android.graphics.Color;\nimport android.support.design.widget.Snackbar;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\n/**\n * Created by zq on 17-9-29.\n */\n\npublic class SnackbarUtil {\n\n    public static final int Info = 1;\n    public static final int Confirm = 2;\n    public static final int Warning = 3;\n    public static final int Alert = 4;\n\n    public static int red = 0xfff44336;\n    public static int green = 0xff4caf50;\n    public static int blue = 0xff2195f3;\n    public static int orange = 0xffffc107;\n\n    /**\n     * 短显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 短显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    //选择预设类型\n    private static void switchType(Snackbar snackbar, int type) {\n        switch (type) {\n            case Info:\n                setSnackbarColor(snackbar, blue);\n                break;\n            case Confirm:\n                setSnackbarColor(snackbar, green);\n                break;\n            case Warning:\n                setSnackbarColor(snackbar, orange);\n                break;\n            case Alert:\n                setSnackbarColor(snackbar, Color.YELLOW, red);\n                break;\n        }\n    }\n\n    /**\n     * 设置Snackbar背景颜色\n     *\n     * @param snackbar\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n        }\n    }\n\n    /**\n     * 设置Snackbar文字和背景颜色\n     *\n     * @param snackbar\n     * @param messageColor\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int messageColor, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);\n        }\n    }\n\n    /**\n     * 向Snackbar中添加view\n     *\n     * @param snackbar\n     * @param layoutId\n     * @param index    新加布局在Snackbar中的位置\n     */\n    public static void SnackbarAddView(Snackbar snackbar, int layoutId, int index) {\n        View snackbarview = snackbar.getView();\n        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;\n\n        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, null);\n\n        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n        p.gravity = Gravity.CENTER_VERTICAL;\n\n        snackbarLayout.addView(add_view, index, p);\n    }\n\n}\n```","slug":"Snackbar的学习和使用","published":1,"updated":"2017-09-29T06:20:26.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9r000cardxqogxncic","content":"<p>Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。</p>\n<p>1.Snackbar基本介绍</p>\n<p>使用Snackbar要导入com.android.support:design库。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">compile</span> <span class=\"string\">'com.android.support:appcompat-v7:26.+'</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Snackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。</p>\n<p>Snackbar的基本使用很简单，与Toast类似。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();</div></pre></td></tr></table></figure></p>\n<p>make()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。</p>\n<p>setAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(coordinatorLayout, <span class=\"string\">\"这是massage\"</span>, Snackbar.LENGTH_LONG).setAction(<span class=\"string\">\"这是action\"</span>, <span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"你点击了action\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;).show();</div></pre></td></tr></table></figure></p>\n<p>2.SnackbarUtil工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Color;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Gravity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.LayoutInflater;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.LinearLayout;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by zq on 17-9-29.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SnackbarUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Info = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Confirm = <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Warning = <span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Alert = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> red = <span class=\"number\">0xfff44336</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> green = <span class=\"number\">0xff4caf50</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> blue = <span class=\"number\">0xff2195f3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> orange = <span class=\"number\">0xffffc107</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//选择预设类型</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">switchType</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> Info:</div><div class=\"line\">                setSnackbarColor(snackbar, blue);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Confirm:</div><div class=\"line\">                setSnackbarColor(snackbar, green);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Warning:</div><div class=\"line\">                setSnackbarColor(snackbar, orange);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Alert:</div><div class=\"line\">                setSnackbarColor(snackbar, Color.YELLOW, red);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar文字和背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向Snackbar中添加view</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> layoutId</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index    新加布局在Snackbar中的位置</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SnackbarAddView</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">int</span> index)</span> </span>&#123;</div><div class=\"line\">        View snackbarview = snackbar.getView();</div><div class=\"line\">        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class=\"line\"></div><div class=\"line\">        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">        LinearLayout.LayoutParams p = <span class=\"keyword\">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class=\"line\">        p.gravity = Gravity.CENTER_VERTICAL;</div><div class=\"line\"></div><div class=\"line\">        snackbarLayout.addView(add_view, index, p);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。</p>\n<p>1.Snackbar基本介绍</p>\n<p>使用Snackbar要导入com.android.support:design库。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">compile</span> <span class=\"string\">'com.android.support:appcompat-v7:26.+'</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Snackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。</p>\n<p>Snackbar的基本使用很简单，与Toast类似。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();</div></pre></td></tr></table></figure></p>\n<p>make()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。</p>\n<p>setAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(coordinatorLayout, <span class=\"string\">\"这是massage\"</span>, Snackbar.LENGTH_LONG).setAction(<span class=\"string\">\"这是action\"</span>, <span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"你点击了action\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;).show();</div></pre></td></tr></table></figure></p>\n<p>2.SnackbarUtil工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Color;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Gravity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.LayoutInflater;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.LinearLayout;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by zq on 17-9-29.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SnackbarUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Info = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Confirm = <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Warning = <span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Alert = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> red = <span class=\"number\">0xfff44336</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> green = <span class=\"number\">0xff4caf50</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> blue = <span class=\"number\">0xff2195f3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> orange = <span class=\"number\">0xffffc107</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//选择预设类型</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">switchType</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> Info:</div><div class=\"line\">                setSnackbarColor(snackbar, blue);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Confirm:</div><div class=\"line\">                setSnackbarColor(snackbar, green);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Warning:</div><div class=\"line\">                setSnackbarColor(snackbar, orange);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Alert:</div><div class=\"line\">                setSnackbarColor(snackbar, Color.YELLOW, red);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar文字和背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向Snackbar中添加view</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> layoutId</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index    新加布局在Snackbar中的位置</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SnackbarAddView</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">int</span> index)</span> </span>&#123;</div><div class=\"line\">        View snackbarview = snackbar.getView();</div><div class=\"line\">        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class=\"line\"></div><div class=\"line\">        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">        LinearLayout.LayoutParams p = <span class=\"keyword\">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class=\"line\">        p.gravity = Gravity.CENTER_VERTICAL;</div><div class=\"line\"></div><div class=\"line\">        snackbarLayout.addView(add_view, index, p);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Toast优化","date":"2017-09-22T03:14:53.000Z","_content":"``` Java\nprivate Toast mToast;\nprivate void showToast(String msg){\n    if(mToast == null){\n        mToast = Toast.makeText(mContext,\"\",2000);\n    }\n    mToast.setText(msg);\n    mToast.show();\n}\n```","source":"_posts/Toast优化.md","raw":"---\ntitle: Toast优化\ndate: 2017-09-22 11:14:53\ntags:\n---\n``` Java\nprivate Toast mToast;\nprivate void showToast(String msg){\n    if(mToast == null){\n        mToast = Toast.makeText(mContext,\"\",2000);\n    }\n    mToast.setText(msg);\n    mToast.show();\n}\n```","slug":"Toast优化","published":1,"updated":"2017-09-22T03:15:12.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9s000dardxckolrqs1","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> Toast mToast;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showToast</span><span class=\"params\">(String msg)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(mToast == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        mToast = Toast.makeText(mContext,<span class=\"string\">\"\"</span>,<span class=\"number\">2000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mToast.setText(msg);</div><div class=\"line\">    mToast.show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> Toast mToast;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showToast</span><span class=\"params\">(String msg)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(mToast == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        mToast = Toast.makeText(mContext,<span class=\"string\">\"\"</span>,<span class=\"number\">2000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mToast.setText(msg);</div><div class=\"line\">    mToast.show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"ShadowView的学习和使用","date":"2017-09-30T06:51:25.000Z","_content":"1.添加依赖库\n```\ndependencies {\n    compile 'com.loopeer.lib:shadow:0.0.3'\n}\n```\n\n2.使用\n``` xml\n<com.loopeer.shadow.ShadowView\n    android:id=\"@+id/shadow_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"12dp\"\n    android:elevation=\"10dp\"\n    android:foreground=\"?attr/selectableItemBackground\"\n    android:onClick=\"onShadowClickTest\"\n    android:padding=\"10dp\"\n    app:cornerRadius=\"4dp\"\n    app:shadowMargin=\"20dp\"\n    app:shadowRadius=\"14dp\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Google Developer Days Europe 2017 took place in Krakow, Poland. In this playlist, you can find all the recorded sessions from the event, across all tracks (Develop on Mobile, Mobile Web, Beyond Mobile, and Android).\"/>\n</com.loopeer.shadow.ShadowView>\n```\n\n3.常用属性\n```\nandroid:foreground\nshadowMargin\nshadowMarginTop\nshadowMarginLeft\nshadowMarginRight\nshadowMarginBottom\ncornerRadius\ncornerRadiusTL\ncornerRadiusTR\ncornerRadiusBL\ncornerRadiusBR\nforegroundColor\nshadowColor\nshadowDx\nshadowDy\nshadowRadius\nbackgroundColor\n```","source":"_posts/ShadowView的学习和使用.md","raw":"---\ntitle: ShadowView的学习和使用\ndate: 2017-09-30 14:51:25\ntags:\n---\n1.添加依赖库\n```\ndependencies {\n    compile 'com.loopeer.lib:shadow:0.0.3'\n}\n```\n\n2.使用\n``` xml\n<com.loopeer.shadow.ShadowView\n    android:id=\"@+id/shadow_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"12dp\"\n    android:elevation=\"10dp\"\n    android:foreground=\"?attr/selectableItemBackground\"\n    android:onClick=\"onShadowClickTest\"\n    android:padding=\"10dp\"\n    app:cornerRadius=\"4dp\"\n    app:shadowMargin=\"20dp\"\n    app:shadowRadius=\"14dp\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Google Developer Days Europe 2017 took place in Krakow, Poland. In this playlist, you can find all the recorded sessions from the event, across all tracks (Develop on Mobile, Mobile Web, Beyond Mobile, and Android).\"/>\n</com.loopeer.shadow.ShadowView>\n```\n\n3.常用属性\n```\nandroid:foreground\nshadowMargin\nshadowMarginTop\nshadowMarginLeft\nshadowMarginRight\nshadowMarginBottom\ncornerRadius\ncornerRadiusTL\ncornerRadiusTR\ncornerRadiusBL\ncornerRadiusBR\nforegroundColor\nshadowColor\nshadowDx\nshadowDy\nshadowRadius\nbackgroundColor\n```","slug":"ShadowView的学习和使用","published":1,"updated":"2017-09-30T09:04:39.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9t000eardxt92f57vy","content":"<p>1.添加依赖库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    compile &apos;com.loopeer.lib:shadow:0.0.3&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2.使用<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.loopeer.shadow.ShadowView</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/shadow_view\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_margin</span>=<span class=\"string\">\"12dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:elevation</span>=<span class=\"string\">\"10dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:foreground</span>=<span class=\"string\">\"?attr/selectableItemBackground\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"onShadowClickTest\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:padding</span>=<span class=\"string\">\"10dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:cornerRadius</span>=<span class=\"string\">\"4dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:shadowMargin</span>=<span class=\"string\">\"20dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:shadowRadius</span>=<span class=\"string\">\"14dp\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"Google Developer Days Europe 2017 took place in Krakow, Poland. In this playlist, you can find all the recorded sessions from the event, across all tracks (Develop on Mobile, Mobile Web, Beyond Mobile, and Android).\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">com.loopeer.shadow.ShadowView</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>3.常用属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:foreground</div><div class=\"line\">shadowMargin</div><div class=\"line\">shadowMarginTop</div><div class=\"line\">shadowMarginLeft</div><div class=\"line\">shadowMarginRight</div><div class=\"line\">shadowMarginBottom</div><div class=\"line\">cornerRadius</div><div class=\"line\">cornerRadiusTL</div><div class=\"line\">cornerRadiusTR</div><div class=\"line\">cornerRadiusBL</div><div class=\"line\">cornerRadiusBR</div><div class=\"line\">foregroundColor</div><div class=\"line\">shadowColor</div><div class=\"line\">shadowDx</div><div class=\"line\">shadowDy</div><div class=\"line\">shadowRadius</div><div class=\"line\">backgroundColor</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.添加依赖库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">    compile &apos;com.loopeer.lib:shadow:0.0.3&apos;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2.使用<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.loopeer.shadow.ShadowView</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/shadow_view\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_margin</span>=<span class=\"string\">\"12dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:elevation</span>=<span class=\"string\">\"10dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:foreground</span>=<span class=\"string\">\"?attr/selectableItemBackground\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"onShadowClickTest\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:padding</span>=<span class=\"string\">\"10dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:cornerRadius</span>=<span class=\"string\">\"4dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:shadowMargin</span>=<span class=\"string\">\"20dp\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:shadowRadius</span>=<span class=\"string\">\"14dp\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"Google Developer Days Europe 2017 took place in Krakow, Poland. In this playlist, you can find all the recorded sessions from the event, across all tracks (Develop on Mobile, Mobile Web, Beyond Mobile, and Android).\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">com.loopeer.shadow.ShadowView</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>3.常用属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:foreground</div><div class=\"line\">shadowMargin</div><div class=\"line\">shadowMarginTop</div><div class=\"line\">shadowMarginLeft</div><div class=\"line\">shadowMarginRight</div><div class=\"line\">shadowMarginBottom</div><div class=\"line\">cornerRadius</div><div class=\"line\">cornerRadiusTL</div><div class=\"line\">cornerRadiusTR</div><div class=\"line\">cornerRadiusBL</div><div class=\"line\">cornerRadiusBR</div><div class=\"line\">foregroundColor</div><div class=\"line\">shadowColor</div><div class=\"line\">shadowDx</div><div class=\"line\">shadowDy</div><div class=\"line\">shadowRadius</div><div class=\"line\">backgroundColor</div></pre></td></tr></table></figure></p>\n"},{"title":"USSD","date":"2018-03-08T01:49:30.000Z","_content":"> \n（Unstructured Supplementary Service Data）即非结构化补充数据业务，是一种新型基于GSM网络的交互式数据业务. 当你使用手机键盘输入一些网络已预先制定的数字或者符号比如*#等，再按send也就是拨号键就可以向网络发送一条指令，网络根据你的指令选择你需要的服务提供给你.\n比如：用户在手机上输入“**21*1234567#SEND”，则该用户的所有来话都将被转移到号码1234567。","source":"_posts/USSD.md","raw":"---\ntitle: USSD\ndate: 2018-03-08 09:49:30\ntags:\n---\n> \n（Unstructured Supplementary Service Data）即非结构化补充数据业务，是一种新型基于GSM网络的交互式数据业务. 当你使用手机键盘输入一些网络已预先制定的数字或者符号比如*#等，再按send也就是拨号键就可以向网络发送一条指令，网络根据你的指令选择你需要的服务提供给你.\n比如：用户在手机上输入“**21*1234567#SEND”，则该用户的所有来话都将被转移到号码1234567。","slug":"USSD","published":1,"updated":"2018-03-08T01:50:03.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9u000fardx7wiwe18i","content":"<blockquote>\n<p>（Unstructured Supplementary Service Data）即非结构化补充数据业务，是一种新型基于GSM网络的交互式数据业务. 当你使用手机键盘输入一些网络已预先制定的数字或者符号比如<em>#等，再按send也就是拨号键就可以向网络发送一条指令，网络根据你的指令选择你需要的服务提供给你.<br>比如：用户在手机上输入“**21</em>1234567#SEND”，则该用户的所有来话都将被转移到号码1234567。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>（Unstructured Supplementary Service Data）即非结构化补充数据业务，是一种新型基于GSM网络的交互式数据业务. 当你使用手机键盘输入一些网络已预先制定的数字或者符号比如<em>#等，再按send也就是拨号键就可以向网络发送一条指令，网络根据你的指令选择你需要的服务提供给你.<br>比如：用户在手机上输入“**21</em>1234567#SEND”，则该用户的所有来话都将被转移到号码1234567。</p>\n</blockquote>\n"},{"title":"adb shell input text源码分析","date":"2017-09-25T07:00:24.000Z","_content":"源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。 \n``` Java\npublic static void main(String[] args) {\n    (new Input()).run(args);                            //在 main() 函数中运行 run() 方法\n}\n\nif (command.equals(\"text\")) {                            //处理 text 命令\n    if (length == 2) {\n        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);\n        sendText(inputSource, args[index+1]);\n        return;\n    }\n}\n\nprivate void sendText(int source, String text) {\n    StringBuffer buff = new StringBuffer(text);\n    boolean escapeFlag = false;\n    for (int i=0; i<buff.length(); i++) {\n        if (escapeFlag) {\n            escapeFlag = false;\n            if (buff.charAt(i) == 's') {\n                buff.setCharAt(i, ' ');\n                buff.deleteCharAt(--i);\n            }\n        }\n        if (buff.charAt(i) == '%') {\n            escapeFlag = true;\n        }\n    }\n    char[] chars = buff.toString().toCharArray();\n    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);\n    KeyEvent[] events = kcm.getEvents(chars);            //将字符转换为按键事件\n    for(int i = 0; i < events.length; i++) {\n        KeyEvent e = events[i];\n        if (source != e.getSource()) {\n            e.setSource(source);\n        }\n        injectKeyEvent(e);\n    }\n}\n```","source":"_posts/adb-shell-input-text源码分析.md","raw":"---\ntitle: adb shell input text源码分析\ndate: 2017-09-25 15:00:24\ntags:\n---\n源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。 \n``` Java\npublic static void main(String[] args) {\n    (new Input()).run(args);                            //在 main() 函数中运行 run() 方法\n}\n\nif (command.equals(\"text\")) {                            //处理 text 命令\n    if (length == 2) {\n        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);\n        sendText(inputSource, args[index+1]);\n        return;\n    }\n}\n\nprivate void sendText(int source, String text) {\n    StringBuffer buff = new StringBuffer(text);\n    boolean escapeFlag = false;\n    for (int i=0; i<buff.length(); i++) {\n        if (escapeFlag) {\n            escapeFlag = false;\n            if (buff.charAt(i) == 's') {\n                buff.setCharAt(i, ' ');\n                buff.deleteCharAt(--i);\n            }\n        }\n        if (buff.charAt(i) == '%') {\n            escapeFlag = true;\n        }\n    }\n    char[] chars = buff.toString().toCharArray();\n    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);\n    KeyEvent[] events = kcm.getEvents(chars);            //将字符转换为按键事件\n    for(int i = 0; i < events.length; i++) {\n        KeyEvent e = events[i];\n        if (source != e.getSource()) {\n            e.setSource(source);\n        }\n        injectKeyEvent(e);\n    }\n}\n```","slug":"adb-shell-input-text源码分析","published":1,"updated":"2017-09-25T07:01:18.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9w000gardxueyf3fu9","content":"<p>源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    (<span class=\"keyword\">new</span> Input()).run(args);                            <span class=\"comment\">//在 main() 函数中运行 run() 方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (command.equals(<span class=\"string\">\"text\"</span>)) &#123;                            <span class=\"comment\">//处理 text 命令</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (length == <span class=\"number\">2</span>) &#123;</div><div class=\"line\">        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);</div><div class=\"line\">        sendText(inputSource, args[index+<span class=\"number\">1</span>]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendText</span><span class=\"params\">(<span class=\"keyword\">int</span> source, String text)</span> </span>&#123;</div><div class=\"line\">    StringBuffer buff = <span class=\"keyword\">new</span> StringBuffer(text);</div><div class=\"line\">    <span class=\"keyword\">boolean</span> escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;buff.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (escapeFlag) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'s'</span>) &#123;</div><div class=\"line\">                buff.setCharAt(i, <span class=\"string\">' '</span>);</div><div class=\"line\">                buff.deleteCharAt(--i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'%'</span>) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">char</span>[] chars = buff.toString().toCharArray();</div><div class=\"line\">    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);</div><div class=\"line\">    KeyEvent[] events = kcm.getEvents(chars);            <span class=\"comment\">//将字符转换为按键事件</span></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; events.length; i++) &#123;</div><div class=\"line\">        KeyEvent e = events[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (source != e.getSource()) &#123;</div><div class=\"line\">            e.setSource(source);</div><div class=\"line\">        &#125;</div><div class=\"line\">        injectKeyEvent(e);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    (<span class=\"keyword\">new</span> Input()).run(args);                            <span class=\"comment\">//在 main() 函数中运行 run() 方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (command.equals(<span class=\"string\">\"text\"</span>)) &#123;                            <span class=\"comment\">//处理 text 命令</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (length == <span class=\"number\">2</span>) &#123;</div><div class=\"line\">        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);</div><div class=\"line\">        sendText(inputSource, args[index+<span class=\"number\">1</span>]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendText</span><span class=\"params\">(<span class=\"keyword\">int</span> source, String text)</span> </span>&#123;</div><div class=\"line\">    StringBuffer buff = <span class=\"keyword\">new</span> StringBuffer(text);</div><div class=\"line\">    <span class=\"keyword\">boolean</span> escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;buff.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (escapeFlag) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'s'</span>) &#123;</div><div class=\"line\">                buff.setCharAt(i, <span class=\"string\">' '</span>);</div><div class=\"line\">                buff.deleteCharAt(--i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'%'</span>) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">char</span>[] chars = buff.toString().toCharArray();</div><div class=\"line\">    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);</div><div class=\"line\">    KeyEvent[] events = kcm.getEvents(chars);            <span class=\"comment\">//将字符转换为按键事件</span></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; events.length; i++) &#123;</div><div class=\"line\">        KeyEvent e = events[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (source != e.getSource()) &#123;</div><div class=\"line\">            e.setSource(source);</div><div class=\"line\">        &#125;</div><div class=\"line\">        injectKeyEvent(e);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"adb命令集合","date":"2017-09-21T08:40:22.000Z","_content":"关机命令\n``` bash\nadb shell reboot -p\nadb shell svc power shutdown\n```\n\n恢复出厂设置\n``` bash\nadb shell am broadcast -a android.intent.action.MASTER_CLEAR\n```\n\n查看手机中安装的所有apk的包名\n``` bash\nadb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]\n无\t所有应用\n-f\t显示应用关联的 apk 文件\n-d\t只显示 disabled 的应用\n-e\t只显示 enabled 的应用\n-s\t只显示系统应用\n-3\t只显示第三方应用\n-i\t显示应用的 installer\n-u\t包含已卸载应用\n<FILTER>\t包名包含 <FILTER> 字符串\n```\n\n保存读取SettingsProvider中的值\n``` bash\nadb shell settings put global device_provisioned 0\nadb shell settings get global device_provisioned\n```\n\n启动 Activity\n``` bash\nadb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity\n```\n\n通过命令行输入字符串\n``` bash\nadb shell input text \"helloworld\"\n```\n\n通过adb命令直接操作sqlite3数据库\n``` bash\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \"select * from favorites;\"\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \".dump\" > sql.txt\n```\n\n通过adb命令快速查看关机动画\n``` bash\nadb shell setprop ctl.start bootanim\nadb shell setprop ctl.stop bootanim\n```\nMonkey测试\n``` bash\nadb shell monkey -s 6516 --throttle 200 --ignore-crashes --ignore-timeouts --ignore-security-exceptions -v 20000000 > result.txt\n```\n\n查看IMEI码\n``` bash\nadb shell service call iphonesubinfo 1\n```\n\n查看手机型号\n``` bash\nadb shell getprop ro.product.model\n```\n\n查看Android系统版本\n``` bash\nadb shell getprop ro.build.version.release\n```\n\n清除应用数据与缓存\n``` bash\nadb shell pm clear <packagename>\n```\n\n查看设备分辨率\n``` bash\nadb shell wm size\n```\n\n截屏\n``` bash\nadb exec-out screencap -p > sc.png\n```\n\n","source":"_posts/adb命令集合.md","raw":"---\ntitle: adb命令集合\ndate: 2017-09-21 16:40:22\ntags:\n---\n关机命令\n``` bash\nadb shell reboot -p\nadb shell svc power shutdown\n```\n\n恢复出厂设置\n``` bash\nadb shell am broadcast -a android.intent.action.MASTER_CLEAR\n```\n\n查看手机中安装的所有apk的包名\n``` bash\nadb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]\n无\t所有应用\n-f\t显示应用关联的 apk 文件\n-d\t只显示 disabled 的应用\n-e\t只显示 enabled 的应用\n-s\t只显示系统应用\n-3\t只显示第三方应用\n-i\t显示应用的 installer\n-u\t包含已卸载应用\n<FILTER>\t包名包含 <FILTER> 字符串\n```\n\n保存读取SettingsProvider中的值\n``` bash\nadb shell settings put global device_provisioned 0\nadb shell settings get global device_provisioned\n```\n\n启动 Activity\n``` bash\nadb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity\n```\n\n通过命令行输入字符串\n``` bash\nadb shell input text \"helloworld\"\n```\n\n通过adb命令直接操作sqlite3数据库\n``` bash\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \"select * from favorites;\"\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \".dump\" > sql.txt\n```\n\n通过adb命令快速查看关机动画\n``` bash\nadb shell setprop ctl.start bootanim\nadb shell setprop ctl.stop bootanim\n```\nMonkey测试\n``` bash\nadb shell monkey -s 6516 --throttle 200 --ignore-crashes --ignore-timeouts --ignore-security-exceptions -v 20000000 > result.txt\n```\n\n查看IMEI码\n``` bash\nadb shell service call iphonesubinfo 1\n```\n\n查看手机型号\n``` bash\nadb shell getprop ro.product.model\n```\n\n查看Android系统版本\n``` bash\nadb shell getprop ro.build.version.release\n```\n\n清除应用数据与缓存\n``` bash\nadb shell pm clear <packagename>\n```\n\n查看设备分辨率\n``` bash\nadb shell wm size\n```\n\n截屏\n``` bash\nadb exec-out screencap -p > sc.png\n```\n\n","slug":"adb命令集合","published":1,"updated":"2018-01-24T08:30:04.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9w000hardxky8mu6sb","content":"<p>关机命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell reboot -p</div><div class=\"line\">adb shell svc power shutdown</div></pre></td></tr></table></figure></p>\n<p>恢复出厂设置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am broadcast -a android.intent.action.MASTER_CLEAR</div></pre></td></tr></table></figure></p>\n<p>查看手机中安装的所有apk的包名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]</div><div class=\"line\">无\t所有应用</div><div class=\"line\">-f\t显示应用关联的 apk 文件</div><div class=\"line\">-d\t只显示 disabled 的应用</div><div class=\"line\">-e\t只显示 enabled 的应用</div><div class=\"line\">-s\t只显示系统应用</div><div class=\"line\">-3\t只显示第三方应用</div><div class=\"line\">-i\t显示应用的 installer</div><div class=\"line\">-u\t包含已卸载应用</div><div class=\"line\">&lt;FILTER&gt;\t包名包含 &lt;FILTER&gt; 字符串</div></pre></td></tr></table></figure></p>\n<p>保存读取SettingsProvider中的值<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell settings put global device_provisioned 0</div><div class=\"line\">adb shell settings get global device_provisioned</div></pre></td></tr></table></figure></p>\n<p>启动 Activity<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity</div></pre></td></tr></table></figure></p>\n<p>通过命令行输入字符串<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell input text <span class=\"string\">\"helloworld\"</span></div></pre></td></tr></table></figure></p>\n<p>通过adb命令直接操作sqlite3数据库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\"select * from favorites;\"</span></div><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\".dump\"</span> &gt; sql.txt</div></pre></td></tr></table></figure></p>\n<p>通过adb命令快速查看关机动画<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setprop ctl.start bootanim</div><div class=\"line\">adb shell setprop ctl.stop bootanim</div></pre></td></tr></table></figure></p>\n<p>Monkey测试<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell monkey -s 6516 --throttle 200 --ignore-crashes --ignore-timeouts --ignore-security-exceptions -v 20000000 &gt; result.txt</div></pre></td></tr></table></figure></p>\n<p>查看IMEI码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell service call iphonesubinfo 1</div></pre></td></tr></table></figure></p>\n<p>查看手机型号<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell getprop ro.product.model</div></pre></td></tr></table></figure></p>\n<p>查看Android系统版本<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell getprop ro.build.version.release</div></pre></td></tr></table></figure></p>\n<p>清除应用数据与缓存<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm clear &lt;packagename&gt;</div></pre></td></tr></table></figure></p>\n<p>查看设备分辨率<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell wm size</div></pre></td></tr></table></figure></p>\n<p>截屏<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb <span class=\"built_in\">exec</span>-out screencap -p &gt; sc.png</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>关机命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell reboot -p</div><div class=\"line\">adb shell svc power shutdown</div></pre></td></tr></table></figure></p>\n<p>恢复出厂设置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am broadcast -a android.intent.action.MASTER_CLEAR</div></pre></td></tr></table></figure></p>\n<p>查看手机中安装的所有apk的包名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]</div><div class=\"line\">无\t所有应用</div><div class=\"line\">-f\t显示应用关联的 apk 文件</div><div class=\"line\">-d\t只显示 disabled 的应用</div><div class=\"line\">-e\t只显示 enabled 的应用</div><div class=\"line\">-s\t只显示系统应用</div><div class=\"line\">-3\t只显示第三方应用</div><div class=\"line\">-i\t显示应用的 installer</div><div class=\"line\">-u\t包含已卸载应用</div><div class=\"line\">&lt;FILTER&gt;\t包名包含 &lt;FILTER&gt; 字符串</div></pre></td></tr></table></figure></p>\n<p>保存读取SettingsProvider中的值<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell settings put global device_provisioned 0</div><div class=\"line\">adb shell settings get global device_provisioned</div></pre></td></tr></table></figure></p>\n<p>启动 Activity<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity</div></pre></td></tr></table></figure></p>\n<p>通过命令行输入字符串<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell input text <span class=\"string\">\"helloworld\"</span></div></pre></td></tr></table></figure></p>\n<p>通过adb命令直接操作sqlite3数据库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\"select * from favorites;\"</span></div><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\".dump\"</span> &gt; sql.txt</div></pre></td></tr></table></figure></p>\n<p>通过adb命令快速查看关机动画<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setprop ctl.start bootanim</div><div class=\"line\">adb shell setprop ctl.stop bootanim</div></pre></td></tr></table></figure></p>\n<p>Monkey测试<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell monkey -s 6516 --throttle 200 --ignore-crashes --ignore-timeouts --ignore-security-exceptions -v 20000000 &gt; result.txt</div></pre></td></tr></table></figure></p>\n<p>查看IMEI码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell service call iphonesubinfo 1</div></pre></td></tr></table></figure></p>\n<p>查看手机型号<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell getprop ro.product.model</div></pre></td></tr></table></figure></p>\n<p>查看Android系统版本<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell getprop ro.build.version.release</div></pre></td></tr></table></figure></p>\n<p>清除应用数据与缓存<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm clear &lt;packagename&gt;</div></pre></td></tr></table></figure></p>\n<p>查看设备分辨率<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell wm size</div></pre></td></tr></table></figure></p>\n<p>截屏<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb <span class=\"built_in\">exec</span>-out screencap -p &gt; sc.png</div></pre></td></tr></table></figure></p>\n"},{"title":"android中media的url","date":"2017-09-21T04:52:17.000Z","_content":"```\nhttp://site.com/image.png // from Web\nfile:///mnt/sdcard/image.png // from SD card\nfile:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)\ncontent://media/external/images/media/13 // from content provider\ncontent://media/external/video/media/13 // from content provider (video thumbnail)\nassets://image.png // from assets\ndrawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。\n```","source":"_posts/android中media的url.md","raw":"---\ntitle: android中media的url\ndate: 2017-09-21 12:52:17\ntags:\n---\n```\nhttp://site.com/image.png // from Web\nfile:///mnt/sdcard/image.png // from SD card\nfile:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)\ncontent://media/external/images/media/13 // from content provider\ncontent://media/external/video/media/13 // from content provider (video thumbnail)\nassets://image.png // from assets\ndrawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。\n```","slug":"android中media的url","published":1,"updated":"2017-09-21T05:49:37.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9x000iardxkrx03hni","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://site.com/image.png // from Web</div><div class=\"line\">file:///mnt/sdcard/image.png // from SD card</div><div class=\"line\">file:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)</div><div class=\"line\">content://media/external/images/media/13 // from content provider</div><div class=\"line\">content://media/external/video/media/13 // from content provider (video thumbnail)</div><div class=\"line\">assets://image.png // from assets</div><div class=\"line\">drawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://site.com/image.png // from Web</div><div class=\"line\">file:///mnt/sdcard/image.png // from SD card</div><div class=\"line\">file:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)</div><div class=\"line\">content://media/external/images/media/13 // from content provider</div><div class=\"line\">content://media/external/video/media/13 // from content provider (video thumbnail)</div><div class=\"line\">assets://image.png // from assets</div><div class=\"line\">drawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。</div></pre></td></tr></table></figure>"},{"title":"android-res下资源命名规则","date":"2017-09-25T07:40:07.000Z","_content":"1、 命名规范\n1. 可用的命名属性\n在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。\n\n2. 命名方法与要求\n1) 命名不区分大小写；\n2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5.....\n资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；\n属性1-属性2-属性3-属性4-属性5.....就是上述的属性集内的属性，如:-en-port-hdpi；\n注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过\n\n3. 实例说明\n1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)\nvalues-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7\n2) 上述例子属性的中文说明\nvalues-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)\n\n2、 定位最佳文件夹\n1. 定位算法\n\nprovidingResource\n特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：\n1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;\n\n2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。\n2. 实例说明\n工程有如下文件夹：\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n手机属性：\nLocale = en-GB \nScreen orientation = port \nScreen pixel density = hdpi \nTouchscreen type = notouch \nPrimary text input method = 12key\n\n1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/\n没被清除。\n2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。\n3)  有包含上述属性的文件夹吗？\n如果没有，跳转步骤２，选择下一优先级高的属性；\n如果有，继续步骤４；\n4) 清除不包含此属性的所有文件夹\ndrawable/\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\n\n最终找到的文件夹就是drawable-en-port/\n\n由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。\n\n3、 备注\n1. 文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;\n2. 对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。","source":"_posts/android-res下资源命名规则.md","raw":"---\ntitle: android-res下资源命名规则\ndate: 2017-09-25 15:40:07\ntags:\n---\n1、 命名规范\n1. 可用的命名属性\n在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。\n\n2. 命名方法与要求\n1) 命名不区分大小写；\n2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5.....\n资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；\n属性1-属性2-属性3-属性4-属性5.....就是上述的属性集内的属性，如:-en-port-hdpi；\n注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过\n\n3. 实例说明\n1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)\nvalues-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7\n2) 上述例子属性的中文说明\nvalues-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)\n\n2、 定位最佳文件夹\n1. 定位算法\n\nprovidingResource\n特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：\n1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;\n\n2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。\n2. 实例说明\n工程有如下文件夹：\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n手机属性：\nLocale = en-GB \nScreen orientation = port \nScreen pixel density = hdpi \nTouchscreen type = notouch \nPrimary text input method = 12key\n\n1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/\n没被清除。\n2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。\n3)  有包含上述属性的文件夹吗？\n如果没有，跳转步骤２，选择下一优先级高的属性；\n如果有，继续步骤４；\n4) 清除不包含此属性的所有文件夹\ndrawable/\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\n\n最终找到的文件夹就是drawable-en-port/\n\n由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。\n\n3、 备注\n1. 文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;\n2. 对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。","slug":"android-res下资源命名规则","published":1,"updated":"2017-09-25T07:41:37.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9y000jardxx8ld2igs","content":"<p>1、 命名规范</p>\n<ol>\n<li><p>可用的命名属性<br>在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。</p>\n</li>\n<li><p>命名方法与要求<br>1) 命名不区分大小写；<br>2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5…..<br>资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；<br>属性1-属性2-属性3-属性4-属性5…..就是上述的属性集内的属性，如:-en-port-hdpi；<br>注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过</p>\n</li>\n<li><p>实例说明<br>1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)<br>values-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7<br>2) 上述例子属性的中文说明<br>values-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)</p>\n</li>\n</ol>\n<p>2、 定位最佳文件夹</p>\n<ol>\n<li>定位算法</li>\n</ol>\n<p>providingResource<br>特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：<br>1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;</p>\n<p>2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。</p>\n<ol>\n<li>实例说明<br>工程有如下文件夹：<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>手机属性：<br>Locale = en-GB<br>Screen orientation = port<br>Screen pixel density = hdpi<br>Touchscreen type = notouch<br>Primary text input method = 12key</li>\n</ol>\n<p>1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/<br>没被清除。<br>2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。<br>3)  有包含上述属性的文件夹吗？<br>如果没有，跳转步骤２，选择下一优先级高的属性；<br>如果有，继续步骤４；<br>4) 清除不包含此属性的所有文件夹<br>drawable/<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/</p>\n<p>最终找到的文件夹就是drawable-en-port/</p>\n<p>由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。</p>\n<p>3、 备注</p>\n<ol>\n<li>文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;</li>\n<li>对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>1、 命名规范</p>\n<ol>\n<li><p>可用的命名属性<br>在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。</p>\n</li>\n<li><p>命名方法与要求<br>1) 命名不区分大小写；<br>2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5…..<br>资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；<br>属性1-属性2-属性3-属性4-属性5…..就是上述的属性集内的属性，如:-en-port-hdpi；<br>注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过</p>\n</li>\n<li><p>实例说明<br>1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)<br>values-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7<br>2) 上述例子属性的中文说明<br>values-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)</p>\n</li>\n</ol>\n<p>2、 定位最佳文件夹</p>\n<ol>\n<li>定位算法</li>\n</ol>\n<p>providingResource<br>特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：<br>1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;</p>\n<p>2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。</p>\n<ol>\n<li>实例说明<br>工程有如下文件夹：<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>手机属性：<br>Locale = en-GB<br>Screen orientation = port<br>Screen pixel density = hdpi<br>Touchscreen type = notouch<br>Primary text input method = 12key</li>\n</ol>\n<p>1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/<br>没被清除。<br>2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。<br>3)  有包含上述属性的文件夹吗？<br>如果没有，跳转步骤２，选择下一优先级高的属性；<br>如果有，继续步骤４；<br>4) 清除不包含此属性的所有文件夹<br>drawable/<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/</p>\n<p>最终找到的文件夹就是drawable-en-port/</p>\n<p>由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。</p>\n<p>3、 备注</p>\n<ol>\n<li>文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;</li>\n<li>对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。</li>\n</ol>\n"},{"title":"android清理缓存功能的实现","date":"2017-09-21T03:15:46.000Z","_content":"相关代码:\n``` Java\nprivate void clearCache() {\n    PackageManager pm = getPackageManager();\n    // 反射\n    try {\n        Method method = PackageManager.class.getMethod(\"getPackageSizeInfo\", new Class[] { String.class, IPackageStatsObserver.class });\n        method.invoke(pm, new Object[] { \"com.wang.clearcache\", new IPackageStatsObserver.Stub() {\n            public void onGetStatsCompleted(PackageStats pStats, boolean succeeded) throws RemoteException {\n                long cachesize = pStats.cacheSize;\n                long codesize = pStats.codeSize;\n                long datasize = pStats.dataSize;\n                System.out.println(\"cachesize:\" + cachesize);\n                System.out.println(\"codesize:\" + codesize);\n                System.out.println(\"datasize\" + datasize);\n            }\n        }});\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```\n\n需要导入两个 aidl 文件\n```\nframeworks/base/core/java/android/content/pm/PackageStats.aidl\nframeworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl\n```\n\n需要添加权限\n```\n<uses-permission android:name=\"android.permission.GET_PACKAGE_SIZE\"/>\n```","source":"_posts/android清理缓存功能的实现.md","raw":"---\ntitle: android清理缓存功能的实现\ndate: 2017-09-21 11:15:46\ntags:\n---\n相关代码:\n``` Java\nprivate void clearCache() {\n    PackageManager pm = getPackageManager();\n    // 反射\n    try {\n        Method method = PackageManager.class.getMethod(\"getPackageSizeInfo\", new Class[] { String.class, IPackageStatsObserver.class });\n        method.invoke(pm, new Object[] { \"com.wang.clearcache\", new IPackageStatsObserver.Stub() {\n            public void onGetStatsCompleted(PackageStats pStats, boolean succeeded) throws RemoteException {\n                long cachesize = pStats.cacheSize;\n                long codesize = pStats.codeSize;\n                long datasize = pStats.dataSize;\n                System.out.println(\"cachesize:\" + cachesize);\n                System.out.println(\"codesize:\" + codesize);\n                System.out.println(\"datasize\" + datasize);\n            }\n        }});\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```\n\n需要导入两个 aidl 文件\n```\nframeworks/base/core/java/android/content/pm/PackageStats.aidl\nframeworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl\n```\n\n需要添加权限\n```\n<uses-permission android:name=\"android.permission.GET_PACKAGE_SIZE\"/>\n```","slug":"android清理缓存功能的实现","published":1,"updated":"2017-09-21T03:21:11.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdz9z000kardx5wtw993l","content":"<p>相关代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    PackageManager pm = getPackageManager();</div><div class=\"line\">    <span class=\"comment\">// 反射</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = PackageManager.class.getMethod(<span class=\"string\">\"getPackageSizeInfo\"</span>, <span class=\"keyword\">new</span> Class[] &#123; String.class, IPackageStatsObserver.class &#125;);</div><div class=\"line\">        method.invoke(pm, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"com.wang.clearcache\"</span>, <span class=\"keyword\">new</span> IPackageStatsObserver.Stub() &#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGetStatsCompleted</span><span class=\"params\">(PackageStats pStats, <span class=\"keyword\">boolean</span> succeeded)</span> <span class=\"keyword\">throws</span> RemoteException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">long</span> cachesize = pStats.cacheSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> codesize = pStats.codeSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> datasize = pStats.dataSize;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"cachesize:\"</span> + cachesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"codesize:\"</span> + codesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"datasize\"</span> + datasize);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;&#125;);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要导入两个 aidl 文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">frameworks/base/core/java/android/content/pm/PackageStats.aidl</div><div class=\"line\">frameworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.GET_PACKAGE_SIZE&quot;/&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>相关代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    PackageManager pm = getPackageManager();</div><div class=\"line\">    <span class=\"comment\">// 反射</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = PackageManager.class.getMethod(<span class=\"string\">\"getPackageSizeInfo\"</span>, <span class=\"keyword\">new</span> Class[] &#123; String.class, IPackageStatsObserver.class &#125;);</div><div class=\"line\">        method.invoke(pm, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"com.wang.clearcache\"</span>, <span class=\"keyword\">new</span> IPackageStatsObserver.Stub() &#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGetStatsCompleted</span><span class=\"params\">(PackageStats pStats, <span class=\"keyword\">boolean</span> succeeded)</span> <span class=\"keyword\">throws</span> RemoteException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">long</span> cachesize = pStats.cacheSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> codesize = pStats.codeSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> datasize = pStats.dataSize;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"cachesize:\"</span> + cachesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"codesize:\"</span> + codesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"datasize\"</span> + datasize);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;&#125;);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要导入两个 aidl 文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">frameworks/base/core/java/android/content/pm/PackageStats.aidl</div><div class=\"line\">frameworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.GET_PACKAGE_SIZE&quot;/&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"ccache","date":"2017-09-21T09:02:16.000Z","_content":"### 介绍\n> \nccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。\n\n配置方法如下:\n\n* 1、在~/.bashrc中添加(或者/etc/profile文件中):\n``` mk\n#ccache\nexport USE_CCACHE=1\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache\n```\n默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory>\n> \n注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。\n\n* 2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹\n推荐的cache目录大小为50-100GB，在命令行执行以下命令:\n``` bash\nprebuilt/linux-x86/ccache/ccache -M 50G\n```\n以上命令需要在你所下载的代码的根目录下面执行\n该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。\n\n* 3、查看ccahe使用情况\n``` bash\n$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s\n```\n以上命令需要在你所下载的代码的根目录下面执行\n> \n备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升","source":"_posts/ccache.md","raw":"---\ntitle: ccache\ndate: 2017-09-21 17:02:16\ntags:\n---\n### 介绍\n> \nccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。\n\n配置方法如下:\n\n* 1、在~/.bashrc中添加(或者/etc/profile文件中):\n``` mk\n#ccache\nexport USE_CCACHE=1\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache\n```\n默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory>\n> \n注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。\n\n* 2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹\n推荐的cache目录大小为50-100GB，在命令行执行以下命令:\n``` bash\nprebuilt/linux-x86/ccache/ccache -M 50G\n```\n以上命令需要在你所下载的代码的根目录下面执行\n该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。\n\n* 3、查看ccahe使用情况\n``` bash\n$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s\n```\n以上命令需要在你所下载的代码的根目录下面执行\n> \n备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升","slug":"ccache","published":1,"updated":"2017-09-21T09:08:01.489Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza0000lardx5ikocgcs","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><blockquote>\n<p>ccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。</p>\n</blockquote>\n<p>配置方法如下:</p>\n<ul>\n<li>1、在~/.bashrc中添加(或者/etc/profile文件中):<figure class=\"highlight mk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#ccache</span></div><div class=\"line\"><span class=\"keyword\">export</span> USE_CCACHE=1</div><div class=\"line\"><span class=\"keyword\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory></path-to-your-cache-directory></p>\n<blockquote>\n<p>注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。</p>\n</blockquote>\n<ul>\n<li>2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹<br>推荐的cache目录大小为50-100GB，在命令行执行以下命令:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">prebuilt/linux-x86/ccache/ccache -M 50G</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行<br>该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。</p>\n<ul>\n<li>3、查看ccahe使用情况<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行</p>\n<blockquote>\n<p>备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><blockquote>\n<p>ccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。</p>\n</blockquote>\n<p>配置方法如下:</p>\n<ul>\n<li>1、在~/.bashrc中添加(或者/etc/profile文件中):<figure class=\"highlight mk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#ccache</span></div><div class=\"line\"><span class=\"keyword\">export</span> USE_CCACHE=1</div><div class=\"line\"><span class=\"keyword\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory></path-to-your-cache-directory></p>\n<blockquote>\n<p>注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。</p>\n</blockquote>\n<ul>\n<li>2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹<br>推荐的cache目录大小为50-100GB，在命令行执行以下命令:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">prebuilt/linux-x86/ccache/ccache -M 50G</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行<br>该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。</p>\n<ul>\n<li>3、查看ccahe使用情况<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行</p>\n<blockquote>\n<p>备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升</p>\n</blockquote>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-07-28T09:05:07.547Z","updated":"2017-07-28T09:05:07.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza1000mardxfw5h80fx","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"framework下添加一个自定义的服务 SELinux Permission Denied","date":"2017-09-19T07:22:13.000Z","_content":"问题点:\n在systemserver.java中添加如下代码，向servicemanager进程中添加一个service\n``` Java\ntry {\n    Slog.i(TAG, \"Hello Service\");\n    ServiceManager.addService(\"hello\", new HelloService());//\n} catch (Throwable e) {\n    Slog.e(TAG, \"Failure starting Hello Service\", e);\n}\n```\n\nservicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。\n执行代码的时候出现了如下错误:\n```\nE SELinux : avc:  denied  { add } for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager\nE ServiceManager: add_service('hello',62) uid=1000 - PERMISSION DENIED\n```\n\n提示为SELinux Permission Denied。\n解决办法参考:\nhttp://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android \n解决办法:\n\nexternal\\sepolicy\\service.te\n```\ntype mytest_service, system_api_service, system_server_service, service_manager_type;\n```\n\nexternal\\sepolicy\\service_contexts\n\n```\nmytestservice u:object_r:mytest_service:s0\n```","source":"_posts/framework下添加一个自定义的服务.md","raw":"---\ntitle: framework下添加一个自定义的服务 SELinux Permission Denied\ndate: 2017-09-19 15:22:13\ntags:\n---\n问题点:\n在systemserver.java中添加如下代码，向servicemanager进程中添加一个service\n``` Java\ntry {\n    Slog.i(TAG, \"Hello Service\");\n    ServiceManager.addService(\"hello\", new HelloService());//\n} catch (Throwable e) {\n    Slog.e(TAG, \"Failure starting Hello Service\", e);\n}\n```\n\nservicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。\n执行代码的时候出现了如下错误:\n```\nE SELinux : avc:  denied  { add } for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager\nE ServiceManager: add_service('hello',62) uid=1000 - PERMISSION DENIED\n```\n\n提示为SELinux Permission Denied。\n解决办法参考:\nhttp://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android \n解决办法:\n\nexternal\\sepolicy\\service.te\n```\ntype mytest_service, system_api_service, system_server_service, service_manager_type;\n```\n\nexternal\\sepolicy\\service_contexts\n\n```\nmytestservice u:object_r:mytest_service:s0\n```","slug":"framework下添加一个自定义的服务","published":1,"updated":"2017-09-25T06:46:55.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza2000nardxyrjp7p7g","content":"<p>问题点:<br>在systemserver.java中添加如下代码，向servicemanager进程中添加一个service<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Hello Service\"</span>);</div><div class=\"line\">    ServiceManager.addService(<span class=\"string\">\"hello\"</span>, <span class=\"keyword\">new</span> HelloService());<span class=\"comment\">//</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</div><div class=\"line\">    Slog.e(TAG, <span class=\"string\">\"Failure starting Hello Service\"</span>, e);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>servicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。<br>执行代码的时候出现了如下错误:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E SELinux : avc:  denied  &#123; add &#125; for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager</div><div class=\"line\">E ServiceManager: add_service(&apos;hello&apos;,62) uid=1000 - PERMISSION DENIED</div></pre></td></tr></table></figure></p>\n<p>提示为SELinux Permission Denied。<br>解决办法参考:<br><a href=\"http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android</a><br>解决办法:</p>\n<p>external\\sepolicy\\service.te<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type mytest_service, system_api_service, system_server_service, service_manager_type;</div></pre></td></tr></table></figure></p>\n<p>external\\sepolicy\\service_contexts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mytestservice u:object_r:mytest_service:s0</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>问题点:<br>在systemserver.java中添加如下代码，向servicemanager进程中添加一个service<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Hello Service\"</span>);</div><div class=\"line\">    ServiceManager.addService(<span class=\"string\">\"hello\"</span>, <span class=\"keyword\">new</span> HelloService());<span class=\"comment\">//</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</div><div class=\"line\">    Slog.e(TAG, <span class=\"string\">\"Failure starting Hello Service\"</span>, e);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>servicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。<br>执行代码的时候出现了如下错误:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E SELinux : avc:  denied  &#123; add &#125; for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager</div><div class=\"line\">E ServiceManager: add_service(&apos;hello&apos;,62) uid=1000 - PERMISSION DENIED</div></pre></td></tr></table></figure></p>\n<p>提示为SELinux Permission Denied。<br>解决办法参考:<br><a href=\"http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android</a><br>解决办法:</p>\n<p>external\\sepolicy\\service.te<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type mytest_service, system_api_service, system_server_service, service_manager_type;</div></pre></td></tr></table></figure></p>\n<p>external\\sepolicy\\service_contexts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mytestservice u:object_r:mytest_service:s0</div></pre></td></tr></table></figure>"},{"title":"编译报错 Out of memory error (version 1.2-rc4 'Carnac'","date":"2017-09-19T06:34:29.000Z","_content":"Starting build with ninja\nninja: Entering directory `.' \n[  0% 8/30301] Ensure Jack server is installed and started\nJack server already installed in \"/home/guochongxin/.jack-server\"\nLaunching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher\n[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack\n[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex\nFAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp\nOut of memory error (version 1.2-rc4 'Carnac' (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).\nGC overhead limit exceeded.\nTry increasing heap size with java option '-Xmx<size>'.\nWarning: This may have produced partial or corrupted output.\n[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm...AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack\nninja: build stopped: subcommand failed.\nmake: *** [ninja_wrapper] Error 1\n按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n\n将其修改为：\n>\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n然后在源码根目录下执行如下命令：\n./prebuilts/sdk/tools/jack-admin stop-server\n./prebuilts/sdk/tools/jack-admin start-server\n重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。\n参考网址：\nhttp://www.cnblogs.com/dinphy/p/6138803.html\nhttp://blog.csdn.net/u014386544/article/details/53287861\nhttp://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html","source":"_posts/jack编译报错.md","raw":"---\ntitle: 编译报错 Out of memory error (version 1.2-rc4 'Carnac'\ndate: 2017-09-19 14:34:29\ntags:\n---\nStarting build with ninja\nninja: Entering directory `.' \n[  0% 8/30301] Ensure Jack server is installed and started\nJack server already installed in \"/home/guochongxin/.jack-server\"\nLaunching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher\n[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack\n[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex\nFAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp\nOut of memory error (version 1.2-rc4 'Carnac' (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).\nGC overhead limit exceeded.\nTry increasing heap size with java option '-Xmx<size>'.\nWarning: This may have produced partial or corrupted output.\n[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm...AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack\nninja: build stopped: subcommand failed.\nmake: *** [ninja_wrapper] Error 1\n按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n\n将其修改为：\n>\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n然后在源码根目录下执行如下命令：\n./prebuilts/sdk/tools/jack-admin stop-server\n./prebuilts/sdk/tools/jack-admin start-server\n重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。\n参考网址：\nhttp://www.cnblogs.com/dinphy/p/6138803.html\nhttp://blog.csdn.net/u014386544/article/details/53287861\nhttp://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html","slug":"jack编译报错","published":1,"updated":"2017-09-19T06:37:16.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza3000oardxafvqokje","content":"<p>Starting build with ninja<br>ninja: Entering directory `.’<br>[  0% 8/30301] Ensure Jack server is installed and started<br>Jack server already installed in “/home/guochongxin/.jack-server”<br>Launching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher<br>[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack<br>[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex<br>FAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp<br>Out of memory error (version 1.2-rc4 ‘Carnac’ (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).<br>GC overhead limit exceeded.<br>Try increasing heap size with java option ‘-Xmx<size>‘.<br>Warning: This may have produced partial or corrupted output.<br>[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm…AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack<br>ninja: build stopped: subcommand failed.<br>make: <em>*</em> [ninja_wrapper] Error 1<br>按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME”</size></p>\n<p>将其修改为：<br>&gt;<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME”<br>然后在源码根目录下执行如下命令：<br>./prebuilts/sdk/tools/jack-admin stop-server<br>./prebuilts/sdk/tools/jack-admin start-server<br>重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。<br>参考网址：<br><a href=\"http://www.cnblogs.com/dinphy/p/6138803.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/dinphy/p/6138803.html</a><br><a href=\"http://blog.csdn.net/u014386544/article/details/53287861\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014386544/article/details/53287861</a><br><a href=\"http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html\" target=\"_blank\" rel=\"external\">http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Starting build with ninja<br>ninja: Entering directory `.’<br>[  0% 8/30301] Ensure Jack server is installed and started<br>Jack server already installed in “/home/guochongxin/.jack-server”<br>Launching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher<br>[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack<br>[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex<br>FAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp<br>Out of memory error (version 1.2-rc4 ‘Carnac’ (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).<br>GC overhead limit exceeded.<br>Try increasing heap size with java option ‘-Xmx<size>‘.<br>Warning: This may have produced partial or corrupted output.<br>[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm…AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack<br>ninja: build stopped: subcommand failed.<br>make: <em>*</em> [ninja_wrapper] Error 1<br>按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME”</size></p>\n<p>将其修改为：<br>&gt;<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME”<br>然后在源码根目录下执行如下命令：<br>./prebuilts/sdk/tools/jack-admin stop-server<br>./prebuilts/sdk/tools/jack-admin start-server<br>重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。<br>参考网址：<br><a href=\"http://www.cnblogs.com/dinphy/p/6138803.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/dinphy/p/6138803.html</a><br><a href=\"http://blog.csdn.net/u014386544/article/details/53287861\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014386544/article/details/53287861</a><br><a href=\"http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html\" target=\"_blank\" rel=\"external\">http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html</a></p>\n"},{"title":"menu菜单的解析","date":"2017-09-21T09:08:54.000Z","_content":"``` Java\nprivate void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException {\n    MenuState menuState = new MenuState(menu);\n\n    int eventType = parser.getEventType();\n    String tagName;\n    boolean lookingForEndOfUnknownTag = false;\n    String unknownTagName = null;\n\n    // This loop will skip to the menu start tag\n    do {\n        if (eventType == XmlPullParser.START_TAG) {\n            tagName = parser.getName();\n            if (tagName.equals(XML_MENU)) {                                 //\"menu\"\n                // Go to next tag\n                eventType = parser.next();\n                break;\n            }\n            throw new RuntimeException(\"Expecting menu, got \" + tagName);\n        }\n        eventType = parser.next();\n    } while (eventType != XmlPullParser.END_DOCUMENT);\n\n    boolean reachedEndOfMenu = false;\n    while (!reachedEndOfMenu) {\n        switch (eventType) {\n            case XmlPullParser.START_TAG:\n                if (lookingForEndOfUnknownTag) {\n                    break;\n                }\n\n                tagName = parser.getName();\n                if (tagName.equals(XML_GROUP)) {                            //\"group\"\n                    menuState.readGroup(attrs);\n                } else if (tagName.equals(XML_ITEM)) {                      //\"item\"\n                    menuState.readItem(attrs);\n                } else if (tagName.equals(XML_MENU)) {                      //\"menu\"\n                    // A menu start tag denotes a submenu for an item\n                    SubMenu subMenu = menuState.addSubMenuItem();\n\n                    // Parse the submenu into returned SubMenu\n                    parseMenu(parser, attrs, subMenu);\n                } else {\n                    lookingForEndOfUnknownTag = true;\n                    unknownTagName = tagName;\n                }\n                break;\n\n            case XmlPullParser.END_TAG:\n                tagName = parser.getName();\n                if (lookingForEndOfUnknownTag && tagName.equals(unknownTagName)) {\n                    lookingForEndOfUnknownTag = false;\n                    unknownTagName = null;\n                } else if (tagName.equals(XML_GROUP)) {\n                    menuState.resetGroup();\n                } else if (tagName.equals(XML_ITEM)) {\n                    // Add the item if it hasn't been added (if the item was\n                    // a submenu, it would have been added already)\n                    if (!menuState.hasAddedItem()) {\n                        if (menuState.itemActionProvider != null &&\n                                menuState.itemActionProvider.hasSubMenu()) {\n                            menuState.addSubMenuItem();\n                        } else {\n                            menuState.addItem();\n                        }\n                    }\n                } else if (tagName.equals(XML_MENU)) {\n                    reachedEndOfMenu = true;\n                }\n                break;\n\n            case XmlPullParser.END_DOCUMENT:\n                throw new RuntimeException(\"Unexpected end of document\");\n        }\n        eventType = parser.next();\n    }\n}\n```","source":"_posts/menu菜单的解析.md","raw":"---\ntitle: menu菜单的解析\ndate: 2017-09-21 17:08:54\ntags:\n---\n``` Java\nprivate void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException {\n    MenuState menuState = new MenuState(menu);\n\n    int eventType = parser.getEventType();\n    String tagName;\n    boolean lookingForEndOfUnknownTag = false;\n    String unknownTagName = null;\n\n    // This loop will skip to the menu start tag\n    do {\n        if (eventType == XmlPullParser.START_TAG) {\n            tagName = parser.getName();\n            if (tagName.equals(XML_MENU)) {                                 //\"menu\"\n                // Go to next tag\n                eventType = parser.next();\n                break;\n            }\n            throw new RuntimeException(\"Expecting menu, got \" + tagName);\n        }\n        eventType = parser.next();\n    } while (eventType != XmlPullParser.END_DOCUMENT);\n\n    boolean reachedEndOfMenu = false;\n    while (!reachedEndOfMenu) {\n        switch (eventType) {\n            case XmlPullParser.START_TAG:\n                if (lookingForEndOfUnknownTag) {\n                    break;\n                }\n\n                tagName = parser.getName();\n                if (tagName.equals(XML_GROUP)) {                            //\"group\"\n                    menuState.readGroup(attrs);\n                } else if (tagName.equals(XML_ITEM)) {                      //\"item\"\n                    menuState.readItem(attrs);\n                } else if (tagName.equals(XML_MENU)) {                      //\"menu\"\n                    // A menu start tag denotes a submenu for an item\n                    SubMenu subMenu = menuState.addSubMenuItem();\n\n                    // Parse the submenu into returned SubMenu\n                    parseMenu(parser, attrs, subMenu);\n                } else {\n                    lookingForEndOfUnknownTag = true;\n                    unknownTagName = tagName;\n                }\n                break;\n\n            case XmlPullParser.END_TAG:\n                tagName = parser.getName();\n                if (lookingForEndOfUnknownTag && tagName.equals(unknownTagName)) {\n                    lookingForEndOfUnknownTag = false;\n                    unknownTagName = null;\n                } else if (tagName.equals(XML_GROUP)) {\n                    menuState.resetGroup();\n                } else if (tagName.equals(XML_ITEM)) {\n                    // Add the item if it hasn't been added (if the item was\n                    // a submenu, it would have been added already)\n                    if (!menuState.hasAddedItem()) {\n                        if (menuState.itemActionProvider != null &&\n                                menuState.itemActionProvider.hasSubMenu()) {\n                            menuState.addSubMenuItem();\n                        } else {\n                            menuState.addItem();\n                        }\n                    }\n                } else if (tagName.equals(XML_MENU)) {\n                    reachedEndOfMenu = true;\n                }\n                break;\n\n            case XmlPullParser.END_DOCUMENT:\n                throw new RuntimeException(\"Unexpected end of document\");\n        }\n        eventType = parser.next();\n    }\n}\n```","slug":"menu菜单的解析","published":1,"updated":"2017-09-21T09:09:30.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza4000pardxaul5lzlg","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">parseMenu</span><span class=\"params\">(XmlPullParser parser, AttributeSet attrs, Menu menu)</span> <span class=\"keyword\">throws</span> XmlPullParserException, IOException </span>&#123;</div><div class=\"line\">    MenuState menuState = <span class=\"keyword\">new</span> MenuState(menu);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> eventType = parser.getEventType();</div><div class=\"line\">    String tagName;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    String unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// This loop will skip to the menu start tag</span></div><div class=\"line\">    <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (eventType == XmlPullParser.START_TAG) &#123;</div><div class=\"line\">            tagName = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                                 <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                <span class=\"comment\">// Go to next tag</span></div><div class=\"line\">                eventType = parser.next();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Expecting menu, got \"</span> + tagName);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125; <span class=\"keyword\">while</span> (eventType != XmlPullParser.END_DOCUMENT);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">boolean</span> reachedEndOfMenu = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (!reachedEndOfMenu) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (eventType) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.START_TAG:</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag) &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;                            <span class=\"comment\">//\"group\"</span></div><div class=\"line\">                    menuState.readGroup(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;                      <span class=\"comment\">//\"item\"</span></div><div class=\"line\">                    menuState.readItem(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                      <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                    <span class=\"comment\">// A menu start tag denotes a submenu for an item</span></div><div class=\"line\">                    SubMenu subMenu = menuState.addSubMenuItem();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">// Parse the submenu into returned SubMenu</span></div><div class=\"line\">                    parseMenu(parser, attrs, subMenu);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    unknownTagName = tagName;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_TAG:</div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag &amp;&amp; tagName.equals(unknownTagName)) &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;</div><div class=\"line\">                    menuState.resetGroup();</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;</div><div class=\"line\">                    <span class=\"comment\">// Add the item if it hasn't been added (if the item was</span></div><div class=\"line\">                    <span class=\"comment\">// a submenu, it would have been added already)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (!menuState.hasAddedItem()) &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (menuState.itemActionProvider != <span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">                                menuState.itemActionProvider.hasSubMenu()) &#123;</div><div class=\"line\">                            menuState.addSubMenuItem();</div><div class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                            menuState.addItem();</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;</div><div class=\"line\">                    reachedEndOfMenu = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_DOCUMENT:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Unexpected end of document\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">parseMenu</span><span class=\"params\">(XmlPullParser parser, AttributeSet attrs, Menu menu)</span> <span class=\"keyword\">throws</span> XmlPullParserException, IOException </span>&#123;</div><div class=\"line\">    MenuState menuState = <span class=\"keyword\">new</span> MenuState(menu);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> eventType = parser.getEventType();</div><div class=\"line\">    String tagName;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    String unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// This loop will skip to the menu start tag</span></div><div class=\"line\">    <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (eventType == XmlPullParser.START_TAG) &#123;</div><div class=\"line\">            tagName = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                                 <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                <span class=\"comment\">// Go to next tag</span></div><div class=\"line\">                eventType = parser.next();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Expecting menu, got \"</span> + tagName);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125; <span class=\"keyword\">while</span> (eventType != XmlPullParser.END_DOCUMENT);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">boolean</span> reachedEndOfMenu = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (!reachedEndOfMenu) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (eventType) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.START_TAG:</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag) &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;                            <span class=\"comment\">//\"group\"</span></div><div class=\"line\">                    menuState.readGroup(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;                      <span class=\"comment\">//\"item\"</span></div><div class=\"line\">                    menuState.readItem(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                      <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                    <span class=\"comment\">// A menu start tag denotes a submenu for an item</span></div><div class=\"line\">                    SubMenu subMenu = menuState.addSubMenuItem();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">// Parse the submenu into returned SubMenu</span></div><div class=\"line\">                    parseMenu(parser, attrs, subMenu);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    unknownTagName = tagName;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_TAG:</div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag &amp;&amp; tagName.equals(unknownTagName)) &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;</div><div class=\"line\">                    menuState.resetGroup();</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;</div><div class=\"line\">                    <span class=\"comment\">// Add the item if it hasn't been added (if the item was</span></div><div class=\"line\">                    <span class=\"comment\">// a submenu, it would have been added already)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (!menuState.hasAddedItem()) &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (menuState.itemActionProvider != <span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">                                menuState.itemActionProvider.hasSubMenu()) &#123;</div><div class=\"line\">                            menuState.addSubMenuItem();</div><div class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                            menuState.addItem();</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;</div><div class=\"line\">                    reachedEndOfMenu = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_DOCUMENT:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Unexpected end of document\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"setDescendantFocusability的参数含义","date":"2017-09-21T05:39:14.000Z","_content":"beforeDescendants:viewgroup会优先其子类控件而获取到焦点\nafterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点\nblocksDescendants:viewgroup会覆盖子类控件而直接获得焦点\n\nViewGroup.java\n``` Java\npublic void setDescendantFocusability(int focusability) {\n    switch (focusability) {\n    case FOCUS_BEFORE_DESCENDANTS:\n    case FOCUS_AFTER_DESCENDANTS:\n    case FOCUS_BLOCK_DESCENDANTS:\n        break;\n    default:\n        throw new IllegalArgumentException(\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\");\n    }\n    mGroupFlags &= ~FLAG_MASK_FOCUSABILITY;\n    mGroupFlags |= (focusability & FLAG_MASK_FOCUSABILITY);\n}\n```","source":"_posts/setDescendantFocusability的参数含义.md","raw":"---\ntitle: setDescendantFocusability的参数含义\ndate: 2017-09-21 13:39:14\ntags:\n---\nbeforeDescendants:viewgroup会优先其子类控件而获取到焦点\nafterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点\nblocksDescendants:viewgroup会覆盖子类控件而直接获得焦点\n\nViewGroup.java\n``` Java\npublic void setDescendantFocusability(int focusability) {\n    switch (focusability) {\n    case FOCUS_BEFORE_DESCENDANTS:\n    case FOCUS_AFTER_DESCENDANTS:\n    case FOCUS_BLOCK_DESCENDANTS:\n        break;\n    default:\n        throw new IllegalArgumentException(\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\");\n    }\n    mGroupFlags &= ~FLAG_MASK_FOCUSABILITY;\n    mGroupFlags |= (focusability & FLAG_MASK_FOCUSABILITY);\n}\n```","slug":"setDescendantFocusability的参数含义","published":1,"updated":"2017-09-21T05:54:32.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza5000qardx8skq3yp3","content":"<p>beforeDescendants:viewgroup会优先其子类控件而获取到焦点<br>afterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点<br>blocksDescendants:viewgroup会覆盖子类控件而直接获得焦点</p>\n<p>ViewGroup.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDescendantFocusability</span><span class=\"params\">(<span class=\"keyword\">int</span> focusability)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (focusability) &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BEFORE_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_AFTER_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BLOCK_DESCENDANTS:</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    <span class=\"keyword\">default</span>:</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mGroupFlags &amp;= ~FLAG_MASK_FOCUSABILITY;</div><div class=\"line\">    mGroupFlags |= (focusability &amp; FLAG_MASK_FOCUSABILITY);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>beforeDescendants:viewgroup会优先其子类控件而获取到焦点<br>afterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点<br>blocksDescendants:viewgroup会覆盖子类控件而直接获得焦点</p>\n<p>ViewGroup.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDescendantFocusability</span><span class=\"params\">(<span class=\"keyword\">int</span> focusability)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (focusability) &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BEFORE_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_AFTER_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BLOCK_DESCENDANTS:</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    <span class=\"keyword\">default</span>:</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mGroupFlags &amp;= ~FLAG_MASK_FOCUSABILITY;</div><div class=\"line\">    mGroupFlags |= (focusability &amp; FLAG_MASK_FOCUSABILITY);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"如何设置确认selinux 模式","date":"2017-09-19T07:54:53.000Z","_content":"[Description]\nlinux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？\n \n[Keyword]\nandroid, SELinux, Enforce, Permissive\n \n[Solution]\n在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。\n在ENG 版本中, 可以使用setenforce 命令进行设置:\n``` bash\nadb shell setenforce 0    //设置成permissive 模式\nadb shell setenforce 1    //设置成enforce 模式\n```\n \n在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：\n``` bash\nroot@mt6589_phone_720pv2:/ # getenforce\ngetenforce\nEnforcing\n```\n \n如果想开机一启动就设置模式，你可以用下面方式:\nKK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk\nL  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk\nM 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk\nchoose one of following value -> 1: disabled/ 2: permissive /3: enforcing\nSELINUX_STATUS := 3\n可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。\n \n注意的是:\n在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,\n需要修改 system/core/init/Android.mk\n如果是 L 版本 新增:\n```\nifeq ($(strip $(TARGET_BUILD_VARIANT)),user)\nLOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1\nendif\n```\n \n如果是在 M 版本 将:\n```\nifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n\n修改成:\n```\nifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n \n需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. \n \n \n[相关FAQ]\n[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现\"avc: denied\" 要如何处理\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11486\n[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11485\n[FAQ11483] 如何快速Debug SELinux Policy 问题\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11483","source":"_posts/shutdown-selinux.md","raw":"---\ntitle: 如何设置确认selinux 模式\ndate: 2017-09-19 15:54:53\ntags:\n---\n[Description]\nlinux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？\n \n[Keyword]\nandroid, SELinux, Enforce, Permissive\n \n[Solution]\n在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。\n在ENG 版本中, 可以使用setenforce 命令进行设置:\n``` bash\nadb shell setenforce 0    //设置成permissive 模式\nadb shell setenforce 1    //设置成enforce 模式\n```\n \n在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：\n``` bash\nroot@mt6589_phone_720pv2:/ # getenforce\ngetenforce\nEnforcing\n```\n \n如果想开机一启动就设置模式，你可以用下面方式:\nKK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk\nL  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk\nM 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk\nchoose one of following value -> 1: disabled/ 2: permissive /3: enforcing\nSELINUX_STATUS := 3\n可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。\n \n注意的是:\n在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,\n需要修改 system/core/init/Android.mk\n如果是 L 版本 新增:\n```\nifeq ($(strip $(TARGET_BUILD_VARIANT)),user)\nLOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1\nendif\n```\n \n如果是在 M 版本 将:\n```\nifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n\n修改成:\n```\nifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n \n需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. \n \n \n[相关FAQ]\n[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现\"avc: denied\" 要如何处理\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11486\n[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11485\n[FAQ11483] 如何快速Debug SELinux Policy 问题\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11483","slug":"shutdown-selinux","published":1,"updated":"2017-09-21T05:57:31.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza6000rardx8cdfkwh8","content":"<p>[Description]<br>linux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？</p>\n<p>[Keyword]<br>android, SELinux, Enforce, Permissive</p>\n<p>[Solution]<br>在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。<br>在ENG 版本中, 可以使用setenforce 命令进行设置:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setenforce 0    //设置成permissive 模式</div><div class=\"line\">adb shell setenforce 1    //设置成enforce 模式</div></pre></td></tr></table></figure></p>\n<p>在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mt6589_phone_720pv2:/ <span class=\"comment\"># getenforce</span></div><div class=\"line\">getenforce</div><div class=\"line\">Enforcing</div></pre></td></tr></table></figure></p>\n<p>如果想开机一启动就设置模式，你可以用下面方式:<br>KK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk<br>L  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk<br>M 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk<br>choose one of following value -&gt; 1: disabled/ 2: permissive /3: enforcing<br>SELINUX_STATUS := 3<br>可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。</p>\n<p>注意的是:<br>在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,<br>需要修改 system/core/init/Android.mk<br>如果是 L 版本 新增:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifeq ($(strip $(TARGET_BUILD_VARIANT)),user)</div><div class=\"line\">LOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">endif</div></pre></td></tr></table></figure></p>\n<p>如果是在 M 版本 将:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>修改成:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. </p>\n<p>[相关FAQ]<br>[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现”avc: denied” 要如何处理<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486</a><br>[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485</a><br>[FAQ11483] 如何快速Debug SELinux Policy 问题<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>[Description]<br>linux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？</p>\n<p>[Keyword]<br>android, SELinux, Enforce, Permissive</p>\n<p>[Solution]<br>在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。<br>在ENG 版本中, 可以使用setenforce 命令进行设置:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setenforce 0    //设置成permissive 模式</div><div class=\"line\">adb shell setenforce 1    //设置成enforce 模式</div></pre></td></tr></table></figure></p>\n<p>在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mt6589_phone_720pv2:/ <span class=\"comment\"># getenforce</span></div><div class=\"line\">getenforce</div><div class=\"line\">Enforcing</div></pre></td></tr></table></figure></p>\n<p>如果想开机一启动就设置模式，你可以用下面方式:<br>KK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk<br>L  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk<br>M 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk<br>choose one of following value -&gt; 1: disabled/ 2: permissive /3: enforcing<br>SELINUX_STATUS := 3<br>可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。</p>\n<p>注意的是:<br>在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,<br>需要修改 system/core/init/Android.mk<br>如果是 L 版本 新增:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifeq ($(strip $(TARGET_BUILD_VARIANT)),user)</div><div class=\"line\">LOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">endif</div></pre></td></tr></table></figure></p>\n<p>如果是在 M 版本 将:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>修改成:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. </p>\n<p>[相关FAQ]<br>[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现”avc: denied” 要如何处理<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486</a><br>[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485</a><br>[FAQ11483] 如何快速Debug SELinux Policy 问题<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483</a></p>\n"},{"title":"sqlite rawQuery() 方法怎么用","date":"2017-09-22T02:45:52.000Z","_content":"``` Java\nCursor cursor = database.rawQuery(\"select count(*) from contacts;\", null);\ncursor.moveToFirst();\t\t//这里必须要加上这句话，否则会报错\nint count = cursor.getInt(0);\n```","source":"_posts/sqlite-rawQuery.md","raw":"---\ntitle: sqlite rawQuery() 方法怎么用\ndate: 2017-09-22 10:45:52\ntags:\n---\n``` Java\nCursor cursor = database.rawQuery(\"select count(*) from contacts;\", null);\ncursor.moveToFirst();\t\t//这里必须要加上这句话，否则会报错\nint count = cursor.getInt(0);\n```","slug":"sqlite-rawQuery","published":1,"updated":"2017-09-22T02:46:36.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza7000sardx10xq2y0z","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor = database.rawQuery(<span class=\"string\">\"select count(*) from contacts;\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">cursor.moveToFirst();\t\t<span class=\"comment\">//这里必须要加上这句话，否则会报错</span></div><div class=\"line\"><span class=\"keyword\">int</span> count = cursor.getInt(<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor = database.rawQuery(<span class=\"string\">\"select count(*) from contacts;\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">cursor.moveToFirst();\t\t<span class=\"comment\">//这里必须要加上这句话，否则会报错</span></div><div class=\"line\"><span class=\"keyword\">int</span> count = cursor.getInt(<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>"},{"title":"support_features","date":"2017-09-21T09:10:05.000Z","_content":"1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，\nA) System Feature\nPackageManager pm = getPackageManager();\npm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)\nIt returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS\n客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性\n\n解决：\na. PackageManager.hasSystemFeature() 源码分析\nalps/frameworks/base/core/java/android/content/pm/PackageManager.java\nalps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java\n跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true\n所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }\nvoid readPermissions() {} 这个方法会读取 \"etc/permissions\" 目录下的所有文件中的 feature 属性\n\n通过下面这段代码可以查看手机支持的所有feature\n``` Java\nandroid.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();\nfor(android.content.pm.FeatureInfo featureInfo : featureInfos){\n    android.util.Log.e(\"zhangqi8888\", \"DialpadFragment->featureInfo:\"+featureInfo.toString());\n}\n```\n\nb. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括\n...\n/system/etc/permissions/handheld_core_hardware.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\n/system/etc/permissions/android.hardware.touchscreen.xml\n在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\" />\n\nc. 通过在 alps/ 目录下搜索文件 find . -name \"android.hardware.touchscreen\"，找到在如下一些文件\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n\n这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下\n``` Makefile\n#touch related file for CTS\nifeq ($(strip $(CUSTOM_KERNEL_TOUCHPANEL)),generic)\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nelse\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nendif\n```\n\n在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值\n#touch driver need to report correct touch axes\nCUSTOM_KERNEL_TOUCHPANEL=\n\nd. 最终修改\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n把以上几个文件中 <feature name=\"android.hardware.touchscreen\" /> 的相关属性都注释掉\n\ne. 有何影响\n通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nmIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);\nif (mIsTouchDevice) {\n    if ((sources & InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) {\n        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;\n    }\n}\n```\n改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响\n\n2.\nB) Configuration.touchscreen\n``` Java\nConfiguration config = getResources().getConfiguration();\nconfig.touchscreen\n```\nit returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.\n\n解决方案：\n默认就是 TOUCHSCREEN_NOTOUCH，无需修改\n\n3.\nC) Configuration.keyboard\nconfig.keyboard\nit returns KEYBOARD_NOKEYS on the test device which is NOT correct. \nIt should return KEYBOARD_12KEY\n\n解决方案：\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nboolean computeScreenConfigurationLocked(Configuration config) {\n    ......\n    //zhangqi modified begin\n    if (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) {\n        config.keyboard = Configuration.KEYBOARD_QWERTY;\n        keyboardPresence |= presenceFlag;\n    }else if(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC){\n        config.keyboard = Configuration.KEYBOARD_12KEY;     //配置成 KEYBOARD_12KEY\n    }\n    //zhangqi modified end\n    ......\n}\n```","source":"_posts/support-features.md","raw":"---\ntitle: support_features\ndate: 2017-09-21 17:10:05\ntags:\n---\n1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，\nA) System Feature\nPackageManager pm = getPackageManager();\npm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)\nIt returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS\n客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性\n\n解决：\na. PackageManager.hasSystemFeature() 源码分析\nalps/frameworks/base/core/java/android/content/pm/PackageManager.java\nalps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java\n跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true\n所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }\nvoid readPermissions() {} 这个方法会读取 \"etc/permissions\" 目录下的所有文件中的 feature 属性\n\n通过下面这段代码可以查看手机支持的所有feature\n``` Java\nandroid.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();\nfor(android.content.pm.FeatureInfo featureInfo : featureInfos){\n    android.util.Log.e(\"zhangqi8888\", \"DialpadFragment->featureInfo:\"+featureInfo.toString());\n}\n```\n\nb. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括\n...\n/system/etc/permissions/handheld_core_hardware.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\n/system/etc/permissions/android.hardware.touchscreen.xml\n在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\" />\n\nc. 通过在 alps/ 目录下搜索文件 find . -name \"android.hardware.touchscreen\"，找到在如下一些文件\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n\n这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下\n``` Makefile\n#touch related file for CTS\nifeq ($(strip $(CUSTOM_KERNEL_TOUCHPANEL)),generic)\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nelse\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nendif\n```\n\n在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值\n#touch driver need to report correct touch axes\nCUSTOM_KERNEL_TOUCHPANEL=\n\nd. 最终修改\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n把以上几个文件中 <feature name=\"android.hardware.touchscreen\" /> 的相关属性都注释掉\n\ne. 有何影响\n通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nmIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);\nif (mIsTouchDevice) {\n    if ((sources & InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) {\n        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;\n    }\n}\n```\n改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响\n\n2.\nB) Configuration.touchscreen\n``` Java\nConfiguration config = getResources().getConfiguration();\nconfig.touchscreen\n```\nit returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.\n\n解决方案：\n默认就是 TOUCHSCREEN_NOTOUCH，无需修改\n\n3.\nC) Configuration.keyboard\nconfig.keyboard\nit returns KEYBOARD_NOKEYS on the test device which is NOT correct. \nIt should return KEYBOARD_12KEY\n\n解决方案：\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nboolean computeScreenConfigurationLocked(Configuration config) {\n    ......\n    //zhangqi modified begin\n    if (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) {\n        config.keyboard = Configuration.KEYBOARD_QWERTY;\n        keyboardPresence |= presenceFlag;\n    }else if(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC){\n        config.keyboard = Configuration.KEYBOARD_12KEY;     //配置成 KEYBOARD_12KEY\n    }\n    //zhangqi modified end\n    ......\n}\n```","slug":"support-features","published":1,"updated":"2017-09-21T09:13:38.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza7000tardx0nd1e7hs","content":"<p>1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，<br>A) System Feature<br>PackageManager pm = getPackageManager();<br>pm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)<br>It returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS<br>客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性</p>\n<p>解决：<br>a. PackageManager.hasSystemFeature() 源码分析<br>alps/frameworks/base/core/java/android/content/pm/PackageManager.java<br>alps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java<br>跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true<br>所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }<br>void readPermissions() {} 这个方法会读取 “etc/permissions” 目录下的所有文件中的 feature 属性</p>\n<p>通过下面这段代码可以查看手机支持的所有feature<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();</div><div class=\"line\"><span class=\"keyword\">for</span>(android.content.pm.FeatureInfo featureInfo : featureInfos)&#123;</div><div class=\"line\">    android.util.Log.e(<span class=\"string\">\"zhangqi8888\"</span>, <span class=\"string\">\"DialpadFragment-&gt;featureInfo:\"</span>+featureInfo.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>b. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括<br>…<br>/system/etc/permissions/handheld_core_hardware.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml<br>/system/etc/permissions/android.hardware.touchscreen.xml<br>在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\"></feature></p>\n<p>c. 通过在 alps/ 目录下搜索文件 find . -name “android.hardware.touchscreen”，找到在如下一些文件<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml</p>\n<p>这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#touch related file for CTS</span></div><div class=\"line\"><span class=\"keyword\">ifeq</span> (<span class=\"variable\">$(<span class=\"built_in\">strip</span> <span class=\"variable\">$(CUSTOM_KERNEL_TOUCHPANEL)</span>)</span>,generic)</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值</p>\n<p>#touch driver need to report correct touch axes<br>CUSTOM_KERNEL_TOUCHPANEL=</p>\n<p>d. 最终修改<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml<br>把以上几个文件中 <feature name=\"android.hardware.touchscreen\"> 的相关属性都注释掉</feature></p>\n<p>e. 有何影响<br>通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);</div><div class=\"line\"><span class=\"keyword\">if</span> (mIsTouchDevice) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((sources &amp; InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) &#123;</div><div class=\"line\">        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响</p>\n<p>2.<br>B) Configuration.touchscreen<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Configuration config = getResources().getConfiguration();</div><div class=\"line\">config.touchscreen</div></pre></td></tr></table></figure></p>\n<p>it returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.</p>\n<p>解决方案：<br>默认就是 TOUCHSCREEN_NOTOUCH，无需修改</p>\n<p>3.<br>C) Configuration.keyboard<br>config.keyboard<br>it returns KEYBOARD_NOKEYS on the test device which is NOT correct.<br>It should return KEYBOARD_12KEY</p>\n<p>解决方案：<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">computeScreenConfigurationLocked</span><span class=\"params\">(Configuration config)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified begin</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) &#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_QWERTY;</div><div class=\"line\">        keyboardPresence |= presenceFlag;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC)&#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_12KEY;     <span class=\"comment\">//配置成 KEYBOARD_12KEY</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified end</span></div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，<br>A) System Feature<br>PackageManager pm = getPackageManager();<br>pm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)<br>It returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS<br>客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性</p>\n<p>解决：<br>a. PackageManager.hasSystemFeature() 源码分析<br>alps/frameworks/base/core/java/android/content/pm/PackageManager.java<br>alps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java<br>跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true<br>所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }<br>void readPermissions() {} 这个方法会读取 “etc/permissions” 目录下的所有文件中的 feature 属性</p>\n<p>通过下面这段代码可以查看手机支持的所有feature<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();</div><div class=\"line\"><span class=\"keyword\">for</span>(android.content.pm.FeatureInfo featureInfo : featureInfos)&#123;</div><div class=\"line\">    android.util.Log.e(<span class=\"string\">\"zhangqi8888\"</span>, <span class=\"string\">\"DialpadFragment-&gt;featureInfo:\"</span>+featureInfo.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>b. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括<br>…<br>/system/etc/permissions/handheld_core_hardware.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml<br>/system/etc/permissions/android.hardware.touchscreen.xml<br>在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\"></feature></p>\n<p>c. 通过在 alps/ 目录下搜索文件 find . -name “android.hardware.touchscreen”，找到在如下一些文件<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml</p>\n<p>这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#touch related file for CTS</span></div><div class=\"line\"><span class=\"keyword\">ifeq</span> (<span class=\"variable\">$(<span class=\"built_in\">strip</span> <span class=\"variable\">$(CUSTOM_KERNEL_TOUCHPANEL)</span>)</span>,generic)</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值</p>\n<p>#touch driver need to report correct touch axes<br>CUSTOM_KERNEL_TOUCHPANEL=</p>\n<p>d. 最终修改<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml<br>把以上几个文件中 <feature name=\"android.hardware.touchscreen\"> 的相关属性都注释掉</feature></p>\n<p>e. 有何影响<br>通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);</div><div class=\"line\"><span class=\"keyword\">if</span> (mIsTouchDevice) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((sources &amp; InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) &#123;</div><div class=\"line\">        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响</p>\n<p>2.<br>B) Configuration.touchscreen<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Configuration config = getResources().getConfiguration();</div><div class=\"line\">config.touchscreen</div></pre></td></tr></table></figure></p>\n<p>it returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.</p>\n<p>解决方案：<br>默认就是 TOUCHSCREEN_NOTOUCH，无需修改</p>\n<p>3.<br>C) Configuration.keyboard<br>config.keyboard<br>it returns KEYBOARD_NOKEYS on the test device which is NOT correct.<br>It should return KEYBOARD_12KEY</p>\n<p>解决方案：<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">computeScreenConfigurationLocked</span><span class=\"params\">(Configuration config)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified begin</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) &#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_QWERTY;</div><div class=\"line\">        keyboardPresence |= presenceFlag;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC)&#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_12KEY;     <span class=\"comment\">//配置成 KEYBOARD_12KEY</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified end</span></div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"ubuntu搜狗输入法无法输入中文","date":"2017-09-21T02:42:39.000Z","_content":"\n今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。\n系统环境;ubuntu 14.04LTS\n搜狗版本:2.1.0.0082\nfcitx版本:1:4.2.9.1-lu\n\n### 方法一:重新启动搜狗输入法\n通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:\n``` bash\n~$ sudo killall fcitx\n~$ sudo killall sogou-qinpanel\n```\n\n### 方法二:检查修复安装依赖\n因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题\n``` bash\n~$ sudo apt-get install -f\n```\n\n### 方法三:删除配置文件，重启搜狗\nubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：\nSogouPY、SogouPY.users、sogou-qimpanel\n删除这3个文件夹，然后重启搜狗。\n我使用这种方法后解决了无法输入中文问题。\n\n### 小记:\nLinux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.\n因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.","source":"_posts/ubuntu搜狗输入法无法输入中文.md","raw":"---\ntitle: ubuntu搜狗输入法无法输入中文\ndate: 2017-09-21 10:42:39\ntags:\n---\n\n今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。\n系统环境;ubuntu 14.04LTS\n搜狗版本:2.1.0.0082\nfcitx版本:1:4.2.9.1-lu\n\n### 方法一:重新启动搜狗输入法\n通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:\n``` bash\n~$ sudo killall fcitx\n~$ sudo killall sogou-qinpanel\n```\n\n### 方法二:检查修复安装依赖\n因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题\n``` bash\n~$ sudo apt-get install -f\n```\n\n### 方法三:删除配置文件，重启搜狗\nubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：\nSogouPY、SogouPY.users、sogou-qimpanel\n删除这3个文件夹，然后重启搜狗。\n我使用这种方法后解决了无法输入中文问题。\n\n### 小记:\nLinux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.\n因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.","slug":"ubuntu搜狗输入法无法输入中文","published":1,"updated":"2017-09-21T03:22:01.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza8000uardx8cca2ase","content":"<p>今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。<br>系统环境;ubuntu 14.04LTS<br>搜狗版本:2.1.0.0082<br>fcitx版本:1:4.2.9.1-lu</p>\n<h3 id=\"方法一-重新启动搜狗输入法\"><a href=\"#方法一-重新启动搜狗输入法\" class=\"headerlink\" title=\"方法一:重新启动搜狗输入法\"></a>方法一:重新启动搜狗输入法</h3><p>通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo killall fcitx</div><div class=\"line\">~$ sudo killall sogou-qinpanel</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-检查修复安装依赖\"><a href=\"#方法二-检查修复安装依赖\" class=\"headerlink\" title=\"方法二:检查修复安装依赖\"></a>方法二:检查修复安装依赖</h3><p>因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo apt-get install -f</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法三-删除配置文件，重启搜狗\"><a href=\"#方法三-删除配置文件，重启搜狗\" class=\"headerlink\" title=\"方法三:删除配置文件，重启搜狗\"></a>方法三:删除配置文件，重启搜狗</h3><p>ubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：<br>SogouPY、SogouPY.users、sogou-qimpanel<br>删除这3个文件夹，然后重启搜狗。<br>我使用这种方法后解决了无法输入中文问题。</p>\n<h3 id=\"小记\"><a href=\"#小记\" class=\"headerlink\" title=\"小记:\"></a>小记:</h3><p>Linux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.<br>因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。<br>系统环境;ubuntu 14.04LTS<br>搜狗版本:2.1.0.0082<br>fcitx版本:1:4.2.9.1-lu</p>\n<h3 id=\"方法一-重新启动搜狗输入法\"><a href=\"#方法一-重新启动搜狗输入法\" class=\"headerlink\" title=\"方法一:重新启动搜狗输入法\"></a>方法一:重新启动搜狗输入法</h3><p>通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo killall fcitx</div><div class=\"line\">~$ sudo killall sogou-qinpanel</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-检查修复安装依赖\"><a href=\"#方法二-检查修复安装依赖\" class=\"headerlink\" title=\"方法二:检查修复安装依赖\"></a>方法二:检查修复安装依赖</h3><p>因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo apt-get install -f</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法三-删除配置文件，重启搜狗\"><a href=\"#方法三-删除配置文件，重启搜狗\" class=\"headerlink\" title=\"方法三:删除配置文件，重启搜狗\"></a>方法三:删除配置文件，重启搜狗</h3><p>ubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：<br>SogouPY、SogouPY.users、sogou-qimpanel<br>删除这3个文件夹，然后重启搜狗。<br>我使用这种方法后解决了无法输入中文问题。</p>\n<h3 id=\"小记\"><a href=\"#小记\" class=\"headerlink\" title=\"小记:\"></a>小记:</h3><p>Linux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.<br>因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.</p>\n"},{"title":"wifi热点名称保存读取","date":"2017-09-22T01:27:51.000Z","_content":"\nframeworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n\n//保存到 softap.conf 文件中\n``` Java\nprivate static final String AP_CONFIG_FILE = Environment.getDataDirectory() + \"/misc/wifi/softap.conf\";\n```\n\n//保存\n``` Java\nprivate void writeApConfiguration(final WifiConfiguration config) {\n    DataOutputStream out = null;\n    try {\n        out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(AP_CONFIG_FILE)));\n        out.writeInt(AP_CONFIG_FILE_VERSION);\n        out.writeUTF(config.SSID);\n        int authType = config.getAuthType();\n        out.writeInt(authType);\n        if (authType != KeyMgmt.NONE) {\n            out.writeUTF(config.preSharedKey);\n        }\n        out.writeInt(config.channel);\n        out.writeInt(config.channelWidth);\n    } catch (IOException e) {\n        Log.e(TAG, \"Error writing hotspot configuration\" + e);\n    } finally {\n        if (out != null) {\n            try {\n                out.close();\n            } catch (IOException e) {}\n        }\n    }\n}\n```\n//读取\n``` Java\nvoid loadApConfiguration() {\n    DataInputStream in = null;\n    try {\n        WifiConfiguration config = new WifiConfiguration();\n        in = new DataInputStream(new BufferedInputStream(new FileInputStream(AP_CONFIG_FILE)));\n        int version = in.readInt();\n        if (version != 1) {\n            Log.e(TAG, \"Bad version on hotspot configuration file, set defaults\");\n            setDefaultApConfiguration();\n            return;\n        }\n        config.SSID = in.readUTF();\n        int authType = in.readInt();\n        config.allowedKeyManagement.set(authType);\n        if (authType != KeyMgmt.NONE) {\n            config.preSharedKey = in.readUTF();\n        }\n        config.channel = in.readInt();\n        config.channelWidth = in.readInt();\n        mWifiApConfig = config;\n    } catch (IOException ignore) {\n        setDefaultApConfiguration();\n    } finally {\n        if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","source":"_posts/wifi热点名称保存读取.md","raw":"---\ntitle: wifi热点名称保存读取\ndate: 2017-09-22 09:27:51\ntags:\n---\n\nframeworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n\n//保存到 softap.conf 文件中\n``` Java\nprivate static final String AP_CONFIG_FILE = Environment.getDataDirectory() + \"/misc/wifi/softap.conf\";\n```\n\n//保存\n``` Java\nprivate void writeApConfiguration(final WifiConfiguration config) {\n    DataOutputStream out = null;\n    try {\n        out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(AP_CONFIG_FILE)));\n        out.writeInt(AP_CONFIG_FILE_VERSION);\n        out.writeUTF(config.SSID);\n        int authType = config.getAuthType();\n        out.writeInt(authType);\n        if (authType != KeyMgmt.NONE) {\n            out.writeUTF(config.preSharedKey);\n        }\n        out.writeInt(config.channel);\n        out.writeInt(config.channelWidth);\n    } catch (IOException e) {\n        Log.e(TAG, \"Error writing hotspot configuration\" + e);\n    } finally {\n        if (out != null) {\n            try {\n                out.close();\n            } catch (IOException e) {}\n        }\n    }\n}\n```\n//读取\n``` Java\nvoid loadApConfiguration() {\n    DataInputStream in = null;\n    try {\n        WifiConfiguration config = new WifiConfiguration();\n        in = new DataInputStream(new BufferedInputStream(new FileInputStream(AP_CONFIG_FILE)));\n        int version = in.readInt();\n        if (version != 1) {\n            Log.e(TAG, \"Bad version on hotspot configuration file, set defaults\");\n            setDefaultApConfiguration();\n            return;\n        }\n        config.SSID = in.readUTF();\n        int authType = in.readInt();\n        config.allowedKeyManagement.set(authType);\n        if (authType != KeyMgmt.NONE) {\n            config.preSharedKey = in.readUTF();\n        }\n        config.channel = in.readInt();\n        config.channelWidth = in.readInt();\n        mWifiApConfig = config;\n    } catch (IOException ignore) {\n        setDefaultApConfiguration();\n    } finally {\n        if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","slug":"wifi热点名称保存读取","published":1,"updated":"2017-09-22T03:57:02.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdza9000vardxftfc785w","content":"<p>frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java</p>\n<p>//保存到 softap.conf 文件中<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String AP_CONFIG_FILE = Environment.getDataDirectory() + <span class=\"string\">\"/misc/wifi/softap.conf\"</span>;</div></pre></td></tr></table></figure></p>\n<p>//保存<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeApConfiguration</span><span class=\"params\">(<span class=\"keyword\">final</span> WifiConfiguration config)</span> </span>&#123;</div><div class=\"line\">    DataOutputStream out = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        out = <span class=\"keyword\">new</span> DataOutputStream(<span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        out.writeInt(AP_CONFIG_FILE_VERSION);</div><div class=\"line\">        out.writeUTF(config.SSID);</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = config.getAuthType();</div><div class=\"line\">        out.writeInt(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            out.writeUTF(config.preSharedKey);</div><div class=\"line\">        &#125;</div><div class=\"line\">        out.writeInt(config.channel);</div><div class=\"line\">        out.writeInt(config.channelWidth);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.e(TAG, <span class=\"string\">\"Error writing hotspot configuration\"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (out != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                out.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//读取<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    DataInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        WifiConfiguration config = <span class=\"keyword\">new</span> WifiConfiguration();</div><div class=\"line\">        in = <span class=\"keyword\">new</span> DataInputStream(<span class=\"keyword\">new</span> BufferedInputStream(<span class=\"keyword\">new</span> FileInputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        <span class=\"keyword\">int</span> version = in.readInt();</div><div class=\"line\">        <span class=\"keyword\">if</span> (version != <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            Log.e(TAG, <span class=\"string\">\"Bad version on hotspot configuration file, set defaults\"</span>);</div><div class=\"line\">            setDefaultApConfiguration();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.SSID = in.readUTF();</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = in.readInt();</div><div class=\"line\">        config.allowedKeyManagement.set(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            config.preSharedKey = in.readUTF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.channel = in.readInt();</div><div class=\"line\">        config.channelWidth = in.readInt();</div><div class=\"line\">        mWifiApConfig = config;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException ignore) &#123;</div><div class=\"line\">        setDefaultApConfiguration();</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java</p>\n<p>//保存到 softap.conf 文件中<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String AP_CONFIG_FILE = Environment.getDataDirectory() + <span class=\"string\">\"/misc/wifi/softap.conf\"</span>;</div></pre></td></tr></table></figure></p>\n<p>//保存<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeApConfiguration</span><span class=\"params\">(<span class=\"keyword\">final</span> WifiConfiguration config)</span> </span>&#123;</div><div class=\"line\">    DataOutputStream out = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        out = <span class=\"keyword\">new</span> DataOutputStream(<span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        out.writeInt(AP_CONFIG_FILE_VERSION);</div><div class=\"line\">        out.writeUTF(config.SSID);</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = config.getAuthType();</div><div class=\"line\">        out.writeInt(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            out.writeUTF(config.preSharedKey);</div><div class=\"line\">        &#125;</div><div class=\"line\">        out.writeInt(config.channel);</div><div class=\"line\">        out.writeInt(config.channelWidth);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.e(TAG, <span class=\"string\">\"Error writing hotspot configuration\"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (out != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                out.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//读取<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    DataInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        WifiConfiguration config = <span class=\"keyword\">new</span> WifiConfiguration();</div><div class=\"line\">        in = <span class=\"keyword\">new</span> DataInputStream(<span class=\"keyword\">new</span> BufferedInputStream(<span class=\"keyword\">new</span> FileInputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        <span class=\"keyword\">int</span> version = in.readInt();</div><div class=\"line\">        <span class=\"keyword\">if</span> (version != <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            Log.e(TAG, <span class=\"string\">\"Bad version on hotspot configuration file, set defaults\"</span>);</div><div class=\"line\">            setDefaultApConfiguration();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.SSID = in.readUTF();</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = in.readInt();</div><div class=\"line\">        config.allowedKeyManagement.set(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            config.preSharedKey = in.readUTF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.channel = in.readInt();</div><div class=\"line\">        config.channelWidth = in.readInt();</div><div class=\"line\">        mWifiApConfig = config;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException ignore) &#123;</div><div class=\"line\">        setDefaultApConfiguration();</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"ubuntu下cocos2dx学习","date":"2017-09-25T07:36:46.000Z","_content":"1. 编译cocos2dx整个工程的时候编译不过？？？\n\n解决:\na.../CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’\n只要在LabelReader.cpp文件中添加#include <algorithm> 就可以\nb.会报Lua编译不过的异常\n只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了\n\n2. 如何创建工程之后如何编译？？？\n\n解决:\n只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了\n\n3. cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()' 报错?????\n\n解决:\n没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用\n需要在 Makefile 文件中添加编译 GameScene.cpp就行了\n\n4. ../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？\n\n解决:\n类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加\";\"就可以了","source":"_posts/ubuntu下cocos2dx学习.md","raw":"---\ntitle: ubuntu下cocos2dx学习\ndate: 2017-09-25 15:36:46\ntags:\n---\n1. 编译cocos2dx整个工程的时候编译不过？？？\n\n解决:\na.../CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’\n只要在LabelReader.cpp文件中添加#include <algorithm> 就可以\nb.会报Lua编译不过的异常\n只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了\n\n2. 如何创建工程之后如何编译？？？\n\n解决:\n只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了\n\n3. cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()' 报错?????\n\n解决:\n没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用\n需要在 Makefile 文件中添加编译 GameScene.cpp就行了\n\n4. ../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？\n\n解决:\n类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加\";\"就可以了","slug":"ubuntu下cocos2dx学习","published":1,"updated":"2017-09-25T07:37:36.318Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzaa000wardxzh63yall","content":"<ol>\n<li>编译cocos2dx整个工程的时候编译不过？？？</li>\n</ol>\n<p>解决:<br>a…/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’<br>只要在LabelReader.cpp文件中添加#include <algorithm> 就可以<br>b.会报Lua编译不过的异常<br>只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了</algorithm></p>\n<ol>\n<li>如何创建工程之后如何编译？？？</li>\n</ol>\n<p>解决:<br>只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了</p>\n<ol>\n<li>cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()’ 报错?????</li>\n</ol>\n<p>解决:<br>没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用<br>需要在 Makefile 文件中添加编译 GameScene.cpp就行了</p>\n<ol>\n<li>../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？</li>\n</ol>\n<p>解决:<br>类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加”;”就可以了</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>编译cocos2dx整个工程的时候编译不过？？？</li>\n</ol>\n<p>解决:<br>a…/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’<br>只要在LabelReader.cpp文件中添加#include <algorithm> 就可以<br>b.会报Lua编译不过的异常<br>只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了</algorithm></p>\n<ol>\n<li>如何创建工程之后如何编译？？？</li>\n</ol>\n<p>解决:<br>只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了</p>\n<ol>\n<li>cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()’ 报错?????</li>\n</ol>\n<p>解决:<br>没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用<br>需要在 Makefile 文件中添加编译 GameScene.cpp就行了</p>\n<ol>\n<li>../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？</li>\n</ol>\n<p>解决:<br>类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加”;”就可以了</p>\n"},{"title":"两个Activity之间通过接口进行通信","date":"2017-09-22T05:18:42.000Z","_content":"``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startActivity(new Intent(MainActivity.this,SecondActivity.class));\n        SecondActivity.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle(String title);\n    }\n}\n\npublic class SecondActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        findViewById(R.id.btn_update).setOnClickListener(new OnClickListener(){\n            public void onClick(View v){\n                listener.updateTitle(\"hello\");        //这里调用接口中的方法\n            }\n        });\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","source":"_posts/两个Activity之间通过接口进行通信.md","raw":"---\ntitle: 两个Activity之间通过接口进行通信\ndate: 2017-09-22 13:18:42\ntags:\n---\n``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startActivity(new Intent(MainActivity.this,SecondActivity.class));\n        SecondActivity.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle(String title);\n    }\n}\n\npublic class SecondActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        findViewById(R.id.btn_update).setOnClickListener(new OnClickListener(){\n            public void onClick(View v){\n                listener.updateTitle(\"hello\");        //这里调用接口中的方法\n            }\n        });\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","slug":"两个Activity之间通过接口进行通信","published":1,"updated":"2017-09-22T05:19:03.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzac000xardxdn3hajd2","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startActivity(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,SecondActivity.class));</div><div class=\"line\">        SecondActivity.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecondActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        findViewById(R.id.btn_update).setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;</div><div class=\"line\">                listener.updateTitle(<span class=\"string\">\"hello\"</span>);        <span class=\"comment\">//这里调用接口中的方法</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startActivity(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,SecondActivity.class));</div><div class=\"line\">        SecondActivity.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecondActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        findViewById(R.id.btn_update).setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;</div><div class=\"line\">                listener.updateTitle(<span class=\"string\">\"hello\"</span>);        <span class=\"comment\">//这里调用接口中的方法</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"为用户生成有趣的头像","date":"2018-02-27T01:23:02.000Z","_content":"只需 HTTP 请求 \nhttp://www.gravatar.com/avatar/{hash}?s=256&d=identicon\n\n其中:\n```\nhash : 生成一个随机数填充\ns : 尺寸，像素为单位\nd : 风格，目前可选 identicon、monsterid、wavatar、retro、robohash 等\n具体可参考 Gravatar 文档 Image Request。\n```","source":"_posts/为用户生成有趣的头像.md","raw":"---\ntitle: 为用户生成有趣的头像\ndate: 2018-02-27 09:23:02\ntags:\n---\n只需 HTTP 请求 \nhttp://www.gravatar.com/avatar/{hash}?s=256&d=identicon\n\n其中:\n```\nhash : 生成一个随机数填充\ns : 尺寸，像素为单位\nd : 风格，目前可选 identicon、monsterid、wavatar、retro、robohash 等\n具体可参考 Gravatar 文档 Image Request。\n```","slug":"为用户生成有趣的头像","published":1,"updated":"2018-03-02T05:43:42.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzad000yardxgzy4crzp","content":"<p>只需 HTTP 请求<br><a href=\"http://www.gravatar.com/avatar/{hash}?s=256&amp;d=identicon\" target=\"_blank\" rel=\"external\">http://www.gravatar.com/avatar/{hash}?s=256&amp;d=identicon</a></p>\n<p>其中:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hash : 生成一个随机数填充</div><div class=\"line\">s : 尺寸，像素为单位</div><div class=\"line\">d : 风格，目前可选 identicon、monsterid、wavatar、retro、robohash 等</div><div class=\"line\">具体可参考 Gravatar 文档 Image Request。</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>只需 HTTP 请求<br><a href=\"http://www.gravatar.com/avatar/{hash}?s=256&amp;d=identicon\" target=\"_blank\" rel=\"external\">http://www.gravatar.com/avatar/{hash}?s=256&amp;d=identicon</a></p>\n<p>其中:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hash : 生成一个随机数填充</div><div class=\"line\">s : 尺寸，像素为单位</div><div class=\"line\">d : 风格，目前可选 identicon、monsterid、wavatar、retro、robohash 等</div><div class=\"line\">具体可参考 Gravatar 文档 Image Request。</div></pre></td></tr></table></figure></p>\n"},{"title":"使用AIDL调用CountryDetector中的接口来获取国家编码","date":"2017-09-22T06:12:26.000Z","_content":"``` Java\n//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码\nprivate String getCountryCode() {\n    String countryCode = \"\";\n    try {\n        Method method = Class.forName(\"android.os.ServiceManager\").getMethod(\"getService\", String.class);\n        IBinder binder = (IBinder) method.invoke(null, new Object[] { \"country_detector\" });            //这里的country_detector不要写错，否则获取不到服务\n        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);\n        Country country = countryDetector.detectCountry();\n        if (country != null) {\n            countryCode = country.getCountryIso();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return countryCode;\n}\n```\n> \ntips:该方法同样使用于其他AIDL的服务","source":"_posts/使用AIDL调用CountryDetector中的接口来获取国家编码.md","raw":"---\ntitle: 使用AIDL调用CountryDetector中的接口来获取国家编码\ndate: 2017-09-22 14:12:26\ntags:\n---\n``` Java\n//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码\nprivate String getCountryCode() {\n    String countryCode = \"\";\n    try {\n        Method method = Class.forName(\"android.os.ServiceManager\").getMethod(\"getService\", String.class);\n        IBinder binder = (IBinder) method.invoke(null, new Object[] { \"country_detector\" });            //这里的country_detector不要写错，否则获取不到服务\n        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);\n        Country country = countryDetector.detectCountry();\n        if (country != null) {\n            countryCode = country.getCountryIso();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return countryCode;\n}\n```\n> \ntips:该方法同样使用于其他AIDL的服务","slug":"使用AIDL调用CountryDetector中的接口来获取国家编码","published":1,"updated":"2017-09-22T07:11:05.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzad000zardxqrffumq0","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getCountryCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    String countryCode = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = Class.forName(<span class=\"string\">\"android.os.ServiceManager\"</span>).getMethod(<span class=\"string\">\"getService\"</span>, String.class);</div><div class=\"line\">        IBinder binder = (IBinder) method.invoke(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"country_detector\"</span> &#125;);            <span class=\"comment\">//这里的country_detector不要写错，否则获取不到服务</span></div><div class=\"line\">        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);</div><div class=\"line\">        Country country = countryDetector.detectCountry();</div><div class=\"line\">        <span class=\"keyword\">if</span> (country != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            countryCode = country.getCountryIso();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> countryCode;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:该方法同样使用于其他AIDL的服务</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getCountryCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    String countryCode = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = Class.forName(<span class=\"string\">\"android.os.ServiceManager\"</span>).getMethod(<span class=\"string\">\"getService\"</span>, String.class);</div><div class=\"line\">        IBinder binder = (IBinder) method.invoke(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"country_detector\"</span> &#125;);            <span class=\"comment\">//这里的country_detector不要写错，否则获取不到服务</span></div><div class=\"line\">        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);</div><div class=\"line\">        Country country = countryDetector.detectCountry();</div><div class=\"line\">        <span class=\"keyword\">if</span> (country != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            countryCode = country.getCountryIso();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> countryCode;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:该方法同样使用于其他AIDL的服务</p>\n</blockquote>\n"},{"title":"保存大文件到sqlite数据库","date":"2017-09-22T05:20:16.000Z","_content":"``` Java\nContentValues contentValues = new ContentValues();\nInputStream is = getResources().openRawResource(rid);\nint bufSize = 63 * 1024;\nbyte[] buffer = new byte[bufSize];\ntry{\n    int size = is.read(buffer);\n    while(size > = 0){\n        ByteArrayOutputStream out = new ByteArrayOutputStream(size);\n        out.write(buffer,0,size);\n        out.flush();\n        out.close();\n        contentValues.put(\"song_mp3\",out.toByteArray());\n        db.insert(mySong,null,contentValues);\n        size = is.read(buffer);\n    }\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/保存大文件到sqlite数据库.md","raw":"---\ntitle: 保存大文件到sqlite数据库\ndate: 2017-09-22 13:20:16\ntags:\n---\n``` Java\nContentValues contentValues = new ContentValues();\nInputStream is = getResources().openRawResource(rid);\nint bufSize = 63 * 1024;\nbyte[] buffer = new byte[bufSize];\ntry{\n    int size = is.read(buffer);\n    while(size > = 0){\n        ByteArrayOutputStream out = new ByteArrayOutputStream(size);\n        out.write(buffer,0,size);\n        out.flush();\n        out.close();\n        contentValues.put(\"song_mp3\",out.toByteArray());\n        db.insert(mySong,null,contentValues);\n        size = is.read(buffer);\n    }\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"保存大文件到sqlite数据库","published":1,"updated":"2017-09-22T05:20:40.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzae0010ardx9qzk2714","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">InputStream is = getResources().openRawResource(rid);</div><div class=\"line\"><span class=\"keyword\">int</span> bufSize = <span class=\"number\">63</span> * <span class=\"number\">1024</span>;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[bufSize];</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> size = is.read(buffer);</div><div class=\"line\">    <span class=\"keyword\">while</span>(size &gt; = <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream(size);</div><div class=\"line\">        out.write(buffer,<span class=\"number\">0</span>,size);</div><div class=\"line\">        out.flush();</div><div class=\"line\">        out.close();</div><div class=\"line\">        contentValues.put(<span class=\"string\">\"song_mp3\"</span>,out.toByteArray());</div><div class=\"line\">        db.insert(mySong,<span class=\"keyword\">null</span>,contentValues);</div><div class=\"line\">        size = is.read(buffer);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">InputStream is = getResources().openRawResource(rid);</div><div class=\"line\"><span class=\"keyword\">int</span> bufSize = <span class=\"number\">63</span> * <span class=\"number\">1024</span>;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[bufSize];</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> size = is.read(buffer);</div><div class=\"line\">    <span class=\"keyword\">while</span>(size &gt; = <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream(size);</div><div class=\"line\">        out.write(buffer,<span class=\"number\">0</span>,size);</div><div class=\"line\">        out.flush();</div><div class=\"line\">        out.close();</div><div class=\"line\">        contentValues.put(<span class=\"string\">\"song_mp3\"</span>,out.toByteArray());</div><div class=\"line\">        db.insert(mySong,<span class=\"keyword\">null</span>,contentValues);</div><div class=\"line\">        size = is.read(buffer);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"修改SIMToolkit的显示名称","date":"2017-09-25T07:29:07.000Z","_content":"//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java\n``` Java\nCatLog.d(this, \"add AlphaId: \" + menu.title);\nandroid.os.SystemProperties.set(\"gsm.zhangqi.stkmenu\", menu.title);        //添加这一行代码将 menu.title\n```\n保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件\n\n//frameworks/base/core/java/android/app/ApplicationPackageManager.java\n``` Java\nif(packageName.equalsIgnoreCase(\"com.android.stk\")) {\n    String tmptext = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\n    String numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && tmptext != null && !tmptext.isEmpty() ){\n        text = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\n        if(text == null || text.toString().isEmpty()){\n            if(tmptext.toLowerCase().contains(\"telenor\")){\n                text = \"Telenor\";\n            }else if(tmptext.toLowerCase().contains(\"globul\")){\n                text = \"My Globul\";\n            }\n        }\n    }\n}\n```\n\n//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java\n``` Java\nString alpha = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\nString numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\nString title = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\nif(title == null || title.isEmpty()){\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && alpha != null && !alpha.isEmpty() ){\n        if(alpha.toLowerCase().contains(\"telenor\")){\n            textView.setText(\"Telenor\");\n        }else if(alpha.toLowerCase().contains(\"globul\")){\n            textView.setText(\"My Globul\");\n        }\n    }\n}\n```","source":"_posts/修改SIMToolkit的显示名称.md","raw":"---\ntitle: 修改SIMToolkit的显示名称\ndate: 2017-09-25 15:29:07\ntags:\n---\n//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java\n``` Java\nCatLog.d(this, \"add AlphaId: \" + menu.title);\nandroid.os.SystemProperties.set(\"gsm.zhangqi.stkmenu\", menu.title);        //添加这一行代码将 menu.title\n```\n保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件\n\n//frameworks/base/core/java/android/app/ApplicationPackageManager.java\n``` Java\nif(packageName.equalsIgnoreCase(\"com.android.stk\")) {\n    String tmptext = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\n    String numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && tmptext != null && !tmptext.isEmpty() ){\n        text = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\n        if(text == null || text.toString().isEmpty()){\n            if(tmptext.toLowerCase().contains(\"telenor\")){\n                text = \"Telenor\";\n            }else if(tmptext.toLowerCase().contains(\"globul\")){\n                text = \"My Globul\";\n            }\n        }\n    }\n}\n```\n\n//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java\n``` Java\nString alpha = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\nString numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\nString title = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\nif(title == null || title.isEmpty()){\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && alpha != null && !alpha.isEmpty() ){\n        if(alpha.toLowerCase().contains(\"telenor\")){\n            textView.setText(\"Telenor\");\n        }else if(alpha.toLowerCase().contains(\"globul\")){\n            textView.setText(\"My Globul\");\n        }\n    }\n}\n```","slug":"修改SIMToolkit的显示名称","published":1,"updated":"2017-09-25T07:30:11.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzaf0011ardxd0rqmfym","content":"<p>//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CatLog.d(<span class=\"keyword\">this</span>, <span class=\"string\">\"add AlphaId: \"</span> + menu.title);</div><div class=\"line\">android.os.SystemProperties.set(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>, menu.title);        <span class=\"comment\">//添加这一行代码将 menu.title</span></div></pre></td></tr></table></figure></p>\n<p>保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件</p>\n<p>//frameworks/base/core/java/android/app/ApplicationPackageManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(packageName.equalsIgnoreCase(<span class=\"string\">\"com.android.stk\"</span>)) &#123;</div><div class=\"line\">    String tmptext = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">    String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; tmptext != <span class=\"keyword\">null</span> &amp;&amp; !tmptext.isEmpty() )&#123;</div><div class=\"line\">        text = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(text == <span class=\"keyword\">null</span> || text.toString().isEmpty())&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"Telenor\"</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"My Globul\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">String alpha = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">String title = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\"><span class=\"keyword\">if</span>(title == <span class=\"keyword\">null</span> || title.isEmpty())&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; alpha != <span class=\"keyword\">null</span> &amp;&amp; !alpha.isEmpty() )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"Telenor\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"My Globul\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CatLog.d(<span class=\"keyword\">this</span>, <span class=\"string\">\"add AlphaId: \"</span> + menu.title);</div><div class=\"line\">android.os.SystemProperties.set(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>, menu.title);        <span class=\"comment\">//添加这一行代码将 menu.title</span></div></pre></td></tr></table></figure></p>\n<p>保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件</p>\n<p>//frameworks/base/core/java/android/app/ApplicationPackageManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(packageName.equalsIgnoreCase(<span class=\"string\">\"com.android.stk\"</span>)) &#123;</div><div class=\"line\">    String tmptext = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">    String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; tmptext != <span class=\"keyword\">null</span> &amp;&amp; !tmptext.isEmpty() )&#123;</div><div class=\"line\">        text = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(text == <span class=\"keyword\">null</span> || text.toString().isEmpty())&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"Telenor\"</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"My Globul\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">String alpha = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">String title = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\"><span class=\"keyword\">if</span>(title == <span class=\"keyword\">null</span> || title.isEmpty())&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; alpha != <span class=\"keyword\">null</span> &amp;&amp; !alpha.isEmpty() )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"Telenor\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"My Globul\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"修改wifi热点默认密码","date":"2017-09-22T02:30:07.000Z","_content":"M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n``` Java\nprivate void setDefaultApConfiguration() {\n\t...\n    //config.preSharedKey = \"sayyezz.com\";\n    config.preSharedKey = randomUUID.substring(0, 8);    //随机wifi热点密码\n    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);\n    ...\n}\n```","source":"_posts/修改wifi热点默认密码.md","raw":"---\ntitle: 修改wifi热点默认密码\ndate: 2017-09-22 10:30:07\ntags:\n---\nM:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n``` Java\nprivate void setDefaultApConfiguration() {\n\t...\n    //config.preSharedKey = \"sayyezz.com\";\n    config.preSharedKey = randomUUID.substring(0, 8);    //随机wifi热点密码\n    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);\n    ...\n}\n```","slug":"修改wifi热点默认密码","published":1,"updated":"2017-09-22T02:31:18.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzag0012ardxbg0zxw85","content":"<p>M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">//config.preSharedKey = \"sayyezz.com\";</span></div><div class=\"line\">    config.preSharedKey = randomUUID.substring(<span class=\"number\">0</span>, <span class=\"number\">8</span>);    <span class=\"comment\">//随机wifi热点密码</span></div><div class=\"line\">    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">//config.preSharedKey = \"sayyezz.com\";</span></div><div class=\"line\">    config.preSharedKey = randomUUID.substring(<span class=\"number\">0</span>, <span class=\"number\">8</span>);    <span class=\"comment\">//随机wifi热点密码</span></div><div class=\"line\">    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"修改某些分区表中的某些分区之后不起作用","date":"2017-09-22T01:58:35.000Z","_content":"//out/target/product/up09l_h401_ddm_gci_ptgen.log\n```\nby project size ANDROID = 1536000 KB\nby project size USRDATA = 942080 KB\n```\n\n//mediatek/build/tools/ptgen/MT6582/ptgen.pl\n``` perl\nmy $board_config = &open_for_read(\"mediatek/config/$PROJECT/BoardConfig.mk\");\t//从这个文件可以看到\nmy $iter;\nif ($board_config)\n{\n    my $line;\n    while (defined($line = <$board_config>))\n    {\n        for($iter=0;$iter< @PARTITION_FIELD;$iter++)\n        {\n            my $part_name = $PARTITION_FIELD[$iter];\n            if ($line =~ /\\A\\s*BOARD_MTK_${part_name}_SIZE_KB\\s*:=\\s*(\\d+)/)\n            {\n                $SIZE_FIELD_KB[$iter] = $1;\n                print \"by project size $part_name = $1 KB\\n\";\t\t\t\t\t//打印上面那个文件中的信息\n            }\n        }\n    }\n    close $board_config;\n}\n```\n\n//mediatek/config/mq16_h501_pegasus/BoardConfig.mk\n```\nBOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了\nBOARD_MTK_USRDATA_SIZE_KB := 942080\n```","source":"_posts/修改某些分区表中的某些分区之后不起作用.md","raw":"---\ntitle: 修改某些分区表中的某些分区之后不起作用\ndate: 2017-09-22 09:58:35\ntags:\n---\n//out/target/product/up09l_h401_ddm_gci_ptgen.log\n```\nby project size ANDROID = 1536000 KB\nby project size USRDATA = 942080 KB\n```\n\n//mediatek/build/tools/ptgen/MT6582/ptgen.pl\n``` perl\nmy $board_config = &open_for_read(\"mediatek/config/$PROJECT/BoardConfig.mk\");\t//从这个文件可以看到\nmy $iter;\nif ($board_config)\n{\n    my $line;\n    while (defined($line = <$board_config>))\n    {\n        for($iter=0;$iter< @PARTITION_FIELD;$iter++)\n        {\n            my $part_name = $PARTITION_FIELD[$iter];\n            if ($line =~ /\\A\\s*BOARD_MTK_${part_name}_SIZE_KB\\s*:=\\s*(\\d+)/)\n            {\n                $SIZE_FIELD_KB[$iter] = $1;\n                print \"by project size $part_name = $1 KB\\n\";\t\t\t\t\t//打印上面那个文件中的信息\n            }\n        }\n    }\n    close $board_config;\n}\n```\n\n//mediatek/config/mq16_h501_pegasus/BoardConfig.mk\n```\nBOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了\nBOARD_MTK_USRDATA_SIZE_KB := 942080\n```","slug":"修改某些分区表中的某些分区之后不起作用","published":1,"updated":"2017-09-22T02:00:31.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzah0013ardxdo5hu7gd","content":"<p>//out/target/product/up09l_h401_ddm_gci_ptgen.log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">by project size ANDROID = 1536000 KB</div><div class=\"line\">by project size USRDATA = 942080 KB</div></pre></td></tr></table></figure></p>\n<p>//mediatek/build/tools/ptgen/MT6582/ptgen.pl<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">my</span> $board_config = &amp;open_for_read(<span class=\"string\">\"mediatek/config/$PROJECT/BoardConfig.mk\"</span>);\t<span class=\"regexp\">//</span>从这个文件可以看到</div><div class=\"line\"><span class=\"keyword\">my</span> $iter;</div><div class=\"line\"><span class=\"keyword\">if</span> ($board_config)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">my</span> $line;</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">defined</span>($line = &lt;$board_config&gt;))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>($iter=<span class=\"number\">0</span>;$iter&lt; @PARTITION_FIELD;$iter++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">my</span> $part_name = $PARTITION_FIELD[$iter];</div><div class=\"line\">            <span class=\"keyword\">if</span> ($line =~ <span class=\"regexp\">/\\A\\s*BOARD_MTK_$&#123;part_name&#125;_SIZE_KB\\s*:=\\s*(\\d+)/</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $SIZE_FIELD_KB[$iter] = $1;</div><div class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"by project size $part_name = $1 KB\\n\"</span>;\t\t\t\t\t<span class=\"regexp\">//</span>打印上面那个文件中的信息</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">close</span> $board_config;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/config/mq16_h501_pegasus/BoardConfig.mk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">BOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了</div><div class=\"line\">BOARD_MTK_USRDATA_SIZE_KB := 942080</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//out/target/product/up09l_h401_ddm_gci_ptgen.log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">by project size ANDROID = 1536000 KB</div><div class=\"line\">by project size USRDATA = 942080 KB</div></pre></td></tr></table></figure></p>\n<p>//mediatek/build/tools/ptgen/MT6582/ptgen.pl<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">my</span> $board_config = &amp;open_for_read(<span class=\"string\">\"mediatek/config/$PROJECT/BoardConfig.mk\"</span>);\t<span class=\"regexp\">//</span>从这个文件可以看到</div><div class=\"line\"><span class=\"keyword\">my</span> $iter;</div><div class=\"line\"><span class=\"keyword\">if</span> ($board_config)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">my</span> $line;</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">defined</span>($line = &lt;$board_config&gt;))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>($iter=<span class=\"number\">0</span>;$iter&lt; @PARTITION_FIELD;$iter++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">my</span> $part_name = $PARTITION_FIELD[$iter];</div><div class=\"line\">            <span class=\"keyword\">if</span> ($line =~ <span class=\"regexp\">/\\A\\s*BOARD_MTK_$&#123;part_name&#125;_SIZE_KB\\s*:=\\s*(\\d+)/</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $SIZE_FIELD_KB[$iter] = $1;</div><div class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"by project size $part_name = $1 KB\\n\"</span>;\t\t\t\t\t<span class=\"regexp\">//</span>打印上面那个文件中的信息</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">close</span> $board_config;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/config/mq16_h501_pegasus/BoardConfig.mk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">BOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了</div><div class=\"line\">BOARD_MTK_USRDATA_SIZE_KB := 942080</div></pre></td></tr></table></figure></p>\n"},{"title":"修改默认Launcher","date":"2017-09-21T07:35:40.000Z","_content":"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\n\n[DESCRIPTION]\n> \n开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？\n\n[SOLUTION]\n> \n注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。 \n如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。\n\n一、修改ActivityManagerService.java的startHomeActivityLocked方法\n\n``` Java\nboolean startHomeActivityLocked(int userId, String reason) {\n    if (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL && mTopAction == null) {\n        // We are running in factory test mode, but unable to find\n        // the factory test app, so just sit around displaying the\n        // error message and don't try to start anything.\n        return false;\n    }\n\n    //mtk add start\n    final PackageManager mPm = mContext.getPackageManager();\n    Intent homeIntent=new Intent();\n    homeIntent.addCategory(Intent.CATEGORY_HOME);\n    homeIntent.setAction(Intent.ACTION_MAIN);\n    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);\n    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);\n    if(\"android\".equals(info.activityInfo.packageName)){ //if there is a default Launcher?\n        ComponentName DefaultLauncher=new ComponentName(\"com.android.launcher3\",\"com.android.launcher3.Launcher\"); //here set the package name and class name of default launcher.\n        ArrayList<ResolveInfo> homeActivities = new ArrayList<ResolveInfo>();\n        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);\n        ComponentName[] mHomeComponentSet = new ComponentName[homeActivities.size()];\n        for (int i = 0; i < homeActivities.size(); i++) {\n            final ResolveInfo candidate = homeActivities.get(i);\n            Log.d(TAG,\"homeActivitie: candidate = \"+candidate);\n            final ActivityInfo activityInfo= candidate.activityInfo;\n            ComponentName activityName = new ComponentName(activityInfo.packageName, activityInfo.name);\n            mHomeComponentSet[i] = activityName;\n        }\n        IntentFilter mHomeFilter = new IntentFilter(Intent.ACTION_MAIN);\n        mHomeFilter.addCategory(Intent.CATEGORY_HOME);\n        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);\n        List<ComponentName>Activities=new ArrayList();\n        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);\n    }\n\n\t//mtk add end\n\n    Intent intent = getHomeIntent();\n    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);\n    ......\n}\n```\n\n二、如果预置了GMS，还需要按照下面的方法修改:\n\n请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:\n``` Java\n//mtk add start\nif(isFirstBoot()) {\n    String examplePackageName = \"com.android.launcher3\";  //default  package name of launcher\n    String exampleActivityName = \"com.android.launcher3.Launcher\"; //default  activity name of  launcher   \n    Intent intent=new Intent(Intent.ACTION_MAIN);\n    intent.addCategory(Intent.CATEGORY_HOME);\n    final int callingUserId = UserHandle.getCallingUserId();\n    \n    List<ResolveInfo> resolveInfoList = queryIntentActivities(intent,null, PackageManager.GET_META_DATA,callingUserId);\n    if(resolveInfoList != null){\n        int size = resolveInfoList.size();\n        for(int j=0;j<size;){\n            final ResolveInfo r = resolveInfoList.get(j);\n            if(!r.activityInfo.packageName.equals(examplePackageName)) { \n                resolveInfoList.remove(j);\n                size -= 1;\n            } else {\n                j++;\n            }\n        } \n       ComponentName[] set = new ComponentName[size];\n       ComponentName defaultLauncher=new ComponentName(examplePackageName, exampleActivityName);\n       int defaultMatch=0;\n       for(int i=0;i<size;i++){\n           final ResolveInfo resolveInfo = resolveInfoList.get(i);\n           Log.d(TAG,\"resolveInfo = \" + resolveInfo.toString());\n           set[i] = new ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);\n           if(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name)){\n               defaultMatch = resolveInfo.match;\n           }\n       }\n       Log.d(TAG,\"defaultMatch=\"+Integer.toHexString(defaultMatch));\n       IntentFilter filter=new IntentFilter();\n       filter.addAction(Intent.ACTION_MAIN);\n       filter.addCategory(Intent.CATEGORY_HOME);\n       filter.addCategory(Intent.CATEGORY_DEFAULT);\n      \n       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);\n    }\n}\n//mtk add end\n```\n \n在PackageManagerService.java中增加addPreferredActivity2方法：\n``` Java\n//mtk add start\npublic void addPreferredActivity2(IntentFilter filter, int match,ComponentName[] set, ComponentName activity) {\n    synchronized (mPackages) {     \n        filter.dump(new LogPrinter(Log.INFO, TAG), \"  \");\n        mSettings.editPreferredActivitiesLPw(0).addFilter(new PreferredActivity(filter, match, set, activity, true));\n        scheduleWriteSettingsLocked();     \n    }\n}\n//mtk add end\n```\n \n请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：\n``` Java\nif (removeMatches) {\n    pir.removeFilter(pa);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n    }\n    break;\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query, priority)) {\n    Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n    }\n    pir.removeFilter(pa);\n    // Re-add the filter as a \"last chosen\" entry (!always)\n    PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n    pir.addFilter(lastChosen);\n    mSettings.writePackageRestrictionsLPr(userId);\n    return null;\n}\n```\n修改为:\n``` Java\n//mtk add start\nif(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null &&\n    intent.getCategories().contains(intent.CATEGORY_HOME))) {       \n    Log.d(TAG,\"Home\");      \n}else {\n    if (removeMatches) {\n        pir.removeFilter(pa);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n        }\n        break;\n    }\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query)) {                           \n    if(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null && \n        intent.getCategories().contains(intent.CATEGORY_HOME))) {\n        Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n        }\n        pir.removeFilter(pa);\n        // Re-add the filter as a \"last chosen\" entry (!always)\n        PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n        pir.addFilter(lastChosen);\n        mSettings.writePackageRestrictionsLPr(userId);\n        return null;\n    }\n}\n//mtk add end\n```","source":"_posts/修改默认Launcher.md","raw":"---\ntitle: 修改默认Launcher\ndate: 2017-09-21 15:35:40\ntags:\n---\nhttps://onlinesso.mediatek.com/FAQ/SW/FAQ03426\n\n[DESCRIPTION]\n> \n开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？\n\n[SOLUTION]\n> \n注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。 \n如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。\n\n一、修改ActivityManagerService.java的startHomeActivityLocked方法\n\n``` Java\nboolean startHomeActivityLocked(int userId, String reason) {\n    if (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL && mTopAction == null) {\n        // We are running in factory test mode, but unable to find\n        // the factory test app, so just sit around displaying the\n        // error message and don't try to start anything.\n        return false;\n    }\n\n    //mtk add start\n    final PackageManager mPm = mContext.getPackageManager();\n    Intent homeIntent=new Intent();\n    homeIntent.addCategory(Intent.CATEGORY_HOME);\n    homeIntent.setAction(Intent.ACTION_MAIN);\n    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);\n    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);\n    if(\"android\".equals(info.activityInfo.packageName)){ //if there is a default Launcher?\n        ComponentName DefaultLauncher=new ComponentName(\"com.android.launcher3\",\"com.android.launcher3.Launcher\"); //here set the package name and class name of default launcher.\n        ArrayList<ResolveInfo> homeActivities = new ArrayList<ResolveInfo>();\n        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);\n        ComponentName[] mHomeComponentSet = new ComponentName[homeActivities.size()];\n        for (int i = 0; i < homeActivities.size(); i++) {\n            final ResolveInfo candidate = homeActivities.get(i);\n            Log.d(TAG,\"homeActivitie: candidate = \"+candidate);\n            final ActivityInfo activityInfo= candidate.activityInfo;\n            ComponentName activityName = new ComponentName(activityInfo.packageName, activityInfo.name);\n            mHomeComponentSet[i] = activityName;\n        }\n        IntentFilter mHomeFilter = new IntentFilter(Intent.ACTION_MAIN);\n        mHomeFilter.addCategory(Intent.CATEGORY_HOME);\n        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);\n        List<ComponentName>Activities=new ArrayList();\n        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);\n    }\n\n\t//mtk add end\n\n    Intent intent = getHomeIntent();\n    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);\n    ......\n}\n```\n\n二、如果预置了GMS，还需要按照下面的方法修改:\n\n请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:\n``` Java\n//mtk add start\nif(isFirstBoot()) {\n    String examplePackageName = \"com.android.launcher3\";  //default  package name of launcher\n    String exampleActivityName = \"com.android.launcher3.Launcher\"; //default  activity name of  launcher   \n    Intent intent=new Intent(Intent.ACTION_MAIN);\n    intent.addCategory(Intent.CATEGORY_HOME);\n    final int callingUserId = UserHandle.getCallingUserId();\n    \n    List<ResolveInfo> resolveInfoList = queryIntentActivities(intent,null, PackageManager.GET_META_DATA,callingUserId);\n    if(resolveInfoList != null){\n        int size = resolveInfoList.size();\n        for(int j=0;j<size;){\n            final ResolveInfo r = resolveInfoList.get(j);\n            if(!r.activityInfo.packageName.equals(examplePackageName)) { \n                resolveInfoList.remove(j);\n                size -= 1;\n            } else {\n                j++;\n            }\n        } \n       ComponentName[] set = new ComponentName[size];\n       ComponentName defaultLauncher=new ComponentName(examplePackageName, exampleActivityName);\n       int defaultMatch=0;\n       for(int i=0;i<size;i++){\n           final ResolveInfo resolveInfo = resolveInfoList.get(i);\n           Log.d(TAG,\"resolveInfo = \" + resolveInfo.toString());\n           set[i] = new ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);\n           if(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name)){\n               defaultMatch = resolveInfo.match;\n           }\n       }\n       Log.d(TAG,\"defaultMatch=\"+Integer.toHexString(defaultMatch));\n       IntentFilter filter=new IntentFilter();\n       filter.addAction(Intent.ACTION_MAIN);\n       filter.addCategory(Intent.CATEGORY_HOME);\n       filter.addCategory(Intent.CATEGORY_DEFAULT);\n      \n       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);\n    }\n}\n//mtk add end\n```\n \n在PackageManagerService.java中增加addPreferredActivity2方法：\n``` Java\n//mtk add start\npublic void addPreferredActivity2(IntentFilter filter, int match,ComponentName[] set, ComponentName activity) {\n    synchronized (mPackages) {     \n        filter.dump(new LogPrinter(Log.INFO, TAG), \"  \");\n        mSettings.editPreferredActivitiesLPw(0).addFilter(new PreferredActivity(filter, match, set, activity, true));\n        scheduleWriteSettingsLocked();     \n    }\n}\n//mtk add end\n```\n \n请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：\n``` Java\nif (removeMatches) {\n    pir.removeFilter(pa);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n    }\n    break;\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query, priority)) {\n    Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n    }\n    pir.removeFilter(pa);\n    // Re-add the filter as a \"last chosen\" entry (!always)\n    PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n    pir.addFilter(lastChosen);\n    mSettings.writePackageRestrictionsLPr(userId);\n    return null;\n}\n```\n修改为:\n``` Java\n//mtk add start\nif(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null &&\n    intent.getCategories().contains(intent.CATEGORY_HOME))) {       \n    Log.d(TAG,\"Home\");      \n}else {\n    if (removeMatches) {\n        pir.removeFilter(pa);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n        }\n        break;\n    }\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query)) {                           \n    if(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null && \n        intent.getCategories().contains(intent.CATEGORY_HOME))) {\n        Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n        }\n        pir.removeFilter(pa);\n        // Re-add the filter as a \"last chosen\" entry (!always)\n        PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n        pir.addFilter(lastChosen);\n        mSettings.writePackageRestrictionsLPr(userId);\n        return null;\n    }\n}\n//mtk add end\n```","slug":"修改默认Launcher","published":1,"updated":"2017-09-21T08:01:56.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzah0014ardxmeeaw3bj","content":"<p><a href=\"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/FAQ/SW/FAQ03426</a></p>\n<p>[DESCRIPTION]</p>\n<blockquote>\n<p>开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？</p>\n</blockquote>\n<p>[SOLUTION]</p>\n<blockquote>\n<p>注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。<br>如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。</p>\n</blockquote>\n<p>一、修改ActivityManagerService.java的startHomeActivityLocked方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">startHomeActivityLocked</span><span class=\"params\">(<span class=\"keyword\">int</span> userId, String reason)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL &amp;&amp; mTopAction == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// We are running in factory test mode, but unable to find</span></div><div class=\"line\">        <span class=\"comment\">// the factory test app, so just sit around displaying the</span></div><div class=\"line\">        <span class=\"comment\">// error message and don't try to start anything.</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mtk add start</span></div><div class=\"line\">    <span class=\"keyword\">final</span> PackageManager mPm = mContext.getPackageManager();</div><div class=\"line\">    Intent homeIntent=<span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    homeIntent.setAction(Intent.ACTION_MAIN);</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">\"android\"</span>.equals(info.activityInfo.packageName))&#123; <span class=\"comment\">//if there is a default Launcher?</span></div><div class=\"line\">        ComponentName DefaultLauncher=<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher3\"</span>,<span class=\"string\">\"com.android.launcher3.Launcher\"</span>); <span class=\"comment\">//here set the package name and class name of default launcher.</span></div><div class=\"line\">        ArrayList&lt;ResolveInfo&gt; homeActivities = <span class=\"keyword\">new</span> ArrayList&lt;ResolveInfo&gt;();</div><div class=\"line\">        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);</div><div class=\"line\">        ComponentName[] mHomeComponentSet = <span class=\"keyword\">new</span> ComponentName[homeActivities.size()];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; homeActivities.size(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo candidate = homeActivities.get(i);</div><div class=\"line\">            Log.d(TAG,<span class=\"string\">\"homeActivitie: candidate = \"</span>+candidate);</div><div class=\"line\">            <span class=\"keyword\">final</span> ActivityInfo activityInfo= candidate.activityInfo;</div><div class=\"line\">            ComponentName activityName = <span class=\"keyword\">new</span> ComponentName(activityInfo.packageName, activityInfo.name);</div><div class=\"line\">            mHomeComponentSet[i] = activityName;</div><div class=\"line\">        &#125;</div><div class=\"line\">        IntentFilter mHomeFilter = <span class=\"keyword\">new</span> IntentFilter(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">        List&lt;ComponentName&gt;Activities=<span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//mtk add end</span></div><div class=\"line\"></div><div class=\"line\">    Intent intent = getHomeIntent();</div><div class=\"line\">    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、如果预置了GMS，还需要按照下面的方法修改:</p>\n<p>请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(isFirstBoot()) &#123;</div><div class=\"line\">    String examplePackageName = <span class=\"string\">\"com.android.launcher3\"</span>;  <span class=\"comment\">//default  package name of launcher</span></div><div class=\"line\">    String exampleActivityName = <span class=\"string\">\"com.android.launcher3.Launcher\"</span>; <span class=\"comment\">//default  activity name of  launcher   </span></div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(Intent.ACTION_MAIN);</div><div class=\"line\">    intent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> callingUserId = UserHandle.getCallingUserId();</div><div class=\"line\">    </div><div class=\"line\">    List&lt;ResolveInfo&gt; resolveInfoList = queryIntentActivities(intent,<span class=\"keyword\">null</span>, PackageManager.GET_META_DATA,callingUserId);</div><div class=\"line\">    <span class=\"keyword\">if</span>(resolveInfoList != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> size = resolveInfoList.size();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;size;)&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo r = resolveInfoList.get(j);</div><div class=\"line\">            <span class=\"keyword\">if</span>(!r.activityInfo.packageName.equals(examplePackageName)) &#123; </div><div class=\"line\">                resolveInfoList.remove(j);</div><div class=\"line\">                size -= <span class=\"number\">1</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; </div><div class=\"line\">       ComponentName[] set = <span class=\"keyword\">new</span> ComponentName[size];</div><div class=\"line\">       ComponentName defaultLauncher=<span class=\"keyword\">new</span> ComponentName(examplePackageName, exampleActivityName);</div><div class=\"line\">       <span class=\"keyword\">int</span> defaultMatch=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</div><div class=\"line\">           <span class=\"keyword\">final</span> ResolveInfo resolveInfo = resolveInfoList.get(i);</div><div class=\"line\">           Log.d(TAG,<span class=\"string\">\"resolveInfo = \"</span> + resolveInfo.toString());</div><div class=\"line\">           set[i] = <span class=\"keyword\">new</span> ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);</div><div class=\"line\">           <span class=\"keyword\">if</span>(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name))&#123;</div><div class=\"line\">               defaultMatch = resolveInfo.match;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       Log.d(TAG,<span class=\"string\">\"defaultMatch=\"</span>+Integer.toHexString(defaultMatch));</div><div class=\"line\">       IntentFilter filter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">       filter.addAction(Intent.ACTION_MAIN);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">      </div><div class=\"line\">       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>在PackageManagerService.java中增加addPreferredActivity2方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addPreferredActivity2</span><span class=\"params\">(IntentFilter filter, <span class=\"keyword\">int</span> match,ComponentName[] set, ComponentName activity)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mPackages) &#123;     </div><div class=\"line\">        filter.dump(<span class=\"keyword\">new</span> LogPrinter(Log.INFO, TAG), <span class=\"string\">\"  \"</span>);</div><div class=\"line\">        mSettings.editPreferredActivitiesLPw(<span class=\"number\">0</span>).addFilter(<span class=\"keyword\">new</span> PreferredActivity(filter, match, set, activity, <span class=\"keyword\">true</span>));</div><div class=\"line\">        scheduleWriteSettingsLocked();     </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query, priority)) &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">    PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">    pir.addFilter(lastChosen);</div><div class=\"line\">    mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">    intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;       </div><div class=\"line\">    Log.d(TAG,<span class=\"string\">\"Home\"</span>);      </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query)) &#123;                           </div><div class=\"line\">    <span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp; </div><div class=\"line\">        intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">        PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">        pir.addFilter(lastChosen);</div><div class=\"line\">        mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/FAQ/SW/FAQ03426</a></p>\n<p>[DESCRIPTION]</p>\n<blockquote>\n<p>开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？</p>\n</blockquote>\n<p>[SOLUTION]</p>\n<blockquote>\n<p>注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。<br>如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。</p>\n</blockquote>\n<p>一、修改ActivityManagerService.java的startHomeActivityLocked方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">startHomeActivityLocked</span><span class=\"params\">(<span class=\"keyword\">int</span> userId, String reason)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL &amp;&amp; mTopAction == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// We are running in factory test mode, but unable to find</span></div><div class=\"line\">        <span class=\"comment\">// the factory test app, so just sit around displaying the</span></div><div class=\"line\">        <span class=\"comment\">// error message and don't try to start anything.</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mtk add start</span></div><div class=\"line\">    <span class=\"keyword\">final</span> PackageManager mPm = mContext.getPackageManager();</div><div class=\"line\">    Intent homeIntent=<span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    homeIntent.setAction(Intent.ACTION_MAIN);</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">\"android\"</span>.equals(info.activityInfo.packageName))&#123; <span class=\"comment\">//if there is a default Launcher?</span></div><div class=\"line\">        ComponentName DefaultLauncher=<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher3\"</span>,<span class=\"string\">\"com.android.launcher3.Launcher\"</span>); <span class=\"comment\">//here set the package name and class name of default launcher.</span></div><div class=\"line\">        ArrayList&lt;ResolveInfo&gt; homeActivities = <span class=\"keyword\">new</span> ArrayList&lt;ResolveInfo&gt;();</div><div class=\"line\">        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);</div><div class=\"line\">        ComponentName[] mHomeComponentSet = <span class=\"keyword\">new</span> ComponentName[homeActivities.size()];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; homeActivities.size(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo candidate = homeActivities.get(i);</div><div class=\"line\">            Log.d(TAG,<span class=\"string\">\"homeActivitie: candidate = \"</span>+candidate);</div><div class=\"line\">            <span class=\"keyword\">final</span> ActivityInfo activityInfo= candidate.activityInfo;</div><div class=\"line\">            ComponentName activityName = <span class=\"keyword\">new</span> ComponentName(activityInfo.packageName, activityInfo.name);</div><div class=\"line\">            mHomeComponentSet[i] = activityName;</div><div class=\"line\">        &#125;</div><div class=\"line\">        IntentFilter mHomeFilter = <span class=\"keyword\">new</span> IntentFilter(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">        List&lt;ComponentName&gt;Activities=<span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//mtk add end</span></div><div class=\"line\"></div><div class=\"line\">    Intent intent = getHomeIntent();</div><div class=\"line\">    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、如果预置了GMS，还需要按照下面的方法修改:</p>\n<p>请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(isFirstBoot()) &#123;</div><div class=\"line\">    String examplePackageName = <span class=\"string\">\"com.android.launcher3\"</span>;  <span class=\"comment\">//default  package name of launcher</span></div><div class=\"line\">    String exampleActivityName = <span class=\"string\">\"com.android.launcher3.Launcher\"</span>; <span class=\"comment\">//default  activity name of  launcher   </span></div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(Intent.ACTION_MAIN);</div><div class=\"line\">    intent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> callingUserId = UserHandle.getCallingUserId();</div><div class=\"line\">    </div><div class=\"line\">    List&lt;ResolveInfo&gt; resolveInfoList = queryIntentActivities(intent,<span class=\"keyword\">null</span>, PackageManager.GET_META_DATA,callingUserId);</div><div class=\"line\">    <span class=\"keyword\">if</span>(resolveInfoList != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> size = resolveInfoList.size();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;size;)&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo r = resolveInfoList.get(j);</div><div class=\"line\">            <span class=\"keyword\">if</span>(!r.activityInfo.packageName.equals(examplePackageName)) &#123; </div><div class=\"line\">                resolveInfoList.remove(j);</div><div class=\"line\">                size -= <span class=\"number\">1</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; </div><div class=\"line\">       ComponentName[] set = <span class=\"keyword\">new</span> ComponentName[size];</div><div class=\"line\">       ComponentName defaultLauncher=<span class=\"keyword\">new</span> ComponentName(examplePackageName, exampleActivityName);</div><div class=\"line\">       <span class=\"keyword\">int</span> defaultMatch=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</div><div class=\"line\">           <span class=\"keyword\">final</span> ResolveInfo resolveInfo = resolveInfoList.get(i);</div><div class=\"line\">           Log.d(TAG,<span class=\"string\">\"resolveInfo = \"</span> + resolveInfo.toString());</div><div class=\"line\">           set[i] = <span class=\"keyword\">new</span> ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);</div><div class=\"line\">           <span class=\"keyword\">if</span>(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name))&#123;</div><div class=\"line\">               defaultMatch = resolveInfo.match;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       Log.d(TAG,<span class=\"string\">\"defaultMatch=\"</span>+Integer.toHexString(defaultMatch));</div><div class=\"line\">       IntentFilter filter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">       filter.addAction(Intent.ACTION_MAIN);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">      </div><div class=\"line\">       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>在PackageManagerService.java中增加addPreferredActivity2方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addPreferredActivity2</span><span class=\"params\">(IntentFilter filter, <span class=\"keyword\">int</span> match,ComponentName[] set, ComponentName activity)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mPackages) &#123;     </div><div class=\"line\">        filter.dump(<span class=\"keyword\">new</span> LogPrinter(Log.INFO, TAG), <span class=\"string\">\"  \"</span>);</div><div class=\"line\">        mSettings.editPreferredActivitiesLPw(<span class=\"number\">0</span>).addFilter(<span class=\"keyword\">new</span> PreferredActivity(filter, match, set, activity, <span class=\"keyword\">true</span>));</div><div class=\"line\">        scheduleWriteSettingsLocked();     </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query, priority)) &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">    PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">    pir.addFilter(lastChosen);</div><div class=\"line\">    mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">    intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;       </div><div class=\"line\">    Log.d(TAG,<span class=\"string\">\"Home\"</span>);      </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query)) &#123;                           </div><div class=\"line\">    <span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp; </div><div class=\"line\">        intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">        PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">        pir.addFilter(lastChosen);</div><div class=\"line\">        mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n"},{"title":"修改默认日期","date":"2017-09-21T06:19:03.000Z","_content":"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04318\n\n[DESCRIPTION]\n手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。\n如何客制化默认时区以及时间呢？\n\n[Solution]\n### 修改默认时间\n1、修改RTC默认日期\nAndroid L之前:\nalps\\mediatek\\custom\\[project]\\preloader\\inc\\cust_rtc.h\nalps\\mediatek\\custom\\[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h\n\nAndroid L或M\nbootable\\bootloader\\preloader\\custom\\[project]\\inc\\cust_rtc.h\n#define RTC_DEFAULT_YEA         2012\n#define RTC_DEFAULT_MTH        2\n#define RTC_DEFAULT_DOM        1\n\n### 修改默认日期\nframework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n```\nsystemReady()\n……\nif(isFirstBoot){\nTime today = new Time(Time.getCurrentTimezone());\ntoday.setToNow();   // 将时间恢复到RTC时间\ntoday.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份\n```\n\n如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();\n如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);\n这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。\n\n如果要設置出廠默認年份需要修改\n\n1)   \nAndroid KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml\n\nAndroid L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml\n``` xml\n<!-- default year for first power on-->\n<integer name=\"default_restore_year\">2013</integer>\n```\n\n2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n``` Java\nif(today.year <= 2010){ //删除此行判断条件\n    today.set(today.monthDay, today.month, 2013);\n    Log.d(TAG, \"Set the year to 2013\");\n    SystemProperties.set(BOOT_SYS_PROPERTY, \"false\");\n    SystemClock.setCurrentTimeMillis(today.toMillis(false));\n}\n```\n\n修改后的表现可通过Setting菜单->时间日期设置):\n\n3、修改默认时区:\n在系统属性中增加下面字段(假设改为Moscow)\nAndroid L之前:\nmediatek\\config\\[project]\\system.prop\nAndroid L:\ndevice\\mediatek\\[project]\\system.prop\npersist.sys.timezone = Europe/Moscow\n>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。","source":"_posts/修改默认日期.md","raw":"---\ntitle: 修改默认日期\ndate: 2017-09-21 14:19:03\ntags:\n---\nhttps://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04318\n\n[DESCRIPTION]\n手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。\n如何客制化默认时区以及时间呢？\n\n[Solution]\n### 修改默认时间\n1、修改RTC默认日期\nAndroid L之前:\nalps\\mediatek\\custom\\[project]\\preloader\\inc\\cust_rtc.h\nalps\\mediatek\\custom\\[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h\n\nAndroid L或M\nbootable\\bootloader\\preloader\\custom\\[project]\\inc\\cust_rtc.h\n#define RTC_DEFAULT_YEA         2012\n#define RTC_DEFAULT_MTH        2\n#define RTC_DEFAULT_DOM        1\n\n### 修改默认日期\nframework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n```\nsystemReady()\n……\nif(isFirstBoot){\nTime today = new Time(Time.getCurrentTimezone());\ntoday.setToNow();   // 将时间恢复到RTC时间\ntoday.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份\n```\n\n如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();\n如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);\n这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。\n\n如果要設置出廠默認年份需要修改\n\n1)   \nAndroid KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml\n\nAndroid L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml\n``` xml\n<!-- default year for first power on-->\n<integer name=\"default_restore_year\">2013</integer>\n```\n\n2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n``` Java\nif(today.year <= 2010){ //删除此行判断条件\n    today.set(today.monthDay, today.month, 2013);\n    Log.d(TAG, \"Set the year to 2013\");\n    SystemProperties.set(BOOT_SYS_PROPERTY, \"false\");\n    SystemClock.setCurrentTimeMillis(today.toMillis(false));\n}\n```\n\n修改后的表现可通过Setting菜单->时间日期设置):\n\n3、修改默认时区:\n在系统属性中增加下面字段(假设改为Moscow)\nAndroid L之前:\nmediatek\\config\\[project]\\system.prop\nAndroid L:\ndevice\\mediatek\\[project]\\system.prop\npersist.sys.timezone = Europe/Moscow\n>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。","slug":"修改默认日期","published":1,"updated":"2017-09-21T07:54:09.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzaj0015ardxpx39jonm","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318</a></p>\n<p>[DESCRIPTION]<br>手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。<br>如何客制化默认时区以及时间呢？</p>\n<p>[Solution]</p>\n<h3 id=\"修改默认时间\"><a href=\"#修改默认时间\" class=\"headerlink\" title=\"修改默认时间\"></a>修改默认时间</h3><p>1、修改RTC默认日期<br>Android L之前:<br>alps\\mediatek\\custom[project]\\preloader\\inc\\cust_rtc.h<br>alps\\mediatek\\custom[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h</p>\n<p>Android L或M<br>bootable\\bootloader\\preloader\\custom[project]\\inc\\cust_rtc.h</p>\n<p>#define RTC_DEFAULT_YEA         2012</p>\n<p>#define RTC_DEFAULT_MTH        2</p>\n<p>#define RTC_DEFAULT_DOM        1</p>\n<h3 id=\"修改默认日期\"><a href=\"#修改默认日期\" class=\"headerlink\" title=\"修改默认日期\"></a>修改默认日期</h3><p>framework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemReady()</div><div class=\"line\">……</div><div class=\"line\">if(isFirstBoot)&#123;</div><div class=\"line\">Time today = new Time(Time.getCurrentTimezone());</div><div class=\"line\">today.setToNow();   // 将时间恢复到RTC时间</div><div class=\"line\">today.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份</div></pre></td></tr></table></figure></p>\n<p>如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();<br>如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);<br>这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。</p>\n<p>如果要設置出廠默認年份需要修改</p>\n<p>1)<br>Android KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml</p>\n<p>Android L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- default year for first power on--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">integer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default_restore_year\"</span>&gt;</span>2013<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(today.year &lt;= <span class=\"number\">2010</span>)&#123; <span class=\"comment\">//删除此行判断条件</span></div><div class=\"line\">    today.set(today.monthDay, today.month, <span class=\"number\">2013</span>);</div><div class=\"line\">    Log.d(TAG, <span class=\"string\">\"Set the year to 2013\"</span>);</div><div class=\"line\">    SystemProperties.set(BOOT_SYS_PROPERTY, <span class=\"string\">\"false\"</span>);</div><div class=\"line\">    SystemClock.setCurrentTimeMillis(today.toMillis(<span class=\"keyword\">false</span>));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改后的表现可通过Setting菜单-&gt;时间日期设置):</p>\n<p>3、修改默认时区:<br>在系统属性中增加下面字段(假设改为Moscow)<br>Android L之前:<br>mediatek\\config[project]\\system.prop<br>Android L:<br>device\\mediatek[project]\\system.prop<br>persist.sys.timezone = Europe/Moscow</p>\n<blockquote>\n<p>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318</a></p>\n<p>[DESCRIPTION]<br>手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。<br>如何客制化默认时区以及时间呢？</p>\n<p>[Solution]</p>\n<h3 id=\"修改默认时间\"><a href=\"#修改默认时间\" class=\"headerlink\" title=\"修改默认时间\"></a>修改默认时间</h3><p>1、修改RTC默认日期<br>Android L之前:<br>alps\\mediatek\\custom[project]\\preloader\\inc\\cust_rtc.h<br>alps\\mediatek\\custom[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h</p>\n<p>Android L或M<br>bootable\\bootloader\\preloader\\custom[project]\\inc\\cust_rtc.h</p>\n<p>#define RTC_DEFAULT_YEA         2012</p>\n<p>#define RTC_DEFAULT_MTH        2</p>\n<p>#define RTC_DEFAULT_DOM        1</p>\n<h3 id=\"修改默认日期\"><a href=\"#修改默认日期\" class=\"headerlink\" title=\"修改默认日期\"></a>修改默认日期</h3><p>framework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemReady()</div><div class=\"line\">……</div><div class=\"line\">if(isFirstBoot)&#123;</div><div class=\"line\">Time today = new Time(Time.getCurrentTimezone());</div><div class=\"line\">today.setToNow();   // 将时间恢复到RTC时间</div><div class=\"line\">today.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份</div></pre></td></tr></table></figure></p>\n<p>如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();<br>如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);<br>这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。</p>\n<p>如果要設置出廠默認年份需要修改</p>\n<p>1)<br>Android KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml</p>\n<p>Android L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- default year for first power on--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">integer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default_restore_year\"</span>&gt;</span>2013<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(today.year &lt;= <span class=\"number\">2010</span>)&#123; <span class=\"comment\">//删除此行判断条件</span></div><div class=\"line\">    today.set(today.monthDay, today.month, <span class=\"number\">2013</span>);</div><div class=\"line\">    Log.d(TAG, <span class=\"string\">\"Set the year to 2013\"</span>);</div><div class=\"line\">    SystemProperties.set(BOOT_SYS_PROPERTY, <span class=\"string\">\"false\"</span>);</div><div class=\"line\">    SystemClock.setCurrentTimeMillis(today.toMillis(<span class=\"keyword\">false</span>));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改后的表现可通过Setting菜单-&gt;时间日期设置):</p>\n<p>3、修改默认时区:<br>在系统属性中增加下面字段(假设改为Moscow)<br>Android L之前:<br>mediatek\\config[project]\\system.prop<br>Android L:<br>device\\mediatek[project]\\system.prop<br>persist.sys.timezone = Europe/Moscow</p>\n<blockquote>\n<p>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。</p>\n</blockquote>\n"},{"_content":"---\ntitle: 修改默认的两个闹钟震动打开\ndate: 2017-09-22 10:25:03\ntags:\n---\tpackages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java\n``` Java\n// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri\nprivate static final String DEFAULT_ALARM_1 = \"(8, 30, 31, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n\n// This creates a default alarm at 9:30 for every Sat,Sun\nprivate static final String DEFAULT_ALARM_2 = \"(9, 00, 96, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n```","source":"_posts/修改默认的两个闹钟震动打开.md","raw":"---\ntitle: 修改默认的两个闹钟震动打开\ndate: 2017-09-22 10:25:03\ntags:\n---\tpackages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java\n``` Java\n// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri\nprivate static final String DEFAULT_ALARM_1 = \"(8, 30, 31, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n\n// This creates a default alarm at 9:30 for every Sat,Sun\nprivate static final String DEFAULT_ALARM_2 = \"(9, 00, 96, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n```","slug":"修改默认的两个闹钟震动打开","published":1,"date":"2017-09-22T02:25:44.624Z","updated":"2017-09-22T02:25:44.624Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzak0016ardx5r0ja43v","content":"<hr>\n<p>title: 修改默认的两个闹钟震动打开<br>date: 2017-09-22 10:25:03<br>tags:<br>—    packages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_1 = <span class=\"string\">\"(8, 30, 31, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 9:30 for every Sat,Sun</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_2 = <span class=\"string\">\"(9, 00, 96, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: 修改默认的两个闹钟震动打开<br>date: 2017-09-22 10:25:03<br>tags:<br>—    packages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_1 = <span class=\"string\">\"(8, 30, 31, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 9:30 for every Sat,Sun</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_2 = <span class=\"string\">\"(9, 00, 96, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div></pre></td></tr></table></figure></p>\n"},{"title":"全局对话框","date":"2017-09-22T07:11:55.000Z","_content":"使用 Application 作为 Dialog 的 Context\n将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT\n``` Java\nAlertDialog.Builder builder = new AlertDialog.Builder(mApplicationContext);\n...\nAlertDialog alertDialog = builder.create();\nalertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\nalertDialog.show();\n```\n//在AndroidManifest.xml文件中添加如下权限\n``` xml\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n```","source":"_posts/全局对话框.md","raw":"---\ntitle: 全局对话框\ndate: 2017-09-22 15:11:55\ntags:\n---\n使用 Application 作为 Dialog 的 Context\n将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT\n``` Java\nAlertDialog.Builder builder = new AlertDialog.Builder(mApplicationContext);\n...\nAlertDialog alertDialog = builder.create();\nalertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\nalertDialog.show();\n```\n//在AndroidManifest.xml文件中添加如下权限\n``` xml\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n```","slug":"全局对话框","published":1,"updated":"2017-09-22T09:07:13.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzal0017ardx6fdjaq32","content":"<p>使用 Application 作为 Dialog 的 Context<br>将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(mApplicationContext);</div><div class=\"line\">...</div><div class=\"line\">AlertDialog alertDialog = builder.create();</div><div class=\"line\">alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">alertDialog.show();</div></pre></td></tr></table></figure></p>\n<p>//在AndroidManifest.xml文件中添加如下权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.SYSTEM_ALERT_WINDOW\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用 Application 作为 Dialog 的 Context<br>将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(mApplicationContext);</div><div class=\"line\">...</div><div class=\"line\">AlertDialog alertDialog = builder.create();</div><div class=\"line\">alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">alertDialog.show();</div></pre></td></tr></table></figure></p>\n<p>//在AndroidManifest.xml文件中添加如下权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.SYSTEM_ALERT_WINDOW\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"关闭NavigationBar","date":"2017-09-22T04:54:57.000Z","_content":"[FAQ04788](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04788)\n### KK及之前版本:\n默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。\n \nMT6589 和MT6572:\n1. 在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:\nalps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml\n``` Xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。\n \n2. MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义\n3. JB3 MP之后所有版本统一如下路径修改\n\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml\n``` xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。 \n\n4. 其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar\n\n### L和M版本:\n\n这个两个版本的修改方式与之前的版本也是类似:\n\n1. 先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。\n\n2. 再检查qemu.hw.mainkeys值的设置。\n\n3. 是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。","source":"_posts/关闭NavigationBar.md","raw":"---\ntitle: 关闭NavigationBar\ndate: 2017-09-22 12:54:57\ntags:\n---\n[FAQ04788](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04788)\n### KK及之前版本:\n默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。\n \nMT6589 和MT6572:\n1. 在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:\nalps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml\n``` Xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。\n \n2. MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义\n3. JB3 MP之后所有版本统一如下路径修改\n\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml\n``` xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。 \n\n4. 其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar\n\n### L和M版本:\n\n这个两个版本的修改方式与之前的版本也是类似:\n\n1. 先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。\n\n2. 再检查qemu.hw.mainkeys值的设置。\n\n3. 是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。","slug":"关闭NavigationBar","published":1,"updated":"2017-09-22T05:00:10.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzal0018ardxuwmifsds","content":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04788\" target=\"_blank\" rel=\"external\">FAQ04788</a></p>\n<h3 id=\"KK及之前版本\"><a href=\"#KK及之前版本\" class=\"headerlink\" title=\"KK及之前版本:\"></a>KK及之前版本:</h3><p>默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。</p>\n<p>MT6589 和MT6572:</p>\n<ol>\n<li>在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:<br>alps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。</p>\n<ol>\n<li>MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义</li>\n<li>JB3 MP之后所有版本统一如下路径修改<br>\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。 </p>\n<ol>\n<li>其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar</li>\n</ol>\n<h3 id=\"L和M版本\"><a href=\"#L和M版本\" class=\"headerlink\" title=\"L和M版本:\"></a>L和M版本:</h3><p>这个两个版本的修改方式与之前的版本也是类似:</p>\n<ol>\n<li><p>先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。</p>\n</li>\n<li><p>再检查qemu.hw.mainkeys值的设置。</p>\n</li>\n<li><p>是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04788\" target=\"_blank\" rel=\"external\">FAQ04788</a></p>\n<h3 id=\"KK及之前版本\"><a href=\"#KK及之前版本\" class=\"headerlink\" title=\"KK及之前版本:\"></a>KK及之前版本:</h3><p>默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。</p>\n<p>MT6589 和MT6572:</p>\n<ol>\n<li>在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:<br>alps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。</p>\n<ol>\n<li>MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义</li>\n<li>JB3 MP之后所有版本统一如下路径修改<br>\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。 </p>\n<ol>\n<li>其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar</li>\n</ol>\n<h3 id=\"L和M版本\"><a href=\"#L和M版本\" class=\"headerlink\" title=\"L和M版本:\"></a>L和M版本:</h3><p>这个两个版本的修改方式与之前的版本也是类似:</p>\n<ol>\n<li><p>先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。</p>\n</li>\n<li><p>再检查qemu.hw.mainkeys值的设置。</p>\n</li>\n<li><p>是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。</p>\n</li>\n</ol>\n"},{"title":"内存消耗测试","date":"2017-09-25T07:42:23.000Z","_content":"``` Java\npublic interface MemoryConsumer{\n    public void createArray();\n    public void createHashMap();\n}\n\npublic class MemoConsumerImpl implements MemoryConsumer{\n    private ArrayList arr = null;\n    private HashMap hash = null;\n    public void createArray(){\n        arr = new ArrayList(1000);\n    }\n    public void createHashMap(){\n        hash = new HashMap(1000);\n    }\n}\n\npublic class Memory{\n    public static long used(){\n        long total = Runtime.getRuntime().totalMemory();\n        long free = Runtime.getRuntime().freeMemory();\n        return (totao - free);\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = Memory.used();\n            result = method.invoke(obj,args);\n            long end = Memory.used();\n            Log.e(\"test\",method.getName()+\" test spend:\"+(end - start)+\" bytes\");\n        }catch(Exception e){\n            e.printStaceTrace();\n        }\n    }\n}\n\ntry{\n    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(new MemoConsumerImpl());\n    arrayMemo.createArray();\n    arrayMemo.createHashMap();\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/内存消耗测试.md","raw":"---\ntitle: 内存消耗测试\ndate: 2017-09-25 15:42:23\ntags:\n---\n``` Java\npublic interface MemoryConsumer{\n    public void createArray();\n    public void createHashMap();\n}\n\npublic class MemoConsumerImpl implements MemoryConsumer{\n    private ArrayList arr = null;\n    private HashMap hash = null;\n    public void createArray(){\n        arr = new ArrayList(1000);\n    }\n    public void createHashMap(){\n        hash = new HashMap(1000);\n    }\n}\n\npublic class Memory{\n    public static long used(){\n        long total = Runtime.getRuntime().totalMemory();\n        long free = Runtime.getRuntime().freeMemory();\n        return (totao - free);\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = Memory.used();\n            result = method.invoke(obj,args);\n            long end = Memory.used();\n            Log.e(\"test\",method.getName()+\" test spend:\"+(end - start)+\" bytes\");\n        }catch(Exception e){\n            e.printStaceTrace();\n        }\n    }\n}\n\ntry{\n    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(new MemoConsumerImpl());\n    arrayMemo.createArray();\n    arrayMemo.createHashMap();\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"内存消耗测试","published":1,"updated":"2017-09-25T07:43:06.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzam0019ardx6wxmzerx","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoConsumerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ArrayList arr = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> HashMap hash = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        arr = <span class=\"keyword\">new</span> ArrayList(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        hash = <span class=\"keyword\">new</span> HashMap(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memory</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">used</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> total = Runtime.getRuntime().totalMemory();</div><div class=\"line\">        <span class=\"keyword\">long</span> free = Runtime.getRuntime().freeMemory();</div><div class=\"line\">        <span class=\"keyword\">return</span> (totao - free);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),<span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = Memory.used();</div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = Memory.used();</div><div class=\"line\">            Log.e(<span class=\"string\">\"test\"</span>,method.getName()+<span class=\"string\">\" test spend:\"</span>+(end - start)+<span class=\"string\">\" bytes\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStaceTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(<span class=\"keyword\">new</span> MemoConsumerImpl());</div><div class=\"line\">    arrayMemo.createArray();</div><div class=\"line\">    arrayMemo.createHashMap();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoConsumerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ArrayList arr = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> HashMap hash = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        arr = <span class=\"keyword\">new</span> ArrayList(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        hash = <span class=\"keyword\">new</span> HashMap(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memory</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">used</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> total = Runtime.getRuntime().totalMemory();</div><div class=\"line\">        <span class=\"keyword\">long</span> free = Runtime.getRuntime().freeMemory();</div><div class=\"line\">        <span class=\"keyword\">return</span> (totao - free);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),<span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = Memory.used();</div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = Memory.used();</div><div class=\"line\">            Log.e(<span class=\"string\">\"test\"</span>,method.getName()+<span class=\"string\">\" test spend:\"</span>+(end - start)+<span class=\"string\">\" bytes\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStaceTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(<span class=\"keyword\">new</span> MemoConsumerImpl());</div><div class=\"line\">    arrayMemo.createArray();</div><div class=\"line\">    arrayMemo.createHashMap();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"减缓按键长按事件的处理速度","date":"2017-09-21T08:53:58.000Z","_content":"``` Java\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(event.getRepeatCount() % 3 != 0){    //添加了这段代码\n        return true;\n    }\n    ......\n}\n```","source":"_posts/减缓按键长按事件的处理速度.md","raw":"---\ntitle: 减缓按键长按事件的处理速度\ndate: 2017-09-21 16:53:58\ntags:\n---\n``` Java\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(event.getRepeatCount() % 3 != 0){    //添加了这段代码\n        return true;\n    }\n    ......\n}\n```","slug":"减缓按键长按事件的处理速度","published":1,"updated":"2017-09-21T08:54:41.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzan001aardxo7p6legj","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(event.getRepeatCount() % <span class=\"number\">3</span> != <span class=\"number\">0</span>)&#123;    <span class=\"comment\">//添加了这段代码</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(event.getRepeatCount() % <span class=\"number\">3</span> != <span class=\"number\">0</span>)&#123;    <span class=\"comment\">//添加了这段代码</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"动态壁纸的学习和使用","date":"2017-09-25T06:37:21.000Z","_content":"可以参考 [Android 仿火萤视频桌面 神奇的LiveWallPaper]( http://blog.csdn.net/lmj623565791/article/details/72170299)\n\n1. 创建一个类集成 WallpaperService\n``` Java\npublic class MyWallpaperService extends WallpaperService {\n    @Override\n    public Engine onCreateEngine() {\n        Log.e(\"zhangqi\", \"createEngine()\");\n        return new MyEngine();\n    }\n    class MyEngine extends Engine {\n        public void onSurfaceCreated(SurfaceHolder holder) {\n            Canvas canvas = holder.lockCanvas(null);\n            canvas.draw.....                        //在这里画图\n            holder.unlockCanvasAndPost(canvas);\n        }\n    }\n}\n```\n2. 在 AndroidManifest.xml 文件中注册\n``` xml\n<!-- 上面的WallpaperService -->\n<service\n    android:name=\"com.sagereal.zq.MyWallpaperService\"                            \n    android:label=\"@string/app_name\"\n    android:permission=\"android.permission.BIND_WALLPAPER\" >\n    <intent-filter>\n        <action android:name=\"android.service.wallpaper.WallpaperService\" />\n    </intent-filter>\n    <meta-data\n        android:name=\"android.service.wallpaper\"\n        android:resource=\"@xml/wallpaper\" /> <!-- 下面的wallpaper.xml配置文件 -->\n</service>\n```\n3. 创建添加 res/xml/wallpaper.xml 文件\n``` Java\n<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:thumbnail=\"@drawable/ic_launcher\"                                     //动态壁纸列表中的缩略图\n    android:description=\"@string/description\" />                                //动态壁纸列表中的动态壁纸名称\n```\n\n##### 如何过滤出所有动态壁纸的apk\n``` Java\npublic static final String SERVICE_INTERFACE = \"android.service.wallpaper.WallpaperService\";\nList<ResolveInfo> list = mPackageManager.queryIntentServices(new Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);\n```","source":"_posts/动态壁纸的学习和使用.md","raw":"---\ntitle: 动态壁纸的学习和使用\ndate: 2017-09-25 14:37:21\ntags:\n---\n可以参考 [Android 仿火萤视频桌面 神奇的LiveWallPaper]( http://blog.csdn.net/lmj623565791/article/details/72170299)\n\n1. 创建一个类集成 WallpaperService\n``` Java\npublic class MyWallpaperService extends WallpaperService {\n    @Override\n    public Engine onCreateEngine() {\n        Log.e(\"zhangqi\", \"createEngine()\");\n        return new MyEngine();\n    }\n    class MyEngine extends Engine {\n        public void onSurfaceCreated(SurfaceHolder holder) {\n            Canvas canvas = holder.lockCanvas(null);\n            canvas.draw.....                        //在这里画图\n            holder.unlockCanvasAndPost(canvas);\n        }\n    }\n}\n```\n2. 在 AndroidManifest.xml 文件中注册\n``` xml\n<!-- 上面的WallpaperService -->\n<service\n    android:name=\"com.sagereal.zq.MyWallpaperService\"                            \n    android:label=\"@string/app_name\"\n    android:permission=\"android.permission.BIND_WALLPAPER\" >\n    <intent-filter>\n        <action android:name=\"android.service.wallpaper.WallpaperService\" />\n    </intent-filter>\n    <meta-data\n        android:name=\"android.service.wallpaper\"\n        android:resource=\"@xml/wallpaper\" /> <!-- 下面的wallpaper.xml配置文件 -->\n</service>\n```\n3. 创建添加 res/xml/wallpaper.xml 文件\n``` Java\n<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:thumbnail=\"@drawable/ic_launcher\"                                     //动态壁纸列表中的缩略图\n    android:description=\"@string/description\" />                                //动态壁纸列表中的动态壁纸名称\n```\n\n##### 如何过滤出所有动态壁纸的apk\n``` Java\npublic static final String SERVICE_INTERFACE = \"android.service.wallpaper.WallpaperService\";\nList<ResolveInfo> list = mPackageManager.queryIntentServices(new Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);\n```","slug":"动态壁纸的学习和使用","published":1,"updated":"2017-09-30T02:46:15.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzan001bardx7wr82bc4","content":"<p>可以参考 <a href=\"http://blog.csdn.net/lmj623565791/article/details/72170299\" target=\"_blank\" rel=\"external\">Android 仿火萤视频桌面 神奇的LiveWallPaper</a></p>\n<ol>\n<li><p>创建一个类集成 WallpaperService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyWallpaperService</span> <span class=\"keyword\">extends</span> <span class=\"title\">WallpaperService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Engine <span class=\"title\">onCreateEngine</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Log.e(<span class=\"string\">\"zhangqi\"</span>, <span class=\"string\">\"createEngine()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyEngine();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyEngine</span> <span class=\"keyword\">extends</span> <span class=\"title\">Engine</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceCreated</span><span class=\"params\">(SurfaceHolder holder)</span> </span>&#123;</div><div class=\"line\">            Canvas canvas = holder.lockCanvas(<span class=\"keyword\">null</span>);</div><div class=\"line\">            canvas.draw.....                        <span class=\"comment\">//在这里画图</span></div><div class=\"line\">            holder.unlockCanvasAndPost(canvas);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>在 AndroidManifest.xml 文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 上面的WallpaperService --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.sagereal.zq.MyWallpaperService\"</span>                            </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:label</span>=<span class=\"string\">\"@string/app_name\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:permission</span>=<span class=\"string\">\"android.permission.BIND_WALLPAPER\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/wallpaper\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 下面的wallpaper.xml配置文件 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>创建添加 res/xml/wallpaper.xml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;wallpaper xmlns:android=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    android:thumbnail=<span class=\"string\">\"@drawable/ic_launcher\"</span>                                     <span class=\"comment\">//动态壁纸列表中的缩略图</span></div><div class=\"line\">    android:description=<span class=\"string\">\"@string/description\"</span> /&gt;                                <span class=\"comment\">//动态壁纸列表中的动态壁纸名称</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"如何过滤出所有动态壁纸的apk\"><a href=\"#如何过滤出所有动态壁纸的apk\" class=\"headerlink\" title=\"如何过滤出所有动态壁纸的apk\"></a>如何过滤出所有动态壁纸的apk</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SERVICE_INTERFACE = <span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span>;</div><div class=\"line\">List&lt;ResolveInfo&gt; list = mPackageManager.queryIntentServices(<span class=\"keyword\">new</span> Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>可以参考 <a href=\"http://blog.csdn.net/lmj623565791/article/details/72170299\" target=\"_blank\" rel=\"external\">Android 仿火萤视频桌面 神奇的LiveWallPaper</a></p>\n<ol>\n<li><p>创建一个类集成 WallpaperService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyWallpaperService</span> <span class=\"keyword\">extends</span> <span class=\"title\">WallpaperService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Engine <span class=\"title\">onCreateEngine</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Log.e(<span class=\"string\">\"zhangqi\"</span>, <span class=\"string\">\"createEngine()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyEngine();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyEngine</span> <span class=\"keyword\">extends</span> <span class=\"title\">Engine</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceCreated</span><span class=\"params\">(SurfaceHolder holder)</span> </span>&#123;</div><div class=\"line\">            Canvas canvas = holder.lockCanvas(<span class=\"keyword\">null</span>);</div><div class=\"line\">            canvas.draw.....                        <span class=\"comment\">//在这里画图</span></div><div class=\"line\">            holder.unlockCanvasAndPost(canvas);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>在 AndroidManifest.xml 文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 上面的WallpaperService --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.sagereal.zq.MyWallpaperService\"</span>                            </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:label</span>=<span class=\"string\">\"@string/app_name\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:permission</span>=<span class=\"string\">\"android.permission.BIND_WALLPAPER\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/wallpaper\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 下面的wallpaper.xml配置文件 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>创建添加 res/xml/wallpaper.xml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;wallpaper xmlns:android=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    android:thumbnail=<span class=\"string\">\"@drawable/ic_launcher\"</span>                                     <span class=\"comment\">//动态壁纸列表中的缩略图</span></div><div class=\"line\">    android:description=<span class=\"string\">\"@string/description\"</span> /&gt;                                <span class=\"comment\">//动态壁纸列表中的动态壁纸名称</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"如何过滤出所有动态壁纸的apk\"><a href=\"#如何过滤出所有动态壁纸的apk\" class=\"headerlink\" title=\"如何过滤出所有动态壁纸的apk\"></a>如何过滤出所有动态壁纸的apk</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SERVICE_INTERFACE = <span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span>;</div><div class=\"line\">List&lt;ResolveInfo&gt; list = mPackageManager.queryIntentServices(<span class=\"keyword\">new</span> Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);</div></pre></td></tr></table></figure>"},{"title":"反编译查看google向导设置息屏时间121000","date":"2017-09-25T07:32:18.000Z","_content":"通过反编译/vendor/google/apps/SetupWizard_default_dark.apk\n可以看到在 com.google.setupwizard.BaseActivity.java 文件中有\n``` Java\nprotected void onSetupStart(){\n    mUserData.put(\"screenTimeout\", Integer.valueOf(Settings.System.getInt(getContentResolver(), \"screen_off_timeout\", 121000)));\n    Settings.System.putInt(getContentResolver(), \"screen_off_timeout\", 121000);            //在这个地方将息屏时间设置为 121000\n    if (ROTATION_LOCKED)\n        lockRotation();\n}\n```\n在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法\n``` Java\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    while (true)\n    {\n        return;\n        str1 = \"icicle\";\n        break;\n        label280: str2 = \"false\";\n        break label43;\n        label287: bool1 = false;\n        break label121;\n        label293: bool2 = false;\n        break label163;\n        label299: bool4 = false;\n        break label213;\n        label305: if ((bool1) || (!isHomeActivity()))\n        this.mClearAccountsDone = true;\n        if (paramBundle == null) {\n            onSetupStart();\n            startWarmSimCheck();\n            startWelcomeActivity();\n        }\n    }\n}\n```\n\n``` xml\n<activity\n    android:theme=\"@7F090013\"\n    android:name=\"SetupWizardActivity\"        //这个activity是启动activity\n    android:excludeFromRecents=\"true\"\n    android:launchMode=\"1\"\n    android:immersive=\"true\">\n    <intent-filter android:priority=\"5\" >\n        <action android:name=\"android.intent.action.MAIN\" />\n        <action android:name=\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"/>\n        <category android:name=\"android.intent.category.HOME\"/>\n        <category android:name=\"android.intent.category.DEFAULT\" />\n    </intent-filter>\n</activity>\n```","source":"_posts/反编译查看google向导设置息屏时间121000.md","raw":"---\ntitle: 反编译查看google向导设置息屏时间121000\ndate: 2017-09-25 15:32:18\ntags:\n---\n通过反编译/vendor/google/apps/SetupWizard_default_dark.apk\n可以看到在 com.google.setupwizard.BaseActivity.java 文件中有\n``` Java\nprotected void onSetupStart(){\n    mUserData.put(\"screenTimeout\", Integer.valueOf(Settings.System.getInt(getContentResolver(), \"screen_off_timeout\", 121000)));\n    Settings.System.putInt(getContentResolver(), \"screen_off_timeout\", 121000);            //在这个地方将息屏时间设置为 121000\n    if (ROTATION_LOCKED)\n        lockRotation();\n}\n```\n在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法\n``` Java\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    while (true)\n    {\n        return;\n        str1 = \"icicle\";\n        break;\n        label280: str2 = \"false\";\n        break label43;\n        label287: bool1 = false;\n        break label121;\n        label293: bool2 = false;\n        break label163;\n        label299: bool4 = false;\n        break label213;\n        label305: if ((bool1) || (!isHomeActivity()))\n        this.mClearAccountsDone = true;\n        if (paramBundle == null) {\n            onSetupStart();\n            startWarmSimCheck();\n            startWelcomeActivity();\n        }\n    }\n}\n```\n\n``` xml\n<activity\n    android:theme=\"@7F090013\"\n    android:name=\"SetupWizardActivity\"        //这个activity是启动activity\n    android:excludeFromRecents=\"true\"\n    android:launchMode=\"1\"\n    android:immersive=\"true\">\n    <intent-filter android:priority=\"5\" >\n        <action android:name=\"android.intent.action.MAIN\" />\n        <action android:name=\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"/>\n        <category android:name=\"android.intent.category.HOME\"/>\n        <category android:name=\"android.intent.category.DEFAULT\" />\n    </intent-filter>\n</activity>\n```","slug":"反编译查看google向导设置息屏时间121000","published":1,"updated":"2017-09-25T07:33:22.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzao001cardxmeogltoh","content":"<p>通过反编译/vendor/google/apps/SetupWizard_default_dark.apk<br>可以看到在 com.google.setupwizard.BaseActivity.java 文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupStart</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    mUserData.put(<span class=\"string\">\"screenTimeout\"</span>, Integer.valueOf(Settings.System.getInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>)));</div><div class=\"line\">    Settings.System.putInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>);            <span class=\"comment\">//在这个地方将息屏时间设置为 121000</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (ROTATION_LOCKED)</div><div class=\"line\">        lockRotation();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle paramBundle)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">        str1 = <span class=\"string\">\"icicle\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        label280: str2 = <span class=\"string\">\"false\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label43;</div><div class=\"line\">        label287: bool1 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label121;</div><div class=\"line\">        label293: bool2 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label163;</div><div class=\"line\">        label299: bool4 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label213;</div><div class=\"line\">        label305: <span class=\"keyword\">if</span> ((bool1) || (!isHomeActivity()))</div><div class=\"line\">        <span class=\"keyword\">this</span>.mClearAccountsDone = <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (paramBundle == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            onSetupStart();</div><div class=\"line\">            startWarmSimCheck();</div><div class=\"line\">            startWelcomeActivity();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@7F090013\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"SetupWizardActivity\"</span>        //这个<span class=\"attr\">activity</span>是启动<span class=\"attr\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:excludeFromRecents</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"1\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:immersive</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span> <span class=\"attr\">android:priority</span>=<span class=\"string\">\"5\"</span> &gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.MAIN\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.HOME\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>通过反编译/vendor/google/apps/SetupWizard_default_dark.apk<br>可以看到在 com.google.setupwizard.BaseActivity.java 文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupStart</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    mUserData.put(<span class=\"string\">\"screenTimeout\"</span>, Integer.valueOf(Settings.System.getInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>)));</div><div class=\"line\">    Settings.System.putInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>);            <span class=\"comment\">//在这个地方将息屏时间设置为 121000</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (ROTATION_LOCKED)</div><div class=\"line\">        lockRotation();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle paramBundle)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">        str1 = <span class=\"string\">\"icicle\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        label280: str2 = <span class=\"string\">\"false\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label43;</div><div class=\"line\">        label287: bool1 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label121;</div><div class=\"line\">        label293: bool2 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label163;</div><div class=\"line\">        label299: bool4 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label213;</div><div class=\"line\">        label305: <span class=\"keyword\">if</span> ((bool1) || (!isHomeActivity()))</div><div class=\"line\">        <span class=\"keyword\">this</span>.mClearAccountsDone = <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (paramBundle == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            onSetupStart();</div><div class=\"line\">            startWarmSimCheck();</div><div class=\"line\">            startWelcomeActivity();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@7F090013\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"SetupWizardActivity\"</span>        //这个<span class=\"attr\">activity</span>是启动<span class=\"attr\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:excludeFromRecents</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"1\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:immersive</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span> <span class=\"attr\">android:priority</span>=<span class=\"string\">\"5\"</span> &gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.MAIN\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.HOME\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"同时支持两个文件名不同的布局","date":"2017-09-22T02:50:09.000Z","_content":"res/layout/main_onepane.xml\nres/layout/main_twopanes.xml\n\nres/values-xlarge/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_onepane</item>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了\n</resources>\n```\n\nres/values-sw600dp/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_twopanes</item>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了\n</resources>\n```","source":"_posts/同时支持两个文件名不同的布局.md","raw":"---\ntitle: 同时支持两个文件名不同的布局\ndate: 2017-09-22 10:50:09\ntags:\n---\nres/layout/main_onepane.xml\nres/layout/main_twopanes.xml\n\nres/values-xlarge/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_onepane</item>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了\n</resources>\n```\n\nres/values-sw600dp/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_twopanes</item>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了\n</resources>\n```","slug":"同时支持两个文件名不同的布局","published":1,"updated":"2017-09-22T02:53:54.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzap001dardxoadnj4h0","content":"<p>res/layout/main_onepane.xml<br>res/layout/main_twopanes.xml</p>\n<p>res/values-xlarge/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_onepane<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>res/values-sw600dp/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_twopanes<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>res/layout/main_onepane.xml<br>res/layout/main_twopanes.xml</p>\n<p>res/values-xlarge/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_onepane<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>res/values-sw600dp/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_twopanes<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"在关闭飞行模式之后蓝牙打不开","date":"2017-09-22T02:47:44.000Z","_content":"frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java\n``` Java\nmBluetoothTileView.setOnClickListener(new OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);\n        boolean isAirplaneToggleable = toggleableRadio == null ? false : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);\n        boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,0) == 1;\n        if(!isAirplaneModeOn || isAirplaneToggleable){\n            mBluetoothStateTracker.toggleState(mContext);\n        }\n    }\n});\n```","source":"_posts/在关闭飞行模式之后蓝牙打不开.md","raw":"---\ntitle: 在关闭飞行模式之后蓝牙打不开\ndate: 2017-09-22 10:47:44\ntags:\n---\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java\n``` Java\nmBluetoothTileView.setOnClickListener(new OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);\n        boolean isAirplaneToggleable = toggleableRadio == null ? false : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);\n        boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,0) == 1;\n        if(!isAirplaneModeOn || isAirplaneToggleable){\n            mBluetoothStateTracker.toggleState(mContext);\n        }\n    }\n});\n```","slug":"在关闭飞行模式之后蓝牙打不开","published":1,"updated":"2017-09-22T02:48:36.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzap001eardxi0qa90o9","content":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">mBluetoothTileView.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneToggleable = toggleableRadio == <span class=\"keyword\">null</span> ? <span class=\"keyword\">false</span> : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,<span class=\"number\">0</span>) == <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(!isAirplaneModeOn || isAirplaneToggleable)&#123;</div><div class=\"line\">            mBluetoothStateTracker.toggleState(mContext);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">mBluetoothTileView.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneToggleable = toggleableRadio == <span class=\"keyword\">null</span> ? <span class=\"keyword\">false</span> : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,<span class=\"number\">0</span>) == <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(!isAirplaneModeOn || isAirplaneToggleable)&#123;</div><div class=\"line\">            mBluetoothStateTracker.toggleState(mContext);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n"},{"title":"圆形的Imageview","date":"2017-09-22T02:31:57.000Z","_content":"``` Java\nimport android.content.Context;  \nimport android.graphics.Bitmap;  \nimport android.graphics.Bitmap.Config;  \nimport android.graphics.Canvas;  \nimport android.graphics.Paint;  \nimport android.graphics.PorterDuff.Mode;  \nimport android.graphics.PorterDuffXfermode;  \nimport android.graphics.Rect;  \nimport android.graphics.drawable.BitmapDrawable;  \nimport android.graphics.drawable.Drawable;  \nimport android.util.AttributeSet;  \nimport android.widget.ImageView;  \nimport android.graphics.Matrix;\n  \n/** \n * 圆形的Imageview \n * @since 2012-11-02 \n *  \n * @author bingyang.djj \n *  \n */  \npublic class CircleImageView extends ImageView {  \n    private Paint paint = new Paint();  \n  \n    public CircleImageView(Context context) {  \n        super(context);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs) {  \n        super(context, attrs);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs, int defStyle) {  \n        super(context, attrs, defStyle);  \n    }  \n  \n    @Override  \n    protected void onDraw(Canvas canvas) {  \n        Drawable drawable = getDrawable();  \n        if (null != drawable) {  \n            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  \n            Matrix matrix = new Matrix();\n            float x = (float)100/bitmap1.getWidth();\n            float y = (float)100/bitmap1.getHeight();\n            matrix.postScale(x, y);\n            Bitmap bitmap = Bitmap.createBitmap(bitmap1, 0, 0, bitmap1.getWidth(), bitmap1.getHeight(), matrix, true);\n            Bitmap b = toRoundCorner(bitmap, 14);  \n            final Rect rect = new Rect(0, 0, b.getWidth(),  b.getHeight());  \n            paint.reset();  \n            canvas.drawBitmap(b, rect, rect, paint);  \n  \n        } else {  \n            super.onDraw(canvas);  \n        }  \n    }  \n  \n    private Bitmap toRoundCorner(Bitmap bitmap, int pixels) {  \n        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  \n        Canvas canvas = new Canvas(output);  \n        final int color = 0xff424242;  \n        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());  \n        paint.setAntiAlias(true);  \n        canvas.drawARGB(0, 0, 0, 0);  \n        paint.setColor(color);  \n        int x = bitmap.getWidth();  \n        canvas.drawCircle(x / 2, x / 2, x / 2, paint);  \n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  \n        canvas.drawBitmap(bitmap, rect, rect, paint);  \n        return output;  \n    }\n}\n```","source":"_posts/圆形的Imageview.md","raw":"---\ntitle: 圆形的Imageview\ndate: 2017-09-22 10:31:57\ntags:\n---\n``` Java\nimport android.content.Context;  \nimport android.graphics.Bitmap;  \nimport android.graphics.Bitmap.Config;  \nimport android.graphics.Canvas;  \nimport android.graphics.Paint;  \nimport android.graphics.PorterDuff.Mode;  \nimport android.graphics.PorterDuffXfermode;  \nimport android.graphics.Rect;  \nimport android.graphics.drawable.BitmapDrawable;  \nimport android.graphics.drawable.Drawable;  \nimport android.util.AttributeSet;  \nimport android.widget.ImageView;  \nimport android.graphics.Matrix;\n  \n/** \n * 圆形的Imageview \n * @since 2012-11-02 \n *  \n * @author bingyang.djj \n *  \n */  \npublic class CircleImageView extends ImageView {  \n    private Paint paint = new Paint();  \n  \n    public CircleImageView(Context context) {  \n        super(context);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs) {  \n        super(context, attrs);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs, int defStyle) {  \n        super(context, attrs, defStyle);  \n    }  \n  \n    @Override  \n    protected void onDraw(Canvas canvas) {  \n        Drawable drawable = getDrawable();  \n        if (null != drawable) {  \n            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  \n            Matrix matrix = new Matrix();\n            float x = (float)100/bitmap1.getWidth();\n            float y = (float)100/bitmap1.getHeight();\n            matrix.postScale(x, y);\n            Bitmap bitmap = Bitmap.createBitmap(bitmap1, 0, 0, bitmap1.getWidth(), bitmap1.getHeight(), matrix, true);\n            Bitmap b = toRoundCorner(bitmap, 14);  \n            final Rect rect = new Rect(0, 0, b.getWidth(),  b.getHeight());  \n            paint.reset();  \n            canvas.drawBitmap(b, rect, rect, paint);  \n  \n        } else {  \n            super.onDraw(canvas);  \n        }  \n    }  \n  \n    private Bitmap toRoundCorner(Bitmap bitmap, int pixels) {  \n        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  \n        Canvas canvas = new Canvas(output);  \n        final int color = 0xff424242;  \n        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());  \n        paint.setAntiAlias(true);  \n        canvas.drawARGB(0, 0, 0, 0);  \n        paint.setColor(color);  \n        int x = bitmap.getWidth();  \n        canvas.drawCircle(x / 2, x / 2, x / 2, paint);  \n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  \n        canvas.drawBitmap(bitmap, rect, rect, paint);  \n        return output;  \n    }\n}\n```","slug":"圆形的Imageview","published":1,"updated":"2017-09-22T02:33:06.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzaq001fardxvbrqof4s","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.content.Context;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap.Config;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Paint;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuff.Mode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuffXfermode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Rect;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.BitmapDrawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.ImageView;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Matrix;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\"> * 圆形的Imageview </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 2012-11-02 </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> bingyang.djj </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> */</span>  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircleImageView</span> <span class=\"keyword\">extends</span> <span class=\"title\">ImageView</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> Paint paint = <span class=\"keyword\">new</span> Paint();  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"meta\">@Override</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;  </div><div class=\"line\">        Drawable drawable = getDrawable();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != drawable) &#123;  </div><div class=\"line\">            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  </div><div class=\"line\">            Matrix matrix = <span class=\"keyword\">new</span> Matrix();</div><div class=\"line\">            <span class=\"keyword\">float</span> x = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getWidth();</div><div class=\"line\">            <span class=\"keyword\">float</span> y = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getHeight();</div><div class=\"line\">            matrix.postScale(x, y);</div><div class=\"line\">            Bitmap bitmap = Bitmap.createBitmap(bitmap1, <span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap1.getWidth(), bitmap1.getHeight(), matrix, <span class=\"keyword\">true</span>);</div><div class=\"line\">            Bitmap b = toRoundCorner(bitmap, <span class=\"number\">14</span>);  </div><div class=\"line\">            <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, b.getWidth(),  b.getHeight());  </div><div class=\"line\">            paint.reset();  </div><div class=\"line\">            canvas.drawBitmap(b, rect, rect, paint);  </div><div class=\"line\">  </div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  </div><div class=\"line\">            <span class=\"keyword\">super</span>.onDraw(canvas);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">toRoundCorner</span><span class=\"params\">(Bitmap bitmap, <span class=\"keyword\">int</span> pixels)</span> </span>&#123;  </div><div class=\"line\">        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  </div><div class=\"line\">        Canvas canvas = <span class=\"keyword\">new</span> Canvas(output);  </div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> color = <span class=\"number\">0xff424242</span>;  </div><div class=\"line\">        <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight());  </div><div class=\"line\">        paint.setAntiAlias(<span class=\"keyword\">true</span>);  </div><div class=\"line\">        canvas.drawARGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);  </div><div class=\"line\">        paint.setColor(color);  </div><div class=\"line\">        <span class=\"keyword\">int</span> x = bitmap.getWidth();  </div><div class=\"line\">        canvas.drawCircle(x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, paint);  </div><div class=\"line\">        paint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.SRC_IN));  </div><div class=\"line\">        canvas.drawBitmap(bitmap, rect, rect, paint);  </div><div class=\"line\">        <span class=\"keyword\">return</span> output;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.content.Context;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap.Config;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Paint;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuff.Mode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuffXfermode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Rect;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.BitmapDrawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.ImageView;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Matrix;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\"> * 圆形的Imageview </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 2012-11-02 </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> bingyang.djj </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> */</span>  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircleImageView</span> <span class=\"keyword\">extends</span> <span class=\"title\">ImageView</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> Paint paint = <span class=\"keyword\">new</span> Paint();  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"meta\">@Override</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;  </div><div class=\"line\">        Drawable drawable = getDrawable();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != drawable) &#123;  </div><div class=\"line\">            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  </div><div class=\"line\">            Matrix matrix = <span class=\"keyword\">new</span> Matrix();</div><div class=\"line\">            <span class=\"keyword\">float</span> x = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getWidth();</div><div class=\"line\">            <span class=\"keyword\">float</span> y = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getHeight();</div><div class=\"line\">            matrix.postScale(x, y);</div><div class=\"line\">            Bitmap bitmap = Bitmap.createBitmap(bitmap1, <span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap1.getWidth(), bitmap1.getHeight(), matrix, <span class=\"keyword\">true</span>);</div><div class=\"line\">            Bitmap b = toRoundCorner(bitmap, <span class=\"number\">14</span>);  </div><div class=\"line\">            <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, b.getWidth(),  b.getHeight());  </div><div class=\"line\">            paint.reset();  </div><div class=\"line\">            canvas.drawBitmap(b, rect, rect, paint);  </div><div class=\"line\">  </div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  </div><div class=\"line\">            <span class=\"keyword\">super</span>.onDraw(canvas);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">toRoundCorner</span><span class=\"params\">(Bitmap bitmap, <span class=\"keyword\">int</span> pixels)</span> </span>&#123;  </div><div class=\"line\">        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  </div><div class=\"line\">        Canvas canvas = <span class=\"keyword\">new</span> Canvas(output);  </div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> color = <span class=\"number\">0xff424242</span>;  </div><div class=\"line\">        <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight());  </div><div class=\"line\">        paint.setAntiAlias(<span class=\"keyword\">true</span>);  </div><div class=\"line\">        canvas.drawARGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);  </div><div class=\"line\">        paint.setColor(color);  </div><div class=\"line\">        <span class=\"keyword\">int</span> x = bitmap.getWidth();  </div><div class=\"line\">        canvas.drawCircle(x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, paint);  </div><div class=\"line\">        paint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.SRC_IN));  </div><div class=\"line\">        canvas.drawBitmap(bitmap, rect, rect, paint);  </div><div class=\"line\">        <span class=\"keyword\">return</span> output;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"在刷机之后Camera有可能会消失","date":"2017-09-25T07:02:46.000Z","_content":"packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有\n``` Java\npublic void onReceive(Context context, Intent intent) {\n    boolean needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();\n    if (!needCameraActivity) {\n        for (int i = 0; i < ACTIVITIES.length; i++) {\n            //private static final String ACTIVITIES[] = {\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"};\n            disableComponent(context, ACTIVITIES[i]);                        //这里接收到广播之后会将相机全都屏蔽掉\n        }\n    }\n    disableComponent(context, \"com.android.camera.DisableCameraReceiver\");    //\n}\n```\n\n``` xml\n<receiver android:name=\"com.android.camera.DisableCameraReceiver\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？\n    </intent-filter>\n</receiver>\n```","source":"_posts/在刷机之后Camera有可能会消失.md","raw":"---\ntitle: 在刷机之后Camera有可能会消失\ndate: 2017-09-25 15:02:46\ntags:\n---\npackages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有\n``` Java\npublic void onReceive(Context context, Intent intent) {\n    boolean needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();\n    if (!needCameraActivity) {\n        for (int i = 0; i < ACTIVITIES.length; i++) {\n            //private static final String ACTIVITIES[] = {\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"};\n            disableComponent(context, ACTIVITIES[i]);                        //这里接收到广播之后会将相机全都屏蔽掉\n        }\n    }\n    disableComponent(context, \"com.android.camera.DisableCameraReceiver\");    //\n}\n```\n\n``` xml\n<receiver android:name=\"com.android.camera.DisableCameraReceiver\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？\n    </intent-filter>\n</receiver>\n```","slug":"在刷机之后Camera有可能会消失","published":1,"updated":"2017-09-25T07:16:35.015Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzar001gardxxpyse5mz","content":"<p>packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();</div><div class=\"line\">    <span class=\"keyword\">if</span> (!needCameraActivity) &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ACTIVITIES.length; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//private static final String ACTIVITIES[] = &#123;\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"&#125;;</span></div><div class=\"line\">            disableComponent(context, ACTIVITIES[i]);                        <span class=\"comment\">//这里接收到广播之后会将相机全都屏蔽掉</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    disableComponent(context, <span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>);    <span class=\"comment\">//</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span>        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();</div><div class=\"line\">    <span class=\"keyword\">if</span> (!needCameraActivity) &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ACTIVITIES.length; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//private static final String ACTIVITIES[] = &#123;\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"&#125;;</span></div><div class=\"line\">            disableComponent(context, ACTIVITIES[i]);                        <span class=\"comment\">//这里接收到广播之后会将相机全都屏蔽掉</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    disableComponent(context, <span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>);    <span class=\"comment\">//</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span>        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"如何去掉AccentedEnglish","date":"2017-09-22T06:01:34.000Z","_content":"KK:\n[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。\n切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。\n添加这个语言项具体为如下红色部分:\n``` Java\nLocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)\npublic static ArrayAdapter<LocaleInfo> constructAdapter(Context context, final int layoutId, final int fieldId, final boolean isInDeveloperMode) {\n    final Resources resources = context.getResources();\n    ArrayList<String> localeList = new ArrayList<String>(Arrays.asList(Resources.getSystem().getAssets().getLocales()));\n    if (isInDeveloperMode) {\n        if (!localeList.contains(\"zz_ZZ\")) {\n            localeList.add(\"zz_ZZ\");    //把这段代码去掉就可以了\n        }\n        /** - TODO: Enable when zz_ZY Pseudolocale is complete\n         *  if (!localeList.contains(\"zz_ZY\")) {\n         *      localeList.add(\"zz_ZY\");\n         * }\n         */\n    }\n}\n```\n只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(\"zz_ZZ\") 注释掉。","source":"_posts/如何去掉AccentedEnglish.md","raw":"---\ntitle: 如何去掉AccentedEnglish\ndate: 2017-09-22 14:01:34\ntags:\n---\nKK:\n[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。\n切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。\n添加这个语言项具体为如下红色部分:\n``` Java\nLocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)\npublic static ArrayAdapter<LocaleInfo> constructAdapter(Context context, final int layoutId, final int fieldId, final boolean isInDeveloperMode) {\n    final Resources resources = context.getResources();\n    ArrayList<String> localeList = new ArrayList<String>(Arrays.asList(Resources.getSystem().getAssets().getLocales()));\n    if (isInDeveloperMode) {\n        if (!localeList.contains(\"zz_ZZ\")) {\n            localeList.add(\"zz_ZZ\");    //把这段代码去掉就可以了\n        }\n        /** - TODO: Enable when zz_ZY Pseudolocale is complete\n         *  if (!localeList.contains(\"zz_ZY\")) {\n         *      localeList.add(\"zz_ZY\");\n         * }\n         */\n    }\n}\n```\n只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(\"zz_ZZ\") 注释掉。","slug":"如何去掉AccentedEnglish","published":1,"updated":"2017-09-22T06:05:14.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzar001hardxqipcglus","content":"<p>KK:<br>[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。<br>切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。<br>添加这个语言项具体为如下红色部分:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">LocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayAdapter&lt;LocaleInfo&gt; <span class=\"title\">constructAdapter</span><span class=\"params\">(Context context, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fieldId, <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> isInDeveloperMode)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Resources resources = context.getResources();</div><div class=\"line\">    ArrayList&lt;String&gt; localeList = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;(Arrays.asList(Resources.getSystem().getAssets().getLocales()));</div><div class=\"line\">    <span class=\"keyword\">if</span> (isInDeveloperMode) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!localeList.contains(<span class=\"string\">\"zz_ZZ\"</span>)) &#123;</div><div class=\"line\">            localeList.add(<span class=\"string\">\"zz_ZZ\"</span>);    <span class=\"comment\">//把这段代码去掉就可以了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/** - <span class=\"doctag\">TODO:</span> Enable when zz_ZY Pseudolocale is complete</span></div><div class=\"line\"><span class=\"comment\">         *  if (!localeList.contains(\"zz_ZY\")) &#123;</span></div><div class=\"line\"><span class=\"comment\">         *      localeList.add(\"zz_ZY\");</span></div><div class=\"line\"><span class=\"comment\">         * &#125;</span></div><div class=\"line\"><span class=\"comment\">         */</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(“zz_ZZ”) 注释掉。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>KK:<br>[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。<br>切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。<br>添加这个语言项具体为如下红色部分:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">LocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayAdapter&lt;LocaleInfo&gt; <span class=\"title\">constructAdapter</span><span class=\"params\">(Context context, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fieldId, <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> isInDeveloperMode)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Resources resources = context.getResources();</div><div class=\"line\">    ArrayList&lt;String&gt; localeList = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;(Arrays.asList(Resources.getSystem().getAssets().getLocales()));</div><div class=\"line\">    <span class=\"keyword\">if</span> (isInDeveloperMode) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!localeList.contains(<span class=\"string\">\"zz_ZZ\"</span>)) &#123;</div><div class=\"line\">            localeList.add(<span class=\"string\">\"zz_ZZ\"</span>);    <span class=\"comment\">//把这段代码去掉就可以了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/** - <span class=\"doctag\">TODO:</span> Enable when zz_ZY Pseudolocale is complete</span></div><div class=\"line\"><span class=\"comment\">         *  if (!localeList.contains(\"zz_ZY\")) &#123;</span></div><div class=\"line\"><span class=\"comment\">         *      localeList.add(\"zz_ZY\");</span></div><div class=\"line\"><span class=\"comment\">         * &#125;</span></div><div class=\"line\"><span class=\"comment\">         */</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(“zz_ZZ”) 注释掉。</p>\n"},{"title":"如何编译ICU资源","date":"2017-09-22T04:02:45.000Z","_content":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\n下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/\n### A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\n#### 1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\n``` bash\n$ mkdir external/icu4c/icuBuild\n$ cd external/icu4c/icuBuild\n```\n#### 2. 执行icuConfigureRun Linux命令，生成make文件\n``` bash\n$.././runConfigureICU Linux\n```\n#### 3. 执行make -j2命令\n``` bash\n$ make -j2\n```\n#### 4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\n``` bash\n$ adb remount\n$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/\n$ adb reboot\n```\n \nKK：icudt51l.dat\nAndroid L：icudt53l.dat\n（M、N）无需建立临时目录\n1.进入到 external/icu/icu4c/source/ 目录下的\n2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件\n3.执行 make INCLUDE_UNI_CORE_DATA=1\n \n### B. COPY所需文件\n（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件\nKK版本是icudt5l.dat和icudt5l-all.dat\n> \n注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。\n\n\n(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:\n``` Java\nM:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata\nN:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata\n```\n### C. 重新编译工程","source":"_posts/如何编译ICU资源.md","raw":"---\ntitle: 如何编译ICU资源\ndate: 2017-09-22 12:02:45\ntags:\n---\n如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\n下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/\n### A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\n#### 1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\n``` bash\n$ mkdir external/icu4c/icuBuild\n$ cd external/icu4c/icuBuild\n```\n#### 2. 执行icuConfigureRun Linux命令，生成make文件\n``` bash\n$.././runConfigureICU Linux\n```\n#### 3. 执行make -j2命令\n``` bash\n$ make -j2\n```\n#### 4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\n``` bash\n$ adb remount\n$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/\n$ adb reboot\n```\n \nKK：icudt51l.dat\nAndroid L：icudt53l.dat\n（M、N）无需建立临时目录\n1.进入到 external/icu/icu4c/source/ 目录下的\n2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件\n3.执行 make INCLUDE_UNI_CORE_DATA=1\n \n### B. COPY所需文件\n（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件\nKK版本是icudt5l.dat和icudt5l-all.dat\n> \n注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。\n\n\n(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:\n``` Java\nM:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata\nN:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata\n```\n### C. 重新编译工程","slug":"如何编译ICU资源","published":1,"updated":"2017-09-22T04:13:42.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzas001iardx9jy1rmr2","content":"<p>如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤<br>下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/</p>\n<h3 id=\"A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\"><a href=\"#A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\" class=\"headerlink\" title=\"A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\"></a>A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源</h3><h4 id=\"1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\"><a href=\"#1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\" class=\"headerlink\" title=\"1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\"></a>1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir external/icu4c/icuBuild</div><div class=\"line\">$ <span class=\"built_in\">cd</span> external/icu4c/icuBuild</div></pre></td></tr></table></figure>\n<h4 id=\"2-执行icuConfigureRun-Linux命令，生成make文件\"><a href=\"#2-执行icuConfigureRun-Linux命令，生成make文件\" class=\"headerlink\" title=\"2. 执行icuConfigureRun Linux命令，生成make文件\"></a>2. 执行icuConfigureRun Linux命令，生成make文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.././runConfigureICU Linux</div></pre></td></tr></table></figure>\n<h4 id=\"3-执行make-j2命令\"><a href=\"#3-执行make-j2命令\" class=\"headerlink\" title=\"3. 执行make -j2命令\"></a>3. 执行make -j2命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make -j2</div></pre></td></tr></table></figure>\n<h4 id=\"4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\"><a href=\"#4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\" class=\"headerlink\" title=\"4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\"></a>4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb remount</div><div class=\"line\">$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/</div><div class=\"line\">$ adb reboot</div></pre></td></tr></table></figure>\n<p>KK：icudt51l.dat<br>Android L：icudt53l.dat<br>（M、N）无需建立临时目录<br>1.进入到 external/icu/icu4c/source/ 目录下的<br>2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件<br>3.执行 make INCLUDE_UNI_CORE_DATA=1</p>\n<h3 id=\"B-COPY所需文件\"><a href=\"#B-COPY所需文件\" class=\"headerlink\" title=\"B. COPY所需文件\"></a>B. COPY所需文件</h3><p>（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件<br>KK版本是icudt5l.dat和icudt5l-all.dat</p>\n<blockquote>\n<p>注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。</p>\n</blockquote>\n<p>(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata</div><div class=\"line\">N:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata</div></pre></td></tr></table></figure></p>\n<h3 id=\"C-重新编译工程\"><a href=\"#C-重新编译工程\" class=\"headerlink\" title=\"C. 重新编译工程\"></a>C. 重新编译工程</h3>","site":{"data":{}},"excerpt":"","more":"<p>如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤<br>下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/</p>\n<h3 id=\"A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\"><a href=\"#A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\" class=\"headerlink\" title=\"A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\"></a>A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源</h3><h4 id=\"1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\"><a href=\"#1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\" class=\"headerlink\" title=\"1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\"></a>1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir external/icu4c/icuBuild</div><div class=\"line\">$ <span class=\"built_in\">cd</span> external/icu4c/icuBuild</div></pre></td></tr></table></figure>\n<h4 id=\"2-执行icuConfigureRun-Linux命令，生成make文件\"><a href=\"#2-执行icuConfigureRun-Linux命令，生成make文件\" class=\"headerlink\" title=\"2. 执行icuConfigureRun Linux命令，生成make文件\"></a>2. 执行icuConfigureRun Linux命令，生成make文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.././runConfigureICU Linux</div></pre></td></tr></table></figure>\n<h4 id=\"3-执行make-j2命令\"><a href=\"#3-执行make-j2命令\" class=\"headerlink\" title=\"3. 执行make -j2命令\"></a>3. 执行make -j2命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make -j2</div></pre></td></tr></table></figure>\n<h4 id=\"4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\"><a href=\"#4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\" class=\"headerlink\" title=\"4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\"></a>4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb remount</div><div class=\"line\">$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/</div><div class=\"line\">$ adb reboot</div></pre></td></tr></table></figure>\n<p>KK：icudt51l.dat<br>Android L：icudt53l.dat<br>（M、N）无需建立临时目录<br>1.进入到 external/icu/icu4c/source/ 目录下的<br>2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件<br>3.执行 make INCLUDE_UNI_CORE_DATA=1</p>\n<h3 id=\"B-COPY所需文件\"><a href=\"#B-COPY所需文件\" class=\"headerlink\" title=\"B. COPY所需文件\"></a>B. COPY所需文件</h3><p>（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件<br>KK版本是icudt5l.dat和icudt5l-all.dat</p>\n<blockquote>\n<p>注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。</p>\n</blockquote>\n<p>(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata</div><div class=\"line\">N:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata</div></pre></td></tr></table></figure></p>\n<h3 id=\"C-重新编译工程\"><a href=\"#C-重新编译工程\" class=\"headerlink\" title=\"C. 重新编译工程\"></a>C. 重新编译工程</h3>"},{"title":"如何在下载好图片之后更新Gallery","date":"2017-09-22T05:55:31.000Z","_content":"``` Java\nsendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(savePath))));\n```","source":"_posts/如何在下载好图片之后更新Gallery.md","raw":"---\ntitle: 如何在下载好图片之后更新Gallery\ndate: 2017-09-22 13:55:31\ntags:\n---\n``` Java\nsendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(savePath))));\n```","slug":"如何在下载好图片之后更新Gallery","published":1,"updated":"2017-09-22T05:56:05.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzat001jardxgv5f332c","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(<span class=\"keyword\">new</span> File(savePath))));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(<span class=\"keyword\">new</span> File(savePath))));</div></pre></td></tr></table></figure>"},{"title":"如何解析voicemail-conf.xml文件","date":"2017-09-22T03:16:02.000Z","_content":"frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java\n``` Java\nprivate void loadVoiceMail() {\n    FileReader vmReader;\n    final File vmFile = new File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);\n    try {\n        vmReader = new FileReader(vmFile);\n    } catch (FileNotFoundException e) {\n        Log.w(LOG_TAG, \"Can't open \" + Environment.getRootDirectory() + \"/\" + PARTNER_VOICEMAIL_PATH);\n        return;\n    }\n    try {\n        XmlPullParser parser = Xml.newPullParser();\n        parser.setInput(vmReader);\n        XmlUtils.beginDocument(parser, \"voicemail\");\n        while (true) {\n            XmlUtils.nextElement(parser);\n            String name = parser.getName();\n            if (!\"voicemail\".equals(name)) {\n                break;\n            }\n            String[] data = new String[SIZE];\n            String numeric = parser.getAttributeValue(null, \"numeric\");\n            data[NAME] = parser.getAttributeValue(null, \"carrier\");\n            data[NUMBER] = parser.getAttributeValue(null, \"vmnumber\");\n            data[TAG] = parser.getAttributeValue(null, \"vmtag\");\n            CarrierVmMap.put(numeric, data);\n        }\n    } catch (XmlPullParserException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } catch (IOException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } finally {\n        try {\n            if (vmReader != null) {\n                vmReader.close();\n            }\n        } catch (IOException e) {}\n    }\n}\n```","source":"_posts/如何解析voicemail-conf-xml文件.md","raw":"---\ntitle: 如何解析voicemail-conf.xml文件\ndate: 2017-09-22 11:16:02\ntags:\n---\nframeworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java\n``` Java\nprivate void loadVoiceMail() {\n    FileReader vmReader;\n    final File vmFile = new File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);\n    try {\n        vmReader = new FileReader(vmFile);\n    } catch (FileNotFoundException e) {\n        Log.w(LOG_TAG, \"Can't open \" + Environment.getRootDirectory() + \"/\" + PARTNER_VOICEMAIL_PATH);\n        return;\n    }\n    try {\n        XmlPullParser parser = Xml.newPullParser();\n        parser.setInput(vmReader);\n        XmlUtils.beginDocument(parser, \"voicemail\");\n        while (true) {\n            XmlUtils.nextElement(parser);\n            String name = parser.getName();\n            if (!\"voicemail\".equals(name)) {\n                break;\n            }\n            String[] data = new String[SIZE];\n            String numeric = parser.getAttributeValue(null, \"numeric\");\n            data[NAME] = parser.getAttributeValue(null, \"carrier\");\n            data[NUMBER] = parser.getAttributeValue(null, \"vmnumber\");\n            data[TAG] = parser.getAttributeValue(null, \"vmtag\");\n            CarrierVmMap.put(numeric, data);\n        }\n    } catch (XmlPullParserException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } catch (IOException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } finally {\n        try {\n            if (vmReader != null) {\n                vmReader.close();\n            }\n        } catch (IOException e) {}\n    }\n}\n```","slug":"如何解析voicemail-conf-xml文件","published":1,"updated":"2017-09-22T03:16:39.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzat001kardxt0vi3c1b","content":"<p>frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">loadVoiceMail</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    FileReader vmReader;</div><div class=\"line\">    <span class=\"keyword\">final</span> File vmFile = <span class=\"keyword\">new</span> File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        vmReader = <span class=\"keyword\">new</span> FileReader(vmFile);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Can't open \"</span> + Environment.getRootDirectory() + <span class=\"string\">\"/\"</span> + PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        XmlPullParser parser = Xml.newPullParser();</div><div class=\"line\">        parser.setInput(vmReader);</div><div class=\"line\">        XmlUtils.beginDocument(parser, <span class=\"string\">\"voicemail\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            XmlUtils.nextElement(parser);</div><div class=\"line\">            String name = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"voicemail\"</span>.equals(name)) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            String[] data = <span class=\"keyword\">new</span> String[SIZE];</div><div class=\"line\">            String numeric = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"numeric\"</span>);</div><div class=\"line\">            data[NAME] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"carrier\"</span>);</div><div class=\"line\">            data[NUMBER] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmnumber\"</span>);</div><div class=\"line\">            data[TAG] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmtag\"</span>);</div><div class=\"line\">            CarrierVmMap.put(numeric, data);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (XmlPullParserException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (vmReader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                vmReader.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">loadVoiceMail</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    FileReader vmReader;</div><div class=\"line\">    <span class=\"keyword\">final</span> File vmFile = <span class=\"keyword\">new</span> File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        vmReader = <span class=\"keyword\">new</span> FileReader(vmFile);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Can't open \"</span> + Environment.getRootDirectory() + <span class=\"string\">\"/\"</span> + PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        XmlPullParser parser = Xml.newPullParser();</div><div class=\"line\">        parser.setInput(vmReader);</div><div class=\"line\">        XmlUtils.beginDocument(parser, <span class=\"string\">\"voicemail\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            XmlUtils.nextElement(parser);</div><div class=\"line\">            String name = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"voicemail\"</span>.equals(name)) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            String[] data = <span class=\"keyword\">new</span> String[SIZE];</div><div class=\"line\">            String numeric = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"numeric\"</span>);</div><div class=\"line\">            data[NAME] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"carrier\"</span>);</div><div class=\"line\">            data[NUMBER] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmnumber\"</span>);</div><div class=\"line\">            data[TAG] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmtag\"</span>);</div><div class=\"line\">            CarrierVmMap.put(numeric, data);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (XmlPullParserException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (vmReader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                vmReader.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"如何让EditText不自动获取焦点","date":"2017-09-25T06:56:43.000Z","_content":"在 EditText 的父控件中添加如下代码即可\n``` xml\nandroid:focusable=\"true\"  \nandroid:focusableInTouchMode=\"true\"\n```\n例如：\n``` xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"            //看这里\n    android:focusableInTouchMode=\"true\" //和这里\n    android:orientation=\"horizontal\" >\n    <EditText\n        android:id=\"@+id/et_keyword\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\" />\n\n    <Button\n        android:id=\"@+id/btn_search\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/search\" />\n</LinearLayout>\n```","source":"_posts/如何让EditText不自动获取焦点.md","raw":"---\ntitle: 如何让EditText不自动获取焦点\ndate: 2017-09-25 14:56:43\ntags:\n---\n在 EditText 的父控件中添加如下代码即可\n``` xml\nandroid:focusable=\"true\"  \nandroid:focusableInTouchMode=\"true\"\n```\n例如：\n``` xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"            //看这里\n    android:focusableInTouchMode=\"true\" //和这里\n    android:orientation=\"horizontal\" >\n    <EditText\n        android:id=\"@+id/et_keyword\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\" />\n\n    <Button\n        android:id=\"@+id/btn_search\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/search\" />\n</LinearLayout>\n```","slug":"如何让EditText不自动获取焦点","published":1,"updated":"2017-09-25T06:58:01.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzau001lardxpvgudjky","content":"<p>在 EditText 的父控件中添加如下代码即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:focusable=\"true\"  </div><div class=\"line\">android:focusableInTouchMode=\"true\"</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"true\"</span>            //看这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusableInTouchMode</span>=<span class=\"string\">\"true\"</span> //和这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/et_keyword\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/btn_search\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"@string/search\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在 EditText 的父控件中添加如下代码即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:focusable=\"true\"  </div><div class=\"line\">android:focusableInTouchMode=\"true\"</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"true\"</span>            //看这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusableInTouchMode</span>=<span class=\"string\">\"true\"</span> //和这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/et_keyword\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/btn_search\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"@string/search\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"如何让Launcher支持横屏显示","date":"2017-09-21T08:21:27.000Z","_content":"[FAQ15487](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ15487)\n\nN/M:\nLauncher默认支持横屏显示，只需要按如下操作即可开启横屏显示：\n桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关\n\nL:\n* 1.修改AndroidManifest.xml\n``` xml\n<activity\n    android:name=\"com.android.launcher3.Launcher\"\n    android:launchMode=\"singleTask\"\n    android:clearTaskOnLaunch=\"true\"\n    android:stateNotNeeded=\"true\"\n    android:theme=\"@style/Theme\"\n    android:configChanges=\"mcc|mnc\"\n    android:windowSoftInputMode=\"adjustPan\"\n    android:screenOrientation=\"sensor\"> <!--modify to sensor -->\n```\n \n* 2.修改Utilities.java的isRotationEnabled方法\n``` Java\npublic static boolean isRotationEnabled(Context c) {\n    return true;//直接返回true\n}\n```\n \n此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:\n \n* 3.修改res/values/config.xml\n``` xml\n<!--hotseat -->\n<bool name=\"hotseat_transpose_layout_with_orientation\">false</bool> <!--改为false-->\n```\n \n* 4.修改Hotseat.java的onFinishInflate方法\n``` Java\n@Override\nprotected void onFinishInflate() {\n    super.onFinishInflate();\n    LauncherAppState app = LauncherAppState.getInstance();\n    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();\n    mAllAppsButtonRank = grid.hotseatAllAppsRank;\n    mContent = (CellLayout) findViewById(R.id.layout);\n    if (grid.isLandscape && !grid.isLargeTablet()) {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1); //modify\n    } else {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1);\n    }\n    mContent.setIsHotseat(true);\n    Log.i(TAG, \"onFinishInflate,(int) grid.numHotseatIcons: \" + (int) grid.numHotseatIcons);\n    resetLayout();\n}\n```","source":"_posts/如何让Launcher支持横屏显示.md","raw":"---\ntitle: 如何让Launcher支持横屏显示\ndate: 2017-09-21 16:21:27\ntags:\n---\n[FAQ15487](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ15487)\n\nN/M:\nLauncher默认支持横屏显示，只需要按如下操作即可开启横屏显示：\n桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关\n\nL:\n* 1.修改AndroidManifest.xml\n``` xml\n<activity\n    android:name=\"com.android.launcher3.Launcher\"\n    android:launchMode=\"singleTask\"\n    android:clearTaskOnLaunch=\"true\"\n    android:stateNotNeeded=\"true\"\n    android:theme=\"@style/Theme\"\n    android:configChanges=\"mcc|mnc\"\n    android:windowSoftInputMode=\"adjustPan\"\n    android:screenOrientation=\"sensor\"> <!--modify to sensor -->\n```\n \n* 2.修改Utilities.java的isRotationEnabled方法\n``` Java\npublic static boolean isRotationEnabled(Context c) {\n    return true;//直接返回true\n}\n```\n \n此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:\n \n* 3.修改res/values/config.xml\n``` xml\n<!--hotseat -->\n<bool name=\"hotseat_transpose_layout_with_orientation\">false</bool> <!--改为false-->\n```\n \n* 4.修改Hotseat.java的onFinishInflate方法\n``` Java\n@Override\nprotected void onFinishInflate() {\n    super.onFinishInflate();\n    LauncherAppState app = LauncherAppState.getInstance();\n    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();\n    mAllAppsButtonRank = grid.hotseatAllAppsRank;\n    mContent = (CellLayout) findViewById(R.id.layout);\n    if (grid.isLandscape && !grid.isLargeTablet()) {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1); //modify\n    } else {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1);\n    }\n    mContent.setIsHotseat(true);\n    Log.i(TAG, \"onFinishInflate,(int) grid.numHotseatIcons: \" + (int) grid.numHotseatIcons);\n    resetLayout();\n}\n```","slug":"如何让Launcher支持横屏显示","published":1,"updated":"2017-09-21T08:33:45.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzav001mardx6xsogwjq","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ15487\" target=\"_blank\" rel=\"external\">FAQ15487</a></p>\n<p>N/M:<br>Launcher默认支持横屏显示，只需要按如下操作即可开启横屏显示：<br>桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关</p>\n<p>L:</p>\n<ul>\n<li>1.修改AndroidManifest.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.launcher3.Launcher\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"singleTask\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clearTaskOnLaunch</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:stateNotNeeded</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/Theme\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:configChanges</span>=<span class=\"string\">\"mcc|mnc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:windowSoftInputMode</span>=<span class=\"string\">\"adjustPan\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:screenOrientation</span>=<span class=\"string\">\"sensor\"</span>&gt;</span> <span class=\"comment\">&lt;!--modify to sensor --&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>2.修改Utilities.java的isRotationEnabled方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRotationEnabled</span><span class=\"params\">(Context c)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;<span class=\"comment\">//直接返回true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:</p>\n<ul>\n<li>3.修改res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--hotseat --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hotseat_transpose_layout_with_orientation\"</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span> <span class=\"comment\">&lt;!--改为false--&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>4.修改Hotseat.java的onFinishInflate方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinishInflate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onFinishInflate();</div><div class=\"line\">    LauncherAppState app = LauncherAppState.getInstance();</div><div class=\"line\">    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();</div><div class=\"line\">    mAllAppsButtonRank = grid.hotseatAllAppsRank;</div><div class=\"line\">    mContent = (CellLayout) findViewById(R.id.layout);</div><div class=\"line\">    <span class=\"keyword\">if</span> (grid.isLandscape &amp;&amp; !grid.isLargeTablet()) &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>); <span class=\"comment\">//modify</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mContent.setIsHotseat(<span class=\"keyword\">true</span>);</div><div class=\"line\">    Log.i(TAG, <span class=\"string\">\"onFinishInflate,(int) grid.numHotseatIcons: \"</span> + (<span class=\"keyword\">int</span>) grid.numHotseatIcons);</div><div class=\"line\">    resetLayout();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ15487\" target=\"_blank\" rel=\"external\">FAQ15487</a></p>\n<p>N/M:<br>Launcher默认支持横屏显示，只需要按如下操作即可开启横屏显示：<br>桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关</p>\n<p>L:</p>\n<ul>\n<li>1.修改AndroidManifest.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.launcher3.Launcher\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"singleTask\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clearTaskOnLaunch</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:stateNotNeeded</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/Theme\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:configChanges</span>=<span class=\"string\">\"mcc|mnc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:windowSoftInputMode</span>=<span class=\"string\">\"adjustPan\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:screenOrientation</span>=<span class=\"string\">\"sensor\"</span>&gt;</span> <span class=\"comment\">&lt;!--modify to sensor --&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>2.修改Utilities.java的isRotationEnabled方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRotationEnabled</span><span class=\"params\">(Context c)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;<span class=\"comment\">//直接返回true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:</p>\n<ul>\n<li>3.修改res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--hotseat --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hotseat_transpose_layout_with_orientation\"</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span> <span class=\"comment\">&lt;!--改为false--&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>4.修改Hotseat.java的onFinishInflate方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinishInflate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onFinishInflate();</div><div class=\"line\">    LauncherAppState app = LauncherAppState.getInstance();</div><div class=\"line\">    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();</div><div class=\"line\">    mAllAppsButtonRank = grid.hotseatAllAppsRank;</div><div class=\"line\">    mContent = (CellLayout) findViewById(R.id.layout);</div><div class=\"line\">    <span class=\"keyword\">if</span> (grid.isLandscape &amp;&amp; !grid.isLargeTablet()) &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>); <span class=\"comment\">//modify</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mContent.setIsHotseat(<span class=\"keyword\">true</span>);</div><div class=\"line\">    Log.i(TAG, <span class=\"string\">\"onFinishInflate,(int) grid.numHotseatIcons: \"</span> + (<span class=\"keyword\">int</span>) grid.numHotseatIcons);</div><div class=\"line\">    resetLayout();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"如何通过代码动态设置语言","date":"2017-09-22T05:46:40.000Z","_content":"``` Java\nResources resources = getResources();//获得res资源对象\nConfiguration config = resources.getConfiguration();//获得设置对象\nDisplayMetrics dm = resources.getDisplayMetrics();//获得屏幕参数：主要是分辨率，像素等。\nconfig.locale = Locale.SIMPLIFIED_CHINESE; //简体中文\nresources.updateConfiguration(config, dm);\n```\n> \nen 英文 \nen_US 英文 (美国) \nar 阿拉伯文 \nar_AE 阿拉伯文 (阿拉伯联合酋长国) \nar_BH 阿拉伯文 (巴林) \nar_DZ 阿拉伯文 (阿尔及利亚) \nar_EG 阿拉伯文 (埃及) \nar_IQ 阿拉伯文 (伊拉克) \nar_JO 阿拉伯文 (约旦) \nar_KW 阿拉伯文 (科威特) \nar_LB 阿拉伯文 (黎巴嫩) \nar_LY 阿拉伯文 (利比亚) \nar_MA 阿拉伯文 (摩洛哥) \nar_OM 阿拉伯文 (阿曼) \nar_QA 阿拉伯文 (卡塔尔) \nar_SA 阿拉伯文 (沙特阿拉伯) \nar_SD 阿拉伯文 (苏丹) \nar_SY 阿拉伯文 (叙利亚) \nar_TN 阿拉伯文 (突尼斯) \nar_YE 阿拉伯文 (也门) \nbe 白俄罗斯文 \nbe_BY 白俄罗斯文 (白俄罗斯) \nbg 保加利亚文 ","source":"_posts/如何通过代码动态设置语言.md","raw":"---\ntitle: 如何通过代码动态设置语言\ndate: 2017-09-22 13:46:40\ntags:\n---\n``` Java\nResources resources = getResources();//获得res资源对象\nConfiguration config = resources.getConfiguration();//获得设置对象\nDisplayMetrics dm = resources.getDisplayMetrics();//获得屏幕参数：主要是分辨率，像素等。\nconfig.locale = Locale.SIMPLIFIED_CHINESE; //简体中文\nresources.updateConfiguration(config, dm);\n```\n> \nen 英文 \nen_US 英文 (美国) \nar 阿拉伯文 \nar_AE 阿拉伯文 (阿拉伯联合酋长国) \nar_BH 阿拉伯文 (巴林) \nar_DZ 阿拉伯文 (阿尔及利亚) \nar_EG 阿拉伯文 (埃及) \nar_IQ 阿拉伯文 (伊拉克) \nar_JO 阿拉伯文 (约旦) \nar_KW 阿拉伯文 (科威特) \nar_LB 阿拉伯文 (黎巴嫩) \nar_LY 阿拉伯文 (利比亚) \nar_MA 阿拉伯文 (摩洛哥) \nar_OM 阿拉伯文 (阿曼) \nar_QA 阿拉伯文 (卡塔尔) \nar_SA 阿拉伯文 (沙特阿拉伯) \nar_SD 阿拉伯文 (苏丹) \nar_SY 阿拉伯文 (叙利亚) \nar_TN 阿拉伯文 (突尼斯) \nar_YE 阿拉伯文 (也门) \nbe 白俄罗斯文 \nbe_BY 白俄罗斯文 (白俄罗斯) \nbg 保加利亚文 ","slug":"如何通过代码动态设置语言","published":1,"updated":"2017-09-22T05:47:26.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzav001nardxktpp5gy7","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Resources resources = getResources();<span class=\"comment\">//获得res资源对象</span></div><div class=\"line\">Configuration config = resources.getConfiguration();<span class=\"comment\">//获得设置对象</span></div><div class=\"line\">DisplayMetrics dm = resources.getDisplayMetrics();<span class=\"comment\">//获得屏幕参数：主要是分辨率，像素等。</span></div><div class=\"line\">config.locale = Locale.SIMPLIFIED_CHINESE; <span class=\"comment\">//简体中文</span></div><div class=\"line\">resources.updateConfiguration(config, dm);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>en 英文<br>en_US 英文 (美国)<br>ar 阿拉伯文<br>ar_AE 阿拉伯文 (阿拉伯联合酋长国)<br>ar_BH 阿拉伯文 (巴林)<br>ar_DZ 阿拉伯文 (阿尔及利亚)<br>ar_EG 阿拉伯文 (埃及)<br>ar_IQ 阿拉伯文 (伊拉克)<br>ar_JO 阿拉伯文 (约旦)<br>ar_KW 阿拉伯文 (科威特)<br>ar_LB 阿拉伯文 (黎巴嫩)<br>ar_LY 阿拉伯文 (利比亚)<br>ar_MA 阿拉伯文 (摩洛哥)<br>ar_OM 阿拉伯文 (阿曼)<br>ar_QA 阿拉伯文 (卡塔尔)<br>ar_SA 阿拉伯文 (沙特阿拉伯)<br>ar_SD 阿拉伯文 (苏丹)<br>ar_SY 阿拉伯文 (叙利亚)<br>ar_TN 阿拉伯文 (突尼斯)<br>ar_YE 阿拉伯文 (也门)<br>be 白俄罗斯文<br>be_BY 白俄罗斯文 (白俄罗斯)<br>bg 保加利亚文 </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Resources resources = getResources();<span class=\"comment\">//获得res资源对象</span></div><div class=\"line\">Configuration config = resources.getConfiguration();<span class=\"comment\">//获得设置对象</span></div><div class=\"line\">DisplayMetrics dm = resources.getDisplayMetrics();<span class=\"comment\">//获得屏幕参数：主要是分辨率，像素等。</span></div><div class=\"line\">config.locale = Locale.SIMPLIFIED_CHINESE; <span class=\"comment\">//简体中文</span></div><div class=\"line\">resources.updateConfiguration(config, dm);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>en 英文<br>en_US 英文 (美国)<br>ar 阿拉伯文<br>ar_AE 阿拉伯文 (阿拉伯联合酋长国)<br>ar_BH 阿拉伯文 (巴林)<br>ar_DZ 阿拉伯文 (阿尔及利亚)<br>ar_EG 阿拉伯文 (埃及)<br>ar_IQ 阿拉伯文 (伊拉克)<br>ar_JO 阿拉伯文 (约旦)<br>ar_KW 阿拉伯文 (科威特)<br>ar_LB 阿拉伯文 (黎巴嫩)<br>ar_LY 阿拉伯文 (利比亚)<br>ar_MA 阿拉伯文 (摩洛哥)<br>ar_OM 阿拉伯文 (阿曼)<br>ar_QA 阿拉伯文 (卡塔尔)<br>ar_SA 阿拉伯文 (沙特阿拉伯)<br>ar_SD 阿拉伯文 (苏丹)<br>ar_SY 阿拉伯文 (叙利亚)<br>ar_TN 阿拉伯文 (突尼斯)<br>ar_YE 阿拉伯文 (也门)<br>be 白俄罗斯文<br>be_BY 白俄罗斯文 (白俄罗斯)<br>bg 保加利亚文 </p>\n</blockquote>\n"},{"title":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤","date":"2017-09-22T04:02:28.000Z","_content":"","source":"_posts/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤.md","raw":"---\ntitle: 如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\ndate: 2017-09-22 12:02:28\ntags:\n---\n","slug":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤","published":1,"updated":"2017-09-22T04:02:28.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbe001oardxm9u11e8w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"客制化USB CDROM的显示名称","date":"2017-09-25T06:50:59.000Z","_content":"该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。\niAmCdRom.iso路径：alps/system/mobile_toolkit\n\nAttention:\n1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。\n2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。","source":"_posts/客制化USB-CDROM.md","raw":"---\ntitle: 客制化USB CDROM的显示名称\ndate: 2017-09-25 14:50:59\ntags:\n---\n该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。\niAmCdRom.iso路径：alps/system/mobile_toolkit\n\nAttention:\n1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。\n2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。","slug":"客制化USB-CDROM","published":1,"updated":"2017-09-25T06:52:15.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbe001pardxijbp9qu8","content":"<p>该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。<br>iAmCdRom.iso路径：alps/system/mobile_toolkit</p>\n<p>Attention:<br>1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。<br>2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。<br>iAmCdRom.iso路径：alps/system/mobile_toolkit</p>\n<p>Attention:<br>1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。<br>2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。</p>\n"},{"title":"工厂方法模式","date":"2017-09-22T05:16:45.000Z","_content":"``` Java\npublic abstract class Product{\n    public void template_method(){\n        System.out.println(hook_method());\n    }\n    protected abstract String hook_method();\n}\n\npublic abstract class Client{\n    protected Product obj = null;                //这里组合了一个Product对象\n    public void anOperation(){\n        factoryMethod();\n        obj.template_method();                    //调用Product的方法\n    }\n    protected abstract void factoryMethod();\n}\n\npublic class IntegerNumber extends Product{\n    private int value;\n    IntegerNumber(int v){\n        value = v;\n    }\n    protected String hook_method(){\n        return String.valueOf(value);\n    }\n}\n\npublic class ConcreteClient extends Client{\n    protected void factoryMethod(){\n        obj = new IntegerNumber(1250);            //在这里初始化Product对象\n    }\n}\n\npublic class Main{\n    public static void main(String[] args){\n        Client sc = new ConcreteClient();\n        sc.anOperation();\n    }\n}\n```","source":"_posts/工厂方法模式.md","raw":"---\ntitle: 工厂方法模式\ndate: 2017-09-22 13:16:45\ntags:\n---\n``` Java\npublic abstract class Product{\n    public void template_method(){\n        System.out.println(hook_method());\n    }\n    protected abstract String hook_method();\n}\n\npublic abstract class Client{\n    protected Product obj = null;                //这里组合了一个Product对象\n    public void anOperation(){\n        factoryMethod();\n        obj.template_method();                    //调用Product的方法\n    }\n    protected abstract void factoryMethod();\n}\n\npublic class IntegerNumber extends Product{\n    private int value;\n    IntegerNumber(int v){\n        value = v;\n    }\n    protected String hook_method(){\n        return String.valueOf(value);\n    }\n}\n\npublic class ConcreteClient extends Client{\n    protected void factoryMethod(){\n        obj = new IntegerNumber(1250);            //在这里初始化Product对象\n    }\n}\n\npublic class Main{\n    public static void main(String[] args){\n        Client sc = new ConcreteClient();\n        sc.anOperation();\n    }\n}\n```","slug":"工厂方法模式","published":1,"updated":"2017-09-22T05:17:07.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbf001qardxa0i4hr28","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(hook_method());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> Product obj = <span class=\"keyword\">null</span>;                <span class=\"comment\">//这里组合了一个Product对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anOperation</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        factoryMethod();</div><div class=\"line\">        obj.template_method();                    <span class=\"comment\">//调用Product的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</div><div class=\"line\">    IntegerNumber(<span class=\"keyword\">int</span> v)&#123;</div><div class=\"line\">        value = v;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(value);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        obj = <span class=\"keyword\">new</span> IntegerNumber(<span class=\"number\">1250</span>);            <span class=\"comment\">//在这里初始化Product对象</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Client sc = <span class=\"keyword\">new</span> ConcreteClient();</div><div class=\"line\">        sc.anOperation();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(hook_method());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> Product obj = <span class=\"keyword\">null</span>;                <span class=\"comment\">//这里组合了一个Product对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anOperation</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        factoryMethod();</div><div class=\"line\">        obj.template_method();                    <span class=\"comment\">//调用Product的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</div><div class=\"line\">    IntegerNumber(<span class=\"keyword\">int</span> v)&#123;</div><div class=\"line\">        value = v;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(value);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        obj = <span class=\"keyword\">new</span> IntegerNumber(<span class=\"number\">1250</span>);            <span class=\"comment\">//在这里初始化Product对象</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Client sc = <span class=\"keyword\">new</span> ConcreteClient();</div><div class=\"line\">        sc.anOperation();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"工厂测试中SD卡测试失败","date":"2017-09-21T04:56:08.000Z","_content":"SD项测试失败log如下\n```\n01-01 00:11:49.832: I/SDCardTest(3240): Write fail\n01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)\n01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more\n01-01 00:11:49.833: I/SDCardTest(3240): file read fial\n01-01 00:11:49.897: I/SDCardTest(3240): Write pass\n01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa\n```\n需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.WRITE_MEDIA_STORAGE\" />\n```\n不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加\n```\nLOCAL_PRIVILEGED_MODULE := true\n```","source":"_posts/工厂测试中SD卡测试失败.md","raw":"---\ntitle: 工厂测试中SD卡测试失败\ndate: 2017-09-21 12:56:08\ntags:\n---\nSD项测试失败log如下\n```\n01-01 00:11:49.832: I/SDCardTest(3240): Write fail\n01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)\n01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more\n01-01 00:11:49.833: I/SDCardTest(3240): file read fial\n01-01 00:11:49.897: I/SDCardTest(3240): Write pass\n01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa\n```\n需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.WRITE_MEDIA_STORAGE\" />\n```\n不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加\n```\nLOCAL_PRIVILEGED_MODULE := true\n```","slug":"工厂测试中SD卡测试失败","published":1,"updated":"2017-09-21T05:58:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbg001rardxjsh81e5p","content":"<p>SD项测试失败log如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Write fail</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more</div><div class=\"line\">01-01 00:11:49.833: I/SDCardTest(3240): file read fial</div><div class=\"line\">01-01 00:11:49.897: I/SDCardTest(3240): Write pass</div><div class=\"line\">01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa</div></pre></td></tr></table></figure></p>\n<p>需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.WRITE_MEDIA_STORAGE\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LOCAL_PRIVILEGED_MODULE := true</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>SD项测试失败log如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Write fail</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more</div><div class=\"line\">01-01 00:11:49.833: I/SDCardTest(3240): file read fial</div><div class=\"line\">01-01 00:11:49.897: I/SDCardTest(3240): Write pass</div><div class=\"line\">01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa</div></pre></td></tr></table></figure></p>\n<p>需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.WRITE_MEDIA_STORAGE\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LOCAL_PRIVILEGED_MODULE := true</div></pre></td></tr></table></figure></p>\n"},{"title":"性能测试","date":"2017-09-25T07:43:40.000Z","_content":"``` Java\npublic interface Testing{\n    public void testArrayList();\n    public void testLinkedList(); \n}\n\npublic class TestImpl implements Testing{\n    private List link = new LinkedList();\n    private List array = new ArrayList();\n    public TestImpl(){\n        for(int i = 0 ;i < 10000;i++){\n            array.add(new Integer(i));\n            link.add(new Integer(i));\n        }\n    }\n    public void testArrayList(){\n        for(int i=0;i<10000;i++){\n            array.get(i);\n        }\n    }\n    public void testlinkedList(){\n        for(int i = 0;i<10000;i++){\n            link.get(i);\n        }\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        //1.类加载器，2.实现的接口，3.此类的实例\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = System.currentTimeMillis();    //调用方法之前\n            result = method.invoke(obj,args);\n            long end = System.currentTimeMillis();        //调用方法之后\n            //在这里计算性能\n        }catch(InvocationTargetException e){\n            throw e.getTargetException();\n        }catch(Exception e){\n            throw new RuntimeException(\"unexpected invocation exception:\"+e.getMessage());\n        }finally{\n            Log.e(\"Handler\",\"end method \" + method.getName());\n        }\n        return result;\n    }\n}\n\n\n//测试\ntry{\n    Testing testing = (Testing)Handler.newInstance(new TestingImpl());\n    testing.testArrayList();    \n    testing.testLinkedList();    \n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/性能测试.md","raw":"---\ntitle: 性能测试\ndate: 2017-09-25 15:43:40\ntags:\n---\n``` Java\npublic interface Testing{\n    public void testArrayList();\n    public void testLinkedList(); \n}\n\npublic class TestImpl implements Testing{\n    private List link = new LinkedList();\n    private List array = new ArrayList();\n    public TestImpl(){\n        for(int i = 0 ;i < 10000;i++){\n            array.add(new Integer(i));\n            link.add(new Integer(i));\n        }\n    }\n    public void testArrayList(){\n        for(int i=0;i<10000;i++){\n            array.get(i);\n        }\n    }\n    public void testlinkedList(){\n        for(int i = 0;i<10000;i++){\n            link.get(i);\n        }\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        //1.类加载器，2.实现的接口，3.此类的实例\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = System.currentTimeMillis();    //调用方法之前\n            result = method.invoke(obj,args);\n            long end = System.currentTimeMillis();        //调用方法之后\n            //在这里计算性能\n        }catch(InvocationTargetException e){\n            throw e.getTargetException();\n        }catch(Exception e){\n            throw new RuntimeException(\"unexpected invocation exception:\"+e.getMessage());\n        }finally{\n            Log.e(\"Handler\",\"end method \" + method.getName());\n        }\n        return result;\n    }\n}\n\n\n//测试\ntry{\n    Testing testing = (Testing)Handler.newInstance(new TestingImpl());\n    testing.testArrayList();    \n    testing.testLinkedList();    \n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"性能测试","published":1,"updated":"2017-09-25T07:44:04.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbh001sardx13flcz3a","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testLinkedList</span><span class=\"params\">()</span></span>; </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List link = <span class=\"keyword\">new</span> LinkedList();</div><div class=\"line\">    <span class=\"keyword\">private</span> List array = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestImpl</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; <span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">            link.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testlinkedList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            link.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"comment\">//1.类加载器，2.实现的接口，3.此类的实例</span></div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), <span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = System.currentTimeMillis();    <span class=\"comment\">//调用方法之前</span></div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = System.currentTimeMillis();        <span class=\"comment\">//调用方法之后</span></div><div class=\"line\">            <span class=\"comment\">//在这里计算性能</span></div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(InvocationTargetException e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> e.getTargetException();</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"unexpected invocation exception:\"</span>+e.getMessage());</div><div class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">            Log.e(<span class=\"string\">\"Handler\"</span>,<span class=\"string\">\"end method \"</span> + method.getName());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    Testing testing = (Testing)Handler.newInstance(<span class=\"keyword\">new</span> TestingImpl());</div><div class=\"line\">    testing.testArrayList();    </div><div class=\"line\">    testing.testLinkedList();    </div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testLinkedList</span><span class=\"params\">()</span></span>; </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List link = <span class=\"keyword\">new</span> LinkedList();</div><div class=\"line\">    <span class=\"keyword\">private</span> List array = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestImpl</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; <span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">            link.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testlinkedList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            link.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"comment\">//1.类加载器，2.实现的接口，3.此类的实例</span></div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), <span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = System.currentTimeMillis();    <span class=\"comment\">//调用方法之前</span></div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = System.currentTimeMillis();        <span class=\"comment\">//调用方法之后</span></div><div class=\"line\">            <span class=\"comment\">//在这里计算性能</span></div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(InvocationTargetException e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> e.getTargetException();</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"unexpected invocation exception:\"</span>+e.getMessage());</div><div class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">            Log.e(<span class=\"string\">\"Handler\"</span>,<span class=\"string\">\"end method \"</span> + method.getName());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    Testing testing = (Testing)Handler.newInstance(<span class=\"keyword\">new</span> TestingImpl());</div><div class=\"line\">    testing.testArrayList();    </div><div class=\"line\">    testing.testLinkedList();    </div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"提高进程优先级","date":"2017-09-21T03:08:41.000Z","_content":"### 方法1:\n找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=\"true\"』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=\"true\"』\n具体修改示例如下:\npackage/apps/Mms/AndroidMannifest.xml\n``` xml\nandroid:label=\"@string/app_label\"\nandroid:icon=\"@drawable/app_icon\"\nandroid:allowBackup=\"false\"\nandroid:persistent=\"true\" \n```\n\n### 方法2:\n提高进程优先级\n``` Java\nstartForeground(1, new Notification());\n```\n降低进程优先级\n``` Java\nstopForeground(true);\n```\nonStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作\n这个方法可以将对应AP的ADJ临时提高到2。","source":"_posts/提高进程优先级.md","raw":"---\ntitle: 提高进程优先级\ndate: 2017-09-21 11:08:41\ntags:\n---\n### 方法1:\n找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=\"true\"』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=\"true\"』\n具体修改示例如下:\npackage/apps/Mms/AndroidMannifest.xml\n``` xml\nandroid:label=\"@string/app_label\"\nandroid:icon=\"@drawable/app_icon\"\nandroid:allowBackup=\"false\"\nandroid:persistent=\"true\" \n```\n\n### 方法2:\n提高进程优先级\n``` Java\nstartForeground(1, new Notification());\n```\n降低进程优先级\n``` Java\nstopForeground(true);\n```\nonStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作\n这个方法可以将对应AP的ADJ临时提高到2。","slug":"提高进程优先级","published":1,"updated":"2017-09-21T05:58:53.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbi001tardx8vtpjhzd","content":"<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1:\"></a>方法1:</h3><p>找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=”true”』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=”true”』<br>具体修改示例如下:<br>package/apps/Mms/AndroidMannifest.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:label=\"@string/app_label\"</div><div class=\"line\">android:icon=\"@drawable/app_icon\"</div><div class=\"line\">android:allowBackup=\"false\"</div><div class=\"line\">android:persistent=\"true\"</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><p>提高进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startForeground(<span class=\"number\">1</span>, <span class=\"keyword\">new</span> Notification());</div></pre></td></tr></table></figure></p>\n<p>降低进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stopForeground(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>onStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作<br>这个方法可以将对应AP的ADJ临时提高到2。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1:\"></a>方法1:</h3><p>找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=”true”』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=”true”』<br>具体修改示例如下:<br>package/apps/Mms/AndroidMannifest.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:label=\"@string/app_label\"</div><div class=\"line\">android:icon=\"@drawable/app_icon\"</div><div class=\"line\">android:allowBackup=\"false\"</div><div class=\"line\">android:persistent=\"true\"</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><p>提高进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startForeground(<span class=\"number\">1</span>, <span class=\"keyword\">new</span> Notification());</div></pre></td></tr></table></figure></p>\n<p>降低进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stopForeground(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>onStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作<br>这个方法可以将对应AP的ADJ临时提高到2。</p>\n"},{"title":"收到短信后未振动手机","date":"2017-09-22T05:25:09.000Z","_content":"packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java\n``` Java\nupdateNotification(){\n\t...\n    /// M:Code analyze 014, for brazil request, when calling still have sound @{\n    int state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();\n    if (state != TelephonyManager.CALL_STATE_IDLE) {\n        //playTone(context, ToneGenerator.TONE_SUP_DIAL);\n        defaults |= Notification.DEFAULT_VIBRATE;\t//添加这句代码即可\n    } else {\n        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? null : Uri.parse(ringtoneStr));\n    }\n    ...\n}\n\n```","source":"_posts/收到短信后未振动手机.md","raw":"---\ntitle: 收到短信后未振动手机\ndate: 2017-09-22 13:25:09\ntags:\n---\npackages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java\n``` Java\nupdateNotification(){\n\t...\n    /// M:Code analyze 014, for brazil request, when calling still have sound @{\n    int state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();\n    if (state != TelephonyManager.CALL_STATE_IDLE) {\n        //playTone(context, ToneGenerator.TONE_SUP_DIAL);\n        defaults |= Notification.DEFAULT_VIBRATE;\t//添加这句代码即可\n    } else {\n        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? null : Uri.parse(ringtoneStr));\n    }\n    ...\n}\n\n```","slug":"收到短信后未振动手机","published":1,"updated":"2017-09-22T05:26:31.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbi001uardxs0kd2qak","content":"<p>packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">updateNotification()&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">/// M:Code analyze 014, for brazil request, when calling still have sound @&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();</div><div class=\"line\">    <span class=\"keyword\">if</span> (state != TelephonyManager.CALL_STATE_IDLE) &#123;</div><div class=\"line\">        <span class=\"comment\">//playTone(context, ToneGenerator.TONE_SUP_DIAL);</span></div><div class=\"line\">        defaults |= Notification.DEFAULT_VIBRATE;\t<span class=\"comment\">//添加这句代码即可</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? <span class=\"keyword\">null</span> : Uri.parse(ringtoneStr));</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">updateNotification()&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">/// M:Code analyze 014, for brazil request, when calling still have sound @&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();</div><div class=\"line\">    <span class=\"keyword\">if</span> (state != TelephonyManager.CALL_STATE_IDLE) &#123;</div><div class=\"line\">        <span class=\"comment\">//playTone(context, ToneGenerator.TONE_SUP_DIAL);</span></div><div class=\"line\">        defaults |= Notification.DEFAULT_VIBRATE;\t<span class=\"comment\">//添加这句代码即可</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? <span class=\"keyword\">null</span> : Uri.parse(ringtoneStr));</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"数据连接默认开关","date":"2017-09-22T03:18:36.000Z","_content":"对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。\n单卡项目:\n适用版本GB,GB2,ICS,ICS2,JB\n其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的\n有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开\n\n双卡项目:\nAndroid V2.3(GB,GB2):\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n\nAndroid V4.0(ICS,ICS2):\n需要两个地方进行修改：\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能\n\nAndroid V4.1(JB)\n也需要两个步骤:\n1.将mGPRSOn设置成true:\n1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：\n``` Java\ntry{\n\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);\n} catch (Exception e){\n\te.printStackTrace();\n}\nif (mTelephonyExt != null) {\n    if (mTelephonyExt.isDefaultDataOn()){\n    \tmGPRSOn = true;\n    }\n\t\n    if (mTelephonyExt.isAutoSwitchDataToEnabledSim())\n        mAutoSwitchDataToEnabledSim = true;\n    } else {\n        loge(\"PhoneProxy(): mTelephonyExt is null!!!\");\n    }\n}\n//然后将private boolean mGPRSOn = false;改成true即可\n```\n2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP**\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP**.java中加上下面这个方法：\n``` Java\npublic boolean isDefaultDataOn() {\n\treturn true;\n}\n```","source":"_posts/数据连接默认开关.md","raw":"---\ntitle: 数据连接默认开关\ndate: 2017-09-22 11:18:36\ntags:\n---\n对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。\n单卡项目:\n适用版本GB,GB2,ICS,ICS2,JB\n其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的\n有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开\n\n双卡项目:\nAndroid V2.3(GB,GB2):\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n\nAndroid V4.0(ICS,ICS2):\n需要两个地方进行修改：\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能\n\nAndroid V4.1(JB)\n也需要两个步骤:\n1.将mGPRSOn设置成true:\n1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：\n``` Java\ntry{\n\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);\n} catch (Exception e){\n\te.printStackTrace();\n}\nif (mTelephonyExt != null) {\n    if (mTelephonyExt.isDefaultDataOn()){\n    \tmGPRSOn = true;\n    }\n\t\n    if (mTelephonyExt.isAutoSwitchDataToEnabledSim())\n        mAutoSwitchDataToEnabledSim = true;\n    } else {\n        loge(\"PhoneProxy(): mTelephonyExt is null!!!\");\n    }\n}\n//然后将private boolean mGPRSOn = false;改成true即可\n```\n2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP**\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP**.java中加上下面这个方法：\n``` Java\npublic boolean isDefaultDataOn() {\n\treturn true;\n}\n```","slug":"数据连接默认开关","published":1,"updated":"2017-09-22T03:21:39.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbj001vardxq52wcvzp","content":"<p>对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。<br>单卡项目:<br>适用版本GB,GB2,ICS,ICS2,JB<br>其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的<br>有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开</p>\n<p>双卡项目:<br>Android V2.3(GB,GB2):<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡</p>\n<p>Android V4.0(ICS,ICS2):<br>需要两个地方进行修改：<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡<br>2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能</p>\n<p>Android V4.1(JB)<br>也需要两个步骤:<br>1.将mGPRSOn设置成true:<br>1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">if</span> (mTelephonyExt != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isDefaultDataOn())&#123;</div><div class=\"line\">    \tmGPRSOn = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isAutoSwitchDataToEnabledSim())</div><div class=\"line\">        mAutoSwitchDataToEnabledSim = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        loge(<span class=\"string\">\"PhoneProxy(): mTelephonyExt is null!!!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//然后将private boolean mGPRSOn = false;改成true即可</span></div></pre></td></tr></table></figure></p>\n<p>2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP<strong>\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP</strong>.java中加上下面这个方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isDefaultDataOn</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。<br>单卡项目:<br>适用版本GB,GB2,ICS,ICS2,JB<br>其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的<br>有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开</p>\n<p>双卡项目:<br>Android V2.3(GB,GB2):<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡</p>\n<p>Android V4.0(ICS,ICS2):<br>需要两个地方进行修改：<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡<br>2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能</p>\n<p>Android V4.1(JB)<br>也需要两个步骤:<br>1.将mGPRSOn设置成true:<br>1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">if</span> (mTelephonyExt != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isDefaultDataOn())&#123;</div><div class=\"line\">    \tmGPRSOn = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isAutoSwitchDataToEnabledSim())</div><div class=\"line\">        mAutoSwitchDataToEnabledSim = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        loge(<span class=\"string\">\"PhoneProxy(): mTelephonyExt is null!!!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//然后将private boolean mGPRSOn = false;改成true即可</span></div></pre></td></tr></table></figure></p>\n<p>2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP<strong>\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP</strong>.java中加上下面这个方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isDefaultDataOn</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"根据SDK版本号判断使用哪个类中的方法","date":"2017-09-22T01:56:15.000Z","_content":"``` Java\nclass MethodInLowSdk{\n    public static void aMethod();\n}\nclass MethodInHighSdk{\n    public static void aMethod();\n}\n\nvoid callAMethodByVersion(){\n    if(android.os.Build.VERSION.SDK_INT > low_sdk){\n        MethodInHighSdk.aMethod();\n    }else{\n        MethodInLowSdk.aMethod();\n    }\n}\n```","source":"_posts/根据SDK版本号判断使用哪个类中的方法.md","raw":"---\ntitle: 根据SDK版本号判断使用哪个类中的方法\ndate: 2017-09-22 09:56:15\ntags:\n---\n``` Java\nclass MethodInLowSdk{\n    public static void aMethod();\n}\nclass MethodInHighSdk{\n    public static void aMethod();\n}\n\nvoid callAMethodByVersion(){\n    if(android.os.Build.VERSION.SDK_INT > low_sdk){\n        MethodInHighSdk.aMethod();\n    }else{\n        MethodInLowSdk.aMethod();\n    }\n}\n```","slug":"根据SDK版本号判断使用哪个类中的方法","published":1,"updated":"2017-09-22T01:56:42.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbk001wardxrxub68yh","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInLowSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInHighSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">callAMethodByVersion</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(android.os.Build.VERSION.SDK_INT &gt; low_sdk)&#123;</div><div class=\"line\">        MethodInHighSdk.aMethod();</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        MethodInLowSdk.aMethod();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInLowSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInHighSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">callAMethodByVersion</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(android.os.Build.VERSION.SDK_INT &gt; low_sdk)&#123;</div><div class=\"line\">        MethodInHighSdk.aMethod();</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        MethodInLowSdk.aMethod();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"杀进程的脚本","date":"2017-09-21T06:15:19.000Z","_content":"``` bash\n#!/bin/bash\n\nPID=`adb shell ps | grep $1 | awk '{print $2}'`\necho \"adb shell kill $1 : $PID\"\nresult=`adb shell kill $PID`\necho \"$result\"\n```","source":"_posts/杀进程的脚本.md","raw":"---\ntitle: 杀进程的脚本\ndate: 2017-09-21 14:15:19\ntags:\n---\n``` bash\n#!/bin/bash\n\nPID=`adb shell ps | grep $1 | awk '{print $2}'`\necho \"adb shell kill $1 : $PID\"\nresult=`adb shell kill $PID`\necho \"$result\"\n```","slug":"杀进程的脚本","published":1,"updated":"2017-09-21T06:15:56.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbk001xardxx4gzvxp3","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\">PID=`adb shell ps | grep <span class=\"variable\">$1</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"adb shell kill <span class=\"variable\">$1</span> : <span class=\"variable\">$PID</span>\"</span></div><div class=\"line\">result=`adb shell <span class=\"built_in\">kill</span> <span class=\"variable\">$PID</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$result</span>\"</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\">PID=`adb shell ps | grep <span class=\"variable\">$1</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"adb shell kill <span class=\"variable\">$1</span> : <span class=\"variable\">$PID</span>\"</span></div><div class=\"line\">result=`adb shell <span class=\"built_in\">kill</span> <span class=\"variable\">$PID</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$result</span>\"</span></div></pre></td></tr></table></figure>"},{"title":"根据控件的ID名称获取控件的ID值","date":"2017-09-21T05:10:29.000Z","_content":"frameworks/base/core/java/android/app/Activity.java\n``` Java\nprivate View findViewByName(String name){\n    return findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n\nprivate View findViewByName(View parent, String name){\n    return parent.findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n```\n具体用法如下\n``` Java\nView setting_autodownload_layout = findViewByName(\"setting_autodownload_layout\");\n```","source":"_posts/根据控件的ID名称获取控件的ID值.md","raw":"---\ntitle: 根据控件的ID名称获取控件的ID值\ndate: 2017-09-21 13:10:29\ntags:\n---\nframeworks/base/core/java/android/app/Activity.java\n``` Java\nprivate View findViewByName(String name){\n    return findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n\nprivate View findViewByName(View parent, String name){\n    return parent.findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n```\n具体用法如下\n``` Java\nView setting_autodownload_layout = findViewByName(\"setting_autodownload_layout\");\n```","slug":"根据控件的ID名称获取控件的ID值","published":1,"updated":"2017-09-21T05:55:23.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbl001yardxu1e0avzm","content":"<p>frameworks/base/core/java/android/app/Activity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(View parent, String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> parent.findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>具体用法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">View setting_autodownload_layout = findViewByName(<span class=\"string\">\"setting_autodownload_layout\"</span>);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/core/java/android/app/Activity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(View parent, String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> parent.findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>具体用法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">View setting_autodownload_layout = findViewByName(<span class=\"string\">\"setting_autodownload_layout\"</span>);</div></pre></td></tr></table></figure></p>\n"},{"title":"应用开机自启动","date":"2017-09-22T01:01:43.000Z","_content":"### 方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\n\n> \n原理:监听接收 android.intent.action.BOOT_COMPLETED 广播\n\n添加开机广播接收器\n``` Java\npublic class BootReceiver extends BroadcastReceiver{\n    public void onReceive(Context context,Intent intent){\n        Intent mIntent = new Intent(context,MainActivity.class);\n        startActivity(mIntent);\n    }\n}\n```\n\n在 AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n```\n\n在 AndroidManifest.xml 文件中注册开机广播接收器\n``` xml\n<receiver android:name=\"BootReceiver\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</receiver>\n```\n\n### 方法二.在开机向导之后开机自启动\n\n> \n原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:\n//OOBE\nmediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java\n``` Java\nprivate void finishOOBE() {\n    ...\n    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 1);\n    ...\n}\n```\n\n//SetupWizard\ncom/google/android/setupwizard/BaseActivity.java\n``` Java\nprotected void onSetupComplete(boolean paramBoolean){\n    ...\n    Settings.Secure.putInt(getContentResolver(), \"user_setup_complete\", 1);\n    ...\n}\n```\n\n//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听\n在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有\n``` Java\nprivate void resetUserSetupObserver() {\n    ...\n    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), true, mUserSetupObserver, mCurrentUserId);\n    ...\n}\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        final boolean userSetup = 0 != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 0 , mCurrentUserId);\n        if (mSettingsButton != null && mHasFlipSettings) {\n            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);\n        }\n        if (mSettingsPanel != null) {\n            mSettingsPanel.setEnabled(userSetup);\n        }\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            if (!mUserSetup && mStatusBarView != null){\n                animateCollapseQuickSettings();\n            }\n        }\n    }\n};\n```\n\n初步修改后的代码如下\n``` Java\nboolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;            //设置标志位，只有在恢复出厂设置的时候启动一次\nif(userSetup && isFirstBoot){\n    try{\n        Intent intent = new Intent();\n        intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n        mContext.startActivity(intent);\n        Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);                            //将标志为设置为1，表示启动成功\n    } catch(Exception e) {\n        e.printStackTrace();        //这里加try,catch防止内置的APK face2face 丢失\n    }\n}\n```\n\n但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？\n从Log中可以看出:\n\n正常启动的Log:\n```\n01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1\n01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2\n01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard\n01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254\n01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid\n01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])\n01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0\n01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2\n01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0\n01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request\n01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About\n01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781\n01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489\n01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About\n```\n\n异常不启动的Log:\n```\n01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1\n01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1\n01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity\n01-01 00:01:12.944667   720  1147 I am_create_task: [0,4\n01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608\n01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0\n01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2\n01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652\n01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard\n01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302\n01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved\n01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0\n01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher\n01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208\n01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3\n01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher\n01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208\n01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了\n01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm\n```\n\n根据这种情况，再次做了修改\n``` Java\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        ...\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            boolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;\n            if(userSetup && isFirstBoot){\n                try{\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n                    mContext.startActivity(intent);\n                    Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);\n                    new Thread(new Runnable(){                    //在这个地方启动一个线程，再次启动这个应用\n                        public void run(){\n                            try{\n                                while(!isStartSuccess){\n                                    Thread.sleep(2000);\n                                    handler.sendEmptyMessage(1);\n                                }\n                            }catch(Exception e){\n                                e.printStackTrace();\n                            }\n                        }\n                    }).start();\n                }catch(Exception e){\n                    e.printStackTrace();\n                }\n            }\n            ...\n        }\n    }\n};\nprivate boolean isStartSuccess = false;\nHandler handler = new Handler(){\n    public void handleMessage(Message msg){\n        switch(msg.what){\n            case 1:\n                String topActivityName = getTopActivityName(mContext);\n                if(topActivityName != null && topActivityName.contains(\"za.co.axon.mdas.roid\")){\n                    isStartSuccess = true;\n                } else {\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    mContext.startActivity(intent);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n};\n\n/**获取栈顶Activity的名称*/\nprivate String getTopActivityName(Context context) {\n    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n    List<android.app.ActivityManager.RunningTaskInfo> runningTaskInfos = activityManager.getRunningTasks(1);\n    if (runningTaskInfos != null) {\n        return (runningTaskInfos.get(0).topActivity).toString();\n    } else {\n        return null;\n    }\n}\n```","source":"_posts/应用开机自启动.md","raw":"---\ntitle: 应用开机自启动\ndate: 2017-09-22 09:01:43\ntags:\n---\n### 方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\n\n> \n原理:监听接收 android.intent.action.BOOT_COMPLETED 广播\n\n添加开机广播接收器\n``` Java\npublic class BootReceiver extends BroadcastReceiver{\n    public void onReceive(Context context,Intent intent){\n        Intent mIntent = new Intent(context,MainActivity.class);\n        startActivity(mIntent);\n    }\n}\n```\n\n在 AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n```\n\n在 AndroidManifest.xml 文件中注册开机广播接收器\n``` xml\n<receiver android:name=\"BootReceiver\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</receiver>\n```\n\n### 方法二.在开机向导之后开机自启动\n\n> \n原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:\n//OOBE\nmediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java\n``` Java\nprivate void finishOOBE() {\n    ...\n    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 1);\n    ...\n}\n```\n\n//SetupWizard\ncom/google/android/setupwizard/BaseActivity.java\n``` Java\nprotected void onSetupComplete(boolean paramBoolean){\n    ...\n    Settings.Secure.putInt(getContentResolver(), \"user_setup_complete\", 1);\n    ...\n}\n```\n\n//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听\n在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有\n``` Java\nprivate void resetUserSetupObserver() {\n    ...\n    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), true, mUserSetupObserver, mCurrentUserId);\n    ...\n}\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        final boolean userSetup = 0 != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 0 , mCurrentUserId);\n        if (mSettingsButton != null && mHasFlipSettings) {\n            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);\n        }\n        if (mSettingsPanel != null) {\n            mSettingsPanel.setEnabled(userSetup);\n        }\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            if (!mUserSetup && mStatusBarView != null){\n                animateCollapseQuickSettings();\n            }\n        }\n    }\n};\n```\n\n初步修改后的代码如下\n``` Java\nboolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;            //设置标志位，只有在恢复出厂设置的时候启动一次\nif(userSetup && isFirstBoot){\n    try{\n        Intent intent = new Intent();\n        intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n        mContext.startActivity(intent);\n        Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);                            //将标志为设置为1，表示启动成功\n    } catch(Exception e) {\n        e.printStackTrace();        //这里加try,catch防止内置的APK face2face 丢失\n    }\n}\n```\n\n但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？\n从Log中可以看出:\n\n正常启动的Log:\n```\n01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1\n01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2\n01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard\n01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254\n01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid\n01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])\n01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0\n01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2\n01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0\n01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request\n01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About\n01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781\n01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489\n01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About\n```\n\n异常不启动的Log:\n```\n01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1\n01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1\n01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity\n01-01 00:01:12.944667   720  1147 I am_create_task: [0,4\n01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608\n01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0\n01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2\n01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652\n01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard\n01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302\n01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved\n01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0\n01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher\n01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208\n01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3\n01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher\n01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208\n01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了\n01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm\n```\n\n根据这种情况，再次做了修改\n``` Java\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        ...\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            boolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;\n            if(userSetup && isFirstBoot){\n                try{\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n                    mContext.startActivity(intent);\n                    Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);\n                    new Thread(new Runnable(){                    //在这个地方启动一个线程，再次启动这个应用\n                        public void run(){\n                            try{\n                                while(!isStartSuccess){\n                                    Thread.sleep(2000);\n                                    handler.sendEmptyMessage(1);\n                                }\n                            }catch(Exception e){\n                                e.printStackTrace();\n                            }\n                        }\n                    }).start();\n                }catch(Exception e){\n                    e.printStackTrace();\n                }\n            }\n            ...\n        }\n    }\n};\nprivate boolean isStartSuccess = false;\nHandler handler = new Handler(){\n    public void handleMessage(Message msg){\n        switch(msg.what){\n            case 1:\n                String topActivityName = getTopActivityName(mContext);\n                if(topActivityName != null && topActivityName.contains(\"za.co.axon.mdas.roid\")){\n                    isStartSuccess = true;\n                } else {\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    mContext.startActivity(intent);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n};\n\n/**获取栈顶Activity的名称*/\nprivate String getTopActivityName(Context context) {\n    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n    List<android.app.ActivityManager.RunningTaskInfo> runningTaskInfos = activityManager.getRunningTasks(1);\n    if (runningTaskInfos != null) {\n        return (runningTaskInfos.get(0).topActivity).toString();\n    } else {\n        return null;\n    }\n}\n```","slug":"应用开机自启动","published":1,"updated":"2017-09-22T01:11:31.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbl001zardxo0k8p3lr","content":"<h3 id=\"方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"><a href=\"#方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\" class=\"headerlink\" title=\"方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"></a>方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久</h3><blockquote>\n<p>原理:监听接收 android.intent.action.BOOT_COMPLETED 广播</p>\n</blockquote>\n<p>添加开机广播接收器<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context,Intent intent)</span></span>&#123;</div><div class=\"line\">        Intent mIntent = <span class=\"keyword\">new</span> Intent(context,MainActivity.class);</div><div class=\"line\">        startActivity(mIntent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中注册开机广播接收器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BootReceiver\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-在开机向导之后开机自启动\"><a href=\"#方法二-在开机向导之后开机自启动\" class=\"headerlink\" title=\"方法二.在开机向导之后开机自启动\"></a>方法二.在开机向导之后开机自启动</h3><blockquote>\n<p>原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:<br>//OOBE<br>mediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">finishOOBE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>//SetupWizard<br>com/google/android/setupwizard/BaseActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupComplete</span><span class=\"params\">(<span class=\"keyword\">boolean</span> paramBoolean)</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), <span class=\"string\">\"user_setup_complete\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听<br>在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">resetUserSetupObserver</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), <span class=\"keyword\">true</span>, mUserSetupObserver, mCurrentUserId);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> userSetup = <span class=\"number\">0</span> != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">0</span> , mCurrentUserId);</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsButton != <span class=\"keyword\">null</span> &amp;&amp; mHasFlipSettings) &#123;</div><div class=\"line\">            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsPanel != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mSettingsPanel.setEnabled(userSetup);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!mUserSetup &amp;&amp; mStatusBarView != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                animateCollapseQuickSettings();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>初步修改后的代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;            <span class=\"comment\">//设置标志位，只有在恢复出厂设置的时候启动一次</span></div><div class=\"line\"><span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">        intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">        mContext.startActivity(intent);</div><div class=\"line\">        Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);                            <span class=\"comment\">//将标志为设置为1，表示启动成功</span></div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();        <span class=\"comment\">//这里加try,catch防止内置的APK face2face 丢失</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？<br>从Log中可以看出:</p>\n<p>正常启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1</div><div class=\"line\">01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254</div><div class=\"line\">01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid</div><div class=\"line\">01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])</div><div class=\"line\">01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0</div><div class=\"line\">01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0</div><div class=\"line\">01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request</div><div class=\"line\">01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About</div><div class=\"line\">01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781</div><div class=\"line\">01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489</div><div class=\"line\">01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About</div></pre></td></tr></table></figure></p>\n<p>异常不启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1</div><div class=\"line\">01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1</div><div class=\"line\">01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity</div><div class=\"line\">01-01 00:01:12.944667   720  1147 I am_create_task: [0,4</div><div class=\"line\">01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608</div><div class=\"line\">01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0</div><div class=\"line\">01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652</div><div class=\"line\">01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302</div><div class=\"line\">01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0</div><div class=\"line\">01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208</div><div class=\"line\">01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3</div><div class=\"line\">01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208</div><div class=\"line\">01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了</div><div class=\"line\">01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm</div></pre></td></tr></table></figure></p>\n<p>根据这种情况，再次做了修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">                <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                    Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable()&#123;                    <span class=\"comment\">//在这个地方启动一个线程，再次启动这个应用</span></div><div class=\"line\">                        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                                <span class=\"keyword\">while</span>(!isStartSuccess)&#123;</div><div class=\"line\">                                    Thread.sleep(<span class=\"number\">2000</span>);</div><div class=\"line\">                                    handler.sendEmptyMessage(<span class=\"number\">1</span>);</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;).start();</div><div class=\"line\">                &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isStartSuccess = <span class=\"keyword\">false</span>;</div><div class=\"line\">Handler handler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>(msg.what)&#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                String topActivityName = getTopActivityName(mContext);</div><div class=\"line\">                <span class=\"keyword\">if</span>(topActivityName != <span class=\"keyword\">null</span> &amp;&amp; topActivityName.contains(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>))&#123;</div><div class=\"line\">                    isStartSuccess = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**获取栈顶Activity的名称*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getTopActivityName</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">    List&lt;android.app.ActivityManager.RunningTaskInfo&gt; runningTaskInfos = activityManager.getRunningTasks(<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> (runningTaskInfos != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (runningTaskInfos.get(<span class=\"number\">0</span>).topActivity).toString();</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"><a href=\"#方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\" class=\"headerlink\" title=\"方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"></a>方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久</h3><blockquote>\n<p>原理:监听接收 android.intent.action.BOOT_COMPLETED 广播</p>\n</blockquote>\n<p>添加开机广播接收器<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context,Intent intent)</span></span>&#123;</div><div class=\"line\">        Intent mIntent = <span class=\"keyword\">new</span> Intent(context,MainActivity.class);</div><div class=\"line\">        startActivity(mIntent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中注册开机广播接收器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BootReceiver\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-在开机向导之后开机自启动\"><a href=\"#方法二-在开机向导之后开机自启动\" class=\"headerlink\" title=\"方法二.在开机向导之后开机自启动\"></a>方法二.在开机向导之后开机自启动</h3><blockquote>\n<p>原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:<br>//OOBE<br>mediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">finishOOBE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>//SetupWizard<br>com/google/android/setupwizard/BaseActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupComplete</span><span class=\"params\">(<span class=\"keyword\">boolean</span> paramBoolean)</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), <span class=\"string\">\"user_setup_complete\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听<br>在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">resetUserSetupObserver</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), <span class=\"keyword\">true</span>, mUserSetupObserver, mCurrentUserId);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> userSetup = <span class=\"number\">0</span> != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">0</span> , mCurrentUserId);</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsButton != <span class=\"keyword\">null</span> &amp;&amp; mHasFlipSettings) &#123;</div><div class=\"line\">            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsPanel != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mSettingsPanel.setEnabled(userSetup);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!mUserSetup &amp;&amp; mStatusBarView != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                animateCollapseQuickSettings();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>初步修改后的代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;            <span class=\"comment\">//设置标志位，只有在恢复出厂设置的时候启动一次</span></div><div class=\"line\"><span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">        intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">        mContext.startActivity(intent);</div><div class=\"line\">        Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);                            <span class=\"comment\">//将标志为设置为1，表示启动成功</span></div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();        <span class=\"comment\">//这里加try,catch防止内置的APK face2face 丢失</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？<br>从Log中可以看出:</p>\n<p>正常启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1</div><div class=\"line\">01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254</div><div class=\"line\">01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid</div><div class=\"line\">01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])</div><div class=\"line\">01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0</div><div class=\"line\">01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0</div><div class=\"line\">01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request</div><div class=\"line\">01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About</div><div class=\"line\">01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781</div><div class=\"line\">01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489</div><div class=\"line\">01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About</div></pre></td></tr></table></figure></p>\n<p>异常不启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1</div><div class=\"line\">01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1</div><div class=\"line\">01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity</div><div class=\"line\">01-01 00:01:12.944667   720  1147 I am_create_task: [0,4</div><div class=\"line\">01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608</div><div class=\"line\">01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0</div><div class=\"line\">01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652</div><div class=\"line\">01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302</div><div class=\"line\">01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0</div><div class=\"line\">01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208</div><div class=\"line\">01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3</div><div class=\"line\">01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208</div><div class=\"line\">01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了</div><div class=\"line\">01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm</div></pre></td></tr></table></figure></p>\n<p>根据这种情况，再次做了修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">                <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                    Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable()&#123;                    <span class=\"comment\">//在这个地方启动一个线程，再次启动这个应用</span></div><div class=\"line\">                        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                                <span class=\"keyword\">while</span>(!isStartSuccess)&#123;</div><div class=\"line\">                                    Thread.sleep(<span class=\"number\">2000</span>);</div><div class=\"line\">                                    handler.sendEmptyMessage(<span class=\"number\">1</span>);</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;).start();</div><div class=\"line\">                &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isStartSuccess = <span class=\"keyword\">false</span>;</div><div class=\"line\">Handler handler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>(msg.what)&#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                String topActivityName = getTopActivityName(mContext);</div><div class=\"line\">                <span class=\"keyword\">if</span>(topActivityName != <span class=\"keyword\">null</span> &amp;&amp; topActivityName.contains(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>))&#123;</div><div class=\"line\">                    isStartSuccess = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**获取栈顶Activity的名称*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getTopActivityName</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">    List&lt;android.app.ActivityManager.RunningTaskInfo&gt; runningTaskInfos = activityManager.getRunningTasks(<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> (runningTaskInfos != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (runningTaskInfos.get(<span class=\"number\">0</span>).topActivity).toString();</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"沉浸式学习","date":"2017-09-29T06:27:53.000Z","_content":"#### 1.隐藏状态栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 2.状态栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 3.隐藏导航栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 4.导航栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t//导航栏光明\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 5.真正的沉浸式\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    public void onWindowFocusChanged(boolean hasFocus) {\n        super.onWindowFocusChanged(hasFocus);\n        if (hasFocus && Build.VERSION.SDK_INT >= 19) {\n            View decorView = getWindow().getDecorView();\n            decorView.setSystemUiVisibility(\n                View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\n        }\n    }\n}\n```","source":"_posts/沉浸式学习.md","raw":"---\ntitle: 沉浸式学习\ndate: 2017-09-29 14:27:53\ntags:\n---\n#### 1.隐藏状态栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 2.状态栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 3.隐藏导航栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 4.导航栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t//导航栏光明\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 5.真正的沉浸式\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    public void onWindowFocusChanged(boolean hasFocus) {\n        super.onWindowFocusChanged(hasFocus);\n        if (hasFocus && Build.VERSION.SDK_INT >= 19) {\n            View decorView = getWindow().getDecorView();\n            decorView.setSystemUiVisibility(\n                View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\n        }\n    }\n}\n```","slug":"沉浸式学习","published":1,"updated":"2017-09-29T06:45:29.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbm0020ardxl790q3vn","content":"<h4 id=\"1-隐藏状态栏\"><a href=\"#1-隐藏状态栏\" class=\"headerlink\" title=\"1.隐藏状态栏\"></a>1.隐藏状态栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2-状态栏透明\"><a href=\"#2-状态栏透明\" class=\"headerlink\" title=\"2.状态栏透明\"></a>2.状态栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-隐藏导航栏\"><a href=\"#3-隐藏导航栏\" class=\"headerlink\" title=\"3.隐藏导航栏\"></a>3.隐藏导航栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"4-导航栏透明\"><a href=\"#4-导航栏透明\" class=\"headerlink\" title=\"4.导航栏透明\"></a>4.导航栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t<span class=\"comment\">//导航栏光明</span></div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"5-真正的沉浸式\"><a href=\"#5-真正的沉浸式\" class=\"headerlink\" title=\"5.真正的沉浸式\"></a>5.真正的沉浸式</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</div><div class=\"line\">        <span class=\"keyword\">if</span> (hasFocus &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class=\"number\">19</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            decorView.setSystemUiVisibility(</div><div class=\"line\">                View.SYSTEM_UI_FLAG_LAYOUT_STABLE</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-隐藏状态栏\"><a href=\"#1-隐藏状态栏\" class=\"headerlink\" title=\"1.隐藏状态栏\"></a>1.隐藏状态栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2-状态栏透明\"><a href=\"#2-状态栏透明\" class=\"headerlink\" title=\"2.状态栏透明\"></a>2.状态栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-隐藏导航栏\"><a href=\"#3-隐藏导航栏\" class=\"headerlink\" title=\"3.隐藏导航栏\"></a>3.隐藏导航栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"4-导航栏透明\"><a href=\"#4-导航栏透明\" class=\"headerlink\" title=\"4.导航栏透明\"></a>4.导航栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t<span class=\"comment\">//导航栏光明</span></div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"5-真正的沉浸式\"><a href=\"#5-真正的沉浸式\" class=\"headerlink\" title=\"5.真正的沉浸式\"></a>5.真正的沉浸式</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</div><div class=\"line\">        <span class=\"keyword\">if</span> (hasFocus &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class=\"number\">19</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            decorView.setSystemUiVisibility(</div><div class=\"line\">                View.SYSTEM_UI_FLAG_LAYOUT_STABLE</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"添加MoreRingtone菜单","date":"2017-09-22T06:08:38.000Z","_content":"``` Java\n//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java\npublic void setRingtonePickerParams(Intent intent) {\n    //把这个改为true就可以显示 More Ringtones ... 选项了\n\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, true);    \n    mHasMoreRingtone = true;\n}\n```","source":"_posts/添加MoreRingtone菜单.md","raw":"---\ntitle: 添加MoreRingtone菜单\ndate: 2017-09-22 14:08:38\ntags:\n---\n``` Java\n//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java\npublic void setRingtonePickerParams(Intent intent) {\n    //把这个改为true就可以显示 More Ringtones ... 选项了\n\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, true);    \n    mHasMoreRingtone = true;\n}\n```","slug":"添加MoreRingtone菜单","published":1,"updated":"2017-09-22T06:10:39.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbn0021ardxhgjpuc1x","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRingtonePickerParams</span><span class=\"params\">(Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//把这个改为true就可以显示 More Ringtones ... 选项了</span></div><div class=\"line\">\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, <span class=\"keyword\">true</span>);    </div><div class=\"line\">    mHasMoreRingtone = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRingtonePickerParams</span><span class=\"params\">(Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//把这个改为true就可以显示 More Ringtones ... 选项了</span></div><div class=\"line\">\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, <span class=\"keyword\">true</span>);    </div><div class=\"line\">    mHasMoreRingtone = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"添加水印效果","date":"2017-09-22T01:44:20.000Z","_content":"#### a.新建一个名为setup.conf的文件\n写入以下内容:B79A939390%20\t\t\t\t\t\n这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出\n然后把这个conf文件push到手机的system/etc目录下\n\n#### b.以加水印字串“hello world,this is my mark”为例\n修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,\n注释掉WaterMark构造函数中的这一句:\n``` Java\nmText = builder.toString();\n```\n加上这一句:\n``` Java\nmText = \"xxx\";  //xxx表示你想要加为水印的字符串\n```\n\n#### c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\n\n//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nvoid createWatermarkInTransaction() {\n    if (mWatermark != null) {\n        return;\n    }\n    File file = new File(\"/system/etc/setup.conf\");\t\t\t//读取setup.conf文件\n    FileInputStream in = null;\n    DataInputStream ind = null;\n    try {\n        in = new FileInputStream(file);\n        ind = new DataInputStream(in);\n        String line = ind.readLine();\n        if (line != null) {\n            String[] toks = line.split(\"%\");\n            if (toks != null && toks.length > 0) {\n                mWatermark = new Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);\n            }\n        }\n    } catch (FileNotFoundException e) {\n    } catch (IOException e) {\n    } finally {\n        if (ind != null) {\n            try {\n                ind.close();\n            } catch (IOException e) {\n            }\n        } else if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","source":"_posts/添加水印效果.md","raw":"---\ntitle: 添加水印效果\ndate: 2017-09-22 09:44:20\ntags:\n---\n#### a.新建一个名为setup.conf的文件\n写入以下内容:B79A939390%20\t\t\t\t\t\n这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出\n然后把这个conf文件push到手机的system/etc目录下\n\n#### b.以加水印字串“hello world,this is my mark”为例\n修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,\n注释掉WaterMark构造函数中的这一句:\n``` Java\nmText = builder.toString();\n```\n加上这一句:\n``` Java\nmText = \"xxx\";  //xxx表示你想要加为水印的字符串\n```\n\n#### c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\n\n//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nvoid createWatermarkInTransaction() {\n    if (mWatermark != null) {\n        return;\n    }\n    File file = new File(\"/system/etc/setup.conf\");\t\t\t//读取setup.conf文件\n    FileInputStream in = null;\n    DataInputStream ind = null;\n    try {\n        in = new FileInputStream(file);\n        ind = new DataInputStream(in);\n        String line = ind.readLine();\n        if (line != null) {\n            String[] toks = line.split(\"%\");\n            if (toks != null && toks.length > 0) {\n                mWatermark = new Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);\n            }\n        }\n    } catch (FileNotFoundException e) {\n    } catch (IOException e) {\n    } finally {\n        if (ind != null) {\n            try {\n                ind.close();\n            } catch (IOException e) {\n            }\n        } else if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","slug":"添加水印效果","published":1,"updated":"2017-09-22T01:48:39.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbn0022ardxjgtq75uj","content":"<h4 id=\"a-新建一个名为setup-conf的文件\"><a href=\"#a-新建一个名为setup-conf的文件\" class=\"headerlink\" title=\"a.新建一个名为setup.conf的文件\"></a>a.新建一个名为setup.conf的文件</h4><p>写入以下内容:B79A939390%20<br>这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出<br>然后把这个conf文件push到手机的system/etc目录下</p>\n<h4 id=\"b-以加水印字串“hello-world-this-is-my-mark”为例\"><a href=\"#b-以加水印字串“hello-world-this-is-my-mark”为例\" class=\"headerlink\" title=\"b.以加水印字串“hello world,this is my mark”为例\"></a>b.以加水印字串“hello world,this is my mark”为例</h4><p>修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,<br>注释掉WaterMark构造函数中的这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = builder.toString();</div></pre></td></tr></table></figure></p>\n<p>加上这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = <span class=\"string\">\"xxx\"</span>;  <span class=\"comment\">//xxx表示你想要加为水印的字符串</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\"><a href=\"#c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\" class=\"headerlink\" title=\"c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\"></a>c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.</h4><p>//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createWatermarkInTransaction</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWatermark != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/etc/setup.conf\"</span>);\t\t\t<span class=\"comment\">//读取setup.conf文件</span></div><div class=\"line\">    FileInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    DataInputStream ind = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        in = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">        ind = <span class=\"keyword\">new</span> DataInputStream(in);</div><div class=\"line\">        String line = ind.readLine();</div><div class=\"line\">        <span class=\"keyword\">if</span> (line != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            String[] toks = line.split(<span class=\"string\">\"%\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (toks != <span class=\"keyword\">null</span> &amp;&amp; toks.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                mWatermark = <span class=\"keyword\">new</span> Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (ind != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                ind.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"a-新建一个名为setup-conf的文件\"><a href=\"#a-新建一个名为setup-conf的文件\" class=\"headerlink\" title=\"a.新建一个名为setup.conf的文件\"></a>a.新建一个名为setup.conf的文件</h4><p>写入以下内容:B79A939390%20<br>这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出<br>然后把这个conf文件push到手机的system/etc目录下</p>\n<h4 id=\"b-以加水印字串“hello-world-this-is-my-mark”为例\"><a href=\"#b-以加水印字串“hello-world-this-is-my-mark”为例\" class=\"headerlink\" title=\"b.以加水印字串“hello world,this is my mark”为例\"></a>b.以加水印字串“hello world,this is my mark”为例</h4><p>修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,<br>注释掉WaterMark构造函数中的这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = builder.toString();</div></pre></td></tr></table></figure></p>\n<p>加上这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = <span class=\"string\">\"xxx\"</span>;  <span class=\"comment\">//xxx表示你想要加为水印的字符串</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\"><a href=\"#c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\" class=\"headerlink\" title=\"c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\"></a>c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.</h4><p>//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createWatermarkInTransaction</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWatermark != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/etc/setup.conf\"</span>);\t\t\t<span class=\"comment\">//读取setup.conf文件</span></div><div class=\"line\">    FileInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    DataInputStream ind = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        in = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">        ind = <span class=\"keyword\">new</span> DataInputStream(in);</div><div class=\"line\">        String line = ind.readLine();</div><div class=\"line\">        <span class=\"keyword\">if</span> (line != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            String[] toks = line.split(<span class=\"string\">\"%\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (toks != <span class=\"keyword\">null</span> &amp;&amp; toks.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                mWatermark = <span class=\"keyword\">new</span> Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (ind != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                ind.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"添加代码禁用GoogleCamera","date":"2017-09-22T05:50:36.000Z","_content":"``` Java\n在RestoreRotationReceiver.java添加如下代码即可\npublic void onReceive(Context context, Intent intent) {\n    String action = intent.getAction();\n    Log.v(\"RestoreRotationReceiver_IPO\", action);\n    if (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(\"android.intent.action.ACTION_BOOT_IPO\")) {\n        try{\n            context.getPackageManager().setApplicationEnabledSetting(\"com.google.android.GoogleCamera\",android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    ...\n    }\n}\n```","source":"_posts/添加代码禁用GoogleCamera.md","raw":"---\ntitle: 添加代码禁用GoogleCamera\ndate: 2017-09-22 13:50:36\ntags:\n---\n``` Java\n在RestoreRotationReceiver.java添加如下代码即可\npublic void onReceive(Context context, Intent intent) {\n    String action = intent.getAction();\n    Log.v(\"RestoreRotationReceiver_IPO\", action);\n    if (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(\"android.intent.action.ACTION_BOOT_IPO\")) {\n        try{\n            context.getPackageManager().setApplicationEnabledSetting(\"com.google.android.GoogleCamera\",android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    ...\n    }\n}\n```","slug":"添加代码禁用GoogleCamera","published":1,"updated":"2017-09-22T05:51:41.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbo0023ardx43180c8c","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">在RestoreRotationReceiver.java添加如下代码即可</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    String action = intent.getAction();</div><div class=\"line\">    Log.v(<span class=\"string\">\"RestoreRotationReceiver_IPO\"</span>, action);</div><div class=\"line\">    <span class=\"keyword\">if</span> (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(<span class=\"string\">\"android.intent.action.ACTION_BOOT_IPO\"</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            context.getPackageManager().setApplicationEnabledSetting(<span class=\"string\">\"com.google.android.GoogleCamera\"</span>,android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">在RestoreRotationReceiver.java添加如下代码即可</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    String action = intent.getAction();</div><div class=\"line\">    Log.v(<span class=\"string\">\"RestoreRotationReceiver_IPO\"</span>, action);</div><div class=\"line\">    <span class=\"keyword\">if</span> (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(<span class=\"string\">\"android.intent.action.ACTION_BOOT_IPO\"</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            context.getPackageManager().setApplicationEnabledSetting(<span class=\"string\">\"com.google.android.GoogleCamera\"</span>,android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"短信转彩信条数限制","date":"2017-09-21T05:03:48.000Z","_content":"packages/apps/Mms/res/xml/mms_config.xml\n``` xml\n<int name=\"smsToMmsTextThreshold\">8</int>\n```","source":"_posts/短信转彩信条数限制.md","raw":"---\ntitle: 短信转彩信条数限制\ndate: 2017-09-21 13:03:48\ntags:\n---\npackages/apps/Mms/res/xml/mms_config.xml\n``` xml\n<int name=\"smsToMmsTextThreshold\">8</int>\n```","slug":"短信转彩信条数限制","published":1,"updated":"2017-09-21T05:55:35.017Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbp0024ardxbafx6b8p","content":"<p>packages/apps/Mms/res/xml/mms_config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">int</span> <span class=\"attr\">name</span>=<span class=\"string\">\"smsToMmsTextThreshold\"</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">int</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Mms/res/xml/mms_config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">int</span> <span class=\"attr\">name</span>=<span class=\"string\">\"smsToMmsTextThreshold\"</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">int</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"第一次插卡弹出apn对话框","date":"2017-09-22T02:42:23.000Z","_content":"\n### 方法a:跳转\n``` Java\n//单卡的时候跳转到ApnSettings\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.settings\", \"com.android.settings.ApnSettings\"));\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n``` Java\n//双卡的时候跳转到MultipleSimActivity\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.phone\", \"com.mediatek.settings.MultipleSimActivity\"));\t\t//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n\n### 方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\n``` Java\nprivate void showApnDialog(){\n    AlertDialog.Builder builder = new AlertDialog.Builder(Launcher.this);\n    builder.setTitle(\"APN Config\");\n    builder.setMessage(\"The default APN Config maybe incorrect, whether reselect?\");\n    builder.setPositiveButton(\"yes\",new DialogInterface.OnClickListener(){\n        @Override\n        public void onClick(DialogInterface dialog,int which){\n            Intent intent = new Intent();\n            intent.setClassName(\"com.android.phone\", \"com.android.phone.MobileNetworkSettings\");\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            startActivity(intent);\n        }\n    });\n    builder.setNegativeButton(\"no\",null);\n    builder.create().show();\n}\n```","source":"_posts/第一次插卡弹出apn对话框.md","raw":"---\ntitle: 第一次插卡弹出apn对话框\ndate: 2017-09-22 10:42:23\ntags:\n---\n\n### 方法a:跳转\n``` Java\n//单卡的时候跳转到ApnSettings\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.settings\", \"com.android.settings.ApnSettings\"));\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n``` Java\n//双卡的时候跳转到MultipleSimActivity\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.phone\", \"com.mediatek.settings.MultipleSimActivity\"));\t\t//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n\n### 方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\n``` Java\nprivate void showApnDialog(){\n    AlertDialog.Builder builder = new AlertDialog.Builder(Launcher.this);\n    builder.setTitle(\"APN Config\");\n    builder.setMessage(\"The default APN Config maybe incorrect, whether reselect?\");\n    builder.setPositiveButton(\"yes\",new DialogInterface.OnClickListener(){\n        @Override\n        public void onClick(DialogInterface dialog,int which){\n            Intent intent = new Intent();\n            intent.setClassName(\"com.android.phone\", \"com.android.phone.MobileNetworkSettings\");\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            startActivity(intent);\n        }\n    });\n    builder.setNegativeButton(\"no\",null);\n    builder.create().show();\n}\n```","slug":"第一次插卡弹出apn对话框","published":1,"updated":"2017-09-22T02:44:36.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbp0025ardx0n8w7cxs","content":"<h3 id=\"方法a-跳转\"><a href=\"#方法a-跳转\" class=\"headerlink\" title=\"方法a:跳转\"></a>方法a:跳转</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//单卡的时候跳转到ApnSettings</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.settings\"</span>, <span class=\"string\">\"com.android.settings.ApnSettings\"</span>));</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//双卡的时候跳转到MultipleSimActivity</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.mediatek.settings.MultipleSimActivity\"</span>));\t\t<span class=\"comment\">//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名</span></div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h3 id=\"方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\"><a href=\"#方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\" class=\"headerlink\" title=\"方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\"></a>方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showApnDialog</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(Launcher.<span class=\"keyword\">this</span>);</div><div class=\"line\">    builder.setTitle(<span class=\"string\">\"APN Config\"</span>);</div><div class=\"line\">    builder.setMessage(<span class=\"string\">\"The default APN Config maybe incorrect, whether reselect?\"</span>);</div><div class=\"line\">    builder.setPositiveButton(<span class=\"string\">\"yes\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()&#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog,<span class=\"keyword\">int</span> which)</span></span>&#123;</div><div class=\"line\">            Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">            intent.setClassName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.android.phone.MobileNetworkSettings\"</span>);</div><div class=\"line\">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">            startActivity(intent);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    builder.setNegativeButton(<span class=\"string\">\"no\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">    builder.create().show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法a-跳转\"><a href=\"#方法a-跳转\" class=\"headerlink\" title=\"方法a:跳转\"></a>方法a:跳转</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//单卡的时候跳转到ApnSettings</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.settings\"</span>, <span class=\"string\">\"com.android.settings.ApnSettings\"</span>));</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//双卡的时候跳转到MultipleSimActivity</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.mediatek.settings.MultipleSimActivity\"</span>));\t\t<span class=\"comment\">//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名</span></div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h3 id=\"方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\"><a href=\"#方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\" class=\"headerlink\" title=\"方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\"></a>方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showApnDialog</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(Launcher.<span class=\"keyword\">this</span>);</div><div class=\"line\">    builder.setTitle(<span class=\"string\">\"APN Config\"</span>);</div><div class=\"line\">    builder.setMessage(<span class=\"string\">\"The default APN Config maybe incorrect, whether reselect?\"</span>);</div><div class=\"line\">    builder.setPositiveButton(<span class=\"string\">\"yes\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()&#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog,<span class=\"keyword\">int</span> which)</span></span>&#123;</div><div class=\"line\">            Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">            intent.setClassName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.android.phone.MobileNetworkSettings\"</span>);</div><div class=\"line\">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">            startActivity(intent);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    builder.setNegativeButton(<span class=\"string\">\"no\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">    builder.create().show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"游戏框架","date":"2017-09-25T07:44:48.000Z","_content":"``` Java\npublic class GameControl extends View implements Runnable{\n\tpublic int mIGameStatus = -1;\n\tpublic boolean mBLoop = false;\n\tpublic  GameControl(Context context){\n\t\tsuper(context);\n\t}\n\tpublic void initGame(){\n\t\tmBLoop = true;\n\t\tmIGameStatus = GameDefinition.Game_Logo;\n\t\tThread t = new Thread(this);\n\t\tt.start();\n\t}\n\tprotected void onDraw(Canvas canvas){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tpublic void run(){\n\t\twhile(mBLoop){\n\t\t\ttry{\n\t\t\t\tThread.sleep(500);\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tpostInvalidate();\n\t\t}\n\t}\n\tboolean onKeyDown(int keyCode){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n\tboolean onKeyUp(int keyCode){\n\t\treturn true;\n\t}\n\tpublic boolean onTouchEvent(MotionEvent event){\n\t\tint iAction = event.getAction();\n\t\tif(iAction == MotionEvent.ACTION_CANCEL){\n\t\t\t\n\t\t}else if(iAction == MotionEvent.ACTION_DOWN){\n\t\t}else if(iAction == MotionEvent.ACTION_MOVE){\n\t\t}\n\t\tint x = (int)event.getX();\n\t\tint y = (int)event.getY();\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n}\n\npublic abstract class GameObject{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic abstract void loadProperties(Vector v);\n\tpublic String toString(){\n\t\treturn (\"id=\"+id);\n\t}\n}\n\npublic class GameObjectQueue extends Hashtable{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic Object find(String gameObjectId){\n\t\tif(this.containsKey(gameObjectId)){\n\t\t\treturn this.get(gameObjectId);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic Object[] list(){\n\t\tObject[] result = new Object[this.size()];\n\t\tEnumeration enumer = this.elements();\n\t\tint i = 0;\n\t\twhile(enumer.hasMoreElements()){\n\t\t\tresult[i++] = enumer.nextElements();\n\t\t}\n\t\treturn result;\n\t}\n}\n\npublic class SimpleLayer extends GameObject{\n\tpublic static int WALKARENA = 1;\n\tpublic static int NO_WALKARENA = 2;\n\t@get\n\tprivate int[] mapData = null;\n\t@get\n\tprivate int tileWidth = 0;\n\t@get\n\tprivate int tileHeight = 0;\n\t@get\n\tprivate int tileCols = 0;\n\t@get\n\tprivate int tileRows = 0;\n\t@get,set\n\tprivate TiledLayer layer = null;\n\t@get\n\tprivate int type = 0;\n\t@get\n\tprivate String imageURL = null;\n\tpublic SimpleLayer(){\n\t\tsuper();\n\t}\n\tprivate int[] StringToIntArray(String s){\n\t\ts = StringExtension.removeToken(s,new String[]{\"\\t\",\" \",\"\\r\",\"\\n\"});\n\t\tObject[] objArr = StringExtension.split(new StringBuffer(s),\",\",StringExtension.INTEGER_ARRAY,false);\n\t\treturn StringExtension.objectArrayBatchToIntArray(objArr);\n\t}\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.tileWidth = Integer.parseInt((String)v.elementAt(1));\n\t\tthis.tileHeight = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.tileCols = Integer.parseInt((String)v.elementAt(3));\n\t\tthis.tileRows = Integer.parseInt((String)v.elementAt(4));\n\t\tthis.type = Integer.parseInt((String)v.elementAt(5));\n\t\tthis.imgURL = (String)v.elementAt(6);\n\t\tthis.mapData = StringToIntArray((String)v.elementAt(7));\n\t}\n\tpublic TiledLayer getLayer(){\n\t\treturn layer;\n\t}\n}\n\npublic class SimpleMap extends GameObject{\n\t@get,set\n\tprivate GameObjectQueue layerSet = null;\t//图层集合\n\t@get,set\n\tprivate GameObjectQueue npcSet = null;\t\t//NPC集合\n\t@get,set\n\tprivate GameObjectQueue mapLink = null;\t\t//连接器集合\n\t@get\n\tprivate int width = 0;\t\t\t\t\t\t//地图宽度\n\t@get\n\tprivate int height = 0;\t\t\t\t\t\t//地图高度\n\t@get\n\tprivate String name = null;\t\t\t\t\t//地图名称\n\tpublic SimpleMap(){\n\t\tsuper();\n\t}\n\t@Override\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.name = (String)v.elementAt(1);\n\t\tthis.width = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.height = Integer.parseInt((String)v.elementAt(3));\n\t}\n\tpublic String toString(){...}\n}\n\n//这里的Sprite类在什么地方？？？\npublic class Animator extends Sprite{\n\tprivate Calculagraph cal = null;\n\tpublic Animator(Bitmap img,int frameWidth,int frameHeight,int loopTime)\n}\n```","source":"_posts/游戏框架.md","raw":"---\ntitle: 游戏框架\ndate: 2017-09-25 15:44:48\ntags:\n---\n``` Java\npublic class GameControl extends View implements Runnable{\n\tpublic int mIGameStatus = -1;\n\tpublic boolean mBLoop = false;\n\tpublic  GameControl(Context context){\n\t\tsuper(context);\n\t}\n\tpublic void initGame(){\n\t\tmBLoop = true;\n\t\tmIGameStatus = GameDefinition.Game_Logo;\n\t\tThread t = new Thread(this);\n\t\tt.start();\n\t}\n\tprotected void onDraw(Canvas canvas){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tpublic void run(){\n\t\twhile(mBLoop){\n\t\t\ttry{\n\t\t\t\tThread.sleep(500);\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tpostInvalidate();\n\t\t}\n\t}\n\tboolean onKeyDown(int keyCode){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n\tboolean onKeyUp(int keyCode){\n\t\treturn true;\n\t}\n\tpublic boolean onTouchEvent(MotionEvent event){\n\t\tint iAction = event.getAction();\n\t\tif(iAction == MotionEvent.ACTION_CANCEL){\n\t\t\t\n\t\t}else if(iAction == MotionEvent.ACTION_DOWN){\n\t\t}else if(iAction == MotionEvent.ACTION_MOVE){\n\t\t}\n\t\tint x = (int)event.getX();\n\t\tint y = (int)event.getY();\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n}\n\npublic abstract class GameObject{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic abstract void loadProperties(Vector v);\n\tpublic String toString(){\n\t\treturn (\"id=\"+id);\n\t}\n}\n\npublic class GameObjectQueue extends Hashtable{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic Object find(String gameObjectId){\n\t\tif(this.containsKey(gameObjectId)){\n\t\t\treturn this.get(gameObjectId);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic Object[] list(){\n\t\tObject[] result = new Object[this.size()];\n\t\tEnumeration enumer = this.elements();\n\t\tint i = 0;\n\t\twhile(enumer.hasMoreElements()){\n\t\t\tresult[i++] = enumer.nextElements();\n\t\t}\n\t\treturn result;\n\t}\n}\n\npublic class SimpleLayer extends GameObject{\n\tpublic static int WALKARENA = 1;\n\tpublic static int NO_WALKARENA = 2;\n\t@get\n\tprivate int[] mapData = null;\n\t@get\n\tprivate int tileWidth = 0;\n\t@get\n\tprivate int tileHeight = 0;\n\t@get\n\tprivate int tileCols = 0;\n\t@get\n\tprivate int tileRows = 0;\n\t@get,set\n\tprivate TiledLayer layer = null;\n\t@get\n\tprivate int type = 0;\n\t@get\n\tprivate String imageURL = null;\n\tpublic SimpleLayer(){\n\t\tsuper();\n\t}\n\tprivate int[] StringToIntArray(String s){\n\t\ts = StringExtension.removeToken(s,new String[]{\"\\t\",\" \",\"\\r\",\"\\n\"});\n\t\tObject[] objArr = StringExtension.split(new StringBuffer(s),\",\",StringExtension.INTEGER_ARRAY,false);\n\t\treturn StringExtension.objectArrayBatchToIntArray(objArr);\n\t}\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.tileWidth = Integer.parseInt((String)v.elementAt(1));\n\t\tthis.tileHeight = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.tileCols = Integer.parseInt((String)v.elementAt(3));\n\t\tthis.tileRows = Integer.parseInt((String)v.elementAt(4));\n\t\tthis.type = Integer.parseInt((String)v.elementAt(5));\n\t\tthis.imgURL = (String)v.elementAt(6);\n\t\tthis.mapData = StringToIntArray((String)v.elementAt(7));\n\t}\n\tpublic TiledLayer getLayer(){\n\t\treturn layer;\n\t}\n}\n\npublic class SimpleMap extends GameObject{\n\t@get,set\n\tprivate GameObjectQueue layerSet = null;\t//图层集合\n\t@get,set\n\tprivate GameObjectQueue npcSet = null;\t\t//NPC集合\n\t@get,set\n\tprivate GameObjectQueue mapLink = null;\t\t//连接器集合\n\t@get\n\tprivate int width = 0;\t\t\t\t\t\t//地图宽度\n\t@get\n\tprivate int height = 0;\t\t\t\t\t\t//地图高度\n\t@get\n\tprivate String name = null;\t\t\t\t\t//地图名称\n\tpublic SimpleMap(){\n\t\tsuper();\n\t}\n\t@Override\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.name = (String)v.elementAt(1);\n\t\tthis.width = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.height = Integer.parseInt((String)v.elementAt(3));\n\t}\n\tpublic String toString(){...}\n}\n\n//这里的Sprite类在什么地方？？？\npublic class Animator extends Sprite{\n\tprivate Calculagraph cal = null;\n\tpublic Animator(Bitmap img,int frameWidth,int frameHeight,int loopTime)\n}\n```","slug":"游戏框架","published":1,"updated":"2017-09-25T07:45:00.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbq0026ardxcwanox96","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameControl</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> mIGameStatus = -<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> mBLoop = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">GameControl</span><span class=\"params\">(Context context)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>(context);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initGame</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tmBLoop = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\tmIGameStatus = GameDefinition.Game_Logo;</div><div class=\"line\">\t\tThread t = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);</div><div class=\"line\">\t\tt.start();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(mBLoop)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">500</span>);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpostInvalidate();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyUp</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> iAction = event.getAction();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_CANCEL)&#123;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_DOWN)&#123;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_MOVE)&#123;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>)event.getX();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>)event.getY();</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (<span class=\"string\">\"id=\"</span>+id);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObjectQueue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Hashtable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">find</span><span class=\"params\">(String gameObjectId)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.containsKey(gameObjectId))&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.get(gameObjectId);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">public</span> Object[] list()&#123;</div><div class=\"line\">\t\tObject[] result = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.size()];</div><div class=\"line\">\t\tEnumeration enumer = <span class=\"keyword\">this</span>.elements();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(enumer.hasMoreElements())&#123;</div><div class=\"line\">\t\t\tresult[i++] = enumer.nextElements();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleLayer</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> WALKARENA = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> NO_WALKARENA = <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] mapData = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileWidth = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileHeight = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileCols = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileRows = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> TiledLayer layer = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> type = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String imageURL = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] StringToIntArray(String s)&#123;</div><div class=\"line\">\t\ts = StringExtension.removeToken(s,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"\\t\"</span>,<span class=\"string\">\" \"</span>,<span class=\"string\">\"\\r\"</span>,<span class=\"string\">\"\\n\"</span>&#125;);</div><div class=\"line\">\t\tObject[] objArr = StringExtension.split(<span class=\"keyword\">new</span> StringBuffer(s),<span class=\"string\">\",\"</span>,StringExtension.INTEGER_ARRAY,<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> StringExtension.objectArrayBatchToIntArray(objArr);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileWidth = Integer.parseInt((String)v.elementAt(<span class=\"number\">1</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileHeight = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileCols = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileRows = Integer.parseInt((String)v.elementAt(<span class=\"number\">4</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.type = Integer.parseInt((String)v.elementAt(<span class=\"number\">5</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.imgURL = (String)v.elementAt(<span class=\"number\">6</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.mapData = StringToIntArray((String)v.elementAt(<span class=\"number\">7</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TiledLayer <span class=\"title\">getLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> layer;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleMap</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue layerSet = <span class=\"keyword\">null</span>;\t<span class=\"comment\">//图层集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue npcSet = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//NPC集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue mapLink = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//连接器集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图宽度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图高度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name = <span class=\"keyword\">null</span>;\t\t\t\t\t<span class=\"comment\">//地图名称</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = (String)v.elementAt(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.width = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.height = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;...&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//这里的Sprite类在什么地方？？？</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Sprite</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> Calculagraph cal = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Animator</span><span class=\"params\">(Bitmap img,<span class=\"keyword\">int</span> frameWidth,<span class=\"keyword\">int</span> frameHeight,<span class=\"keyword\">int</span> loopTime)</span></span></div><div class=\"line\"><span class=\"function\">&#125;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameControl</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> mIGameStatus = -<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> mBLoop = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">GameControl</span><span class=\"params\">(Context context)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>(context);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initGame</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tmBLoop = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\tmIGameStatus = GameDefinition.Game_Logo;</div><div class=\"line\">\t\tThread t = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);</div><div class=\"line\">\t\tt.start();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(mBLoop)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">500</span>);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpostInvalidate();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyUp</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> iAction = event.getAction();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_CANCEL)&#123;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_DOWN)&#123;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_MOVE)&#123;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>)event.getX();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>)event.getY();</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (<span class=\"string\">\"id=\"</span>+id);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObjectQueue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Hashtable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">find</span><span class=\"params\">(String gameObjectId)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.containsKey(gameObjectId))&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.get(gameObjectId);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">public</span> Object[] list()&#123;</div><div class=\"line\">\t\tObject[] result = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.size()];</div><div class=\"line\">\t\tEnumeration enumer = <span class=\"keyword\">this</span>.elements();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(enumer.hasMoreElements())&#123;</div><div class=\"line\">\t\t\tresult[i++] = enumer.nextElements();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleLayer</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> WALKARENA = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> NO_WALKARENA = <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] mapData = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileWidth = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileHeight = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileCols = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileRows = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> TiledLayer layer = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> type = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String imageURL = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] StringToIntArray(String s)&#123;</div><div class=\"line\">\t\ts = StringExtension.removeToken(s,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"\\t\"</span>,<span class=\"string\">\" \"</span>,<span class=\"string\">\"\\r\"</span>,<span class=\"string\">\"\\n\"</span>&#125;);</div><div class=\"line\">\t\tObject[] objArr = StringExtension.split(<span class=\"keyword\">new</span> StringBuffer(s),<span class=\"string\">\",\"</span>,StringExtension.INTEGER_ARRAY,<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> StringExtension.objectArrayBatchToIntArray(objArr);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileWidth = Integer.parseInt((String)v.elementAt(<span class=\"number\">1</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileHeight = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileCols = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileRows = Integer.parseInt((String)v.elementAt(<span class=\"number\">4</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.type = Integer.parseInt((String)v.elementAt(<span class=\"number\">5</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.imgURL = (String)v.elementAt(<span class=\"number\">6</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.mapData = StringToIntArray((String)v.elementAt(<span class=\"number\">7</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TiledLayer <span class=\"title\">getLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> layer;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleMap</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue layerSet = <span class=\"keyword\">null</span>;\t<span class=\"comment\">//图层集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue npcSet = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//NPC集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue mapLink = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//连接器集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图宽度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图高度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name = <span class=\"keyword\">null</span>;\t\t\t\t\t<span class=\"comment\">//地图名称</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = (String)v.elementAt(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.width = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.height = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;...&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//这里的Sprite类在什么地方？？？</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Sprite</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> Calculagraph cal = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Animator</span><span class=\"params\">(Bitmap img,<span class=\"keyword\">int</span> frameWidth,<span class=\"keyword\">int</span> frameHeight,<span class=\"keyword\">int</span> loopTime)</span></span></div><div class=\"line\"><span class=\"function\">&#125;</span></div></pre></td></tr></table></figure>"},{"title":"给APK进行系统签名","date":"2017-09-25T06:53:17.000Z","_content":"在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，\n然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8 \n然后三个文件+apk文件，同一个路径下。\n执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\n然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。","source":"_posts/给APK进行系统签名.md","raw":"---\ntitle: 给APK进行系统签名\ndate: 2017-09-25 14:53:17\ntags:\n---\n在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，\n然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8 \n然后三个文件+apk文件，同一个路径下。\n执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\n然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。","slug":"给APK进行系统签名","published":1,"updated":"2017-09-25T06:53:40.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbq0027ardxk68g58ck","content":"<p>在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，<br>然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8<br>然后三个文件+apk文件，同一个路径下。<br>执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk<br>然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，<br>然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8<br>然后三个文件+apk文件，同一个路径下。<br>执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk<br>然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。</p>\n"},{"title":"耳机模式下播放音乐再拍照音乐会卡顿","date":"2017-09-21T08:46:39.000Z","_content":"M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp\n``` cpp\n//mp->setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了\n```\n\nM:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java\n``` Java\n//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED\nAudioAttributes attrs = new AudioAttributes.Builder().build();\n\ncase AUDIO_STREAM_ENFORCED_AUDIBLE:\n    attr->flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;\n    // intended fall through, attributes in common with STREAM_SYSTEM\n```","source":"_posts/耳机模式下播放音乐再拍照音乐会卡顿.md","raw":"---\ntitle: 耳机模式下播放音乐再拍照音乐会卡顿\ndate: 2017-09-21 16:46:39\ntags:\n---\nM:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp\n``` cpp\n//mp->setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了\n```\n\nM:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java\n``` Java\n//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED\nAudioAttributes attrs = new AudioAttributes.Builder().build();\n\ncase AUDIO_STREAM_ENFORCED_AUDIBLE:\n    attr->flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;\n    // intended fall through, attributes in common with STREAM_SYSTEM\n```","slug":"耳机模式下播放音乐再拍照音乐会卡顿","published":1,"updated":"2017-09-21T08:47:57.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbr0028ardxnobgq7de","content":"<p>M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mp-&gt;setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了</span></div></pre></td></tr></table></figure></p>\n<p>M:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED</span></div><div class=\"line\">AudioAttributes attrs = <span class=\"keyword\">new</span> AudioAttributes.Builder().build();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">case</span> AUDIO_STREAM_ENFORCED_AUDIBLE:</div><div class=\"line\">    attr-&gt;flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;</div><div class=\"line\">    <span class=\"comment\">// intended fall through, attributes in common with STREAM_SYSTEM</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mp-&gt;setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了</span></div></pre></td></tr></table></figure></p>\n<p>M:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED</span></div><div class=\"line\">AudioAttributes attrs = <span class=\"keyword\">new</span> AudioAttributes.Builder().build();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">case</span> AUDIO_STREAM_ENFORCED_AUDIBLE:</div><div class=\"line\">    attr-&gt;flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;</div><div class=\"line\">    <span class=\"comment\">// intended fall through, attributes in common with STREAM_SYSTEM</span></div></pre></td></tr></table></figure></p>\n"},{"title":"网络请求","date":"2017-09-22T05:01:47.000Z","_content":"1. Http\n``` Java\n//HttpClient:\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nHttpResponse response = httpClient.execute(httpGet);\nHttpEntity entity = response.getEntity();\nif(entity != null){\n    InputStream inputStream = entity.getContent();\n    int length;\n    byte[] buffer = new byte[2048];\n    String temp = \"\";\n    StringBuilder builder = new StringBuilder();\n    while((length = inputStream.read(buffer)) != -1){\n        temp = new String(buffer,0,length);\n        builder.append(temp);\n    }\n}\n\n//请求参数的几种常用方法\n//HttpGet\n\nHttpGet httpGet = new HttpGet(\"http://www.google.com/search?hl=en&q=httpclient&btnG=Google+Search&aq=f&oq\");\n\n//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",\"q=httpclient&btnG=Google+Search&aq=f&oq\",null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());    //这个和上面HttpGet的URL是一样的\n\n//通过List<NameValuePair>提交参数\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"q\",\"httpClient\"));\nparams.add(new BasicNameValuePair(\"btnG\",\"Google Search\"));\nparams.add(new BasicNameValuePair(\"aq\",\"f\"));\nparams.add(new BasicNameValuePair(\"oq\",null));\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",URLEncodedUtils.format(params,\"UTF-8\"),null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());\n\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.getProtocolVersion()                    //协议版本\nresponse.getStatusLine().getStatusCode();        //响应状态码\nresponse.getStatusLine().getReasonPhrase();        //响应状态字符串\nresponse.getStatusLine().toString();            //响应全报文\n\n//响应头\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.addHeader(\"Set-Cookie\",\"c1=a; path=/; domain=localhost\");\nresponse.addHeader(\"Set-Cookie\",\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\");\nHeader h1 = response.getFirstHeader(\"Set-Cookie\");\nHeader h2 = response.getLastHeader(\"Set-Cookie\");\n//遍历方法1\nHeader[] hs = response.getHeaders(\"Set-Cookie\");                \n//遍历方法2\nHeaderIterator it = response.headerIterator(\"Set-Cookie\");        \nwhile(it.hasNext()){\n    System.out.println(it.next());\n}\n//遍历方法3\nHeaderElementIterator it = new BasicHeaderElementIterator(response.headerIterator(\"Set-Cookie\"));\nwhile(it.hasNext()){\n    HeaderElement element = it.nextElement();\n    NameValuePair[] params = element.getParameters();\n    for(int i = 0; i < params.length; i++){\n        \n    }\n}\n```\n\n2. FileEntiry\n``` Java\nFile file = new File(\"somefile.txt\");\nFileEntity entity = new FileEntity(file,\"text/plain; charset=\\\"UTF-8\\\"\");\nHttpPost httpPost = new HttpPost(\"http://localhost/action.do\");\nhttpPost.setEntity(entity);\n```\n\n3. ContentProducer\n``` Java\nContentProducer contentProducer = new ContentProducer(){\n    public void writeTo(OutputStream outStream) throws IOException{\n        Writer writer = new OutputStreamWriter(outStream,\"UTF-8\");\n        writer.write(\"<response>\");\n        writer.write(\"    <content>\");\n        writer.write(\"    important stuff\");\n        writer.write(\"    </content>\");\n        writer.write(\"</response>\");\n        writer.flush();\n    }\n};\nHttpEntity entity = new EntityTemplate(contentProducer);\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n4. HTML表单\n``` Java\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"param1\",\"value1\"));\nparams.add(new BasicNameValuePair(\"param2\",\"value2\"));\nUrlEncodedFormEntity entity = new UrlEncodedFormEntity(params,\"UTF-8\");\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n5. 响应控制器?\n``` Java\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nResponseHandler<byte[]> handler = new ResponseHandler<byte[]>(){\n    public byte[] handleResponse(HttpResonse response) throws ClientProtocolException,IOException{\n        HttpEntity entity = response.getEntity();\n        if(entity != null){\n            return EntityUtils.toByteArray(entity);\n        }else{\n            return null;\n        }\n    }\n};\nbyte[] response = httpClient.execute(httpGet,handler);\n```\n\n6. DefaultHttpClient\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpRequestRetryHandler myRetryHandler = new HttpRequestRetryHandler(){\n    public boolean retryRequest(IOException e,int executionCount,HttpContext context){\n        if(executionCount >= 5){\n            return false;\n        }\n        if(exception instanceof NoHttpResponseException){\n            return true;\n        }\n        if(exception instanceof SSLHandshakeException){\n            return false;\n        }\n        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);\n        boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n        if(idempotent){\n            return true;\n        }\n        return false;\n    }\n};\nhttpClient.setHttpRequestRetryHandler(myRetryHandler);\n```\n\n7. DefaultHttpClient2\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpContext localContext = new BasicHttpContext();\nAtomicInteger count = new AtomicInteger(1);\nlocalContext.setAttribute(\"count\",count);\nhttpClient.addRequestInterceptor(new HttpRequestInterceptor(){\n    public void process(final HttpRequest request,final HttpContext context) throws HttpExeption,IOException{\n        AtomicInteger count = (AtomicInteger)context.getAttribute(\"count\");\n        request.addHeader(\"count\",Integer.toString(count.getAndIncrement()));\n    }\n});\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nfor(int i = 0;i < 10; i++){\n    HttpResponse response = httpClient.execute(httpGet,localContext);\n    HttpEntity entity = response.getEntity();\n    if(entity != null){\n        entity.consumeContent();\n    }\n}\n```\n\n8. PlainSocketFactory\n``` Java\nPlainSocketFactory psf = PlainSocketFactory.getSocketFactory();\nSocket socket = psf.createSocket();\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\npsf.connectSocket(socket,\"localhost\",8080,null,-1,params);\n```\n\n9. SSL\n``` Java\nTrustManager easyTrustManager = new X509TrustManager(){\n    public void checkClientTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public void checkServerTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public X509Certificate[] getAcceptedIssuers(){\n    \treturn null;\n    }\n};\nSSLContext sslcontext = SSLContext.getInstance(\"TLS\");\nsslcontext.init(null,new TrustManager[]{easyTrustManager},null);\nSSLSocketFactory sf = new SSLSocketFactory(sslcontext);\nSSLSocket socket = (SSLSocket)sf.createSocket();\nsocket.setEnabledCipherSuites(new String[]{\"SSL_RSA_WITH_RC4_128_MD5\"});\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\nsf.connectionSocket(socket,\"localhost\",443,null,-1,parmas);\n```","source":"_posts/网络请求.md","raw":"---\ntitle: 网络请求\ndate: 2017-09-22 13:01:47\ntags:\n---\n1. Http\n``` Java\n//HttpClient:\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nHttpResponse response = httpClient.execute(httpGet);\nHttpEntity entity = response.getEntity();\nif(entity != null){\n    InputStream inputStream = entity.getContent();\n    int length;\n    byte[] buffer = new byte[2048];\n    String temp = \"\";\n    StringBuilder builder = new StringBuilder();\n    while((length = inputStream.read(buffer)) != -1){\n        temp = new String(buffer,0,length);\n        builder.append(temp);\n    }\n}\n\n//请求参数的几种常用方法\n//HttpGet\n\nHttpGet httpGet = new HttpGet(\"http://www.google.com/search?hl=en&q=httpclient&btnG=Google+Search&aq=f&oq\");\n\n//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",\"q=httpclient&btnG=Google+Search&aq=f&oq\",null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());    //这个和上面HttpGet的URL是一样的\n\n//通过List<NameValuePair>提交参数\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"q\",\"httpClient\"));\nparams.add(new BasicNameValuePair(\"btnG\",\"Google Search\"));\nparams.add(new BasicNameValuePair(\"aq\",\"f\"));\nparams.add(new BasicNameValuePair(\"oq\",null));\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",URLEncodedUtils.format(params,\"UTF-8\"),null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());\n\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.getProtocolVersion()                    //协议版本\nresponse.getStatusLine().getStatusCode();        //响应状态码\nresponse.getStatusLine().getReasonPhrase();        //响应状态字符串\nresponse.getStatusLine().toString();            //响应全报文\n\n//响应头\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.addHeader(\"Set-Cookie\",\"c1=a; path=/; domain=localhost\");\nresponse.addHeader(\"Set-Cookie\",\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\");\nHeader h1 = response.getFirstHeader(\"Set-Cookie\");\nHeader h2 = response.getLastHeader(\"Set-Cookie\");\n//遍历方法1\nHeader[] hs = response.getHeaders(\"Set-Cookie\");                \n//遍历方法2\nHeaderIterator it = response.headerIterator(\"Set-Cookie\");        \nwhile(it.hasNext()){\n    System.out.println(it.next());\n}\n//遍历方法3\nHeaderElementIterator it = new BasicHeaderElementIterator(response.headerIterator(\"Set-Cookie\"));\nwhile(it.hasNext()){\n    HeaderElement element = it.nextElement();\n    NameValuePair[] params = element.getParameters();\n    for(int i = 0; i < params.length; i++){\n        \n    }\n}\n```\n\n2. FileEntiry\n``` Java\nFile file = new File(\"somefile.txt\");\nFileEntity entity = new FileEntity(file,\"text/plain; charset=\\\"UTF-8\\\"\");\nHttpPost httpPost = new HttpPost(\"http://localhost/action.do\");\nhttpPost.setEntity(entity);\n```\n\n3. ContentProducer\n``` Java\nContentProducer contentProducer = new ContentProducer(){\n    public void writeTo(OutputStream outStream) throws IOException{\n        Writer writer = new OutputStreamWriter(outStream,\"UTF-8\");\n        writer.write(\"<response>\");\n        writer.write(\"    <content>\");\n        writer.write(\"    important stuff\");\n        writer.write(\"    </content>\");\n        writer.write(\"</response>\");\n        writer.flush();\n    }\n};\nHttpEntity entity = new EntityTemplate(contentProducer);\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n4. HTML表单\n``` Java\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"param1\",\"value1\"));\nparams.add(new BasicNameValuePair(\"param2\",\"value2\"));\nUrlEncodedFormEntity entity = new UrlEncodedFormEntity(params,\"UTF-8\");\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n5. 响应控制器?\n``` Java\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nResponseHandler<byte[]> handler = new ResponseHandler<byte[]>(){\n    public byte[] handleResponse(HttpResonse response) throws ClientProtocolException,IOException{\n        HttpEntity entity = response.getEntity();\n        if(entity != null){\n            return EntityUtils.toByteArray(entity);\n        }else{\n            return null;\n        }\n    }\n};\nbyte[] response = httpClient.execute(httpGet,handler);\n```\n\n6. DefaultHttpClient\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpRequestRetryHandler myRetryHandler = new HttpRequestRetryHandler(){\n    public boolean retryRequest(IOException e,int executionCount,HttpContext context){\n        if(executionCount >= 5){\n            return false;\n        }\n        if(exception instanceof NoHttpResponseException){\n            return true;\n        }\n        if(exception instanceof SSLHandshakeException){\n            return false;\n        }\n        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);\n        boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n        if(idempotent){\n            return true;\n        }\n        return false;\n    }\n};\nhttpClient.setHttpRequestRetryHandler(myRetryHandler);\n```\n\n7. DefaultHttpClient2\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpContext localContext = new BasicHttpContext();\nAtomicInteger count = new AtomicInteger(1);\nlocalContext.setAttribute(\"count\",count);\nhttpClient.addRequestInterceptor(new HttpRequestInterceptor(){\n    public void process(final HttpRequest request,final HttpContext context) throws HttpExeption,IOException{\n        AtomicInteger count = (AtomicInteger)context.getAttribute(\"count\");\n        request.addHeader(\"count\",Integer.toString(count.getAndIncrement()));\n    }\n});\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nfor(int i = 0;i < 10; i++){\n    HttpResponse response = httpClient.execute(httpGet,localContext);\n    HttpEntity entity = response.getEntity();\n    if(entity != null){\n        entity.consumeContent();\n    }\n}\n```\n\n8. PlainSocketFactory\n``` Java\nPlainSocketFactory psf = PlainSocketFactory.getSocketFactory();\nSocket socket = psf.createSocket();\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\npsf.connectSocket(socket,\"localhost\",8080,null,-1,params);\n```\n\n9. SSL\n``` Java\nTrustManager easyTrustManager = new X509TrustManager(){\n    public void checkClientTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public void checkServerTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public X509Certificate[] getAcceptedIssuers(){\n    \treturn null;\n    }\n};\nSSLContext sslcontext = SSLContext.getInstance(\"TLS\");\nsslcontext.init(null,new TrustManager[]{easyTrustManager},null);\nSSLSocketFactory sf = new SSLSocketFactory(sslcontext);\nSSLSocket socket = (SSLSocket)sf.createSocket();\nsocket.setEnabledCipherSuites(new String[]{\"SSL_RSA_WITH_RC4_128_MD5\"});\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\nsf.connectionSocket(socket,\"localhost\",443,null,-1,parmas);\n```","slug":"网络请求","published":1,"updated":"2017-09-22T05:11:37.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbr0029ardxaafq14pq","content":"<ol>\n<li><p>Http</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//HttpClient:</span></div><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">HttpResponse response = httpClient.execute(httpGet);</div><div class=\"line\">HttpEntity entity = response.getEntity();</div><div class=\"line\"><span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    InputStream inputStream = entity.getContent();</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2048</span>];</div><div class=\"line\">    String temp = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">while</span>((length = inputStream.read(buffer)) != -<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        temp = <span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,length);</div><div class=\"line\">        builder.append(temp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请求参数的几种常用方法</span></div><div class=\"line\"><span class=\"comment\">//HttpGet</span></div><div class=\"line\"></div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://www.google.com/search?hl=en&amp;q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)</span></div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,<span class=\"string\">\"q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());    <span class=\"comment\">//这个和上面HttpGet的URL是一样的</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通过List&lt;NameValuePair&gt;提交参数</span></div><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"q\"</span>,<span class=\"string\">\"httpClient\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"btnG\"</span>,<span class=\"string\">\"Google Search\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"aq\"</span>,<span class=\"string\">\"f\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"oq\"</span>,<span class=\"keyword\">null</span>));</div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,URLEncodedUtils.format(params,<span class=\"string\">\"UTF-8\"</span>),<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());</div><div class=\"line\"></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.getProtocolVersion()                    <span class=\"comment\">//协议版本</span></div><div class=\"line\">response.getStatusLine().getStatusCode();        <span class=\"comment\">//响应状态码</span></div><div class=\"line\">response.getStatusLine().getReasonPhrase();        <span class=\"comment\">//响应状态字符串</span></div><div class=\"line\">response.getStatusLine().toString();            <span class=\"comment\">//响应全报文</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//响应头</span></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c1=a; path=/; domain=localhost\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\"</span>);</div><div class=\"line\">Header h1 = response.getFirstHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\">Header h2 = response.getLastHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\"><span class=\"comment\">//遍历方法1</span></div><div class=\"line\">Header[] hs = response.getHeaders(<span class=\"string\">\"Set-Cookie\"</span>);                </div><div class=\"line\"><span class=\"comment\">//遍历方法2</span></div><div class=\"line\">HeaderIterator it = response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>);        </div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    System.out.println(it.next());</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//遍历方法3</span></div><div class=\"line\">HeaderElementIterator it = <span class=\"keyword\">new</span> BasicHeaderElementIterator(response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>));</div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    HeaderElement element = it.nextElement();</div><div class=\"line\">    NameValuePair[] params = element.getParameters();</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; params.length; i++)&#123;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>FileEntiry</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"somefile.txt\"</span>);</div><div class=\"line\">FileEntity entity = <span class=\"keyword\">new</span> FileEntity(file,<span class=\"string\">\"text/plain; charset=\\\"UTF-8\\\"\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/action.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>ContentProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentProducer contentProducer = <span class=\"keyword\">new</span> ContentProducer()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outStream)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</div><div class=\"line\">        Writer writer = <span class=\"keyword\">new</span> OutputStreamWriter(outStream,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;response&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    important stuff\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;/content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;/response&gt;\"</span>);</div><div class=\"line\">        writer.flush();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">HttpEntity entity = <span class=\"keyword\">new</span> EntityTemplate(contentProducer);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML表单</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param1\"</span>,<span class=\"string\">\"value1\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param2\"</span>,<span class=\"string\">\"value2\"</span>));</div><div class=\"line\">UrlEncodedFormEntity entity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(params,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>响应控制器?</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt; handler = <span class=\"keyword\">new</span> ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt;()&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] handleResponse(HttpResonse response) <span class=\"keyword\">throws</span> ClientProtocolException,IOException&#123;</div><div class=\"line\">        HttpEntity entity = response.getEntity();</div><div class=\"line\">        <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EntityUtils.toByteArray(entity);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] response = httpClient.execute(httpGet,handler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpRequestRetryHandler myRetryHandler = <span class=\"keyword\">new</span> HttpRequestRetryHandler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">retryRequest</span><span class=\"params\">(IOException e,<span class=\"keyword\">int</span> executionCount,HttpContext context)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(executionCount &gt;= <span class=\"number\">5</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> NoHttpResponseException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> SSLHandshakeException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> idempotent = !(request <span class=\"keyword\">instanceof</span> HttpEntityEnclosingRequest);</div><div class=\"line\">        <span class=\"keyword\">if</span>(idempotent)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">httpClient.setHttpRequestRetryHandler(myRetryHandler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient2</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpContext localContext = <span class=\"keyword\">new</span> BasicHttpContext();</div><div class=\"line\">AtomicInteger count = <span class=\"keyword\">new</span> AtomicInteger(<span class=\"number\">1</span>);</div><div class=\"line\">localContext.setAttribute(<span class=\"string\">\"count\"</span>,count);</div><div class=\"line\">httpClient.addRequestInterceptor(<span class=\"keyword\">new</span> HttpRequestInterceptor()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(<span class=\"keyword\">final</span> HttpRequest request,<span class=\"keyword\">final</span> HttpContext context)</span> <span class=\"keyword\">throws</span> HttpExeption,IOException</span>&#123;</div><div class=\"line\">        AtomicInteger count = (AtomicInteger)context.getAttribute(<span class=\"string\">\"count\"</span>);</div><div class=\"line\">        request.addHeader(<span class=\"string\">\"count\"</span>,Integer.toString(count.getAndIncrement()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>; i++)&#123;</div><div class=\"line\">    HttpResponse response = httpClient.execute(httpGet,localContext);</div><div class=\"line\">    HttpEntity entity = response.getEntity();</div><div class=\"line\">    <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        entity.consumeContent();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>PlainSocketFactory</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PlainSocketFactory psf = PlainSocketFactory.getSocketFactory();</div><div class=\"line\">Socket socket = psf.createSocket();</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">psf.connectSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">8080</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,params);</div></pre></td></tr></table></figure>\n</li>\n<li><p>SSL</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">TrustManager easyTrustManager = <span class=\"keyword\">new</span> X509TrustManager()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers()&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">SSLContext sslcontext = SSLContext.getInstance(<span class=\"string\">\"TLS\"</span>);</div><div class=\"line\">sslcontext.init(<span class=\"keyword\">null</span>,<span class=\"keyword\">new</span> TrustManager[]&#123;easyTrustManager&#125;,<span class=\"keyword\">null</span>);</div><div class=\"line\">SSLSocketFactory sf = <span class=\"keyword\">new</span> SSLSocketFactory(sslcontext);</div><div class=\"line\">SSLSocket socket = (SSLSocket)sf.createSocket();</div><div class=\"line\">socket.setEnabledCipherSuites(<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"SSL_RSA_WITH_RC4_128_MD5\"</span>&#125;);</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">sf.connectionSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">443</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,parmas);</div></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>Http</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//HttpClient:</span></div><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">HttpResponse response = httpClient.execute(httpGet);</div><div class=\"line\">HttpEntity entity = response.getEntity();</div><div class=\"line\"><span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    InputStream inputStream = entity.getContent();</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2048</span>];</div><div class=\"line\">    String temp = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">while</span>((length = inputStream.read(buffer)) != -<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        temp = <span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,length);</div><div class=\"line\">        builder.append(temp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请求参数的几种常用方法</span></div><div class=\"line\"><span class=\"comment\">//HttpGet</span></div><div class=\"line\"></div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://www.google.com/search?hl=en&amp;q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)</span></div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,<span class=\"string\">\"q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());    <span class=\"comment\">//这个和上面HttpGet的URL是一样的</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通过List&lt;NameValuePair&gt;提交参数</span></div><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"q\"</span>,<span class=\"string\">\"httpClient\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"btnG\"</span>,<span class=\"string\">\"Google Search\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"aq\"</span>,<span class=\"string\">\"f\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"oq\"</span>,<span class=\"keyword\">null</span>));</div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,URLEncodedUtils.format(params,<span class=\"string\">\"UTF-8\"</span>),<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());</div><div class=\"line\"></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.getProtocolVersion()                    <span class=\"comment\">//协议版本</span></div><div class=\"line\">response.getStatusLine().getStatusCode();        <span class=\"comment\">//响应状态码</span></div><div class=\"line\">response.getStatusLine().getReasonPhrase();        <span class=\"comment\">//响应状态字符串</span></div><div class=\"line\">response.getStatusLine().toString();            <span class=\"comment\">//响应全报文</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//响应头</span></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c1=a; path=/; domain=localhost\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\"</span>);</div><div class=\"line\">Header h1 = response.getFirstHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\">Header h2 = response.getLastHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\"><span class=\"comment\">//遍历方法1</span></div><div class=\"line\">Header[] hs = response.getHeaders(<span class=\"string\">\"Set-Cookie\"</span>);                </div><div class=\"line\"><span class=\"comment\">//遍历方法2</span></div><div class=\"line\">HeaderIterator it = response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>);        </div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    System.out.println(it.next());</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//遍历方法3</span></div><div class=\"line\">HeaderElementIterator it = <span class=\"keyword\">new</span> BasicHeaderElementIterator(response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>));</div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    HeaderElement element = it.nextElement();</div><div class=\"line\">    NameValuePair[] params = element.getParameters();</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; params.length; i++)&#123;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>FileEntiry</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"somefile.txt\"</span>);</div><div class=\"line\">FileEntity entity = <span class=\"keyword\">new</span> FileEntity(file,<span class=\"string\">\"text/plain; charset=\\\"UTF-8\\\"\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/action.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>ContentProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentProducer contentProducer = <span class=\"keyword\">new</span> ContentProducer()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outStream)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</div><div class=\"line\">        Writer writer = <span class=\"keyword\">new</span> OutputStreamWriter(outStream,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;response&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    important stuff\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;/content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;/response&gt;\"</span>);</div><div class=\"line\">        writer.flush();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">HttpEntity entity = <span class=\"keyword\">new</span> EntityTemplate(contentProducer);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML表单</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param1\"</span>,<span class=\"string\">\"value1\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param2\"</span>,<span class=\"string\">\"value2\"</span>));</div><div class=\"line\">UrlEncodedFormEntity entity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(params,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>响应控制器?</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt; handler = <span class=\"keyword\">new</span> ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt;()&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] handleResponse(HttpResonse response) <span class=\"keyword\">throws</span> ClientProtocolException,IOException&#123;</div><div class=\"line\">        HttpEntity entity = response.getEntity();</div><div class=\"line\">        <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EntityUtils.toByteArray(entity);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] response = httpClient.execute(httpGet,handler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpRequestRetryHandler myRetryHandler = <span class=\"keyword\">new</span> HttpRequestRetryHandler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">retryRequest</span><span class=\"params\">(IOException e,<span class=\"keyword\">int</span> executionCount,HttpContext context)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(executionCount &gt;= <span class=\"number\">5</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> NoHttpResponseException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> SSLHandshakeException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> idempotent = !(request <span class=\"keyword\">instanceof</span> HttpEntityEnclosingRequest);</div><div class=\"line\">        <span class=\"keyword\">if</span>(idempotent)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">httpClient.setHttpRequestRetryHandler(myRetryHandler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient2</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpContext localContext = <span class=\"keyword\">new</span> BasicHttpContext();</div><div class=\"line\">AtomicInteger count = <span class=\"keyword\">new</span> AtomicInteger(<span class=\"number\">1</span>);</div><div class=\"line\">localContext.setAttribute(<span class=\"string\">\"count\"</span>,count);</div><div class=\"line\">httpClient.addRequestInterceptor(<span class=\"keyword\">new</span> HttpRequestInterceptor()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(<span class=\"keyword\">final</span> HttpRequest request,<span class=\"keyword\">final</span> HttpContext context)</span> <span class=\"keyword\">throws</span> HttpExeption,IOException</span>&#123;</div><div class=\"line\">        AtomicInteger count = (AtomicInteger)context.getAttribute(<span class=\"string\">\"count\"</span>);</div><div class=\"line\">        request.addHeader(<span class=\"string\">\"count\"</span>,Integer.toString(count.getAndIncrement()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>; i++)&#123;</div><div class=\"line\">    HttpResponse response = httpClient.execute(httpGet,localContext);</div><div class=\"line\">    HttpEntity entity = response.getEntity();</div><div class=\"line\">    <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        entity.consumeContent();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>PlainSocketFactory</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PlainSocketFactory psf = PlainSocketFactory.getSocketFactory();</div><div class=\"line\">Socket socket = psf.createSocket();</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">psf.connectSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">8080</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,params);</div></pre></td></tr></table></figure>\n</li>\n<li><p>SSL</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">TrustManager easyTrustManager = <span class=\"keyword\">new</span> X509TrustManager()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers()&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">SSLContext sslcontext = SSLContext.getInstance(<span class=\"string\">\"TLS\"</span>);</div><div class=\"line\">sslcontext.init(<span class=\"keyword\">null</span>,<span class=\"keyword\">new</span> TrustManager[]&#123;easyTrustManager&#125;,<span class=\"keyword\">null</span>);</div><div class=\"line\">SSLSocketFactory sf = <span class=\"keyword\">new</span> SSLSocketFactory(sslcontext);</div><div class=\"line\">SSLSocket socket = (SSLSocket)sf.createSocket();</div><div class=\"line\">socket.setEnabledCipherSuites(<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"SSL_RSA_WITH_RC4_128_MD5\"</span>&#125;);</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">sf.connectionSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">443</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,parmas);</div></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"背光亮度设置后待机界面快捷图标不会随之变化","date":"2017-09-22T03:23:09.000Z","_content":"packages/apps/Settings/src/com/android/settings/BrightnessPreference.java\n``` Java\nonDialogClosed(){\n    ...\n    getContext().sendBroadcast(new Intent(\"action.update_brightness\"));\t//发送广播\n    ...\n}\n```\n\npackages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java\n``` Java\nonReceiver(){\n    else if(\"action.update_brightness\".equals(action)){\n        ...//接收广播\n    }\n}\n\n```\n\n//在packages/apps/Settings/AndroidManifest.xml文件中添加\n``` Java\n<receiver android:name=\".widget.SettingsAppWidgetProvider\">\n    <action android:name=\"action.update_brightness\"/>\n</receiver>\n```","source":"_posts/背光亮度设置后待机界面快捷图标不会随之变化.md","raw":"---\ntitle: 背光亮度设置后待机界面快捷图标不会随之变化\ndate: 2017-09-22 11:23:09\ntags:\n---\npackages/apps/Settings/src/com/android/settings/BrightnessPreference.java\n``` Java\nonDialogClosed(){\n    ...\n    getContext().sendBroadcast(new Intent(\"action.update_brightness\"));\t//发送广播\n    ...\n}\n```\n\npackages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java\n``` Java\nonReceiver(){\n    else if(\"action.update_brightness\".equals(action)){\n        ...//接收广播\n    }\n}\n\n```\n\n//在packages/apps/Settings/AndroidManifest.xml文件中添加\n``` Java\n<receiver android:name=\".widget.SettingsAppWidgetProvider\">\n    <action android:name=\"action.update_brightness\"/>\n</receiver>\n```","slug":"背光亮度设置后待机界面快捷图标不会随之变化","published":1,"updated":"2017-09-22T03:57:45.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbs002aardxijsojn2c","content":"<p>packages/apps/Settings/src/com/android/settings/BrightnessPreference.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onDialogClosed()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"action.update_brightness\"</span>));\t<span class=\"comment\">//发送广播</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onReceiver()&#123;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">\"action.update_brightness\"</span>.equals(action))&#123;</div><div class=\"line\">        ...<span class=\"comment\">//接收广播</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//在packages/apps/Settings/AndroidManifest.xml文件中添加<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;receiver android:name=<span class=\"string\">\".widget.SettingsAppWidgetProvider\"</span>&gt;</div><div class=\"line\">    &lt;action android:name=<span class=\"string\">\"action.update_brightness\"</span>/&gt;</div><div class=\"line\">&lt;/receiver&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Settings/src/com/android/settings/BrightnessPreference.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onDialogClosed()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"action.update_brightness\"</span>));\t<span class=\"comment\">//发送广播</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onReceiver()&#123;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">\"action.update_brightness\"</span>.equals(action))&#123;</div><div class=\"line\">        ...<span class=\"comment\">//接收广播</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//在packages/apps/Settings/AndroidManifest.xml文件中添加<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;receiver android:name=<span class=\"string\">\".widget.SettingsAppWidgetProvider\"</span>&gt;</div><div class=\"line\">    &lt;action android:name=<span class=\"string\">\"action.update_brightness\"</span>/&gt;</div><div class=\"line\">&lt;/receiver&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"联系人编辑界面上的号码输入框无法输入加号","date":"2017-09-21T08:57:34.000Z","_content":"### 问题分析:\n> \n可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法\n\npackages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java\n``` Java\npublic boolean onLongClick(View view) {\n    ......\n    case R.id.zero: {\n        removePreviousDigitIfPossible();        //删除之前输入的 \"0\"\n        keyPressed(KeyEvent.KEYCODE_PLUS);      //输入 \"+\"\n        stopTone();\n        mPressedDialpadKeys.remove(view);\n        return true;\n    }\n    ......\n}\nprivate void removePreviousDigitIfPossible() {\n    final Editable editable = mDigits.getText();\n    final int currentPosition = mDigits.getSelectionStart();\n    if (currentPosition > 0) {\n        mDigits.setSelection(currentPosition);\n        mDigits.getText().delete(currentPosition - 1, currentPosition);\n    }\n}\nprivate void keyPressed(int keyCode) {\n    ......\n    mDigits.onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入\n    final int length = mDigits.length();\n    if (length == mDigits.getSelectionStart() && length == mDigits.getSelectionEnd()) {\n        mDigits.setCursorVisible(false);\n    }\n    mDigits.setCursorVisible(true);\n}\n```\n\n但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件\n```\npublic class DigitsEditText extends EditText {\n    public DigitsEditText(Context context) {\n        super(context);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    public DigitsEditText(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    @Override\n    public boolean dispatchKeyEvent(KeyEvent event) {\n        if(event.getRepeatCount() > 0 && lockLongPressKey){\n            if(KeyEvent.KEYCODE_0 <= event.getKeyCode() && event.getKeyCode() <= KeyEvent.KEYCODE_9){\n                return true;\n            }else if(KeyEvent.KEYCODE_STAR == event.getKeyCode()){\n                return true;\n            }else if(KeyEvent.KEYCODE_POUND == event.getKeyCode()){\n                return true;\n            }\n        }\n        return super.dispatchKeyEvent(event);\n    }\n    private boolean lockLongPressKey = false;\n    private final static int MSG_LONG_CLICK = 777;\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if(event.getRepeatCount() > 0 && !lockLongPressKey){\n            event.startTracking();\n            lockLongPressKey = true;\n            Message msg = new Message();\n            msg.what = MSG_LONG_CLICK;\n            msg.arg1 = keyCode;\n            handler.sendMessageDelayed(msg, 500);\n            return true;\n        }\n        return super.onKeyDown(keyCode, event);\n    }\n    private Handler handler = new Handler(){\n        public void handleMessage(Message msg){\n            if(msg.what == MSG_LONG_CLICK){\n                if(mOnKeyLongClickListener != null){\n                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);\n                }\n            }\n        }\n    };\n    public interface OnKeyLongClickListener{\n        public void onKeyLongClick(int keyCode);\n    }\n    private OnKeyLongClickListener mOnKeyLongClickListener;\n    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener){\n        mOnKeyLongClickListener = onKeyLongClickListener;\n    }\n    @Override\n    public boolean onKeyUp(int keyCode, KeyEvent event) {\n        if(lockLongPressKey){\n            lockLongPressKey = false;\n            handler.removeMessages(MSG_LONG_CLICK);\n            return true;\n        }\n        return super.onKeyUp(keyCode, event);\n    }\n}\n```\n### 长按 onKey 方法的实现原理如下:\n> \na. 在 onKeyDown() 的时候发送一个延时500ms的消息\nb. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件\n","source":"_posts/联系人编辑界面上的号码输入框无法输入加号.md","raw":"---\ntitle: 联系人编辑界面上的号码输入框无法输入加号\ndate: 2017-09-21 16:57:34\ntags:\n---\n### 问题分析:\n> \n可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法\n\npackages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java\n``` Java\npublic boolean onLongClick(View view) {\n    ......\n    case R.id.zero: {\n        removePreviousDigitIfPossible();        //删除之前输入的 \"0\"\n        keyPressed(KeyEvent.KEYCODE_PLUS);      //输入 \"+\"\n        stopTone();\n        mPressedDialpadKeys.remove(view);\n        return true;\n    }\n    ......\n}\nprivate void removePreviousDigitIfPossible() {\n    final Editable editable = mDigits.getText();\n    final int currentPosition = mDigits.getSelectionStart();\n    if (currentPosition > 0) {\n        mDigits.setSelection(currentPosition);\n        mDigits.getText().delete(currentPosition - 1, currentPosition);\n    }\n}\nprivate void keyPressed(int keyCode) {\n    ......\n    mDigits.onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入\n    final int length = mDigits.length();\n    if (length == mDigits.getSelectionStart() && length == mDigits.getSelectionEnd()) {\n        mDigits.setCursorVisible(false);\n    }\n    mDigits.setCursorVisible(true);\n}\n```\n\n但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件\n```\npublic class DigitsEditText extends EditText {\n    public DigitsEditText(Context context) {\n        super(context);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    public DigitsEditText(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    @Override\n    public boolean dispatchKeyEvent(KeyEvent event) {\n        if(event.getRepeatCount() > 0 && lockLongPressKey){\n            if(KeyEvent.KEYCODE_0 <= event.getKeyCode() && event.getKeyCode() <= KeyEvent.KEYCODE_9){\n                return true;\n            }else if(KeyEvent.KEYCODE_STAR == event.getKeyCode()){\n                return true;\n            }else if(KeyEvent.KEYCODE_POUND == event.getKeyCode()){\n                return true;\n            }\n        }\n        return super.dispatchKeyEvent(event);\n    }\n    private boolean lockLongPressKey = false;\n    private final static int MSG_LONG_CLICK = 777;\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if(event.getRepeatCount() > 0 && !lockLongPressKey){\n            event.startTracking();\n            lockLongPressKey = true;\n            Message msg = new Message();\n            msg.what = MSG_LONG_CLICK;\n            msg.arg1 = keyCode;\n            handler.sendMessageDelayed(msg, 500);\n            return true;\n        }\n        return super.onKeyDown(keyCode, event);\n    }\n    private Handler handler = new Handler(){\n        public void handleMessage(Message msg){\n            if(msg.what == MSG_LONG_CLICK){\n                if(mOnKeyLongClickListener != null){\n                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);\n                }\n            }\n        }\n    };\n    public interface OnKeyLongClickListener{\n        public void onKeyLongClick(int keyCode);\n    }\n    private OnKeyLongClickListener mOnKeyLongClickListener;\n    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener){\n        mOnKeyLongClickListener = onKeyLongClickListener;\n    }\n    @Override\n    public boolean onKeyUp(int keyCode, KeyEvent event) {\n        if(lockLongPressKey){\n            lockLongPressKey = false;\n            handler.removeMessages(MSG_LONG_CLICK);\n            return true;\n        }\n        return super.onKeyUp(keyCode, event);\n    }\n}\n```\n### 长按 onKey 方法的实现原理如下:\n> \na. 在 onKeyDown() 的时候发送一个延时500ms的消息\nb. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件\n","slug":"联系人编辑界面上的号码输入框无法输入加号","published":1,"updated":"2017-09-21T09:00:29.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbt002bardx6n2xp8jv","content":"<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析:\"></a>问题分析:</h3><blockquote>\n<p>可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法</p>\n</blockquote>\n<p>packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"keyword\">case</span> R.id.zero: &#123;</div><div class=\"line\">        removePreviousDigitIfPossible();        <span class=\"comment\">//删除之前输入的 \"0\"</span></div><div class=\"line\">        keyPressed(KeyEvent.KEYCODE_PLUS);      <span class=\"comment\">//输入 \"+\"</span></div><div class=\"line\">        stopTone();</div><div class=\"line\">        mPressedDialpadKeys.remove(view);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">removePreviousDigitIfPossible</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Editable editable = mDigits.getText();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> currentPosition = mDigits.getSelectionStart();</div><div class=\"line\">    <span class=\"keyword\">if</span> (currentPosition &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        mDigits.setSelection(currentPosition);</div><div class=\"line\">        mDigits.getText().delete(currentPosition - <span class=\"number\">1</span>, currentPosition);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    mDigits.onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));<span class=\"comment\">//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> length = mDigits.length();</div><div class=\"line\">    <span class=\"keyword\">if</span> (length == mDigits.getSelectionStart() &amp;&amp; length == mDigits.getSelectionEnd()) &#123;</div><div class=\"line\">        mDigits.setCursorVisible(<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mDigits.setCursorVisible(<span class=\"keyword\">true</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DigitsEditText extends EditText &#123;</div><div class=\"line\">    public DigitsEditText(Context context) &#123;</div><div class=\"line\">        super(context);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    public DigitsEditText(Context context, AttributeSet attrs) &#123;</div><div class=\"line\">        super(context, attrs);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean dispatchKeyEvent(KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; lockLongPressKey)&#123;</div><div class=\"line\">            if(KeyEvent.KEYCODE_0 &lt;= event.getKeyCode() &amp;&amp; event.getKeyCode() &lt;= KeyEvent.KEYCODE_9)&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_STAR == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_POUND == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.dispatchKeyEvent(event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private boolean lockLongPressKey = false;</div><div class=\"line\">    private final static int MSG_LONG_CLICK = 777;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; !lockLongPressKey)&#123;</div><div class=\"line\">            event.startTracking();</div><div class=\"line\">            lockLongPressKey = true;</div><div class=\"line\">            Message msg = new Message();</div><div class=\"line\">            msg.what = MSG_LONG_CLICK;</div><div class=\"line\">            msg.arg1 = keyCode;</div><div class=\"line\">            handler.sendMessageDelayed(msg, 500);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyDown(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private Handler handler = new Handler()&#123;</div><div class=\"line\">        public void handleMessage(Message msg)&#123;</div><div class=\"line\">            if(msg.what == MSG_LONG_CLICK)&#123;</div><div class=\"line\">                if(mOnKeyLongClickListener != null)&#123;</div><div class=\"line\">                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    public interface OnKeyLongClickListener&#123;</div><div class=\"line\">        public void onKeyLongClick(int keyCode);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private OnKeyLongClickListener mOnKeyLongClickListener;</div><div class=\"line\">    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener)&#123;</div><div class=\"line\">        mOnKeyLongClickListener = onKeyLongClickListener;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyUp(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(lockLongPressKey)&#123;</div><div class=\"line\">            lockLongPressKey = false;</div><div class=\"line\">            handler.removeMessages(MSG_LONG_CLICK);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyUp(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"长按-onKey-方法的实现原理如下\"><a href=\"#长按-onKey-方法的实现原理如下\" class=\"headerlink\" title=\"长按 onKey 方法的实现原理如下:\"></a>长按 onKey 方法的实现原理如下:</h3><blockquote>\n<p>a. 在 onKeyDown() 的时候发送一个延时500ms的消息<br>b. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析:\"></a>问题分析:</h3><blockquote>\n<p>可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法</p>\n</blockquote>\n<p>packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"keyword\">case</span> R.id.zero: &#123;</div><div class=\"line\">        removePreviousDigitIfPossible();        <span class=\"comment\">//删除之前输入的 \"0\"</span></div><div class=\"line\">        keyPressed(KeyEvent.KEYCODE_PLUS);      <span class=\"comment\">//输入 \"+\"</span></div><div class=\"line\">        stopTone();</div><div class=\"line\">        mPressedDialpadKeys.remove(view);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">removePreviousDigitIfPossible</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Editable editable = mDigits.getText();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> currentPosition = mDigits.getSelectionStart();</div><div class=\"line\">    <span class=\"keyword\">if</span> (currentPosition &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        mDigits.setSelection(currentPosition);</div><div class=\"line\">        mDigits.getText().delete(currentPosition - <span class=\"number\">1</span>, currentPosition);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    mDigits.onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));<span class=\"comment\">//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> length = mDigits.length();</div><div class=\"line\">    <span class=\"keyword\">if</span> (length == mDigits.getSelectionStart() &amp;&amp; length == mDigits.getSelectionEnd()) &#123;</div><div class=\"line\">        mDigits.setCursorVisible(<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mDigits.setCursorVisible(<span class=\"keyword\">true</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DigitsEditText extends EditText &#123;</div><div class=\"line\">    public DigitsEditText(Context context) &#123;</div><div class=\"line\">        super(context);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    public DigitsEditText(Context context, AttributeSet attrs) &#123;</div><div class=\"line\">        super(context, attrs);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean dispatchKeyEvent(KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; lockLongPressKey)&#123;</div><div class=\"line\">            if(KeyEvent.KEYCODE_0 &lt;= event.getKeyCode() &amp;&amp; event.getKeyCode() &lt;= KeyEvent.KEYCODE_9)&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_STAR == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_POUND == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.dispatchKeyEvent(event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private boolean lockLongPressKey = false;</div><div class=\"line\">    private final static int MSG_LONG_CLICK = 777;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; !lockLongPressKey)&#123;</div><div class=\"line\">            event.startTracking();</div><div class=\"line\">            lockLongPressKey = true;</div><div class=\"line\">            Message msg = new Message();</div><div class=\"line\">            msg.what = MSG_LONG_CLICK;</div><div class=\"line\">            msg.arg1 = keyCode;</div><div class=\"line\">            handler.sendMessageDelayed(msg, 500);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyDown(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private Handler handler = new Handler()&#123;</div><div class=\"line\">        public void handleMessage(Message msg)&#123;</div><div class=\"line\">            if(msg.what == MSG_LONG_CLICK)&#123;</div><div class=\"line\">                if(mOnKeyLongClickListener != null)&#123;</div><div class=\"line\">                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    public interface OnKeyLongClickListener&#123;</div><div class=\"line\">        public void onKeyLongClick(int keyCode);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private OnKeyLongClickListener mOnKeyLongClickListener;</div><div class=\"line\">    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener)&#123;</div><div class=\"line\">        mOnKeyLongClickListener = onKeyLongClickListener;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyUp(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(lockLongPressKey)&#123;</div><div class=\"line\">            lockLongPressKey = false;</div><div class=\"line\">            handler.removeMessages(MSG_LONG_CLICK);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyUp(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"长按-onKey-方法的实现原理如下\"><a href=\"#长按-onKey-方法的实现原理如下\" class=\"headerlink\" title=\"长按 onKey 方法的实现原理如下:\"></a>长按 onKey 方法的实现原理如下:</h3><blockquote>\n<p>a. 在 onKeyDown() 的时候发送一个延时500ms的消息<br>b. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件</p>\n</blockquote>\n"},{"title":"自定义EditText的光标颜色","date":"2017-09-21T05:36:32.000Z","_content":"### 方法一、通过XML文件设置\nTextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的\nandroid:textCursorDrawable=\"@null\"，\"@null\"作用是让光标颜色和text color一样\n\n也可以自定义游标的颜色\ncolor_cursor.xml\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">\n    <size android:width=\"1dp\" />\n    <solid android:color=\"#008000\" />\n</shape>\n```\n使用如下:\n``` xml\n<EditText android:textCursorDrawable=\"@drawable/color_cursor\" />\n```\n\n方法二、通过代码设置\n遗憾的是 TextView 默认没有设置游标颜色的方法\n在 TextView.java 中找到\n``` Java\n    case com.android.internal.R.styleable.TextView_textCursorDrawable:\n        mCursorDrawableRes = a.getResourceId(attr, 0);\n        break;\n        ...\nint mCursorDrawableRes;     //这个值是不可以被直接访问的\n```\n\n于是就想到可以使用反射来设置游标的颜色\n``` Java\ntry {\n    Field f = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n    f.setAccessible(true);\n    f.set(editText, R.drawable.cursor_color);\n} catch (Exception ignored) {\n}\n```\n\n也可以使用如下封装好的方法\n``` Java\nprivate void setTextCursorColor(TextView et, int color){\n    try {\n        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n        fCursorDrawableRes.setAccessible(true);\n        int mCursorDrawableRes = fCursorDrawableRes.getInt(et);\n        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(\"mEditor\");\n        fEditor.setAccessible(true);\n        Object editor = fEditor.get(et);\n        Class<?> clazz = editor.getClass();\n        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(\"mCursorDrawable\");\n        fCursorDrawable.setAccessible(true);\n        android.graphics.drawable.Drawable[] drawables = new android.graphics.drawable.Drawable[1];\n        drawables[0] = et.getContext().getResources().getDrawable(mCursorDrawableRes);\n        drawables[0].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);\n        fCursorDrawable.set(editor, drawables);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```","source":"_posts/自定义EditText的光标颜色.md","raw":"---\ntitle: 自定义EditText的光标颜色\ndate: 2017-09-21 13:36:32\ntags:\n---\n### 方法一、通过XML文件设置\nTextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的\nandroid:textCursorDrawable=\"@null\"，\"@null\"作用是让光标颜色和text color一样\n\n也可以自定义游标的颜色\ncolor_cursor.xml\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">\n    <size android:width=\"1dp\" />\n    <solid android:color=\"#008000\" />\n</shape>\n```\n使用如下:\n``` xml\n<EditText android:textCursorDrawable=\"@drawable/color_cursor\" />\n```\n\n方法二、通过代码设置\n遗憾的是 TextView 默认没有设置游标颜色的方法\n在 TextView.java 中找到\n``` Java\n    case com.android.internal.R.styleable.TextView_textCursorDrawable:\n        mCursorDrawableRes = a.getResourceId(attr, 0);\n        break;\n        ...\nint mCursorDrawableRes;     //这个值是不可以被直接访问的\n```\n\n于是就想到可以使用反射来设置游标的颜色\n``` Java\ntry {\n    Field f = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n    f.setAccessible(true);\n    f.set(editText, R.drawable.cursor_color);\n} catch (Exception ignored) {\n}\n```\n\n也可以使用如下封装好的方法\n``` Java\nprivate void setTextCursorColor(TextView et, int color){\n    try {\n        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n        fCursorDrawableRes.setAccessible(true);\n        int mCursorDrawableRes = fCursorDrawableRes.getInt(et);\n        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(\"mEditor\");\n        fEditor.setAccessible(true);\n        Object editor = fEditor.get(et);\n        Class<?> clazz = editor.getClass();\n        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(\"mCursorDrawable\");\n        fCursorDrawable.setAccessible(true);\n        android.graphics.drawable.Drawable[] drawables = new android.graphics.drawable.Drawable[1];\n        drawables[0] = et.getContext().getResources().getDrawable(mCursorDrawableRes);\n        drawables[0].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);\n        fCursorDrawable.set(editor, drawables);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```","slug":"自定义EditText的光标颜色","published":1,"updated":"2017-09-22T00:58:22.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbt002cardxucepyl92","content":"<h3 id=\"方法一、通过XML文件设置\"><a href=\"#方法一、通过XML文件设置\" class=\"headerlink\" title=\"方法一、通过XML文件设置\"></a>方法一、通过XML文件设置</h3><p>TextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的<br>android:textCursorDrawable=”@null”，”@null”作用是让光标颜色和text color一样</p>\n<p>也可以自定义游标的颜色<br>color_cursor.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#008000\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>使用如下:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span> <span class=\"attr\">android:textCursorDrawable</span>=<span class=\"string\">\"@drawable/color_cursor\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>方法二、通过代码设置<br>遗憾的是 TextView 默认没有设置游标颜色的方法<br>在 TextView.java 中找到<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">case</span> com.android.internal.R.styleable.TextView_textCursorDrawable:</div><div class=\"line\">        mCursorDrawableRes = a.getResourceId(attr, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        ...</div><div class=\"line\"><span class=\"keyword\">int</span> mCursorDrawableRes;     <span class=\"comment\">//这个值是不可以被直接访问的</span></div></pre></td></tr></table></figure></p>\n<p>于是就想到可以使用反射来设置游标的颜色<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Field f = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">    f.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">    f.set(editText, R.drawable.cursor_color);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception ignored) &#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>也可以使用如下封装好的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setTextCursorColor</span><span class=\"params\">(TextView et, <span class=\"keyword\">int</span> color)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">        fCursorDrawableRes.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> mCursorDrawableRes = fCursorDrawableRes.getInt(et);</div><div class=\"line\">        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(<span class=\"string\">\"mEditor\"</span>);</div><div class=\"line\">        fEditor.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        Object editor = fEditor.get(et);</div><div class=\"line\">        Class&lt;?&gt; clazz = editor.getClass();</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(<span class=\"string\">\"mCursorDrawable\"</span>);</div><div class=\"line\">        fCursorDrawable.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        android.graphics.drawable.Drawable[] drawables = <span class=\"keyword\">new</span> android.graphics.drawable.Drawable[<span class=\"number\">1</span>];</div><div class=\"line\">        drawables[<span class=\"number\">0</span>] = et.getContext().getResources().getDrawable(mCursorDrawableRes);</div><div class=\"line\">        drawables[<span class=\"number\">0</span>].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);</div><div class=\"line\">        fCursorDrawable.set(editor, drawables);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法一、通过XML文件设置\"><a href=\"#方法一、通过XML文件设置\" class=\"headerlink\" title=\"方法一、通过XML文件设置\"></a>方法一、通过XML文件设置</h3><p>TextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的<br>android:textCursorDrawable=”@null”，”@null”作用是让光标颜色和text color一样</p>\n<p>也可以自定义游标的颜色<br>color_cursor.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#008000\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>使用如下:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span> <span class=\"attr\">android:textCursorDrawable</span>=<span class=\"string\">\"@drawable/color_cursor\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>方法二、通过代码设置<br>遗憾的是 TextView 默认没有设置游标颜色的方法<br>在 TextView.java 中找到<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">case</span> com.android.internal.R.styleable.TextView_textCursorDrawable:</div><div class=\"line\">        mCursorDrawableRes = a.getResourceId(attr, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        ...</div><div class=\"line\"><span class=\"keyword\">int</span> mCursorDrawableRes;     <span class=\"comment\">//这个值是不可以被直接访问的</span></div></pre></td></tr></table></figure></p>\n<p>于是就想到可以使用反射来设置游标的颜色<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Field f = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">    f.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">    f.set(editText, R.drawable.cursor_color);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception ignored) &#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>也可以使用如下封装好的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setTextCursorColor</span><span class=\"params\">(TextView et, <span class=\"keyword\">int</span> color)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">        fCursorDrawableRes.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> mCursorDrawableRes = fCursorDrawableRes.getInt(et);</div><div class=\"line\">        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(<span class=\"string\">\"mEditor\"</span>);</div><div class=\"line\">        fEditor.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        Object editor = fEditor.get(et);</div><div class=\"line\">        Class&lt;?&gt; clazz = editor.getClass();</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(<span class=\"string\">\"mCursorDrawable\"</span>);</div><div class=\"line\">        fCursorDrawable.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        android.graphics.drawable.Drawable[] drawables = <span class=\"keyword\">new</span> android.graphics.drawable.Drawable[<span class=\"number\">1</span>];</div><div class=\"line\">        drawables[<span class=\"number\">0</span>] = et.getContext().getResources().getDrawable(mCursorDrawableRes);</div><div class=\"line\">        drawables[<span class=\"number\">0</span>].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);</div><div class=\"line\">        fCursorDrawable.set(editor, drawables);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"解析assets文件夹下的xml文件","date":"2017-09-22T02:47:01.000Z","_content":"``` Java\nSAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(\"apns-conf.xml\"), apnHandler);\n```","source":"_posts/解析assets文件夹下的xml文件.md","raw":"---\ntitle: 解析assets文件夹下的xml文件\ndate: 2017-09-22 10:47:01\ntags:\n---\n``` Java\nSAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(\"apns-conf.xml\"), apnHandler);\n```","slug":"解析assets文件夹下的xml文件","published":1,"updated":"2017-09-22T02:47:16.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbu002dardxlzodaiqh","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(<span class=\"string\">\"apns-conf.xml\"</span>), apnHandler);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(<span class=\"string\">\"apns-conf.xml\"</span>), apnHandler);</div></pre></td></tr></table></figure>"},{"title":"获取SIM卡的IMSI号码","date":"2017-09-22T02:38:33.000Z","_content":"//强哥的方法\n``` Java\nTelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);\nString mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);\n```\n//MTK的方法\n``` Java\nimport com.android.internal.telephony.Phone;\nimport com.android.internal.telephony.PhoneFactory;\nimport com.android.internal.telephony.RIL;\nprivate static final int EVENT_GET_IMSI_DONE = 1;\n\nPhone phone = PhoneFactory.getDefaultPhone();\nphone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));\npublic void handleMessage(Message msg) {\n    switch (msg.what){\n        case EVENT_GET_IMSI_DONE:\n            isRecordLoadResponse = true;\n            ar = (AsyncResult)msg.obj;\n            if (ar.exception != null) {\n                Log.e(LOG_TAG, \"Exception querying IMSI, Exception:\" + ar.exception);\n                break;\n            }\n            imsi = (String) ar.result;\n            Log.d(LOG_TAG, \"IMSI: \" + imsi.substring(0, 6) + \"xxxxxxx\");\n            break;\n        default:\n            break;\n    }\n}\n```","source":"_posts/获取SIM卡的IMSI号码.md","raw":"---\ntitle: 获取SIM卡的IMSI号码\ndate: 2017-09-22 10:38:33\ntags:\n---\n//强哥的方法\n``` Java\nTelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);\nString mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);\n```\n//MTK的方法\n``` Java\nimport com.android.internal.telephony.Phone;\nimport com.android.internal.telephony.PhoneFactory;\nimport com.android.internal.telephony.RIL;\nprivate static final int EVENT_GET_IMSI_DONE = 1;\n\nPhone phone = PhoneFactory.getDefaultPhone();\nphone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));\npublic void handleMessage(Message msg) {\n    switch (msg.what){\n        case EVENT_GET_IMSI_DONE:\n            isRecordLoadResponse = true;\n            ar = (AsyncResult)msg.obj;\n            if (ar.exception != null) {\n                Log.e(LOG_TAG, \"Exception querying IMSI, Exception:\" + ar.exception);\n                break;\n            }\n            imsi = (String) ar.result;\n            Log.d(LOG_TAG, \"IMSI: \" + imsi.substring(0, 6) + \"xxxxxxx\");\n            break;\n        default:\n            break;\n    }\n}\n```","slug":"获取SIM卡的IMSI号码","published":1,"updated":"2017-09-22T02:40:30.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbu002eardx32o1vej1","content":"<p>//强哥的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);</div><div class=\"line\">String mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);</div></pre></td></tr></table></figure></p>\n<p>//MTK的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.Phone;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.PhoneFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.RIL;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> EVENT_GET_IMSI_DONE = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">Phone phone = PhoneFactory.getDefaultPhone();</div><div class=\"line\">phone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (msg.what)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> EVENT_GET_IMSI_DONE:</div><div class=\"line\">            isRecordLoadResponse = <span class=\"keyword\">true</span>;</div><div class=\"line\">            ar = (AsyncResult)msg.obj;</div><div class=\"line\">            <span class=\"keyword\">if</span> (ar.exception != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                Log.e(LOG_TAG, <span class=\"string\">\"Exception querying IMSI, Exception:\"</span> + ar.exception);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            imsi = (String) ar.result;</div><div class=\"line\">            Log.d(LOG_TAG, <span class=\"string\">\"IMSI: \"</span> + imsi.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) + <span class=\"string\">\"xxxxxxx\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//强哥的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);</div><div class=\"line\">String mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);</div></pre></td></tr></table></figure></p>\n<p>//MTK的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.Phone;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.PhoneFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.RIL;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> EVENT_GET_IMSI_DONE = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">Phone phone = PhoneFactory.getDefaultPhone();</div><div class=\"line\">phone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (msg.what)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> EVENT_GET_IMSI_DONE:</div><div class=\"line\">            isRecordLoadResponse = <span class=\"keyword\">true</span>;</div><div class=\"line\">            ar = (AsyncResult)msg.obj;</div><div class=\"line\">            <span class=\"keyword\">if</span> (ar.exception != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                Log.e(LOG_TAG, <span class=\"string\">\"Exception querying IMSI, Exception:\"</span> + ar.exception);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            imsi = (String) ar.result;</div><div class=\"line\">            Log.d(LOG_TAG, <span class=\"string\">\"IMSI: \"</span> + imsi.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) + <span class=\"string\">\"xxxxxxx\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"解析res/drawable下图片的另一种方式","date":"2017-09-25T06:42:58.000Z","_content":"``` Java\nif(width == 540) {\n    path = \"/res/drawable-960x540/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 480){\n    path = \"/res/drawable-800x480/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 720){\n    path = \"/res/drawable-1280x720/paillette_\" + pailletteIndex + \".png\";\n}else{\n    path = \"/res/drawable/paillette_\" + pailletteIndex + \".png\"; \n}    \npaillette_array[0] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\n```","source":"_posts/解析res-drawable下图片的另一种方式.md","raw":"---\ntitle: 解析res/drawable下图片的另一种方式\ndate: 2017-09-25 14:42:58\ntags:\n---\n``` Java\nif(width == 540) {\n    path = \"/res/drawable-960x540/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 480){\n    path = \"/res/drawable-800x480/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 720){\n    path = \"/res/drawable-1280x720/paillette_\" + pailletteIndex + \".png\";\n}else{\n    path = \"/res/drawable/paillette_\" + pailletteIndex + \".png\"; \n}    \npaillette_array[0] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\n```","slug":"解析res-drawable下图片的另一种方式","published":1,"updated":"2017-09-25T06:43:52.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbv002fardxnp53bhjl","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(width == <span class=\"number\">540</span>) &#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-960x540/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">480</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-800x480/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">720</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-1280x720/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;    </div><div class=\"line\">paillette_array[<span class=\"number\">0</span>] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(width == <span class=\"number\">540</span>) &#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-960x540/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">480</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-800x480/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">720</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-1280x720/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;    </div><div class=\"line\">paillette_array[<span class=\"number\">0</span>] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));</div></pre></td></tr></table></figure>"},{"title":"设置seekbar每一格的进度","date":"2017-09-21T08:49:12.000Z","_content":"``` Java\nSeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);\nmSlider.setKeyProgressIncrement(val);\n```","source":"_posts/设置seekbar每一格的进度.md","raw":"---\ntitle: 设置seekbar每一格的进度\ndate: 2017-09-21 16:49:12\ntags:\n---\n``` Java\nSeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);\nmSlider.setKeyProgressIncrement(val);\n```","slug":"设置seekbar每一格的进度","published":1,"updated":"2017-09-21T08:49:55.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbv002gardxn4aln4c2","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);</div><div class=\"line\">mSlider.setKeyProgressIncrement(val);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);</div><div class=\"line\">mSlider.setKeyProgressIncrement(val);</div></pre></td></tr></table></figure>"},{"title":"通过代码创建快捷方式","date":"2017-09-21T06:12:51.000Z","_content":"``` Java\nprivate void createShortcut(String title, String url) {\n    Intent intent = new Intent(INSTALL_SHORTCUT);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, \"Baidu\");\n    Intent shortcutIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    long urlHash = url.hashCode();\n    long uniqueId = (urlHash << 32) | shortcutIntent.hashCode();\n    shortcutIntent.putExtra(\"com.android.browser.application_id\", Long.toString(uniqueId));\n    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));\n    sendBroadcast(intent);\n}\n```","source":"_posts/通过代码创建快捷方式.md","raw":"---\ntitle: 通过代码创建快捷方式\ndate: 2017-09-21 14:12:51\ntags:\n---\n``` Java\nprivate void createShortcut(String title, String url) {\n    Intent intent = new Intent(INSTALL_SHORTCUT);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, \"Baidu\");\n    Intent shortcutIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    long urlHash = url.hashCode();\n    long uniqueId = (urlHash << 32) | shortcutIntent.hashCode();\n    shortcutIntent.putExtra(\"com.android.browser.application_id\", Long.toString(uniqueId));\n    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));\n    sendBroadcast(intent);\n}\n```","slug":"通过代码创建快捷方式","published":1,"updated":"2017-09-21T06:13:35.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbw002hardxjsizfo90","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createShortcut</span><span class=\"params\">(String title, String url)</span> </span>&#123;</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(INSTALL_SHORTCUT);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, <span class=\"string\">\"Baidu\"</span>);</div><div class=\"line\">    Intent shortcutIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url));</div><div class=\"line\">    <span class=\"keyword\">long</span> urlHash = url.hashCode();</div><div class=\"line\">    <span class=\"keyword\">long</span> uniqueId = (urlHash &lt;&lt; <span class=\"number\">32</span>) | shortcutIntent.hashCode();</div><div class=\"line\">    shortcutIntent.putExtra(<span class=\"string\">\"com.android.browser.application_id\"</span>, Long.toString(uniqueId));</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));</div><div class=\"line\">    sendBroadcast(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createShortcut</span><span class=\"params\">(String title, String url)</span> </span>&#123;</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(INSTALL_SHORTCUT);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, <span class=\"string\">\"Baidu\"</span>);</div><div class=\"line\">    Intent shortcutIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url));</div><div class=\"line\">    <span class=\"keyword\">long</span> urlHash = url.hashCode();</div><div class=\"line\">    <span class=\"keyword\">long</span> uniqueId = (urlHash &lt;&lt; <span class=\"number\">32</span>) | shortcutIntent.hashCode();</div><div class=\"line\">    shortcutIntent.putExtra(<span class=\"string\">\"com.android.browser.application_id\"</span>, Long.toString(uniqueId));</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));</div><div class=\"line\">    sendBroadcast(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"通过代码动态设置view的selector","date":"2017-09-21T06:09:58.000Z","_content":"``` Java\nprivate StateListDrawable getStateDrawable(Context context, int normalId, int focusedId, int pressedId) {\n    StateListDrawable stateListDrawable = new StateListDrawable();\n    Drawable normalDrawable = normalId == -1 ? null : context.getResources().getDrawable(normalId);\n    Drawable focusedDrawable = focusedId == -1 ? null : context.getResources().getDrawable(focusedId);\n    Drawable pressedDrawable = pressedId == -1 ? null : context.getResources().getDrawable(pressedId);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled }, normalDrawable);\n    stateListDrawable.addState(new int[] {}, normalDrawable);\n    return stateListDrawable;\n}\n```\n使用方法如下:\n```\nbtn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));\n```","source":"_posts/通过代码动态设置view的selector.md","raw":"---\ntitle: 通过代码动态设置view的selector\ndate: 2017-09-21 14:09:58\ntags:\n---\n``` Java\nprivate StateListDrawable getStateDrawable(Context context, int normalId, int focusedId, int pressedId) {\n    StateListDrawable stateListDrawable = new StateListDrawable();\n    Drawable normalDrawable = normalId == -1 ? null : context.getResources().getDrawable(normalId);\n    Drawable focusedDrawable = focusedId == -1 ? null : context.getResources().getDrawable(focusedId);\n    Drawable pressedDrawable = pressedId == -1 ? null : context.getResources().getDrawable(pressedId);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled }, normalDrawable);\n    stateListDrawable.addState(new int[] {}, normalDrawable);\n    return stateListDrawable;\n}\n```\n使用方法如下:\n```\nbtn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));\n```","slug":"通过代码动态设置view的selector","published":1,"updated":"2017-09-21T06:10:52.597Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbw002iardxrcmh0n10","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> StateListDrawable <span class=\"title\">getStateDrawable</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> normalId, <span class=\"keyword\">int</span> focusedId, <span class=\"keyword\">int</span> pressedId)</span> </span>&#123;</div><div class=\"line\">    StateListDrawable stateListDrawable = <span class=\"keyword\">new</span> StateListDrawable();</div><div class=\"line\">    Drawable normalDrawable = normalId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(normalId);</div><div class=\"line\">    Drawable focusedDrawable = focusedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(focusedId);</div><div class=\"line\">    Drawable pressedDrawable = pressedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(pressedId);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled &#125;, normalDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123;&#125;, normalDrawable);</div><div class=\"line\">    <span class=\"keyword\">return</span> stateListDrawable;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">btn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> StateListDrawable <span class=\"title\">getStateDrawable</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> normalId, <span class=\"keyword\">int</span> focusedId, <span class=\"keyword\">int</span> pressedId)</span> </span>&#123;</div><div class=\"line\">    StateListDrawable stateListDrawable = <span class=\"keyword\">new</span> StateListDrawable();</div><div class=\"line\">    Drawable normalDrawable = normalId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(normalId);</div><div class=\"line\">    Drawable focusedDrawable = focusedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(focusedId);</div><div class=\"line\">    Drawable pressedDrawable = pressedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(pressedId);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled &#125;, normalDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123;&#125;, normalDrawable);</div><div class=\"line\">    <span class=\"keyword\">return</span> stateListDrawable;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">btn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));</div></pre></td></tr></table></figure></p>\n"},{"title":"通过代码模拟触屏和按键事件","date":"2017-09-21T06:03:52.000Z","_content":"### 模拟触屏事件\n>tips:必须在子线程中运行\n\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 240, 600, 0));\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 240, 600, 0));\n```\n\n### 模拟长按事件\n``` Java\npublic static void longClickView(InstrumentationTestCase test, View v) {\n    int[] xy = new int[2];\n    v.getLocationOnScreen(xy);\n\n    final int viewWidth = v.getWidth();\n    final int viewHeight = v.getHeight();\n\n    final float x = xy[0] + (viewWidth / 2.0f);\n    float y = xy[1] + (viewHeight / 2.0f);\n\n    Instrumentation inst = test.getInstrumentation();\n\n    long downTime = SystemClock.uptimeMillis();\n    long eventTime = SystemClock.uptimeMillis();\n\n    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    eventTime = SystemClock.uptimeMillis();\n    final int touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / 2, y + touchSlop / 2, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    try {\n        Thread.sleep((long)(ViewConfiguration.getLongPressTimeout() * 1.5f));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    eventTime = SystemClock.uptimeMillis();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n}\n```\n### 模拟按键事件\n#### 方法a.\n``` Java\nnew EditText(context).onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t//模拟按键的点击事件,这里必须需要一个EditText才可以\n```\n#### 方法b.\n``` Java\n//这个也可以通过命令行发送\tadb shell input keyevent 82\nProcess process = Runtime.getRuntime().exec(\"input keyevent 82\");\t\t\t\t\t\t//模拟按键的点击事件,82相当于上面的keyCode\n```\n#### 方法c.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);\n```\n#### 方法d.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));\n```","source":"_posts/通过代码模拟触屏和按键事件.md","raw":"---\ntitle: 通过代码模拟触屏和按键事件\ndate: 2017-09-21 14:03:52\ntags:\n---\n### 模拟触屏事件\n>tips:必须在子线程中运行\n\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 240, 600, 0));\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 240, 600, 0));\n```\n\n### 模拟长按事件\n``` Java\npublic static void longClickView(InstrumentationTestCase test, View v) {\n    int[] xy = new int[2];\n    v.getLocationOnScreen(xy);\n\n    final int viewWidth = v.getWidth();\n    final int viewHeight = v.getHeight();\n\n    final float x = xy[0] + (viewWidth / 2.0f);\n    float y = xy[1] + (viewHeight / 2.0f);\n\n    Instrumentation inst = test.getInstrumentation();\n\n    long downTime = SystemClock.uptimeMillis();\n    long eventTime = SystemClock.uptimeMillis();\n\n    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    eventTime = SystemClock.uptimeMillis();\n    final int touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / 2, y + touchSlop / 2, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    try {\n        Thread.sleep((long)(ViewConfiguration.getLongPressTimeout() * 1.5f));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    eventTime = SystemClock.uptimeMillis();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n}\n```\n### 模拟按键事件\n#### 方法a.\n``` Java\nnew EditText(context).onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t//模拟按键的点击事件,这里必须需要一个EditText才可以\n```\n#### 方法b.\n``` Java\n//这个也可以通过命令行发送\tadb shell input keyevent 82\nProcess process = Runtime.getRuntime().exec(\"input keyevent 82\");\t\t\t\t\t\t//模拟按键的点击事件,82相当于上面的keyCode\n```\n#### 方法c.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);\n```\n#### 方法d.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));\n```","slug":"通过代码模拟触屏和按键事件","published":1,"updated":"2017-09-21T07:33:42.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbx002jardxvkh8ur81","content":"<h3 id=\"模拟触屏事件\"><a href=\"#模拟触屏事件\" class=\"headerlink\" title=\"模拟触屏事件\"></a>模拟触屏事件</h3><blockquote>\n<p>tips:必须在子线程中运行</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div></pre></td></tr></table></figure>\n<h3 id=\"模拟长按事件\"><a href=\"#模拟长按事件\" class=\"headerlink\" title=\"模拟长按事件\"></a>模拟长按事件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">longClickView</span><span class=\"params\">(InstrumentationTestCase test, View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] xy = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</div><div class=\"line\">    v.getLocationOnScreen(xy);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewWidth = v.getWidth();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewHeight = v.getHeight();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> x = xy[<span class=\"number\">0</span>] + (viewWidth / <span class=\"number\">2.0f</span>);</div><div class=\"line\">    <span class=\"keyword\">float</span> y = xy[<span class=\"number\">1</span>] + (viewHeight / <span class=\"number\">2.0f</span>);</div><div class=\"line\"></div><div class=\"line\">    Instrumentation inst = test.getInstrumentation();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">long</span> downTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">long</span> eventTime = SystemClock.uptimeMillis();</div><div class=\"line\"></div><div class=\"line\">    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / <span class=\"number\">2</span>, y + touchSlop / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Thread.sleep((<span class=\"keyword\">long</span>)(ViewConfiguration.getLongPressTimeout() * <span class=\"number\">1.5f</span>));</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"模拟按键事件\"><a href=\"#模拟按键事件\" class=\"headerlink\" title=\"模拟按键事件\"></a>模拟按键事件</h3><h4 id=\"方法a\"><a href=\"#方法a\" class=\"headerlink\" title=\"方法a.\"></a>方法a.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> EditText(context).onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t<span class=\"comment\">//模拟按键的点击事件,这里必须需要一个EditText才可以</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法b\"><a href=\"#方法b\" class=\"headerlink\" title=\"方法b.\"></a>方法b.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这个也可以通过命令行发送\tadb shell input keyevent 82</span></div><div class=\"line\">Process process = Runtime.getRuntime().exec(<span class=\"string\">\"input keyevent 82\"</span>);\t\t\t\t\t\t<span class=\"comment\">//模拟按键的点击事件,82相当于上面的keyCode</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法c\"><a href=\"#方法c\" class=\"headerlink\" title=\"方法c.\"></a>方法c.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);</div></pre></td></tr></table></figure>\n<h4 id=\"方法d\"><a href=\"#方法d\" class=\"headerlink\" title=\"方法d.\"></a>方法d.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"模拟触屏事件\"><a href=\"#模拟触屏事件\" class=\"headerlink\" title=\"模拟触屏事件\"></a>模拟触屏事件</h3><blockquote>\n<p>tips:必须在子线程中运行</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div></pre></td></tr></table></figure>\n<h3 id=\"模拟长按事件\"><a href=\"#模拟长按事件\" class=\"headerlink\" title=\"模拟长按事件\"></a>模拟长按事件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">longClickView</span><span class=\"params\">(InstrumentationTestCase test, View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] xy = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</div><div class=\"line\">    v.getLocationOnScreen(xy);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewWidth = v.getWidth();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewHeight = v.getHeight();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> x = xy[<span class=\"number\">0</span>] + (viewWidth / <span class=\"number\">2.0f</span>);</div><div class=\"line\">    <span class=\"keyword\">float</span> y = xy[<span class=\"number\">1</span>] + (viewHeight / <span class=\"number\">2.0f</span>);</div><div class=\"line\"></div><div class=\"line\">    Instrumentation inst = test.getInstrumentation();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">long</span> downTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">long</span> eventTime = SystemClock.uptimeMillis();</div><div class=\"line\"></div><div class=\"line\">    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / <span class=\"number\">2</span>, y + touchSlop / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Thread.sleep((<span class=\"keyword\">long</span>)(ViewConfiguration.getLongPressTimeout() * <span class=\"number\">1.5f</span>));</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"模拟按键事件\"><a href=\"#模拟按键事件\" class=\"headerlink\" title=\"模拟按键事件\"></a>模拟按键事件</h3><h4 id=\"方法a\"><a href=\"#方法a\" class=\"headerlink\" title=\"方法a.\"></a>方法a.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> EditText(context).onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t<span class=\"comment\">//模拟按键的点击事件,这里必须需要一个EditText才可以</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法b\"><a href=\"#方法b\" class=\"headerlink\" title=\"方法b.\"></a>方法b.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这个也可以通过命令行发送\tadb shell input keyevent 82</span></div><div class=\"line\">Process process = Runtime.getRuntime().exec(<span class=\"string\">\"input keyevent 82\"</span>);\t\t\t\t\t\t<span class=\"comment\">//模拟按键的点击事件,82相当于上面的keyCode</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法c\"><a href=\"#方法c\" class=\"headerlink\" title=\"方法c.\"></a>方法c.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);</div></pre></td></tr></table></figure>\n<h4 id=\"方法d\"><a href=\"#方法d\" class=\"headerlink\" title=\"方法d.\"></a>方法d.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));</div></pre></td></tr></table></figure>"},{"title":"通过反射修改全局默认字体","date":"2017-09-29T05:11:42.000Z","_content":"在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。\n\n完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。\n\n``` Java\nprivate final static String CUSTOM_FONT = \"fonts/custom_font.ttf\";\npublic static void changeDefaultFont(Context ctx){\n    try{\n        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);\n        Field defaultField = Typeface.class.getDeclaredField(\"SERIF\");\n        defaultField.setAccessible(true);\n        defaultField.set(null, typeface);\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}\n```","source":"_posts/通过反射修改全局默认字体.md","raw":"---\ntitle: 通过反射修改全局默认字体\ndate: 2017-09-29 13:11:42\ntags:\n---\n在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。\n\n完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。\n\n``` Java\nprivate final static String CUSTOM_FONT = \"fonts/custom_font.ttf\";\npublic static void changeDefaultFont(Context ctx){\n    try{\n        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);\n        Field defaultField = Typeface.class.getDeclaredField(\"SERIF\");\n        defaultField.setAccessible(true);\n        defaultField.set(null, typeface);\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}\n```","slug":"通过反射修改全局默认字体","published":1,"updated":"2017-09-29T05:14:59.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbx002kardxjtqrytl0","content":"<p>在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。</p>\n<p>完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String CUSTOM_FONT = <span class=\"string\">\"fonts/custom_font.ttf\"</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">changeDefaultFont</span><span class=\"params\">(Context ctx)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);</div><div class=\"line\">        Field defaultField = Typeface.class.getDeclaredField(<span class=\"string\">\"SERIF\"</span>);</div><div class=\"line\">        defaultField.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        defaultField.set(<span class=\"keyword\">null</span>, typeface);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。</p>\n<p>完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String CUSTOM_FONT = <span class=\"string\">\"fonts/custom_font.ttf\"</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">changeDefaultFont</span><span class=\"params\">(Context ctx)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);</div><div class=\"line\">        Field defaultField = Typeface.class.getDeclaredField(<span class=\"string\">\"SERIF\"</span>);</div><div class=\"line\">        defaultField.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        defaultField.set(<span class=\"keyword\">null</span>, typeface);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"配置AGPS","date":"2017-09-22T05:34:36.000Z","_content":"[FAQ03537](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ03537)\npackages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java\n``` Java\nonCreate(){\n    ...\n    //这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中\n    mAgpsProfileManager.updateAgpsProfile(\"/etc/agps_profiles_conf.xml\");\n    ...\n}\n```\n添加一个AGPS\n``` Java\n<agps_profile code=\"Nextel Localización\"\n    slp_name=\"Nextel Localización\"\n    backup_slp_name_var=\"Nextel_SPL_Name\"\n    address=\"supl.nexteldata.com.mx\"\n    port=\"7275\"\n    tls=\"1\"\n    show_type=\"0\"\n/>\n```\n修改默认AGPS\n``` Java\n<agps_conf_para \n    ...\n    default_profile=\"Nextel Localización\"     //修改这个地方\n    ...\n/>\n```","source":"_posts/配置AGPS.md","raw":"---\ntitle: 配置AGPS\ndate: 2017-09-22 13:34:36\ntags:\n---\n[FAQ03537](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ03537)\npackages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java\n``` Java\nonCreate(){\n    ...\n    //这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中\n    mAgpsProfileManager.updateAgpsProfile(\"/etc/agps_profiles_conf.xml\");\n    ...\n}\n```\n添加一个AGPS\n``` Java\n<agps_profile code=\"Nextel Localización\"\n    slp_name=\"Nextel Localización\"\n    backup_slp_name_var=\"Nextel_SPL_Name\"\n    address=\"supl.nexteldata.com.mx\"\n    port=\"7275\"\n    tls=\"1\"\n    show_type=\"0\"\n/>\n```\n修改默认AGPS\n``` Java\n<agps_conf_para \n    ...\n    default_profile=\"Nextel Localización\"     //修改这个地方\n    ...\n/>\n```","slug":"配置AGPS","published":1,"updated":"2017-09-22T05:36:52.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzby002lardxyhf2mluq","content":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ03537\" target=\"_blank\" rel=\"external\">FAQ03537</a><br>packages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"comment\">//这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中</span></div><div class=\"line\">    mAgpsProfileManager.updateAgpsProfile(<span class=\"string\">\"/etc/agps_profiles_conf.xml\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>添加一个AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_profile code=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    slp_name=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    backup_slp_name_var=<span class=\"string\">\"Nextel_SPL_Name\"</span></div><div class=\"line\">    address=<span class=\"string\">\"supl.nexteldata.com.mx\"</span></div><div class=\"line\">    port=<span class=\"string\">\"7275\"</span></div><div class=\"line\">    tls=<span class=\"string\">\"1\"</span></div><div class=\"line\">    show_type=<span class=\"string\">\"0\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<p>修改默认AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_conf_para </div><div class=\"line\">    ...</div><div class=\"line\">    default_profile=<span class=\"string\">\"Nextel Localización\"</span>     <span class=\"comment\">//修改这个地方</span></div><div class=\"line\">    ...</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ03537\" target=\"_blank\" rel=\"external\">FAQ03537</a><br>packages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"comment\">//这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中</span></div><div class=\"line\">    mAgpsProfileManager.updateAgpsProfile(<span class=\"string\">\"/etc/agps_profiles_conf.xml\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>添加一个AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_profile code=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    slp_name=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    backup_slp_name_var=<span class=\"string\">\"Nextel_SPL_Name\"</span></div><div class=\"line\">    address=<span class=\"string\">\"supl.nexteldata.com.mx\"</span></div><div class=\"line\">    port=<span class=\"string\">\"7275\"</span></div><div class=\"line\">    tls=<span class=\"string\">\"1\"</span></div><div class=\"line\">    show_type=<span class=\"string\">\"0\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<p>修改默认AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_conf_para </div><div class=\"line\">    ...</div><div class=\"line\">    default_profile=<span class=\"string\">\"Nextel Localización\"</span>     <span class=\"comment\">//修改这个地方</span></div><div class=\"line\">    ...</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"通过反射获取FeatureOption中的所有字段的值","date":"2017-09-25T06:48:36.000Z","_content":"``` Java\nprivate String getFields() {\n    StringBuilder builder = new StringBuilder();\n    try {\n        Class clazz = Class.forName(\"com.mediatek.common.featureoption.FeatureOption\");  //通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值\n        Field[] fields = clazz.getDeclaredFields();\n        for (int i = 0; i < fields.length; i++) {\n            if (\"boolean\".equalsIgnoreCase(fields[i].getType().getName())) {\n                Log.e(\"test\", fields[i].getName() + \":\" + fields[i].getBoolean(clazz));\n                builder.append(fields[i].getName() + \":\" + fields[i].getBoolean(clazz) + \"\\n\");\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return builder.toString();\n}\n```","source":"_posts/通过反射获取FeatureOption中的所有字段的值.md","raw":"---\ntitle: 通过反射获取FeatureOption中的所有字段的值\ndate: 2017-09-25 14:48:36\ntags:\n---\n``` Java\nprivate String getFields() {\n    StringBuilder builder = new StringBuilder();\n    try {\n        Class clazz = Class.forName(\"com.mediatek.common.featureoption.FeatureOption\");  //通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值\n        Field[] fields = clazz.getDeclaredFields();\n        for (int i = 0; i < fields.length; i++) {\n            if (\"boolean\".equalsIgnoreCase(fields[i].getType().getName())) {\n                Log.e(\"test\", fields[i].getName() + \":\" + fields[i].getBoolean(clazz));\n                builder.append(fields[i].getName() + \":\" + fields[i].getBoolean(clazz) + \"\\n\");\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return builder.toString();\n}\n```","slug":"通过反射获取FeatureOption中的所有字段的值","published":1,"updated":"2017-09-25T06:49:24.483Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbz002mardxjqjzkzqn","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFields</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Class clazz = Class.forName(<span class=\"string\">\"com.mediatek.common.featureoption.FeatureOption\"</span>);  <span class=\"comment\">//通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值</span></div><div class=\"line\">        Field[] fields = clazz.getDeclaredFields();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">\"boolean\"</span>.equalsIgnoreCase(fields[i].getType().getName())) &#123;</div><div class=\"line\">                Log.e(<span class=\"string\">\"test\"</span>, fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz));</div><div class=\"line\">                builder.append(fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz) + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> builder.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFields</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Class clazz = Class.forName(<span class=\"string\">\"com.mediatek.common.featureoption.FeatureOption\"</span>);  <span class=\"comment\">//通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值</span></div><div class=\"line\">        Field[] fields = clazz.getDeclaredFields();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">\"boolean\"</span>.equalsIgnoreCase(fields[i].getType().getName())) &#123;</div><div class=\"line\">                Log.e(<span class=\"string\">\"test\"</span>, fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz));</div><div class=\"line\">                builder.append(fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz) + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> builder.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"隐藏QuickSettings中的AutoRotate菜单","date":"2017-09-22T02:26:49.000Z","_content":"frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java\n``` Java\nif (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) {\n    parent.addView(rotationLockTile);\n    rotationLockTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n} else {\n    parent.addView(autoRotateTile);\n    autoRotateTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n}\n```","source":"_posts/隐藏QuickSettings中的AutoRotate菜单.md","raw":"---\ntitle: 隐藏QuickSettings中的AutoRotate菜单\ndate: 2017-09-22 10:26:49\ntags:\n---\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java\n``` Java\nif (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) {\n    parent.addView(rotationLockTile);\n    rotationLockTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n} else {\n    parent.addView(autoRotateTile);\n    autoRotateTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n}\n```","slug":"隐藏QuickSettings中的AutoRotate菜单","published":1,"updated":"2017-09-22T02:27:26.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzbz002nardx93ipan9c","content":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) &#123;</div><div class=\"line\">    parent.addView(rotationLockTile);</div><div class=\"line\">    rotationLockTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    parent.addView(autoRotateTile);</div><div class=\"line\">    autoRotateTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) &#123;</div><div class=\"line\">    parent.addView(rotationLockTile);</div><div class=\"line\">    rotationLockTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    parent.addView(autoRotateTile);</div><div class=\"line\">    autoRotateTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"隐藏三个点的Overflow菜单","date":"2017-09-21T05:23:56.000Z","_content":"frameworks/base/core/java/android/view/ViewConfiguration.java\n``` Java\npublic boolean hasPermanentMenuKey() {\n    // return sHasPermanentMenuKey;\n    if(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU){\n    \treturn sHasPermanentMenuKey;\n    }else{\n    \treturn false; //add menu key\n    }\n}\n```","source":"_posts/隐藏三个点的Overflow菜单.md","raw":"---\ntitle: 隐藏三个点的Overflow菜单\ndate: 2017-09-21 13:23:56\ntags:\n---\nframeworks/base/core/java/android/view/ViewConfiguration.java\n``` Java\npublic boolean hasPermanentMenuKey() {\n    // return sHasPermanentMenuKey;\n    if(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU){\n    \treturn sHasPermanentMenuKey;\n    }else{\n    \treturn false; //add menu key\n    }\n}\n```","slug":"隐藏三个点的Overflow菜单","published":1,"updated":"2017-09-21T06:01:45.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzc0002oardxeuo6z1fs","content":"<p>frameworks/base/core/java/android/view/ViewConfiguration.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPermanentMenuKey</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// return sHasPermanentMenuKey;</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> sHasPermanentMenuKey;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; <span class=\"comment\">//add menu key</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/core/java/android/view/ViewConfiguration.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPermanentMenuKey</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// return sHasPermanentMenuKey;</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> sHasPermanentMenuKey;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; <span class=\"comment\">//add menu key</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"预置桌面快捷方式","date":"2017-09-21T08:51:19.000Z","_content":"launcher:uri 可以通过launcher的数据库查看\n``` xml\n<shortcut\n    launcher:uri=\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"\n    launcher:icon=\"@drawable/ic_launcher_application\"\n    launcher:title=\"@string/jinshan_title\" \n    launcher:screen=\"\"\n    launcher:x=\"\"\n    launcher:y=\"\"/>\n```","source":"_posts/预置桌面快捷方式.md","raw":"---\ntitle: 预置桌面快捷方式\ndate: 2017-09-21 16:51:19\ntags:\n---\nlauncher:uri 可以通过launcher的数据库查看\n``` xml\n<shortcut\n    launcher:uri=\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"\n    launcher:icon=\"@drawable/ic_launcher_application\"\n    launcher:title=\"@string/jinshan_title\" \n    launcher:screen=\"\"\n    launcher:x=\"\"\n    launcher:y=\"\"/>\n```","slug":"预置桌面快捷方式","published":1,"updated":"2017-09-21T08:53:08.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzc0002pardxk7euukpt","content":"<p>launcher:uri 可以通过launcher的数据库查看<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shortcut</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:uri</span>=<span class=\"string\">\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:icon</span>=<span class=\"string\">\"@drawable/ic_launcher_application\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:title</span>=<span class=\"string\">\"@string/jinshan_title\"</span> </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:screen</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:x</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:y</span>=<span class=\"string\">\"\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>launcher:uri 可以通过launcher的数据库查看<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shortcut</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:uri</span>=<span class=\"string\">\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:icon</span>=<span class=\"string\">\"@drawable/ic_launcher_application\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:title</span>=<span class=\"string\">\"@string/jinshan_title\"</span> </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:screen</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:x</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:y</span>=<span class=\"string\">\"\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"预置了PDFViewer之后会报错","date":"2017-09-22T02:28:20.000Z","_content":"报错log如下:\n```\n12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main\n12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918\n12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn't load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/system/app/Pdfviewer.apk\"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)\n```\n\n需要将PDFViewer中的lib库提取出来，编译进去\n``` Makefile\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFgenerator\nLOCAL_SRC_FILES := libs/libLCEFgenerator.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFnativeU\nLOCAL_SRC_FILES := libs/libLCEFnativeU.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n```","source":"_posts/预置了PDFViewer之后会报错.md","raw":"---\ntitle: 预置了PDFViewer之后会报错\ndate: 2017-09-22 10:28:20\ntags:\n---\n报错log如下:\n```\n12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main\n12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918\n12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn't load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/system/app/Pdfviewer.apk\"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)\n```\n\n需要将PDFViewer中的lib库提取出来，编译进去\n``` Makefile\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFgenerator\nLOCAL_SRC_FILES := libs/libLCEFgenerator.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFnativeU\nLOCAL_SRC_FILES := libs/libLCEFnativeU.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n```","slug":"预置了PDFViewer之后会报错","published":1,"updated":"2017-09-22T02:29:25.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzc1002qardxf5l0wury","content":"<p>报错log如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn&apos;t load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/system/app/Pdfviewer.apk&quot;],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)</div></pre></td></tr></table></figure></p>\n<p>需要将PDFViewer中的lib库提取出来，编译进去<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFgenerator</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFgenerator.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFnativeU</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFnativeU.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>报错log如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn&apos;t load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/system/app/Pdfviewer.apk&quot;],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)</div></pre></td></tr></table></figure></p>\n<p>需要将PDFViewer中的lib库提取出来，编译进去<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFgenerator</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFgenerator.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFnativeU</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFnativeU.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div></pre></td></tr></table></figure></p>\n"},{"title":"默认打开wifi热点","date":"2017-09-25T07:20:04.000Z","_content":"[FAQ10275](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ10275)怎样默认打开便携式WIFI热点 \n\n\n//frameworks/base/services/java/com/android/server/wifi/WifiService.java\n``` Java\npublic void checkAndStartSoftAp() {\t\t\t\t\t\t\t\t\t\t//在 WifiService 中添加这个方法\n    mWifiStateMachine.autoConnectInit();\n    boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, 0) != 0;\n    if (mWifiStateMachine.hasCustomizedAutoConnect() && isAirplaneModeOn) {\n        SXlog.i(TAG, \"Don't enable softAp when airplane mode is on for customization.\");\n    } else {\n        Slog.i(TAG, \"WifiService starting up with softAp\");\n        setWifiApEnabled(null, true);\n    }\n}\n```\n\n//frameworks/base/services/java/com/android/server/SystemServer.java\n在 initAndLoop() 方法中将\n``` Java\nwifi.checkAndStartWifi();\n```\n替换为\n``` Java\nwifi.checkAndStartSoftAp();\t\t//调用上面添加的方法\n```","source":"_posts/默认打开wifi热点.md","raw":"---\ntitle: 默认打开wifi热点\ndate: 2017-09-25 15:20:04\ntags:\n---\n[FAQ10275](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ10275)怎样默认打开便携式WIFI热点 \n\n\n//frameworks/base/services/java/com/android/server/wifi/WifiService.java\n``` Java\npublic void checkAndStartSoftAp() {\t\t\t\t\t\t\t\t\t\t//在 WifiService 中添加这个方法\n    mWifiStateMachine.autoConnectInit();\n    boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, 0) != 0;\n    if (mWifiStateMachine.hasCustomizedAutoConnect() && isAirplaneModeOn) {\n        SXlog.i(TAG, \"Don't enable softAp when airplane mode is on for customization.\");\n    } else {\n        Slog.i(TAG, \"WifiService starting up with softAp\");\n        setWifiApEnabled(null, true);\n    }\n}\n```\n\n//frameworks/base/services/java/com/android/server/SystemServer.java\n在 initAndLoop() 方法中将\n``` Java\nwifi.checkAndStartWifi();\n```\n替换为\n``` Java\nwifi.checkAndStartSoftAp();\t\t//调用上面添加的方法\n```","slug":"默认打开wifi热点","published":1,"updated":"2017-09-25T07:24:29.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzc2002rardx8w93c1da","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ10275\" target=\"_blank\" rel=\"external\">FAQ10275</a>怎样默认打开便携式WIFI热点 </p>\n<p>//frameworks/base/services/java/com/android/server/wifi/WifiService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkAndStartSoftAp</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//在 WifiService 中添加这个方法</span></div><div class=\"line\">    mWifiStateMachine.autoConnectInit();</div><div class=\"line\">    <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, <span class=\"number\">0</span>) != <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWifiStateMachine.hasCustomizedAutoConnect() &amp;&amp; isAirplaneModeOn) &#123;</div><div class=\"line\">        SXlog.i(TAG, <span class=\"string\">\"Don't enable softAp when airplane mode is on for customization.\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"WifiService starting up with softAp\"</span>);</div><div class=\"line\">        setWifiApEnabled(<span class=\"keyword\">null</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//frameworks/base/services/java/com/android/server/SystemServer.java<br>在 initAndLoop() 方法中将<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartWifi();</div></pre></td></tr></table></figure></p>\n<p>替换为<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartSoftAp();\t\t<span class=\"comment\">//调用上面添加的方法</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ10275\" target=\"_blank\" rel=\"external\">FAQ10275</a>怎样默认打开便携式WIFI热点 </p>\n<p>//frameworks/base/services/java/com/android/server/wifi/WifiService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkAndStartSoftAp</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//在 WifiService 中添加这个方法</span></div><div class=\"line\">    mWifiStateMachine.autoConnectInit();</div><div class=\"line\">    <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, <span class=\"number\">0</span>) != <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWifiStateMachine.hasCustomizedAutoConnect() &amp;&amp; isAirplaneModeOn) &#123;</div><div class=\"line\">        SXlog.i(TAG, <span class=\"string\">\"Don't enable softAp when airplane mode is on for customization.\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"WifiService starting up with softAp\"</span>);</div><div class=\"line\">        setWifiApEnabled(<span class=\"keyword\">null</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//frameworks/base/services/java/com/android/server/SystemServer.java<br>在 initAndLoop() 方法中将<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartWifi();</div></pre></td></tr></table></figure></p>\n<p>替换为<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartSoftAp();\t\t<span class=\"comment\">//调用上面添加的方法</span></div></pre></td></tr></table></figure></p>\n"},{"title":"面试题集合","date":"2017-10-11T01:55:06.000Z","_content":"### 阿里巴巴\nLRUCache原理\n图片加载原理\n模块化实现（好处，原因）\nJVM\n视频加密传输\n统计启动时长,标准\n如何保持应用的稳定性\nThreadLocal 原理\n谈谈classloader\n动态布局\n热修复,插件化\nHashMap源码,SpareArray原理\n性能优化,怎么保证应用启动不卡顿\n怎么去除重复代码\nSP是进程同步的吗?有什么方法做到同步\n介绍下SurfView\nHashMap实现原理，ConcurrentHashMap 的实现原理\nBroadcastReceiver，LocalBroadcastReceiver 区别\nBundle 机制\nHandler 机制\nandroid 事件传递机制\n线程间 操作 List\nApp启动流程，从点击桌面开始\n动态加载\n类加载器\nOSGI\nHttps请求慢的解决办法，DNS，携带数据，直接访问IP\nGC回收策略\n画出 Android 的大体架构图\n描述清点击 Android Studio 的 build 按钮后发生了什么\n大体说清一个应用程序安装到手机上时发生了什么；\n对 Dalvik、ART 虚拟机有基本的了解；\nAndroid 上的 Inter-Process-Communication 跨进程通信时如何工作的；\nApp 是如何沙箱化，为什么要这么做；\n权限管理系统（底层的权限是如何进行 grant 的）\n进程和 Application 的生命周期；\n系统启动流程 Zygote进程 –> SystemServer进程 –> 各种系统服务 –> 应用进程\nrecycleview listview 的区别,性能\n排序，快速排序的实现\n树：B+树的介绍\n图：有向无环图的解释\nTCP/UDP的区别\nsynchronized与Lock的区别\nvolatile\nJava线程池\nJava中对象的生命周期\n类加载机制\n双亲委派模型\nAndroid事件分发机制\nMVP模式\nRxJava\n抽象类和接口的区别\n集合 Set实现 Hash 怎么防止碰撞\nJVM 内存区域 开线程影响哪块内存\n垃圾收集机制 对象创建，新生代与老年代\n二叉树 深度遍历与广度遍历\nB树、B+树\n消息机制\n进程调度\n进程与线程\n死锁\n进程状态\nJVM内存模型\n并发集合了解哪些\nConCurrentHashMap实现\nCAS介绍\n开启线程的三种方式,run()和start()方法区别\n线程池\n常用数据结构简介\n判断环（猜测应该是链表环）\n排序，堆排序实现\n链表反转\n### 腾讯\nsynchronized用法\nvolatile用法\n动态权限适配方案，权限组的概念\n网络请求缓存处理，okhttp如何处理网络缓存的\n图片加载库相关，bitmap如何处理大图，如一张30M的大图，如何预防OOM\n进程保活\nlistview图片加载错乱的原理和解决方案\nhttps相关，如何验证证书的合法性，https中哪里用了对称加密，哪里用了非对称加密，对加密算法（如RSA）等是否有了解\n### 滴滴\nMVP\n广播（动态注册和静态注册区别，有序广播和标准广播）\nservice生命周期\nhandler实现机制（很多细节需要关注：如线程如何建立和退出消息循环等等）\n多线程（关于AsyncTask缺陷引发的思考）\n数据库数据迁移问题\n设计模式相关（例如Android中哪里使用了观察者模式，单例模式相关）\nx个苹果，一天只能吃一个、两个、或者三个，问多少天可以吃完\nTCP与UDP区别与应用（三次握手和四次挥手）涉及到部分细节（如client如何确定自己发送的消息被server收到） HTTP相关 提到过Websocket 问了WebSocket相关以及与socket的区别\n是否熟悉Android jni开发，jni如何调用java层代码\n进程间通信的方式\njava注解\n计算一个view的嵌套层级\n项目组件化的理解\n多线程断点续传原理\nAndroid系统为什么会设计ContentProvider，进程共享和线程安全问题\njvm相关\nAndroid相关优化（如内存优化、网络优化、布局优化、电量优化、业务优化）\nEventBus实现原理\n### 美团\nstatic synchronized 方法的多线程访问和作用，同一个类里面两个synchronized方法，两个线程同时访问的问题\n内部类和静态内部类和匿名内部类，以及项目中的应用\nhandler发消息给子线程，looper怎么启动\nView事件传递\nactivity栈\n封装view的时候怎么知道view的大小\narraylist和linkedlist的区别，以及应用场景\n怎么启动service，service和activity怎么进行数据交互\n下拉状态栏是不是影响activity的生命周期，如果在onStop的时候做了网络请求，onResume的时候怎么恢复\nview渲染\n### 今日头条\n数据结构中堆的概念，堆排序\n死锁的概念，怎么避免死锁\nReentrantLock 、synchronized和volatile（n面）\nHashMap\nsingleTask启动模式\n用到的一些开源框架，介绍一个看过源码的，内部实现过程。\n消息机制实现\nReentrantLock的内部实现\nApp启动崩溃异常捕捉\n事件传递机制的介绍\nListView的优化\n二叉树，给出根节点和目标节点，找出从根节点到目标节点的路径\n模式MVP，MVC介绍\n断点续传的实现\n集合的接口和具体实现类，介绍\nTreeMap具体实现\nsynchronized与ReentrantLock\n手写生产者/消费者模式\n逻辑地址与物理地址，为什么使用逻辑地址\n一个无序，不重复数组，输出N个元素，使得N个元素的和相加为M，给出时间复杂度、空间复杂度。手写算法\nAndroid进程分类\n前台切换到后台，然后再回到前台，Activity生命周期回调方法。弹出Dialog，生命值周期回调方法。\nActivity的启动模式\n### 爱奇艺\nRxJava的功能与原理实现\nRecycleView的使用，原理，RecycleView优化\nANR的原因\n四大组件\nService的开启方式\nActivity与Service通信的方式\nActivity之间的通信方式\nHashMap的实现，与HashSet的区别\nJVM内存模型，内存区域\nJava中同步使用的关键字，死锁\nMVP模式\nJava设计模式，观察者模式\nActivity与Fragment之间生命周期比较\n广播的使用场景\n### 百度\nBitmap 使用时候注意什么？\nOom 是否可以try catch ？\n内存泄露如何产生？\n适配器模式，装饰者模式，外观模式的异同？\nANR 如何产生？\nString buffer 与string builder 的区别？\n如何保证线程安全？\njava四中引用\nJni 用过么？\n多进程场景遇见过么？\n关于handler，在任何地方new handler 都是什么线程下\nsqlite升级，增加字段的语句\nbitmap recycler 相关\n强引用置为null，会不会被回收？\nglide 使用什么缓存？\nGlide 内存缓存如何控制大小？\n如何保证多线程读写文件的安全？\n### 携程\nActivity启动模式\n广播的使用方式，场景\nApp中唤醒其他进程的实现方式\nAndroidManifest的作用与理解\nList,Set,Map的区别\nHashSet与HashMap怎么判断集合元素重复\nJava中内存区域与垃圾回收机制\nEventBus作用，实现方式，代替EventBus的方式\nAndroid中开启摄像头的主要步骤\n### 网易\n集合\nconcurrenthashmap\nvolatile\nsynchronized与Lock\nJava线程池\nwait/notify\nNIO\n垃圾收集器\nActivity生命周期\nAlertDialog,popupWindow,Activity区别\n### 小米\nString 为什么要设计成不可变的？\nfragment 各种情况下的生命周期\nActivity 上有 Dialog 的时候按 home 键时的生命周期\n横竖屏切换的时候，Activity 各种情况下的生命周期\nApplication 和 Activity 的 context 对象的区别\n序列化的作用，以及 Android 两种序列化的区别。\nList 和 Map 的实现方式以及存储方式。\n静态内部类的设计意图。\n线程如何关闭，以及如何防止线程的内存泄漏\n### 360\n软引用、弱引用区别\n垃圾回收\n多线程：怎么用、有什么问题要注意；Android线程有没有上限，然后提到线程池的上限\nJVM\n锁\nOOM，内存泄漏\nANR怎么分析解决\nLinearLayout、RelativeLayout、FrameLayout的特性、使用场景\n如何实现Fragment的滑动\nViewPager使用细节，如何设置成每次只初始化当前的Fragment，其他的不初始化\nListView重用的是什么\n进程间通信的机制\nAIDL机制\nAsyncTask机制\n如何取消AsyncTask\n序列化\nAndroid为什么引入Parcelable\n有没有尝试简化Parcelable的使用\nAIDL机制\n项目：拉活怎么做的\n应用安装过程\n某海外直播公司\n线程和进程的区别？\n为什么要有线程，而不是仅仅用进程？\n算法判断单链表成环与否？\n如何实现线程同步？\nhashmap数据结构？\narraylist 与 linkedlist 异同？\nobject类的equal 和hashcode 方法重写，为什么？\nhashmap如何put数据（从hashmap源码角度讲解）？\n简述IPC？\nfragment之间传递数据的方式？\n简述tcp四次挥手?\nthreadlocal原理\n内存泄漏的可能原因？\n用IDE如何分析内存泄漏？\nOOM的可能原因？\n线程死锁的4个条件？\n差值器&估值器\n简述消息机制相关\n进程间通信方式？\nBinder相关？\n触摸事件的分发？\n简述Activity启动全部过程？\nokhttp源码？\nRxJava简介及其源码解读？\n性能优化如何分析systrace？\n广播的分类？\n点击事件被拦截，但是相传到下面的view，如何操作？\nGlide源码？\nActicityThread相关？\nvolatile的原理\nsynchronize的原理\nlock原理\n翻转一个单项链表\nstring to integer\n合并多个单有序链表（假设都是递增的）\n### 其他公司\n四大组件\nAndroid中数据存储方式\n微信主页面的实现方式\n微信上消息小红点的原理\n两个不重复的数组集合中，求共同的元素。\n上一问扩展，海量数据，内存中放不下，怎么求出。\nJava中String的了解。\nArrayList与LinkedList区别\n堆排序过程，时间复杂度，空间复杂度\n快速排序的时间复杂度，空间复杂度\nRxJava的作用，与平时使用的异步操作来比，优势\nAndroid消息机制原理\nBinder机制介绍\n为什么不能在子线程更新UI\nJVM内存模型\nAndroid中进程内存的分配，能不能自己分配定额内存\n垃圾回收机制与调用System.gc()区别\nAndroid事件分发机制\n断点续传的实现\nRxJava的作用，优缺点","source":"_posts/面试题集合.md","raw":"---\ntitle: 面试题集合\ndate: 2017-10-11 09:55:06\ntags:\n---\n### 阿里巴巴\nLRUCache原理\n图片加载原理\n模块化实现（好处，原因）\nJVM\n视频加密传输\n统计启动时长,标准\n如何保持应用的稳定性\nThreadLocal 原理\n谈谈classloader\n动态布局\n热修复,插件化\nHashMap源码,SpareArray原理\n性能优化,怎么保证应用启动不卡顿\n怎么去除重复代码\nSP是进程同步的吗?有什么方法做到同步\n介绍下SurfView\nHashMap实现原理，ConcurrentHashMap 的实现原理\nBroadcastReceiver，LocalBroadcastReceiver 区别\nBundle 机制\nHandler 机制\nandroid 事件传递机制\n线程间 操作 List\nApp启动流程，从点击桌面开始\n动态加载\n类加载器\nOSGI\nHttps请求慢的解决办法，DNS，携带数据，直接访问IP\nGC回收策略\n画出 Android 的大体架构图\n描述清点击 Android Studio 的 build 按钮后发生了什么\n大体说清一个应用程序安装到手机上时发生了什么；\n对 Dalvik、ART 虚拟机有基本的了解；\nAndroid 上的 Inter-Process-Communication 跨进程通信时如何工作的；\nApp 是如何沙箱化，为什么要这么做；\n权限管理系统（底层的权限是如何进行 grant 的）\n进程和 Application 的生命周期；\n系统启动流程 Zygote进程 –> SystemServer进程 –> 各种系统服务 –> 应用进程\nrecycleview listview 的区别,性能\n排序，快速排序的实现\n树：B+树的介绍\n图：有向无环图的解释\nTCP/UDP的区别\nsynchronized与Lock的区别\nvolatile\nJava线程池\nJava中对象的生命周期\n类加载机制\n双亲委派模型\nAndroid事件分发机制\nMVP模式\nRxJava\n抽象类和接口的区别\n集合 Set实现 Hash 怎么防止碰撞\nJVM 内存区域 开线程影响哪块内存\n垃圾收集机制 对象创建，新生代与老年代\n二叉树 深度遍历与广度遍历\nB树、B+树\n消息机制\n进程调度\n进程与线程\n死锁\n进程状态\nJVM内存模型\n并发集合了解哪些\nConCurrentHashMap实现\nCAS介绍\n开启线程的三种方式,run()和start()方法区别\n线程池\n常用数据结构简介\n判断环（猜测应该是链表环）\n排序，堆排序实现\n链表反转\n### 腾讯\nsynchronized用法\nvolatile用法\n动态权限适配方案，权限组的概念\n网络请求缓存处理，okhttp如何处理网络缓存的\n图片加载库相关，bitmap如何处理大图，如一张30M的大图，如何预防OOM\n进程保活\nlistview图片加载错乱的原理和解决方案\nhttps相关，如何验证证书的合法性，https中哪里用了对称加密，哪里用了非对称加密，对加密算法（如RSA）等是否有了解\n### 滴滴\nMVP\n广播（动态注册和静态注册区别，有序广播和标准广播）\nservice生命周期\nhandler实现机制（很多细节需要关注：如线程如何建立和退出消息循环等等）\n多线程（关于AsyncTask缺陷引发的思考）\n数据库数据迁移问题\n设计模式相关（例如Android中哪里使用了观察者模式，单例模式相关）\nx个苹果，一天只能吃一个、两个、或者三个，问多少天可以吃完\nTCP与UDP区别与应用（三次握手和四次挥手）涉及到部分细节（如client如何确定自己发送的消息被server收到） HTTP相关 提到过Websocket 问了WebSocket相关以及与socket的区别\n是否熟悉Android jni开发，jni如何调用java层代码\n进程间通信的方式\njava注解\n计算一个view的嵌套层级\n项目组件化的理解\n多线程断点续传原理\nAndroid系统为什么会设计ContentProvider，进程共享和线程安全问题\njvm相关\nAndroid相关优化（如内存优化、网络优化、布局优化、电量优化、业务优化）\nEventBus实现原理\n### 美团\nstatic synchronized 方法的多线程访问和作用，同一个类里面两个synchronized方法，两个线程同时访问的问题\n内部类和静态内部类和匿名内部类，以及项目中的应用\nhandler发消息给子线程，looper怎么启动\nView事件传递\nactivity栈\n封装view的时候怎么知道view的大小\narraylist和linkedlist的区别，以及应用场景\n怎么启动service，service和activity怎么进行数据交互\n下拉状态栏是不是影响activity的生命周期，如果在onStop的时候做了网络请求，onResume的时候怎么恢复\nview渲染\n### 今日头条\n数据结构中堆的概念，堆排序\n死锁的概念，怎么避免死锁\nReentrantLock 、synchronized和volatile（n面）\nHashMap\nsingleTask启动模式\n用到的一些开源框架，介绍一个看过源码的，内部实现过程。\n消息机制实现\nReentrantLock的内部实现\nApp启动崩溃异常捕捉\n事件传递机制的介绍\nListView的优化\n二叉树，给出根节点和目标节点，找出从根节点到目标节点的路径\n模式MVP，MVC介绍\n断点续传的实现\n集合的接口和具体实现类，介绍\nTreeMap具体实现\nsynchronized与ReentrantLock\n手写生产者/消费者模式\n逻辑地址与物理地址，为什么使用逻辑地址\n一个无序，不重复数组，输出N个元素，使得N个元素的和相加为M，给出时间复杂度、空间复杂度。手写算法\nAndroid进程分类\n前台切换到后台，然后再回到前台，Activity生命周期回调方法。弹出Dialog，生命值周期回调方法。\nActivity的启动模式\n### 爱奇艺\nRxJava的功能与原理实现\nRecycleView的使用，原理，RecycleView优化\nANR的原因\n四大组件\nService的开启方式\nActivity与Service通信的方式\nActivity之间的通信方式\nHashMap的实现，与HashSet的区别\nJVM内存模型，内存区域\nJava中同步使用的关键字，死锁\nMVP模式\nJava设计模式，观察者模式\nActivity与Fragment之间生命周期比较\n广播的使用场景\n### 百度\nBitmap 使用时候注意什么？\nOom 是否可以try catch ？\n内存泄露如何产生？\n适配器模式，装饰者模式，外观模式的异同？\nANR 如何产生？\nString buffer 与string builder 的区别？\n如何保证线程安全？\njava四中引用\nJni 用过么？\n多进程场景遇见过么？\n关于handler，在任何地方new handler 都是什么线程下\nsqlite升级，增加字段的语句\nbitmap recycler 相关\n强引用置为null，会不会被回收？\nglide 使用什么缓存？\nGlide 内存缓存如何控制大小？\n如何保证多线程读写文件的安全？\n### 携程\nActivity启动模式\n广播的使用方式，场景\nApp中唤醒其他进程的实现方式\nAndroidManifest的作用与理解\nList,Set,Map的区别\nHashSet与HashMap怎么判断集合元素重复\nJava中内存区域与垃圾回收机制\nEventBus作用，实现方式，代替EventBus的方式\nAndroid中开启摄像头的主要步骤\n### 网易\n集合\nconcurrenthashmap\nvolatile\nsynchronized与Lock\nJava线程池\nwait/notify\nNIO\n垃圾收集器\nActivity生命周期\nAlertDialog,popupWindow,Activity区别\n### 小米\nString 为什么要设计成不可变的？\nfragment 各种情况下的生命周期\nActivity 上有 Dialog 的时候按 home 键时的生命周期\n横竖屏切换的时候，Activity 各种情况下的生命周期\nApplication 和 Activity 的 context 对象的区别\n序列化的作用，以及 Android 两种序列化的区别。\nList 和 Map 的实现方式以及存储方式。\n静态内部类的设计意图。\n线程如何关闭，以及如何防止线程的内存泄漏\n### 360\n软引用、弱引用区别\n垃圾回收\n多线程：怎么用、有什么问题要注意；Android线程有没有上限，然后提到线程池的上限\nJVM\n锁\nOOM，内存泄漏\nANR怎么分析解决\nLinearLayout、RelativeLayout、FrameLayout的特性、使用场景\n如何实现Fragment的滑动\nViewPager使用细节，如何设置成每次只初始化当前的Fragment，其他的不初始化\nListView重用的是什么\n进程间通信的机制\nAIDL机制\nAsyncTask机制\n如何取消AsyncTask\n序列化\nAndroid为什么引入Parcelable\n有没有尝试简化Parcelable的使用\nAIDL机制\n项目：拉活怎么做的\n应用安装过程\n某海外直播公司\n线程和进程的区别？\n为什么要有线程，而不是仅仅用进程？\n算法判断单链表成环与否？\n如何实现线程同步？\nhashmap数据结构？\narraylist 与 linkedlist 异同？\nobject类的equal 和hashcode 方法重写，为什么？\nhashmap如何put数据（从hashmap源码角度讲解）？\n简述IPC？\nfragment之间传递数据的方式？\n简述tcp四次挥手?\nthreadlocal原理\n内存泄漏的可能原因？\n用IDE如何分析内存泄漏？\nOOM的可能原因？\n线程死锁的4个条件？\n差值器&估值器\n简述消息机制相关\n进程间通信方式？\nBinder相关？\n触摸事件的分发？\n简述Activity启动全部过程？\nokhttp源码？\nRxJava简介及其源码解读？\n性能优化如何分析systrace？\n广播的分类？\n点击事件被拦截，但是相传到下面的view，如何操作？\nGlide源码？\nActicityThread相关？\nvolatile的原理\nsynchronize的原理\nlock原理\n翻转一个单项链表\nstring to integer\n合并多个单有序链表（假设都是递增的）\n### 其他公司\n四大组件\nAndroid中数据存储方式\n微信主页面的实现方式\n微信上消息小红点的原理\n两个不重复的数组集合中，求共同的元素。\n上一问扩展，海量数据，内存中放不下，怎么求出。\nJava中String的了解。\nArrayList与LinkedList区别\n堆排序过程，时间复杂度，空间复杂度\n快速排序的时间复杂度，空间复杂度\nRxJava的作用，与平时使用的异步操作来比，优势\nAndroid消息机制原理\nBinder机制介绍\n为什么不能在子线程更新UI\nJVM内存模型\nAndroid中进程内存的分配，能不能自己分配定额内存\n垃圾回收机制与调用System.gc()区别\nAndroid事件分发机制\n断点续传的实现\nRxJava的作用，优缺点","slug":"面试题集合","published":1,"updated":"2017-10-11T02:18:10.657Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzc2002sardxd043o4ch","content":"<h3 id=\"阿里巴巴\"><a href=\"#阿里巴巴\" class=\"headerlink\" title=\"阿里巴巴\"></a>阿里巴巴</h3><p>LRUCache原理<br>图片加载原理<br>模块化实现（好处，原因）<br>JVM<br>视频加密传输<br>统计启动时长,标准<br>如何保持应用的稳定性<br>ThreadLocal 原理<br>谈谈classloader<br>动态布局<br>热修复,插件化<br>HashMap源码,SpareArray原理<br>性能优化,怎么保证应用启动不卡顿<br>怎么去除重复代码<br>SP是进程同步的吗?有什么方法做到同步<br>介绍下SurfView<br>HashMap实现原理，ConcurrentHashMap 的实现原理<br>BroadcastReceiver，LocalBroadcastReceiver 区别<br>Bundle 机制<br>Handler 机制<br>android 事件传递机制<br>线程间 操作 List<br>App启动流程，从点击桌面开始<br>动态加载<br>类加载器<br>OSGI<br>Https请求慢的解决办法，DNS，携带数据，直接访问IP<br>GC回收策略<br>画出 Android 的大体架构图<br>描述清点击 Android Studio 的 build 按钮后发生了什么<br>大体说清一个应用程序安装到手机上时发生了什么；<br>对 Dalvik、ART 虚拟机有基本的了解；<br>Android 上的 Inter-Process-Communication 跨进程通信时如何工作的；<br>App 是如何沙箱化，为什么要这么做；<br>权限管理系统（底层的权限是如何进行 grant 的）<br>进程和 Application 的生命周期；<br>系统启动流程 Zygote进程 –&gt; SystemServer进程 –&gt; 各种系统服务 –&gt; 应用进程<br>recycleview listview 的区别,性能<br>排序，快速排序的实现<br>树：B+树的介绍<br>图：有向无环图的解释<br>TCP/UDP的区别<br>synchronized与Lock的区别<br>volatile<br>Java线程池<br>Java中对象的生命周期<br>类加载机制<br>双亲委派模型<br>Android事件分发机制<br>MVP模式<br>RxJava<br>抽象类和接口的区别<br>集合 Set实现 Hash 怎么防止碰撞<br>JVM 内存区域 开线程影响哪块内存<br>垃圾收集机制 对象创建，新生代与老年代<br>二叉树 深度遍历与广度遍历<br>B树、B+树<br>消息机制<br>进程调度<br>进程与线程<br>死锁<br>进程状态<br>JVM内存模型<br>并发集合了解哪些<br>ConCurrentHashMap实现<br>CAS介绍<br>开启线程的三种方式,run()和start()方法区别<br>线程池<br>常用数据结构简介<br>判断环（猜测应该是链表环）<br>排序，堆排序实现<br>链表反转</p>\n<h3 id=\"腾讯\"><a href=\"#腾讯\" class=\"headerlink\" title=\"腾讯\"></a>腾讯</h3><p>synchronized用法<br>volatile用法<br>动态权限适配方案，权限组的概念<br>网络请求缓存处理，okhttp如何处理网络缓存的<br>图片加载库相关，bitmap如何处理大图，如一张30M的大图，如何预防OOM<br>进程保活<br>listview图片加载错乱的原理和解决方案<br>https相关，如何验证证书的合法性，https中哪里用了对称加密，哪里用了非对称加密，对加密算法（如RSA）等是否有了解</p>\n<h3 id=\"滴滴\"><a href=\"#滴滴\" class=\"headerlink\" title=\"滴滴\"></a>滴滴</h3><p>MVP<br>广播（动态注册和静态注册区别，有序广播和标准广播）<br>service生命周期<br>handler实现机制（很多细节需要关注：如线程如何建立和退出消息循环等等）<br>多线程（关于AsyncTask缺陷引发的思考）<br>数据库数据迁移问题<br>设计模式相关（例如Android中哪里使用了观察者模式，单例模式相关）<br>x个苹果，一天只能吃一个、两个、或者三个，问多少天可以吃完<br>TCP与UDP区别与应用（三次握手和四次挥手）涉及到部分细节（如client如何确定自己发送的消息被server收到） HTTP相关 提到过Websocket 问了WebSocket相关以及与socket的区别<br>是否熟悉Android jni开发，jni如何调用java层代码<br>进程间通信的方式<br>java注解<br>计算一个view的嵌套层级<br>项目组件化的理解<br>多线程断点续传原理<br>Android系统为什么会设计ContentProvider，进程共享和线程安全问题<br>jvm相关<br>Android相关优化（如内存优化、网络优化、布局优化、电量优化、业务优化）<br>EventBus实现原理</p>\n<h3 id=\"美团\"><a href=\"#美团\" class=\"headerlink\" title=\"美团\"></a>美团</h3><p>static synchronized 方法的多线程访问和作用，同一个类里面两个synchronized方法，两个线程同时访问的问题<br>内部类和静态内部类和匿名内部类，以及项目中的应用<br>handler发消息给子线程，looper怎么启动<br>View事件传递<br>activity栈<br>封装view的时候怎么知道view的大小<br>arraylist和linkedlist的区别，以及应用场景<br>怎么启动service，service和activity怎么进行数据交互<br>下拉状态栏是不是影响activity的生命周期，如果在onStop的时候做了网络请求，onResume的时候怎么恢复<br>view渲染</p>\n<h3 id=\"今日头条\"><a href=\"#今日头条\" class=\"headerlink\" title=\"今日头条\"></a>今日头条</h3><p>数据结构中堆的概念，堆排序<br>死锁的概念，怎么避免死锁<br>ReentrantLock 、synchronized和volatile（n面）<br>HashMap<br>singleTask启动模式<br>用到的一些开源框架，介绍一个看过源码的，内部实现过程。<br>消息机制实现<br>ReentrantLock的内部实现<br>App启动崩溃异常捕捉<br>事件传递机制的介绍<br>ListView的优化<br>二叉树，给出根节点和目标节点，找出从根节点到目标节点的路径<br>模式MVP，MVC介绍<br>断点续传的实现<br>集合的接口和具体实现类，介绍<br>TreeMap具体实现<br>synchronized与ReentrantLock<br>手写生产者/消费者模式<br>逻辑地址与物理地址，为什么使用逻辑地址<br>一个无序，不重复数组，输出N个元素，使得N个元素的和相加为M，给出时间复杂度、空间复杂度。手写算法<br>Android进程分类<br>前台切换到后台，然后再回到前台，Activity生命周期回调方法。弹出Dialog，生命值周期回调方法。<br>Activity的启动模式</p>\n<h3 id=\"爱奇艺\"><a href=\"#爱奇艺\" class=\"headerlink\" title=\"爱奇艺\"></a>爱奇艺</h3><p>RxJava的功能与原理实现<br>RecycleView的使用，原理，RecycleView优化<br>ANR的原因<br>四大组件<br>Service的开启方式<br>Activity与Service通信的方式<br>Activity之间的通信方式<br>HashMap的实现，与HashSet的区别<br>JVM内存模型，内存区域<br>Java中同步使用的关键字，死锁<br>MVP模式<br>Java设计模式，观察者模式<br>Activity与Fragment之间生命周期比较<br>广播的使用场景</p>\n<h3 id=\"百度\"><a href=\"#百度\" class=\"headerlink\" title=\"百度\"></a>百度</h3><p>Bitmap 使用时候注意什么？<br>Oom 是否可以try catch ？<br>内存泄露如何产生？<br>适配器模式，装饰者模式，外观模式的异同？<br>ANR 如何产生？<br>String buffer 与string builder 的区别？<br>如何保证线程安全？<br>java四中引用<br>Jni 用过么？<br>多进程场景遇见过么？<br>关于handler，在任何地方new handler 都是什么线程下<br>sqlite升级，增加字段的语句<br>bitmap recycler 相关<br>强引用置为null，会不会被回收？<br>glide 使用什么缓存？<br>Glide 内存缓存如何控制大小？<br>如何保证多线程读写文件的安全？</p>\n<h3 id=\"携程\"><a href=\"#携程\" class=\"headerlink\" title=\"携程\"></a>携程</h3><p>Activity启动模式<br>广播的使用方式，场景<br>App中唤醒其他进程的实现方式<br>AndroidManifest的作用与理解<br>List,Set,Map的区别<br>HashSet与HashMap怎么判断集合元素重复<br>Java中内存区域与垃圾回收机制<br>EventBus作用，实现方式，代替EventBus的方式<br>Android中开启摄像头的主要步骤</p>\n<h3 id=\"网易\"><a href=\"#网易\" class=\"headerlink\" title=\"网易\"></a>网易</h3><p>集合<br>concurrenthashmap<br>volatile<br>synchronized与Lock<br>Java线程池<br>wait/notify<br>NIO<br>垃圾收集器<br>Activity生命周期<br>AlertDialog,popupWindow,Activity区别</p>\n<h3 id=\"小米\"><a href=\"#小米\" class=\"headerlink\" title=\"小米\"></a>小米</h3><p>String 为什么要设计成不可变的？<br>fragment 各种情况下的生命周期<br>Activity 上有 Dialog 的时候按 home 键时的生命周期<br>横竖屏切换的时候，Activity 各种情况下的生命周期<br>Application 和 Activity 的 context 对象的区别<br>序列化的作用，以及 Android 两种序列化的区别。<br>List 和 Map 的实现方式以及存储方式。<br>静态内部类的设计意图。<br>线程如何关闭，以及如何防止线程的内存泄漏</p>\n<h3 id=\"360\"><a href=\"#360\" class=\"headerlink\" title=\"360\"></a>360</h3><p>软引用、弱引用区别<br>垃圾回收<br>多线程：怎么用、有什么问题要注意；Android线程有没有上限，然后提到线程池的上限<br>JVM<br>锁<br>OOM，内存泄漏<br>ANR怎么分析解决<br>LinearLayout、RelativeLayout、FrameLayout的特性、使用场景<br>如何实现Fragment的滑动<br>ViewPager使用细节，如何设置成每次只初始化当前的Fragment，其他的不初始化<br>ListView重用的是什么<br>进程间通信的机制<br>AIDL机制<br>AsyncTask机制<br>如何取消AsyncTask<br>序列化<br>Android为什么引入Parcelable<br>有没有尝试简化Parcelable的使用<br>AIDL机制<br>项目：拉活怎么做的<br>应用安装过程<br>某海外直播公司<br>线程和进程的区别？<br>为什么要有线程，而不是仅仅用进程？<br>算法判断单链表成环与否？<br>如何实现线程同步？<br>hashmap数据结构？<br>arraylist 与 linkedlist 异同？<br>object类的equal 和hashcode 方法重写，为什么？<br>hashmap如何put数据（从hashmap源码角度讲解）？<br>简述IPC？<br>fragment之间传递数据的方式？<br>简述tcp四次挥手?<br>threadlocal原理<br>内存泄漏的可能原因？<br>用IDE如何分析内存泄漏？<br>OOM的可能原因？<br>线程死锁的4个条件？<br>差值器&amp;估值器<br>简述消息机制相关<br>进程间通信方式？<br>Binder相关？<br>触摸事件的分发？<br>简述Activity启动全部过程？<br>okhttp源码？<br>RxJava简介及其源码解读？<br>性能优化如何分析systrace？<br>广播的分类？<br>点击事件被拦截，但是相传到下面的view，如何操作？<br>Glide源码？<br>ActicityThread相关？<br>volatile的原理<br>synchronize的原理<br>lock原理<br>翻转一个单项链表<br>string to integer<br>合并多个单有序链表（假设都是递增的）</p>\n<h3 id=\"其他公司\"><a href=\"#其他公司\" class=\"headerlink\" title=\"其他公司\"></a>其他公司</h3><p>四大组件<br>Android中数据存储方式<br>微信主页面的实现方式<br>微信上消息小红点的原理<br>两个不重复的数组集合中，求共同的元素。<br>上一问扩展，海量数据，内存中放不下，怎么求出。<br>Java中String的了解。<br>ArrayList与LinkedList区别<br>堆排序过程，时间复杂度，空间复杂度<br>快速排序的时间复杂度，空间复杂度<br>RxJava的作用，与平时使用的异步操作来比，优势<br>Android消息机制原理<br>Binder机制介绍<br>为什么不能在子线程更新UI<br>JVM内存模型<br>Android中进程内存的分配，能不能自己分配定额内存<br>垃圾回收机制与调用System.gc()区别<br>Android事件分发机制<br>断点续传的实现<br>RxJava的作用，优缺点</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"阿里巴巴\"><a href=\"#阿里巴巴\" class=\"headerlink\" title=\"阿里巴巴\"></a>阿里巴巴</h3><p>LRUCache原理<br>图片加载原理<br>模块化实现（好处，原因）<br>JVM<br>视频加密传输<br>统计启动时长,标准<br>如何保持应用的稳定性<br>ThreadLocal 原理<br>谈谈classloader<br>动态布局<br>热修复,插件化<br>HashMap源码,SpareArray原理<br>性能优化,怎么保证应用启动不卡顿<br>怎么去除重复代码<br>SP是进程同步的吗?有什么方法做到同步<br>介绍下SurfView<br>HashMap实现原理，ConcurrentHashMap 的实现原理<br>BroadcastReceiver，LocalBroadcastReceiver 区别<br>Bundle 机制<br>Handler 机制<br>android 事件传递机制<br>线程间 操作 List<br>App启动流程，从点击桌面开始<br>动态加载<br>类加载器<br>OSGI<br>Https请求慢的解决办法，DNS，携带数据，直接访问IP<br>GC回收策略<br>画出 Android 的大体架构图<br>描述清点击 Android Studio 的 build 按钮后发生了什么<br>大体说清一个应用程序安装到手机上时发生了什么；<br>对 Dalvik、ART 虚拟机有基本的了解；<br>Android 上的 Inter-Process-Communication 跨进程通信时如何工作的；<br>App 是如何沙箱化，为什么要这么做；<br>权限管理系统（底层的权限是如何进行 grant 的）<br>进程和 Application 的生命周期；<br>系统启动流程 Zygote进程 –&gt; SystemServer进程 –&gt; 各种系统服务 –&gt; 应用进程<br>recycleview listview 的区别,性能<br>排序，快速排序的实现<br>树：B+树的介绍<br>图：有向无环图的解释<br>TCP/UDP的区别<br>synchronized与Lock的区别<br>volatile<br>Java线程池<br>Java中对象的生命周期<br>类加载机制<br>双亲委派模型<br>Android事件分发机制<br>MVP模式<br>RxJava<br>抽象类和接口的区别<br>集合 Set实现 Hash 怎么防止碰撞<br>JVM 内存区域 开线程影响哪块内存<br>垃圾收集机制 对象创建，新生代与老年代<br>二叉树 深度遍历与广度遍历<br>B树、B+树<br>消息机制<br>进程调度<br>进程与线程<br>死锁<br>进程状态<br>JVM内存模型<br>并发集合了解哪些<br>ConCurrentHashMap实现<br>CAS介绍<br>开启线程的三种方式,run()和start()方法区别<br>线程池<br>常用数据结构简介<br>判断环（猜测应该是链表环）<br>排序，堆排序实现<br>链表反转</p>\n<h3 id=\"腾讯\"><a href=\"#腾讯\" class=\"headerlink\" title=\"腾讯\"></a>腾讯</h3><p>synchronized用法<br>volatile用法<br>动态权限适配方案，权限组的概念<br>网络请求缓存处理，okhttp如何处理网络缓存的<br>图片加载库相关，bitmap如何处理大图，如一张30M的大图，如何预防OOM<br>进程保活<br>listview图片加载错乱的原理和解决方案<br>https相关，如何验证证书的合法性，https中哪里用了对称加密，哪里用了非对称加密，对加密算法（如RSA）等是否有了解</p>\n<h3 id=\"滴滴\"><a href=\"#滴滴\" class=\"headerlink\" title=\"滴滴\"></a>滴滴</h3><p>MVP<br>广播（动态注册和静态注册区别，有序广播和标准广播）<br>service生命周期<br>handler实现机制（很多细节需要关注：如线程如何建立和退出消息循环等等）<br>多线程（关于AsyncTask缺陷引发的思考）<br>数据库数据迁移问题<br>设计模式相关（例如Android中哪里使用了观察者模式，单例模式相关）<br>x个苹果，一天只能吃一个、两个、或者三个，问多少天可以吃完<br>TCP与UDP区别与应用（三次握手和四次挥手）涉及到部分细节（如client如何确定自己发送的消息被server收到） HTTP相关 提到过Websocket 问了WebSocket相关以及与socket的区别<br>是否熟悉Android jni开发，jni如何调用java层代码<br>进程间通信的方式<br>java注解<br>计算一个view的嵌套层级<br>项目组件化的理解<br>多线程断点续传原理<br>Android系统为什么会设计ContentProvider，进程共享和线程安全问题<br>jvm相关<br>Android相关优化（如内存优化、网络优化、布局优化、电量优化、业务优化）<br>EventBus实现原理</p>\n<h3 id=\"美团\"><a href=\"#美团\" class=\"headerlink\" title=\"美团\"></a>美团</h3><p>static synchronized 方法的多线程访问和作用，同一个类里面两个synchronized方法，两个线程同时访问的问题<br>内部类和静态内部类和匿名内部类，以及项目中的应用<br>handler发消息给子线程，looper怎么启动<br>View事件传递<br>activity栈<br>封装view的时候怎么知道view的大小<br>arraylist和linkedlist的区别，以及应用场景<br>怎么启动service，service和activity怎么进行数据交互<br>下拉状态栏是不是影响activity的生命周期，如果在onStop的时候做了网络请求，onResume的时候怎么恢复<br>view渲染</p>\n<h3 id=\"今日头条\"><a href=\"#今日头条\" class=\"headerlink\" title=\"今日头条\"></a>今日头条</h3><p>数据结构中堆的概念，堆排序<br>死锁的概念，怎么避免死锁<br>ReentrantLock 、synchronized和volatile（n面）<br>HashMap<br>singleTask启动模式<br>用到的一些开源框架，介绍一个看过源码的，内部实现过程。<br>消息机制实现<br>ReentrantLock的内部实现<br>App启动崩溃异常捕捉<br>事件传递机制的介绍<br>ListView的优化<br>二叉树，给出根节点和目标节点，找出从根节点到目标节点的路径<br>模式MVP，MVC介绍<br>断点续传的实现<br>集合的接口和具体实现类，介绍<br>TreeMap具体实现<br>synchronized与ReentrantLock<br>手写生产者/消费者模式<br>逻辑地址与物理地址，为什么使用逻辑地址<br>一个无序，不重复数组，输出N个元素，使得N个元素的和相加为M，给出时间复杂度、空间复杂度。手写算法<br>Android进程分类<br>前台切换到后台，然后再回到前台，Activity生命周期回调方法。弹出Dialog，生命值周期回调方法。<br>Activity的启动模式</p>\n<h3 id=\"爱奇艺\"><a href=\"#爱奇艺\" class=\"headerlink\" title=\"爱奇艺\"></a>爱奇艺</h3><p>RxJava的功能与原理实现<br>RecycleView的使用，原理，RecycleView优化<br>ANR的原因<br>四大组件<br>Service的开启方式<br>Activity与Service通信的方式<br>Activity之间的通信方式<br>HashMap的实现，与HashSet的区别<br>JVM内存模型，内存区域<br>Java中同步使用的关键字，死锁<br>MVP模式<br>Java设计模式，观察者模式<br>Activity与Fragment之间生命周期比较<br>广播的使用场景</p>\n<h3 id=\"百度\"><a href=\"#百度\" class=\"headerlink\" title=\"百度\"></a>百度</h3><p>Bitmap 使用时候注意什么？<br>Oom 是否可以try catch ？<br>内存泄露如何产生？<br>适配器模式，装饰者模式，外观模式的异同？<br>ANR 如何产生？<br>String buffer 与string builder 的区别？<br>如何保证线程安全？<br>java四中引用<br>Jni 用过么？<br>多进程场景遇见过么？<br>关于handler，在任何地方new handler 都是什么线程下<br>sqlite升级，增加字段的语句<br>bitmap recycler 相关<br>强引用置为null，会不会被回收？<br>glide 使用什么缓存？<br>Glide 内存缓存如何控制大小？<br>如何保证多线程读写文件的安全？</p>\n<h3 id=\"携程\"><a href=\"#携程\" class=\"headerlink\" title=\"携程\"></a>携程</h3><p>Activity启动模式<br>广播的使用方式，场景<br>App中唤醒其他进程的实现方式<br>AndroidManifest的作用与理解<br>List,Set,Map的区别<br>HashSet与HashMap怎么判断集合元素重复<br>Java中内存区域与垃圾回收机制<br>EventBus作用，实现方式，代替EventBus的方式<br>Android中开启摄像头的主要步骤</p>\n<h3 id=\"网易\"><a href=\"#网易\" class=\"headerlink\" title=\"网易\"></a>网易</h3><p>集合<br>concurrenthashmap<br>volatile<br>synchronized与Lock<br>Java线程池<br>wait/notify<br>NIO<br>垃圾收集器<br>Activity生命周期<br>AlertDialog,popupWindow,Activity区别</p>\n<h3 id=\"小米\"><a href=\"#小米\" class=\"headerlink\" title=\"小米\"></a>小米</h3><p>String 为什么要设计成不可变的？<br>fragment 各种情况下的生命周期<br>Activity 上有 Dialog 的时候按 home 键时的生命周期<br>横竖屏切换的时候，Activity 各种情况下的生命周期<br>Application 和 Activity 的 context 对象的区别<br>序列化的作用，以及 Android 两种序列化的区别。<br>List 和 Map 的实现方式以及存储方式。<br>静态内部类的设计意图。<br>线程如何关闭，以及如何防止线程的内存泄漏</p>\n<h3 id=\"360\"><a href=\"#360\" class=\"headerlink\" title=\"360\"></a>360</h3><p>软引用、弱引用区别<br>垃圾回收<br>多线程：怎么用、有什么问题要注意；Android线程有没有上限，然后提到线程池的上限<br>JVM<br>锁<br>OOM，内存泄漏<br>ANR怎么分析解决<br>LinearLayout、RelativeLayout、FrameLayout的特性、使用场景<br>如何实现Fragment的滑动<br>ViewPager使用细节，如何设置成每次只初始化当前的Fragment，其他的不初始化<br>ListView重用的是什么<br>进程间通信的机制<br>AIDL机制<br>AsyncTask机制<br>如何取消AsyncTask<br>序列化<br>Android为什么引入Parcelable<br>有没有尝试简化Parcelable的使用<br>AIDL机制<br>项目：拉活怎么做的<br>应用安装过程<br>某海外直播公司<br>线程和进程的区别？<br>为什么要有线程，而不是仅仅用进程？<br>算法判断单链表成环与否？<br>如何实现线程同步？<br>hashmap数据结构？<br>arraylist 与 linkedlist 异同？<br>object类的equal 和hashcode 方法重写，为什么？<br>hashmap如何put数据（从hashmap源码角度讲解）？<br>简述IPC？<br>fragment之间传递数据的方式？<br>简述tcp四次挥手?<br>threadlocal原理<br>内存泄漏的可能原因？<br>用IDE如何分析内存泄漏？<br>OOM的可能原因？<br>线程死锁的4个条件？<br>差值器&amp;估值器<br>简述消息机制相关<br>进程间通信方式？<br>Binder相关？<br>触摸事件的分发？<br>简述Activity启动全部过程？<br>okhttp源码？<br>RxJava简介及其源码解读？<br>性能优化如何分析systrace？<br>广播的分类？<br>点击事件被拦截，但是相传到下面的view，如何操作？<br>Glide源码？<br>ActicityThread相关？<br>volatile的原理<br>synchronize的原理<br>lock原理<br>翻转一个单项链表<br>string to integer<br>合并多个单有序链表（假设都是递增的）</p>\n<h3 id=\"其他公司\"><a href=\"#其他公司\" class=\"headerlink\" title=\"其他公司\"></a>其他公司</h3><p>四大组件<br>Android中数据存储方式<br>微信主页面的实现方式<br>微信上消息小红点的原理<br>两个不重复的数组集合中，求共同的元素。<br>上一问扩展，海量数据，内存中放不下，怎么求出。<br>Java中String的了解。<br>ArrayList与LinkedList区别<br>堆排序过程，时间复杂度，空间复杂度<br>快速排序的时间复杂度，空间复杂度<br>RxJava的作用，与平时使用的异步操作来比，优势<br>Android消息机制原理<br>Binder机制介绍<br>为什么不能在子线程更新UI<br>JVM内存模型<br>Android中进程内存的分配，能不能自己分配定额内存<br>垃圾回收机制与调用System.gc()区别<br>Android事件分发机制<br>断点续传的实现<br>RxJava的作用，优缺点</p>\n"},{"title":"35个Java代码性能优化总结","date":"2017-10-10T06:07:20.000Z","_content":"代码优化细节\n\n__1、尽量指定类、方法的final修饰符__\n\n带有final修饰符的类是不可派生的。在Java核心API中，有许多应用final的例子，例如java.lang.String，整个类都是final的。为类指定final修饰符可以让类不可以被继承，为方法指定final修饰符可以让方法不可以被重写。如果指定了一个类为final，则该类所有的方法都是final的。Java编译器会寻找机会内联所有的final方法，内联对于提升Java运行效率作用重大，具体参见Java运行期优化。此举能够使性能平均提高50%。\n\n__2、尽量重用对象__\n\n特别是String对象的使用，出现字符串连接时应该使用StringBuilder/StringBuffer代替。由于Java虚拟机不仅要花时间生成对象，以后可能还需要花时间对这些对象进行垃圾回收和处理，因此，生成过多的对象将会给程序的性能带来很大的影响。\n\n__3、尽可能使用局部变量__\n\n调用方法时传递的参数以及在调用中创建的临时变量都保存在栈中速度较快，其他变量，如静态变量、实例变量等，都在堆中创建，速度较慢。另外，栈中创建的变量，随着方法的运行结束，这些内容就没了，不需要额外的垃圾回收。\n\n__4、及时关闭流__\n\nJava编程过程中，进行数据库连接、I/O流操作时务必小心，在使用完毕后，及时关闭以释放资源。因为对这些大对象的操作会造成系统大的开销，稍有不慎，将会导致严重的后果。\n\n__5、尽量减少对变量的重复计算__\n\n明确一个概念，对方法的调用，即使方法中只有一句语句，也是有消耗的，包括创建栈帧、调用方法时保护现场、调用方法完毕时恢复现场等。所以例如下面的操作：\n``` Java\nfor (int i = 0; i < list.size(); i++){\n\t...\n}\n```\n建议替换为：\n``` Java\nfor (int i = 0, int length = list.size(); i < length; i++){\n    ...\n}\n```\n这样，在list.size()很大的时候，就减少了很多的消耗\n\n__6、尽量采用懒加载的策略，即在需要的时候才创建__\n\n例如：\n``` Java\nString str = \"aaa\";if (i == 1){\n    list.add(str);\n}\n```\n建议替换为：\n``` Java\nif (i == 1){\n    String str = \"aaa\";\n    list.add(str);\n}\n```\n__7、慎用异常__\n\n异常对性能不利。抛出异常首先要创建一个新的对象，Throwable接口的构造函数调用名为fillInStackTrace()的本地同步方法，fillInStackTrace()方法检查堆栈，收集调用跟踪信息。只要有异常被抛出，Java虚拟机就必须调整调用堆栈，因为在处理过程中创建了一个新的对象。异常只能用于错误处理，不应该用来控制程序流程。\n\n__8、不要在循环中使用try…catch…，应该把其放在最外层__\n\n除非不得已。如果毫无理由地这么写了，只要你的领导资深一点、有强迫症一点，八成就要骂你为什么写出这种垃圾代码来了\n\n__9、如果能估计到待添加的内容长度，为底层以数组方式实现的集合、工具类指定初始长度__\n\n比如ArrayList、LinkedLlist、StringBuilder、StringBuffer、HashMap、HashSet等等，以StringBuilder为例：\n\n（1）StringBuilder()　　　　　　// 默认分配16个字符的空间\n\n（2）StringBuilder(int size)　　// 默认分配size个字符的空间\n\n（3）StringBuilder(String str)　// 默认分配16个字符+str.length()个字符空间\n\n可以通过类（这里指的不仅仅是上面的StringBuilder）的来设定它的初始化容量，这样可以明显地提升性能。比如StringBuilder吧，length表示当前的StringBuilder能保持的字符数量。因为当StringBuilder达到最大容量的时候，它会将自身容量增加到当前的2倍再加2，无论何时只要StringBuilder达到它的最大容量，它就不得不创建一个新的字符数组然后将旧的字符数组内容拷贝到新字符数组中—-这是十分耗费性能的一个操作。试想，如果能预估到字符数组中大概要存放5000个字符而不指定长度，最接近5000的2次幂是4096，每次扩容加的2不管，那么：\n\n（1）在4096 的基础上，再申请8194个大小的字符数组，加起来相当于一次申请了12290个大小的字符数组，如果一开始能指定5000个大小的字符数组，就节省了一倍以上的空间\n\n（2）把原来的4096个字符拷贝到新的的字符数组中去\n\n这样，既浪费内存空间又降低代码运行效率。所以，给底层以数组实现的集合、工具类设置一个合理的初始化容量是错不了的，这会带来立竿见影的效果。但是，注意，像HashMap这种是以数组+链表实现的集合，别把初始大小和你估计的大小设置得一样，因为一个table上只连接一个对象的可能性几乎为0。初始大小建议设置为2的N次幂，如果能估计到有2000个元素，设置成new HashMap(128)、new HashMap(256)都可以。\n\n__10、当复制大量数据时，使用System.arraycopy()命令__\n\n__11、乘法和除法使用移位操作__\n\n例如：\n``` Java\nfor (val = 0; val < 100000; val += 5){\n    a = val * 8;\n    b = val / 2;\n}\n```\n用移位操作可以极大地提高性能，因为在计算机底层，对位的操作是最方便、最快的，因此建议修改为：\n\n``` Java\nfor (val = 0; val < 100000; val += 5){\n    a = val << 3;\n    b = val >> 1;\n}\n```\n移位操作虽然快，但是可能会使代码不太好理解，因此最好加上相应的注释。\n\n__12、循环内不要不断创建对象引用__\n\n例如：\n``` Java\nfor (int i = 1; i <= count; i++){\n    Object obj = new Object();\n}\n```\n这种做法会导致内存中有count份Object对象引用存在，count很大的话，就耗费内存了，建议为改为：\n``` Java\nObject obj = null;\nfor (int i = 0; i <= count; i++) { \n    obj = new Object(); \n}\n```\n这样的话，内存中只有一份Object对象引用，每次new Object()的时候，Object对象引用指向不同的Object罢了，但是内存中只有一份，这样就大大节省了内存空间了。\n\n__13、基于效率和类型检查的考虑，应该尽可能使用array，无法确定数组大小时才使用ArrayList__\n\n__14、尽量使用HashMap、ArrayList、StringBuilder，除非线程安全需要，否则不推荐使用Hashtable、Vector、StringBuffer，后三者由于使用同步机制而导致了性能开销__\n\n__15、不要将数组声明为public static final__\n\n因为这毫无意义，这样只是定义了引用为static final，数组的内容还是可以随意改变的，将数组声明为public更是一个安全漏洞，这意味着这个数组可以被外部类所改变\n\n__16、尽量在合适的场合使用单例__\n\n使用单例可以减轻加载的负担、缩短加载的时间、提高加载的效率，但并不是所有地方都适用于单例，简单来说，单例主要适用于以下三个方面：\n\n（1）控制资源的使用，通过线程同步来控制资源的并发访问\n\n（2）控制实例的产生，以达到节约资源的目的\n\n（3）控制数据的共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信\n\n__17、尽量避免随意使用静态变量__\n\n要知道，当某个对象被定义为static的变量所引用，那么gc通常是不会回收这个对象所占有的堆内存的，如：\n``` Java\n/**\n * Java学习交流QQ群：589809992 我们一起学Java！\n */\npublic class A {\n    private static B b = new B();\n}\n```\n此时静态变量b的生命周期与A类相同，如果A类不被卸载，那么引用B指向的B对象会常驻内存，直到程序终止\n\n__18、及时清除不再需要的会话__\n\n为了清除不再活动的会话，许多应用服务器都有默认的会话超时时间，一般为30分钟。当应用服务器需要保存更多的会话时，如果内存不足，那么操作系统会把部分数据转移到磁盘，应用服务器也可能根据MRU（最近最频繁使用）算法把部分不活跃的会话转储到磁盘，甚至可能抛出内存不足的异常。如果会话要被转储到磁盘，那么必须要先被序列化，在大规模集群中，对对象进行序列化的代价是很昂贵的。因此，当会话不再需要时，应当及时调用HttpSession的invalidate()方法清除会话。\n\n__19、实现RandomAccess接口的集合比如ArrayList，应当使用最普通的for循环而不是foreach循环来遍历__\n\n这是JDK推荐给用户的。JDK API对于RandomAccess接口的解释是：实现RandomAccess接口用来表明其支持快速随机访问，此接口的主要目的是允许一般的算法更改其行为，从而将其应用到随机或连续访问列表时能提供良好的性能。实际经验表明，实现RandomAccess接口的类实例，假如是随机访问的，使用普通for循环效率将高于使用foreach循环；反过来，如果是顺序访问的，则使用Iterator会效率更高。可以使用类似如下的代码作判断：\n``` Java\nif (list instanceof RandomAccess){ \n    for (int i = 0; i < list.size(); i++){}\n}else{\n    Iterator<?> iterator = list.iterable(); while (iterator.hasNext()){iterator.next()}\n}\n```\nforeach循环的底层实现原理就是迭代器Iterator，参见Java语法糖1：可变长度参数以及foreach循环原理。所以后半句”反过来，如果是顺序访问的，则使用Iterator会效率更高”的意思就是顺序访问的那些类实例，使用foreach循环去遍历。\n\n__20、使用同步代码块替代同步方法__\n\n这点在多线程模块中的synchronized锁方法块一文中已经讲得很清楚了，除非能确定一整个方法都是需要进行同步的，否则尽量使用同步代码块，避免对那些不需要进行同步的代码也进行了同步，影响了代码执行效率。\n\n__21、将常量声明为static final，并以大写命名__\n\n这样在编译期间就可以把这些内容放入常量池中，避免运行期间计算生成常量的值。另外，将常量的名字以大写命名也可以方便区分出常量与变量\n\n__22、不要创建一些不使用的对象，不要导入一些不使用的类__\n\n这毫无意义，如果代码中出现”The value of the local variable i is not used”、”The import java.util is never used”，那么请删除这些无用的内容\n\n__23、程序运行过程中避免使用反射__\n\n关于，请参见反射。反射是Java提供给用户一个很强大的功能，功能强大往往意味着效率不高。不建议在程序运行过程中使用尤其是频繁使用反射机制，特别是Method的invoke方法，如果确实有必要，一种建议性的做法是将那些需要通过反射加载的类在项目启动的时候通过反射实例化出一个对象并放入内存—-用户只关心和对端交互的时候获取最快的响应速度，并不关心对端的项目启动花多久时间。\n\n__24、使用数据库连接池和线程池__\n\n这两个池都是用于重用对象的，前者可以避免频繁地打开和关闭连接，后者可以避免频繁地创建和销毁线程\n\n__25、使用带缓冲的输入输出流进行IO操作__\n\n带缓冲的输入输出流，即BufferedReader、BufferedWriter、BufferedInputStream、BufferedOutputStream，这可以极大地提升IO效率\n\n__26、顺序插入和随机访问比较多的场景使用ArrayList，元素删除和中间插入比较多的场景使用LinkedList__\n\n这个，理解ArrayList和LinkedList的原理就知道了\n\n__27、不要让public方法中有太多的形参__\n\npublic方法即对外提供的方法，如果给这些方法太多形参的话主要有两点坏处：\n\n1、违反了面向对象的编程思想，Java讲求一切都是对象，太多的形参，和面向对象的编程思想并不契合\n\n2、参数太多势必导致方法调用的出错概率增加\n\n至于这个”太多”指的是多少个，3、4个吧。比如我们用JDBC写一个insertStudentInfo方法，有10个学生信息字段要插如Student表中，可以把这10个参数封装在一个实体类中，作为insert方法的形参\n\n__28、字符串变量和字符串常量equals的时候将字符串常量写在前面__\n\n这是一个比较常见的小技巧了，如果有以下代码：\n``` Java\nString str = \"123\";\nif (str.equals(\"123\")) {\n...\n}\n```\n建议修改为：\n``` Java\nString str = \"123\";\nif (\"123\".equals(str)){\n...\n}\n```\n这么做主要是可以避免空指针异常\n\n__29、请知道，在java中if (i == 1)和if (1 == i)是没有区别的，但从阅读习惯上讲，建议使用前者__\n\n平时有人问，”if (i == 1)”和”if (1== i)”有没有区别，这就要从C/C++讲起。\n\n在C/C++中，”if (i == 1)”判断条件成立，是以0与非0为基准的，0表示false，非0表示true，如果有这么一段代码：\n\n``` Java\nint i = 2;\nif (i == 1){\n\t...\n}else{\n\t...\n}\n```\nC/C++判断”i==1″不成立，所以以0表示，即false。但是如果：\n\nint i = 2;if (i = 1) { ... }else{ ... }\n万一程序员一个不小心，把”if (i == 1)”写成”if (i = 1)”，这样就有问题了。在if之内将i赋值为1，if判断里面的内容非0，返回的就是true了，但是明明i为2，比较的值是1，应该返回的false。这种情况在C/C++的开发中是很可能发生的并且会导致一些难以理解的错误产生，所以，为了避免开发者在if语句中不正确的赋值操作，建议将if语句写为：\n\nint i = 2;if (1 == i) { ... }else{ ... }\n这样，即使开发者不小心写成了”1 = i”，C/C++编译器也可以第一时间检查出来，因为我们可以对一个变量赋值i为1，但是不能对一个常量赋值1为i。\n\n但是，在Java中，C/C++这种”if (i = 1)”的语法是不可能出现的，因为一旦写了这种语法，Java就会编译报错”Type mismatch: cannot convert from int to boolean”。但是，尽管Java的”if (i == 1)”和”if (1 == i)”在语义上没有任何区别，但是从阅读习惯上讲，建议使用前者会更好些。\n\n__30、不要对数组使用toString()方法__\n\n看一下对数组使用toString()打印出来的是什么：\n\n``` Java\npublic static void main(String[] args) {\n    int[] is = new int[]{1, 2, 3};\n    System.out.println(is.toString());\n}\n```\n结果是：\n\n[I@18a992f\n本意是想打印出数组内容，却有可能因为数组引用is为空而导致空指针异常。不过虽然对数组toString()没有意义，但是对集合toString()是可以打印出集合里面的内容的，因为集合的父类AbstractCollections重写了Object的toString()方法。\n\n__31、不要对超出范围的基本数据类型做向下强制转型__\n\n这绝不会得到想要的结果：\n``` Java\npublic static void main(String[] args) {\n    long l = 12345678901234L;\n    int i = (int) l;\n    System.out.println(i);\n}\n```\n我们可能期望得到其中的某几位，但是结果却是：\n\n1942892530\n\n解释一下。Java中long是8个字节64位的，所以12345678901234在计算机中的表示应该是：\n\n0000 0000 0000 0000 0000 1011 0011 1010 0111 0011 1100 1110 0010 1111 1111 0010\n\n一个int型数据是4个字节32位的，从低位取出上面这串二进制数据的前32位是：\n\n0111 0011 1100 1110 0010 1111 1111 0010\n\n这串二进制表示为十进制1942892530，所以就是我们上面的控制台上输出的内容。从这个例子上还能顺便得到两个结论：\n\n1、整型默认的数据类型是int，long l = 12345678901234L，这个数字已经超出了int的范围了，所以最后有一个L，表示这是一个long型数。顺便，浮点型的默认类型是double，所以定义float的时候要写成”\"float f = 3.5f”\n\n2、接下来再写一句”int ii = l + i;”会报错，因为long + int是一个long，不能赋值给int\n\n__32、公用的集合类中不使用的数据一定要及时remove掉__\n\n如果一个集合类是公用的（也就是说不是方法里面的属性），那么这个集合里面的元素是不会自动释放的，因为始终有引用指向它们。所以，如果公用集合里面的某些数据不使用而不去remove掉它们，那么将会造成这个公用集合不断增大，使得系统有内存泄露的隐患。\n\n__33、把一个基本数据类型转为字符串，基本数据类型.toString()是最快的方式、String.valueOf(数据)次之、数据+”\"最慢__\n\n把一个基本数据类型转为一般有三种方式，我有一个Integer型数据i，可以使用i.toString()、String.valueOf(i)、i+”\"三种方式，三种方式的效率如何，看一个测试：\n``` Java\npublic static void main(String[] args){\n    int loopTime = 50000;\n    Integer i = 0;\n    long startTime = System.currentTimeMillis();\n    for (int j = 0; j < loopTime; j++){\n        String str = String.valueOf(i);\n    }\n    System.out.println(\"String.valueOf()：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n    startTime = System.currentTimeMillis();\n    for (int j = 0; j < loopTime; j++){\n        String str = i.toString();\n    }\n    System.out.println(\"Integer.toString()：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n    startTime = System.currentTimeMillis(); for (int j = 0; j < loopTime; j++)\n    {\n        String str = i + \"\";\n    }\n    System.out.println(\"i + \\\"\\\"：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n}\n```\n运行结果为：\n\nString.valueOf()：11ms Integer.toString()：5ms i + \"\"：25ms\n所以以后遇到把一个基本数据类型转为String的时候，优先考虑使用toString()方法。至于为什么，很简单：\n\n1、String.valueOf()方法底层调用了Integer.toString()方法，但是会在调用前做空判断\n\n2、Integer.toString()方法就不说了，直接调用了\n\n3、i + “”底层使用了StringBuilder实现，先用append方法拼接，再用toString()方法获取字符串\n\n三者对比下来，明显是2最快、1次之、3最慢\n\n__34、使用最有效率的方式去遍历Map__\n\n遍历Map的方式有很多，通常场景下我们需要的是遍历Map中的Key和Value，那么推荐使用的、效率最高的方式是：\n``` Java\npublic static void main(String[] args){\n    HashMap<String, String> hm = new HashMap<String, String>();\n    hm.put(\"111\", \"222\");\n    Set<Map.Entry<String, String>> entrySet = hm.entrySet();\n    Iterator<Map.Entry<String, String>> iter = entrySet.iterator();\n    while (iter.hasNext()){\n        Map.Entry<String, String> entry = iter.next();\n        System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n    }\n}\n```\n如果你只是想遍历一下这个Map的key值，那用”Set keySet = hm.keySet();”会比较合适一些\n\n__35、对资源的close()建议分开操作__\n\n意思是，比如我有这么一段代码：\n``` Java\ntry{\n    XXX.close();\n    YYY.close();\n}catch (Exception e){\n    ...\n}\n```\n建议修改为：\n\ntry{ XXX.close(); }catch (Exception e) { ... }try{ YYY.close(); }catch (Exception e) { ... }\n虽然有些麻烦，却能避免资源泄露。我们想，如果没有修改过的代码，万一XXX.close()抛异常了，那么就进入了cath块中了，YYY.close()不会执行，YYY这块资源就不会回收了，一直占用着，这样的代码一多，是可能引起资源句柄泄露的。而改为下面的写法之后，就保证了无论如何XXX和YYY都会被close掉。","source":"_posts/35个Java代码性能优化总结.md","raw":"---\ntitle: 35个Java代码性能优化总结\ndate: 2017-10-10 14:07:20\ntags:\n---\n代码优化细节\n\n__1、尽量指定类、方法的final修饰符__\n\n带有final修饰符的类是不可派生的。在Java核心API中，有许多应用final的例子，例如java.lang.String，整个类都是final的。为类指定final修饰符可以让类不可以被继承，为方法指定final修饰符可以让方法不可以被重写。如果指定了一个类为final，则该类所有的方法都是final的。Java编译器会寻找机会内联所有的final方法，内联对于提升Java运行效率作用重大，具体参见Java运行期优化。此举能够使性能平均提高50%。\n\n__2、尽量重用对象__\n\n特别是String对象的使用，出现字符串连接时应该使用StringBuilder/StringBuffer代替。由于Java虚拟机不仅要花时间生成对象，以后可能还需要花时间对这些对象进行垃圾回收和处理，因此，生成过多的对象将会给程序的性能带来很大的影响。\n\n__3、尽可能使用局部变量__\n\n调用方法时传递的参数以及在调用中创建的临时变量都保存在栈中速度较快，其他变量，如静态变量、实例变量等，都在堆中创建，速度较慢。另外，栈中创建的变量，随着方法的运行结束，这些内容就没了，不需要额外的垃圾回收。\n\n__4、及时关闭流__\n\nJava编程过程中，进行数据库连接、I/O流操作时务必小心，在使用完毕后，及时关闭以释放资源。因为对这些大对象的操作会造成系统大的开销，稍有不慎，将会导致严重的后果。\n\n__5、尽量减少对变量的重复计算__\n\n明确一个概念，对方法的调用，即使方法中只有一句语句，也是有消耗的，包括创建栈帧、调用方法时保护现场、调用方法完毕时恢复现场等。所以例如下面的操作：\n``` Java\nfor (int i = 0; i < list.size(); i++){\n\t...\n}\n```\n建议替换为：\n``` Java\nfor (int i = 0, int length = list.size(); i < length; i++){\n    ...\n}\n```\n这样，在list.size()很大的时候，就减少了很多的消耗\n\n__6、尽量采用懒加载的策略，即在需要的时候才创建__\n\n例如：\n``` Java\nString str = \"aaa\";if (i == 1){\n    list.add(str);\n}\n```\n建议替换为：\n``` Java\nif (i == 1){\n    String str = \"aaa\";\n    list.add(str);\n}\n```\n__7、慎用异常__\n\n异常对性能不利。抛出异常首先要创建一个新的对象，Throwable接口的构造函数调用名为fillInStackTrace()的本地同步方法，fillInStackTrace()方法检查堆栈，收集调用跟踪信息。只要有异常被抛出，Java虚拟机就必须调整调用堆栈，因为在处理过程中创建了一个新的对象。异常只能用于错误处理，不应该用来控制程序流程。\n\n__8、不要在循环中使用try…catch…，应该把其放在最外层__\n\n除非不得已。如果毫无理由地这么写了，只要你的领导资深一点、有强迫症一点，八成就要骂你为什么写出这种垃圾代码来了\n\n__9、如果能估计到待添加的内容长度，为底层以数组方式实现的集合、工具类指定初始长度__\n\n比如ArrayList、LinkedLlist、StringBuilder、StringBuffer、HashMap、HashSet等等，以StringBuilder为例：\n\n（1）StringBuilder()　　　　　　// 默认分配16个字符的空间\n\n（2）StringBuilder(int size)　　// 默认分配size个字符的空间\n\n（3）StringBuilder(String str)　// 默认分配16个字符+str.length()个字符空间\n\n可以通过类（这里指的不仅仅是上面的StringBuilder）的来设定它的初始化容量，这样可以明显地提升性能。比如StringBuilder吧，length表示当前的StringBuilder能保持的字符数量。因为当StringBuilder达到最大容量的时候，它会将自身容量增加到当前的2倍再加2，无论何时只要StringBuilder达到它的最大容量，它就不得不创建一个新的字符数组然后将旧的字符数组内容拷贝到新字符数组中—-这是十分耗费性能的一个操作。试想，如果能预估到字符数组中大概要存放5000个字符而不指定长度，最接近5000的2次幂是4096，每次扩容加的2不管，那么：\n\n（1）在4096 的基础上，再申请8194个大小的字符数组，加起来相当于一次申请了12290个大小的字符数组，如果一开始能指定5000个大小的字符数组，就节省了一倍以上的空间\n\n（2）把原来的4096个字符拷贝到新的的字符数组中去\n\n这样，既浪费内存空间又降低代码运行效率。所以，给底层以数组实现的集合、工具类设置一个合理的初始化容量是错不了的，这会带来立竿见影的效果。但是，注意，像HashMap这种是以数组+链表实现的集合，别把初始大小和你估计的大小设置得一样，因为一个table上只连接一个对象的可能性几乎为0。初始大小建议设置为2的N次幂，如果能估计到有2000个元素，设置成new HashMap(128)、new HashMap(256)都可以。\n\n__10、当复制大量数据时，使用System.arraycopy()命令__\n\n__11、乘法和除法使用移位操作__\n\n例如：\n``` Java\nfor (val = 0; val < 100000; val += 5){\n    a = val * 8;\n    b = val / 2;\n}\n```\n用移位操作可以极大地提高性能，因为在计算机底层，对位的操作是最方便、最快的，因此建议修改为：\n\n``` Java\nfor (val = 0; val < 100000; val += 5){\n    a = val << 3;\n    b = val >> 1;\n}\n```\n移位操作虽然快，但是可能会使代码不太好理解，因此最好加上相应的注释。\n\n__12、循环内不要不断创建对象引用__\n\n例如：\n``` Java\nfor (int i = 1; i <= count; i++){\n    Object obj = new Object();\n}\n```\n这种做法会导致内存中有count份Object对象引用存在，count很大的话，就耗费内存了，建议为改为：\n``` Java\nObject obj = null;\nfor (int i = 0; i <= count; i++) { \n    obj = new Object(); \n}\n```\n这样的话，内存中只有一份Object对象引用，每次new Object()的时候，Object对象引用指向不同的Object罢了，但是内存中只有一份，这样就大大节省了内存空间了。\n\n__13、基于效率和类型检查的考虑，应该尽可能使用array，无法确定数组大小时才使用ArrayList__\n\n__14、尽量使用HashMap、ArrayList、StringBuilder，除非线程安全需要，否则不推荐使用Hashtable、Vector、StringBuffer，后三者由于使用同步机制而导致了性能开销__\n\n__15、不要将数组声明为public static final__\n\n因为这毫无意义，这样只是定义了引用为static final，数组的内容还是可以随意改变的，将数组声明为public更是一个安全漏洞，这意味着这个数组可以被外部类所改变\n\n__16、尽量在合适的场合使用单例__\n\n使用单例可以减轻加载的负担、缩短加载的时间、提高加载的效率，但并不是所有地方都适用于单例，简单来说，单例主要适用于以下三个方面：\n\n（1）控制资源的使用，通过线程同步来控制资源的并发访问\n\n（2）控制实例的产生，以达到节约资源的目的\n\n（3）控制数据的共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信\n\n__17、尽量避免随意使用静态变量__\n\n要知道，当某个对象被定义为static的变量所引用，那么gc通常是不会回收这个对象所占有的堆内存的，如：\n``` Java\n/**\n * Java学习交流QQ群：589809992 我们一起学Java！\n */\npublic class A {\n    private static B b = new B();\n}\n```\n此时静态变量b的生命周期与A类相同，如果A类不被卸载，那么引用B指向的B对象会常驻内存，直到程序终止\n\n__18、及时清除不再需要的会话__\n\n为了清除不再活动的会话，许多应用服务器都有默认的会话超时时间，一般为30分钟。当应用服务器需要保存更多的会话时，如果内存不足，那么操作系统会把部分数据转移到磁盘，应用服务器也可能根据MRU（最近最频繁使用）算法把部分不活跃的会话转储到磁盘，甚至可能抛出内存不足的异常。如果会话要被转储到磁盘，那么必须要先被序列化，在大规模集群中，对对象进行序列化的代价是很昂贵的。因此，当会话不再需要时，应当及时调用HttpSession的invalidate()方法清除会话。\n\n__19、实现RandomAccess接口的集合比如ArrayList，应当使用最普通的for循环而不是foreach循环来遍历__\n\n这是JDK推荐给用户的。JDK API对于RandomAccess接口的解释是：实现RandomAccess接口用来表明其支持快速随机访问，此接口的主要目的是允许一般的算法更改其行为，从而将其应用到随机或连续访问列表时能提供良好的性能。实际经验表明，实现RandomAccess接口的类实例，假如是随机访问的，使用普通for循环效率将高于使用foreach循环；反过来，如果是顺序访问的，则使用Iterator会效率更高。可以使用类似如下的代码作判断：\n``` Java\nif (list instanceof RandomAccess){ \n    for (int i = 0; i < list.size(); i++){}\n}else{\n    Iterator<?> iterator = list.iterable(); while (iterator.hasNext()){iterator.next()}\n}\n```\nforeach循环的底层实现原理就是迭代器Iterator，参见Java语法糖1：可变长度参数以及foreach循环原理。所以后半句”反过来，如果是顺序访问的，则使用Iterator会效率更高”的意思就是顺序访问的那些类实例，使用foreach循环去遍历。\n\n__20、使用同步代码块替代同步方法__\n\n这点在多线程模块中的synchronized锁方法块一文中已经讲得很清楚了，除非能确定一整个方法都是需要进行同步的，否则尽量使用同步代码块，避免对那些不需要进行同步的代码也进行了同步，影响了代码执行效率。\n\n__21、将常量声明为static final，并以大写命名__\n\n这样在编译期间就可以把这些内容放入常量池中，避免运行期间计算生成常量的值。另外，将常量的名字以大写命名也可以方便区分出常量与变量\n\n__22、不要创建一些不使用的对象，不要导入一些不使用的类__\n\n这毫无意义，如果代码中出现”The value of the local variable i is not used”、”The import java.util is never used”，那么请删除这些无用的内容\n\n__23、程序运行过程中避免使用反射__\n\n关于，请参见反射。反射是Java提供给用户一个很强大的功能，功能强大往往意味着效率不高。不建议在程序运行过程中使用尤其是频繁使用反射机制，特别是Method的invoke方法，如果确实有必要，一种建议性的做法是将那些需要通过反射加载的类在项目启动的时候通过反射实例化出一个对象并放入内存—-用户只关心和对端交互的时候获取最快的响应速度，并不关心对端的项目启动花多久时间。\n\n__24、使用数据库连接池和线程池__\n\n这两个池都是用于重用对象的，前者可以避免频繁地打开和关闭连接，后者可以避免频繁地创建和销毁线程\n\n__25、使用带缓冲的输入输出流进行IO操作__\n\n带缓冲的输入输出流，即BufferedReader、BufferedWriter、BufferedInputStream、BufferedOutputStream，这可以极大地提升IO效率\n\n__26、顺序插入和随机访问比较多的场景使用ArrayList，元素删除和中间插入比较多的场景使用LinkedList__\n\n这个，理解ArrayList和LinkedList的原理就知道了\n\n__27、不要让public方法中有太多的形参__\n\npublic方法即对外提供的方法，如果给这些方法太多形参的话主要有两点坏处：\n\n1、违反了面向对象的编程思想，Java讲求一切都是对象，太多的形参，和面向对象的编程思想并不契合\n\n2、参数太多势必导致方法调用的出错概率增加\n\n至于这个”太多”指的是多少个，3、4个吧。比如我们用JDBC写一个insertStudentInfo方法，有10个学生信息字段要插如Student表中，可以把这10个参数封装在一个实体类中，作为insert方法的形参\n\n__28、字符串变量和字符串常量equals的时候将字符串常量写在前面__\n\n这是一个比较常见的小技巧了，如果有以下代码：\n``` Java\nString str = \"123\";\nif (str.equals(\"123\")) {\n...\n}\n```\n建议修改为：\n``` Java\nString str = \"123\";\nif (\"123\".equals(str)){\n...\n}\n```\n这么做主要是可以避免空指针异常\n\n__29、请知道，在java中if (i == 1)和if (1 == i)是没有区别的，但从阅读习惯上讲，建议使用前者__\n\n平时有人问，”if (i == 1)”和”if (1== i)”有没有区别，这就要从C/C++讲起。\n\n在C/C++中，”if (i == 1)”判断条件成立，是以0与非0为基准的，0表示false，非0表示true，如果有这么一段代码：\n\n``` Java\nint i = 2;\nif (i == 1){\n\t...\n}else{\n\t...\n}\n```\nC/C++判断”i==1″不成立，所以以0表示，即false。但是如果：\n\nint i = 2;if (i = 1) { ... }else{ ... }\n万一程序员一个不小心，把”if (i == 1)”写成”if (i = 1)”，这样就有问题了。在if之内将i赋值为1，if判断里面的内容非0，返回的就是true了，但是明明i为2，比较的值是1，应该返回的false。这种情况在C/C++的开发中是很可能发生的并且会导致一些难以理解的错误产生，所以，为了避免开发者在if语句中不正确的赋值操作，建议将if语句写为：\n\nint i = 2;if (1 == i) { ... }else{ ... }\n这样，即使开发者不小心写成了”1 = i”，C/C++编译器也可以第一时间检查出来，因为我们可以对一个变量赋值i为1，但是不能对一个常量赋值1为i。\n\n但是，在Java中，C/C++这种”if (i = 1)”的语法是不可能出现的，因为一旦写了这种语法，Java就会编译报错”Type mismatch: cannot convert from int to boolean”。但是，尽管Java的”if (i == 1)”和”if (1 == i)”在语义上没有任何区别，但是从阅读习惯上讲，建议使用前者会更好些。\n\n__30、不要对数组使用toString()方法__\n\n看一下对数组使用toString()打印出来的是什么：\n\n``` Java\npublic static void main(String[] args) {\n    int[] is = new int[]{1, 2, 3};\n    System.out.println(is.toString());\n}\n```\n结果是：\n\n[I@18a992f\n本意是想打印出数组内容，却有可能因为数组引用is为空而导致空指针异常。不过虽然对数组toString()没有意义，但是对集合toString()是可以打印出集合里面的内容的，因为集合的父类AbstractCollections重写了Object的toString()方法。\n\n__31、不要对超出范围的基本数据类型做向下强制转型__\n\n这绝不会得到想要的结果：\n``` Java\npublic static void main(String[] args) {\n    long l = 12345678901234L;\n    int i = (int) l;\n    System.out.println(i);\n}\n```\n我们可能期望得到其中的某几位，但是结果却是：\n\n1942892530\n\n解释一下。Java中long是8个字节64位的，所以12345678901234在计算机中的表示应该是：\n\n0000 0000 0000 0000 0000 1011 0011 1010 0111 0011 1100 1110 0010 1111 1111 0010\n\n一个int型数据是4个字节32位的，从低位取出上面这串二进制数据的前32位是：\n\n0111 0011 1100 1110 0010 1111 1111 0010\n\n这串二进制表示为十进制1942892530，所以就是我们上面的控制台上输出的内容。从这个例子上还能顺便得到两个结论：\n\n1、整型默认的数据类型是int，long l = 12345678901234L，这个数字已经超出了int的范围了，所以最后有一个L，表示这是一个long型数。顺便，浮点型的默认类型是double，所以定义float的时候要写成”\"float f = 3.5f”\n\n2、接下来再写一句”int ii = l + i;”会报错，因为long + int是一个long，不能赋值给int\n\n__32、公用的集合类中不使用的数据一定要及时remove掉__\n\n如果一个集合类是公用的（也就是说不是方法里面的属性），那么这个集合里面的元素是不会自动释放的，因为始终有引用指向它们。所以，如果公用集合里面的某些数据不使用而不去remove掉它们，那么将会造成这个公用集合不断增大，使得系统有内存泄露的隐患。\n\n__33、把一个基本数据类型转为字符串，基本数据类型.toString()是最快的方式、String.valueOf(数据)次之、数据+”\"最慢__\n\n把一个基本数据类型转为一般有三种方式，我有一个Integer型数据i，可以使用i.toString()、String.valueOf(i)、i+”\"三种方式，三种方式的效率如何，看一个测试：\n``` Java\npublic static void main(String[] args){\n    int loopTime = 50000;\n    Integer i = 0;\n    long startTime = System.currentTimeMillis();\n    for (int j = 0; j < loopTime; j++){\n        String str = String.valueOf(i);\n    }\n    System.out.println(\"String.valueOf()：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n    startTime = System.currentTimeMillis();\n    for (int j = 0; j < loopTime; j++){\n        String str = i.toString();\n    }\n    System.out.println(\"Integer.toString()：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n    startTime = System.currentTimeMillis(); for (int j = 0; j < loopTime; j++)\n    {\n        String str = i + \"\";\n    }\n    System.out.println(\"i + \\\"\\\"：\" + (System.currentTimeMillis() - startTime) + \"ms\");\n}\n```\n运行结果为：\n\nString.valueOf()：11ms Integer.toString()：5ms i + \"\"：25ms\n所以以后遇到把一个基本数据类型转为String的时候，优先考虑使用toString()方法。至于为什么，很简单：\n\n1、String.valueOf()方法底层调用了Integer.toString()方法，但是会在调用前做空判断\n\n2、Integer.toString()方法就不说了，直接调用了\n\n3、i + “”底层使用了StringBuilder实现，先用append方法拼接，再用toString()方法获取字符串\n\n三者对比下来，明显是2最快、1次之、3最慢\n\n__34、使用最有效率的方式去遍历Map__\n\n遍历Map的方式有很多，通常场景下我们需要的是遍历Map中的Key和Value，那么推荐使用的、效率最高的方式是：\n``` Java\npublic static void main(String[] args){\n    HashMap<String, String> hm = new HashMap<String, String>();\n    hm.put(\"111\", \"222\");\n    Set<Map.Entry<String, String>> entrySet = hm.entrySet();\n    Iterator<Map.Entry<String, String>> iter = entrySet.iterator();\n    while (iter.hasNext()){\n        Map.Entry<String, String> entry = iter.next();\n        System.out.println(entry.getKey() + \"\\t\" + entry.getValue());\n    }\n}\n```\n如果你只是想遍历一下这个Map的key值，那用”Set keySet = hm.keySet();”会比较合适一些\n\n__35、对资源的close()建议分开操作__\n\n意思是，比如我有这么一段代码：\n``` Java\ntry{\n    XXX.close();\n    YYY.close();\n}catch (Exception e){\n    ...\n}\n```\n建议修改为：\n\ntry{ XXX.close(); }catch (Exception e) { ... }try{ YYY.close(); }catch (Exception e) { ... }\n虽然有些麻烦，却能避免资源泄露。我们想，如果没有修改过的代码，万一XXX.close()抛异常了，那么就进入了cath块中了，YYY.close()不会执行，YYY这块资源就不会回收了，一直占用着，这样的代码一多，是可能引起资源句柄泄露的。而改为下面的写法之后，就保证了无论如何XXX和YYY都会被close掉。","slug":"35个Java代码性能优化总结","published":1,"updated":"2017-10-10T06:20:00.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjehxdzcc002tardxrpyi8yoo","content":"<p>代码优化细节</p>\n<p><strong>1、尽量指定类、方法的final修饰符</strong></p>\n<p>带有final修饰符的类是不可派生的。在Java核心API中，有许多应用final的例子，例如java.lang.String，整个类都是final的。为类指定final修饰符可以让类不可以被继承，为方法指定final修饰符可以让方法不可以被重写。如果指定了一个类为final，则该类所有的方法都是final的。Java编译器会寻找机会内联所有的final方法，内联对于提升Java运行效率作用重大，具体参见Java运行期优化。此举能够使性能平均提高50%。</p>\n<p><strong>2、尽量重用对象</strong></p>\n<p>特别是String对象的使用，出现字符串连接时应该使用StringBuilder/StringBuffer代替。由于Java虚拟机不仅要花时间生成对象，以后可能还需要花时间对这些对象进行垃圾回收和处理，因此，生成过多的对象将会给程序的性能带来很大的影响。</p>\n<p><strong>3、尽可能使用局部变量</strong></p>\n<p>调用方法时传递的参数以及在调用中创建的临时变量都保存在栈中速度较快，其他变量，如静态变量、实例变量等，都在堆中创建，速度较慢。另外，栈中创建的变量，随着方法的运行结束，这些内容就没了，不需要额外的垃圾回收。</p>\n<p><strong>4、及时关闭流</strong></p>\n<p>Java编程过程中，进行数据库连接、I/O流操作时务必小心，在使用完毕后，及时关闭以释放资源。因为对这些大对象的操作会造成系统大的开销，稍有不慎，将会导致严重的后果。</p>\n<p><strong>5、尽量减少对变量的重复计算</strong></p>\n<p>明确一个概念，对方法的调用，即使方法中只有一句语句，也是有消耗的，包括创建栈帧、调用方法时保护现场、调用方法完毕时恢复现场等。所以例如下面的操作：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++)&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议替换为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> length = list.size(); i &lt; length; i++)&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样，在list.size()很大的时候，就减少了很多的消耗</p>\n<p><strong>6、尽量采用懒加载的策略，即在需要的时候才创建</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"aaa\"</span>;<span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">    list.add(str);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议替换为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">    String str = <span class=\"string\">\"aaa\"</span>;</div><div class=\"line\">    list.add(str);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>7、慎用异常</strong></p>\n<p>异常对性能不利。抛出异常首先要创建一个新的对象，Throwable接口的构造函数调用名为fillInStackTrace()的本地同步方法，fillInStackTrace()方法检查堆栈，收集调用跟踪信息。只要有异常被抛出，Java虚拟机就必须调整调用堆栈，因为在处理过程中创建了一个新的对象。异常只能用于错误处理，不应该用来控制程序流程。</p>\n<p><strong>8、不要在循环中使用try…catch…，应该把其放在最外层</strong></p>\n<p>除非不得已。如果毫无理由地这么写了，只要你的领导资深一点、有强迫症一点，八成就要骂你为什么写出这种垃圾代码来了</p>\n<p><strong>9、如果能估计到待添加的内容长度，为底层以数组方式实现的集合、工具类指定初始长度</strong></p>\n<p>比如ArrayList、LinkedLlist、StringBuilder、StringBuffer、HashMap、HashSet等等，以StringBuilder为例：</p>\n<p>（1）StringBuilder()　　　　　　// 默认分配16个字符的空间</p>\n<p>（2）StringBuilder(int size)　　// 默认分配size个字符的空间</p>\n<p>（3）StringBuilder(String str)　// 默认分配16个字符+str.length()个字符空间</p>\n<p>可以通过类（这里指的不仅仅是上面的StringBuilder）的来设定它的初始化容量，这样可以明显地提升性能。比如StringBuilder吧，length表示当前的StringBuilder能保持的字符数量。因为当StringBuilder达到最大容量的时候，它会将自身容量增加到当前的2倍再加2，无论何时只要StringBuilder达到它的最大容量，它就不得不创建一个新的字符数组然后将旧的字符数组内容拷贝到新字符数组中—-这是十分耗费性能的一个操作。试想，如果能预估到字符数组中大概要存放5000个字符而不指定长度，最接近5000的2次幂是4096，每次扩容加的2不管，那么：</p>\n<p>（1）在4096 的基础上，再申请8194个大小的字符数组，加起来相当于一次申请了12290个大小的字符数组，如果一开始能指定5000个大小的字符数组，就节省了一倍以上的空间</p>\n<p>（2）把原来的4096个字符拷贝到新的的字符数组中去</p>\n<p>这样，既浪费内存空间又降低代码运行效率。所以，给底层以数组实现的集合、工具类设置一个合理的初始化容量是错不了的，这会带来立竿见影的效果。但是，注意，像HashMap这种是以数组+链表实现的集合，别把初始大小和你估计的大小设置得一样，因为一个table上只连接一个对象的可能性几乎为0。初始大小建议设置为2的N次幂，如果能估计到有2000个元素，设置成new HashMap(128)、new HashMap(256)都可以。</p>\n<p><strong>10、当复制大量数据时，使用System.arraycopy()命令</strong></p>\n<p><strong>11、乘法和除法使用移位操作</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (val = <span class=\"number\">0</span>; val &lt; <span class=\"number\">100000</span>; val += <span class=\"number\">5</span>)&#123;</div><div class=\"line\">    a = val * <span class=\"number\">8</span>;</div><div class=\"line\">    b = val / <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>用移位操作可以极大地提高性能，因为在计算机底层，对位的操作是最方便、最快的，因此建议修改为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (val = <span class=\"number\">0</span>; val &lt; <span class=\"number\">100000</span>; val += <span class=\"number\">5</span>)&#123;</div><div class=\"line\">    a = val &lt;&lt; <span class=\"number\">3</span>;</div><div class=\"line\">    b = val &gt;&gt; <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>移位操作虽然快，但是可能会使代码不太好理解，因此最好加上相应的注释。</p>\n<p><strong>12、循环内不要不断创建对象引用</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= count; i++)&#123;</div><div class=\"line\">    Object obj = <span class=\"keyword\">new</span> Object();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这种做法会导致内存中有count份Object对象引用存在，count很大的话，就耗费内存了，建议为改为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Object obj = <span class=\"keyword\">null</span>;</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= count; i++) &#123; </div><div class=\"line\">    obj = <span class=\"keyword\">new</span> Object(); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样的话，内存中只有一份Object对象引用，每次new Object()的时候，Object对象引用指向不同的Object罢了，但是内存中只有一份，这样就大大节省了内存空间了。</p>\n<p><strong>13、基于效率和类型检查的考虑，应该尽可能使用array，无法确定数组大小时才使用ArrayList</strong></p>\n<p><strong>14、尽量使用HashMap、ArrayList、StringBuilder，除非线程安全需要，否则不推荐使用Hashtable、Vector、StringBuffer，后三者由于使用同步机制而导致了性能开销</strong></p>\n<p><strong>15、不要将数组声明为public static final</strong></p>\n<p>因为这毫无意义，这样只是定义了引用为static final，数组的内容还是可以随意改变的，将数组声明为public更是一个安全漏洞，这意味着这个数组可以被外部类所改变</p>\n<p><strong>16、尽量在合适的场合使用单例</strong></p>\n<p>使用单例可以减轻加载的负担、缩短加载的时间、提高加载的效率，但并不是所有地方都适用于单例，简单来说，单例主要适用于以下三个方面：</p>\n<p>（1）控制资源的使用，通过线程同步来控制资源的并发访问</p>\n<p>（2）控制实例的产生，以达到节约资源的目的</p>\n<p>（3）控制数据的共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信</p>\n<p><strong>17、尽量避免随意使用静态变量</strong></p>\n<p>要知道，当某个对象被定义为static的变量所引用，那么gc通常是不会回收这个对象所占有的堆内存的，如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Java学习交流QQ群：589809992 我们一起学Java！</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> B b = <span class=\"keyword\">new</span> B();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时静态变量b的生命周期与A类相同，如果A类不被卸载，那么引用B指向的B对象会常驻内存，直到程序终止</p>\n<p><strong>18、及时清除不再需要的会话</strong></p>\n<p>为了清除不再活动的会话，许多应用服务器都有默认的会话超时时间，一般为30分钟。当应用服务器需要保存更多的会话时，如果内存不足，那么操作系统会把部分数据转移到磁盘，应用服务器也可能根据MRU（最近最频繁使用）算法把部分不活跃的会话转储到磁盘，甚至可能抛出内存不足的异常。如果会话要被转储到磁盘，那么必须要先被序列化，在大规模集群中，对对象进行序列化的代价是很昂贵的。因此，当会话不再需要时，应当及时调用HttpSession的invalidate()方法清除会话。</p>\n<p><strong>19、实现RandomAccess接口的集合比如ArrayList，应当使用最普通的for循环而不是foreach循环来遍历</strong></p>\n<p>这是JDK推荐给用户的。JDK API对于RandomAccess接口的解释是：实现RandomAccess接口用来表明其支持快速随机访问，此接口的主要目的是允许一般的算法更改其行为，从而将其应用到随机或连续访问列表时能提供良好的性能。实际经验表明，实现RandomAccess接口的类实例，假如是随机访问的，使用普通for循环效率将高于使用foreach循环；反过来，如果是顺序访问的，则使用Iterator会效率更高。可以使用类似如下的代码作判断：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess)&#123; </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++)&#123;&#125;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    Iterator&lt;?&gt; iterator = list.iterable(); <span class=\"keyword\">while</span> (iterator.hasNext())&#123;iterator.next()&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>foreach循环的底层实现原理就是迭代器Iterator，参见Java语法糖1：可变长度参数以及foreach循环原理。所以后半句”反过来，如果是顺序访问的，则使用Iterator会效率更高”的意思就是顺序访问的那些类实例，使用foreach循环去遍历。</p>\n<p><strong>20、使用同步代码块替代同步方法</strong></p>\n<p>这点在多线程模块中的synchronized锁方法块一文中已经讲得很清楚了，除非能确定一整个方法都是需要进行同步的，否则尽量使用同步代码块，避免对那些不需要进行同步的代码也进行了同步，影响了代码执行效率。</p>\n<p><strong>21、将常量声明为static final，并以大写命名</strong></p>\n<p>这样在编译期间就可以把这些内容放入常量池中，避免运行期间计算生成常量的值。另外，将常量的名字以大写命名也可以方便区分出常量与变量</p>\n<p><strong>22、不要创建一些不使用的对象，不要导入一些不使用的类</strong></p>\n<p>这毫无意义，如果代码中出现”The value of the local variable i is not used”、”The import java.util is never used”，那么请删除这些无用的内容</p>\n<p><strong>23、程序运行过程中避免使用反射</strong></p>\n<p>关于，请参见反射。反射是Java提供给用户一个很强大的功能，功能强大往往意味着效率不高。不建议在程序运行过程中使用尤其是频繁使用反射机制，特别是Method的invoke方法，如果确实有必要，一种建议性的做法是将那些需要通过反射加载的类在项目启动的时候通过反射实例化出一个对象并放入内存—-用户只关心和对端交互的时候获取最快的响应速度，并不关心对端的项目启动花多久时间。</p>\n<p><strong>24、使用数据库连接池和线程池</strong></p>\n<p>这两个池都是用于重用对象的，前者可以避免频繁地打开和关闭连接，后者可以避免频繁地创建和销毁线程</p>\n<p><strong>25、使用带缓冲的输入输出流进行IO操作</strong></p>\n<p>带缓冲的输入输出流，即BufferedReader、BufferedWriter、BufferedInputStream、BufferedOutputStream，这可以极大地提升IO效率</p>\n<p><strong>26、顺序插入和随机访问比较多的场景使用ArrayList，元素删除和中间插入比较多的场景使用LinkedList</strong></p>\n<p>这个，理解ArrayList和LinkedList的原理就知道了</p>\n<p><strong>27、不要让public方法中有太多的形参</strong></p>\n<p>public方法即对外提供的方法，如果给这些方法太多形参的话主要有两点坏处：</p>\n<p>1、违反了面向对象的编程思想，Java讲求一切都是对象，太多的形参，和面向对象的编程思想并不契合</p>\n<p>2、参数太多势必导致方法调用的出错概率增加</p>\n<p>至于这个”太多”指的是多少个，3、4个吧。比如我们用JDBC写一个insertStudentInfo方法，有10个学生信息字段要插如Student表中，可以把这10个参数封装在一个实体类中，作为insert方法的形参</p>\n<p><strong>28、字符串变量和字符串常量equals的时候将字符串常量写在前面</strong></p>\n<p>这是一个比较常见的小技巧了，如果有以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"123\"</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (str.equals(<span class=\"string\">\"123\"</span>)) &#123;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议修改为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"123\"</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"123\"</span>.equals(str))&#123;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这么做主要是可以避免空指针异常</p>\n<p><strong>29、请知道，在java中if (i == 1)和if (1 == i)是没有区别的，但从阅读习惯上讲，建议使用前者</strong></p>\n<p>平时有人问，”if (i == 1)”和”if (1== i)”有没有区别，这就要从C/C++讲起。</p>\n<p>在C/C++中，”if (i == 1)”判断条件成立，是以0与非0为基准的，0表示false，非0表示true，如果有这么一段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>C/C++判断”i==1″不成立，所以以0表示，即false。但是如果：</p>\n<p>int i = 2;if (i = 1) { … }else{ … }<br>万一程序员一个不小心，把”if (i == 1)”写成”if (i = 1)”，这样就有问题了。在if之内将i赋值为1，if判断里面的内容非0，返回的就是true了，但是明明i为2，比较的值是1，应该返回的false。这种情况在C/C++的开发中是很可能发生的并且会导致一些难以理解的错误产生，所以，为了避免开发者在if语句中不正确的赋值操作，建议将if语句写为：</p>\n<p>int i = 2;if (1 == i) { … }else{ … }<br>这样，即使开发者不小心写成了”1 = i”，C/C++编译器也可以第一时间检查出来，因为我们可以对一个变量赋值i为1，但是不能对一个常量赋值1为i。</p>\n<p>但是，在Java中，C/C++这种”if (i = 1)”的语法是不可能出现的，因为一旦写了这种语法，Java就会编译报错”Type mismatch: cannot convert from int to boolean”。但是，尽管Java的”if (i == 1)”和”if (1 == i)”在语义上没有任何区别，但是从阅读习惯上讲，建议使用前者会更好些。</p>\n<p><strong>30、不要对数组使用toString()方法</strong></p>\n<p>看一下对数组使用toString()打印出来的是什么：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] is = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</div><div class=\"line\">    System.out.println(is.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果是：</p>\n<p>[I@18a992f<br>本意是想打印出数组内容，却有可能因为数组引用is为空而导致空指针异常。不过虽然对数组toString()没有意义，但是对集合toString()是可以打印出集合里面的内容的，因为集合的父类AbstractCollections重写了Object的toString()方法。</p>\n<p><strong>31、不要对超出范围的基本数据类型做向下强制转型</strong></p>\n<p>这绝不会得到想要的结果：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">long</span> l = <span class=\"number\">12345678901234L</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> i = (<span class=\"keyword\">int</span>) l;</div><div class=\"line\">    System.out.println(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们可能期望得到其中的某几位，但是结果却是：</p>\n<p>1942892530</p>\n<p>解释一下。Java中long是8个字节64位的，所以12345678901234在计算机中的表示应该是：</p>\n<p>0000 0000 0000 0000 0000 1011 0011 1010 0111 0011 1100 1110 0010 1111 1111 0010</p>\n<p>一个int型数据是4个字节32位的，从低位取出上面这串二进制数据的前32位是：</p>\n<p>0111 0011 1100 1110 0010 1111 1111 0010</p>\n<p>这串二进制表示为十进制1942892530，所以就是我们上面的控制台上输出的内容。从这个例子上还能顺便得到两个结论：</p>\n<p>1、整型默认的数据类型是int，long l = 12345678901234L，这个数字已经超出了int的范围了，所以最后有一个L，表示这是一个long型数。顺便，浮点型的默认类型是double，所以定义float的时候要写成””float f = 3.5f”</p>\n<p>2、接下来再写一句”int ii = l + i;”会报错，因为long + int是一个long，不能赋值给int</p>\n<p><strong>32、公用的集合类中不使用的数据一定要及时remove掉</strong></p>\n<p>如果一个集合类是公用的（也就是说不是方法里面的属性），那么这个集合里面的元素是不会自动释放的，因为始终有引用指向它们。所以，如果公用集合里面的某些数据不使用而不去remove掉它们，那么将会造成这个公用集合不断增大，使得系统有内存泄露的隐患。</p>\n<p><strong>33、把一个基本数据类型转为字符串，基本数据类型.toString()是最快的方式、String.valueOf(数据)次之、数据+””最慢</strong></p>\n<p>把一个基本数据类型转为一般有三种方式，我有一个Integer型数据i，可以使用i.toString()、String.valueOf(i)、i+””三种方式，三种方式的效率如何，看一个测试：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> loopTime = <span class=\"number\">50000</span>;</div><div class=\"line\">    Integer i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)&#123;</div><div class=\"line\">        String str = String.valueOf(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"String.valueOf()：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">    startTime = System.currentTimeMillis();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)&#123;</div><div class=\"line\">        String str = i.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"Integer.toString()：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">    startTime = System.currentTimeMillis(); <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        String str = i + <span class=\"string\">\"\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"i + \\\"\\\"：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行结果为：</p>\n<p>String.valueOf()：11ms Integer.toString()：5ms i + “”：25ms<br>所以以后遇到把一个基本数据类型转为String的时候，优先考虑使用toString()方法。至于为什么，很简单：</p>\n<p>1、String.valueOf()方法底层调用了Integer.toString()方法，但是会在调用前做空判断</p>\n<p>2、Integer.toString()方法就不说了，直接调用了</p>\n<p>3、i + “”底层使用了StringBuilder实现，先用append方法拼接，再用toString()方法获取字符串</p>\n<p>三者对比下来，明显是2最快、1次之、3最慢</p>\n<p><strong>34、使用最有效率的方式去遍历Map</strong></p>\n<p>遍历Map的方式有很多，通常场景下我们需要的是遍历Map中的Key和Value，那么推荐使用的、效率最高的方式是：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    HashMap&lt;String, String&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</div><div class=\"line\">    hm.put(<span class=\"string\">\"111\"</span>, <span class=\"string\">\"222\"</span>);</div><div class=\"line\">    Set&lt;Map.Entry&lt;String, String&gt;&gt; entrySet = hm.entrySet();</div><div class=\"line\">    Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iter = entrySet.iterator();</div><div class=\"line\">    <span class=\"keyword\">while</span> (iter.hasNext())&#123;</div><div class=\"line\">        Map.Entry&lt;String, String&gt; entry = iter.next();</div><div class=\"line\">        System.out.println(entry.getKey() + <span class=\"string\">\"\\t\"</span> + entry.getValue());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果你只是想遍历一下这个Map的key值，那用”Set keySet = hm.keySet();”会比较合适一些</p>\n<p><strong>35、对资源的close()建议分开操作</strong></p>\n<p>意思是，比如我有这么一段代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    XXX.close();</div><div class=\"line\">    YYY.close();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议修改为：</p>\n<p>try{ XXX.close(); }catch (Exception e) { … }try{ YYY.close(); }catch (Exception e) { … }<br>虽然有些麻烦，却能避免资源泄露。我们想，如果没有修改过的代码，万一XXX.close()抛异常了，那么就进入了cath块中了，YYY.close()不会执行，YYY这块资源就不会回收了，一直占用着，这样的代码一多，是可能引起资源句柄泄露的。而改为下面的写法之后，就保证了无论如何XXX和YYY都会被close掉。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>代码优化细节</p>\n<p><strong>1、尽量指定类、方法的final修饰符</strong></p>\n<p>带有final修饰符的类是不可派生的。在Java核心API中，有许多应用final的例子，例如java.lang.String，整个类都是final的。为类指定final修饰符可以让类不可以被继承，为方法指定final修饰符可以让方法不可以被重写。如果指定了一个类为final，则该类所有的方法都是final的。Java编译器会寻找机会内联所有的final方法，内联对于提升Java运行效率作用重大，具体参见Java运行期优化。此举能够使性能平均提高50%。</p>\n<p><strong>2、尽量重用对象</strong></p>\n<p>特别是String对象的使用，出现字符串连接时应该使用StringBuilder/StringBuffer代替。由于Java虚拟机不仅要花时间生成对象，以后可能还需要花时间对这些对象进行垃圾回收和处理，因此，生成过多的对象将会给程序的性能带来很大的影响。</p>\n<p><strong>3、尽可能使用局部变量</strong></p>\n<p>调用方法时传递的参数以及在调用中创建的临时变量都保存在栈中速度较快，其他变量，如静态变量、实例变量等，都在堆中创建，速度较慢。另外，栈中创建的变量，随着方法的运行结束，这些内容就没了，不需要额外的垃圾回收。</p>\n<p><strong>4、及时关闭流</strong></p>\n<p>Java编程过程中，进行数据库连接、I/O流操作时务必小心，在使用完毕后，及时关闭以释放资源。因为对这些大对象的操作会造成系统大的开销，稍有不慎，将会导致严重的后果。</p>\n<p><strong>5、尽量减少对变量的重复计算</strong></p>\n<p>明确一个概念，对方法的调用，即使方法中只有一句语句，也是有消耗的，包括创建栈帧、调用方法时保护现场、调用方法完毕时恢复现场等。所以例如下面的操作：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++)&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议替换为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, <span class=\"keyword\">int</span> length = list.size(); i &lt; length; i++)&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样，在list.size()很大的时候，就减少了很多的消耗</p>\n<p><strong>6、尽量采用懒加载的策略，即在需要的时候才创建</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"aaa\"</span>;<span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">    list.add(str);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议替换为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">    String str = <span class=\"string\">\"aaa\"</span>;</div><div class=\"line\">    list.add(str);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>7、慎用异常</strong></p>\n<p>异常对性能不利。抛出异常首先要创建一个新的对象，Throwable接口的构造函数调用名为fillInStackTrace()的本地同步方法，fillInStackTrace()方法检查堆栈，收集调用跟踪信息。只要有异常被抛出，Java虚拟机就必须调整调用堆栈，因为在处理过程中创建了一个新的对象。异常只能用于错误处理，不应该用来控制程序流程。</p>\n<p><strong>8、不要在循环中使用try…catch…，应该把其放在最外层</strong></p>\n<p>除非不得已。如果毫无理由地这么写了，只要你的领导资深一点、有强迫症一点，八成就要骂你为什么写出这种垃圾代码来了</p>\n<p><strong>9、如果能估计到待添加的内容长度，为底层以数组方式实现的集合、工具类指定初始长度</strong></p>\n<p>比如ArrayList、LinkedLlist、StringBuilder、StringBuffer、HashMap、HashSet等等，以StringBuilder为例：</p>\n<p>（1）StringBuilder()　　　　　　// 默认分配16个字符的空间</p>\n<p>（2）StringBuilder(int size)　　// 默认分配size个字符的空间</p>\n<p>（3）StringBuilder(String str)　// 默认分配16个字符+str.length()个字符空间</p>\n<p>可以通过类（这里指的不仅仅是上面的StringBuilder）的来设定它的初始化容量，这样可以明显地提升性能。比如StringBuilder吧，length表示当前的StringBuilder能保持的字符数量。因为当StringBuilder达到最大容量的时候，它会将自身容量增加到当前的2倍再加2，无论何时只要StringBuilder达到它的最大容量，它就不得不创建一个新的字符数组然后将旧的字符数组内容拷贝到新字符数组中—-这是十分耗费性能的一个操作。试想，如果能预估到字符数组中大概要存放5000个字符而不指定长度，最接近5000的2次幂是4096，每次扩容加的2不管，那么：</p>\n<p>（1）在4096 的基础上，再申请8194个大小的字符数组，加起来相当于一次申请了12290个大小的字符数组，如果一开始能指定5000个大小的字符数组，就节省了一倍以上的空间</p>\n<p>（2）把原来的4096个字符拷贝到新的的字符数组中去</p>\n<p>这样，既浪费内存空间又降低代码运行效率。所以，给底层以数组实现的集合、工具类设置一个合理的初始化容量是错不了的，这会带来立竿见影的效果。但是，注意，像HashMap这种是以数组+链表实现的集合，别把初始大小和你估计的大小设置得一样，因为一个table上只连接一个对象的可能性几乎为0。初始大小建议设置为2的N次幂，如果能估计到有2000个元素，设置成new HashMap(128)、new HashMap(256)都可以。</p>\n<p><strong>10、当复制大量数据时，使用System.arraycopy()命令</strong></p>\n<p><strong>11、乘法和除法使用移位操作</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (val = <span class=\"number\">0</span>; val &lt; <span class=\"number\">100000</span>; val += <span class=\"number\">5</span>)&#123;</div><div class=\"line\">    a = val * <span class=\"number\">8</span>;</div><div class=\"line\">    b = val / <span class=\"number\">2</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>用移位操作可以极大地提高性能，因为在计算机底层，对位的操作是最方便、最快的，因此建议修改为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (val = <span class=\"number\">0</span>; val &lt; <span class=\"number\">100000</span>; val += <span class=\"number\">5</span>)&#123;</div><div class=\"line\">    a = val &lt;&lt; <span class=\"number\">3</span>;</div><div class=\"line\">    b = val &gt;&gt; <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>移位操作虽然快，但是可能会使代码不太好理解，因此最好加上相应的注释。</p>\n<p><strong>12、循环内不要不断创建对象引用</strong></p>\n<p>例如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= count; i++)&#123;</div><div class=\"line\">    Object obj = <span class=\"keyword\">new</span> Object();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这种做法会导致内存中有count份Object对象引用存在，count很大的话，就耗费内存了，建议为改为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Object obj = <span class=\"keyword\">null</span>;</div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= count; i++) &#123; </div><div class=\"line\">    obj = <span class=\"keyword\">new</span> Object(); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这样的话，内存中只有一份Object对象引用，每次new Object()的时候，Object对象引用指向不同的Object罢了，但是内存中只有一份，这样就大大节省了内存空间了。</p>\n<p><strong>13、基于效率和类型检查的考虑，应该尽可能使用array，无法确定数组大小时才使用ArrayList</strong></p>\n<p><strong>14、尽量使用HashMap、ArrayList、StringBuilder，除非线程安全需要，否则不推荐使用Hashtable、Vector、StringBuffer，后三者由于使用同步机制而导致了性能开销</strong></p>\n<p><strong>15、不要将数组声明为public static final</strong></p>\n<p>因为这毫无意义，这样只是定义了引用为static final，数组的内容还是可以随意改变的，将数组声明为public更是一个安全漏洞，这意味着这个数组可以被外部类所改变</p>\n<p><strong>16、尽量在合适的场合使用单例</strong></p>\n<p>使用单例可以减轻加载的负担、缩短加载的时间、提高加载的效率，但并不是所有地方都适用于单例，简单来说，单例主要适用于以下三个方面：</p>\n<p>（1）控制资源的使用，通过线程同步来控制资源的并发访问</p>\n<p>（2）控制实例的产生，以达到节约资源的目的</p>\n<p>（3）控制数据的共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信</p>\n<p><strong>17、尽量避免随意使用静态变量</strong></p>\n<p>要知道，当某个对象被定义为static的变量所引用，那么gc通常是不会回收这个对象所占有的堆内存的，如：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Java学习交流QQ群：589809992 我们一起学Java！</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> B b = <span class=\"keyword\">new</span> B();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时静态变量b的生命周期与A类相同，如果A类不被卸载，那么引用B指向的B对象会常驻内存，直到程序终止</p>\n<p><strong>18、及时清除不再需要的会话</strong></p>\n<p>为了清除不再活动的会话，许多应用服务器都有默认的会话超时时间，一般为30分钟。当应用服务器需要保存更多的会话时，如果内存不足，那么操作系统会把部分数据转移到磁盘，应用服务器也可能根据MRU（最近最频繁使用）算法把部分不活跃的会话转储到磁盘，甚至可能抛出内存不足的异常。如果会话要被转储到磁盘，那么必须要先被序列化，在大规模集群中，对对象进行序列化的代价是很昂贵的。因此，当会话不再需要时，应当及时调用HttpSession的invalidate()方法清除会话。</p>\n<p><strong>19、实现RandomAccess接口的集合比如ArrayList，应当使用最普通的for循环而不是foreach循环来遍历</strong></p>\n<p>这是JDK推荐给用户的。JDK API对于RandomAccess接口的解释是：实现RandomAccess接口用来表明其支持快速随机访问，此接口的主要目的是允许一般的算法更改其行为，从而将其应用到随机或连续访问列表时能提供良好的性能。实际经验表明，实现RandomAccess接口的类实例，假如是随机访问的，使用普通for循环效率将高于使用foreach循环；反过来，如果是顺序访问的，则使用Iterator会效率更高。可以使用类似如下的代码作判断：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (list <span class=\"keyword\">instanceof</span> RandomAccess)&#123; </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++)&#123;&#125;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    Iterator&lt;?&gt; iterator = list.iterable(); <span class=\"keyword\">while</span> (iterator.hasNext())&#123;iterator.next()&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>foreach循环的底层实现原理就是迭代器Iterator，参见Java语法糖1：可变长度参数以及foreach循环原理。所以后半句”反过来，如果是顺序访问的，则使用Iterator会效率更高”的意思就是顺序访问的那些类实例，使用foreach循环去遍历。</p>\n<p><strong>20、使用同步代码块替代同步方法</strong></p>\n<p>这点在多线程模块中的synchronized锁方法块一文中已经讲得很清楚了，除非能确定一整个方法都是需要进行同步的，否则尽量使用同步代码块，避免对那些不需要进行同步的代码也进行了同步，影响了代码执行效率。</p>\n<p><strong>21、将常量声明为static final，并以大写命名</strong></p>\n<p>这样在编译期间就可以把这些内容放入常量池中，避免运行期间计算生成常量的值。另外，将常量的名字以大写命名也可以方便区分出常量与变量</p>\n<p><strong>22、不要创建一些不使用的对象，不要导入一些不使用的类</strong></p>\n<p>这毫无意义，如果代码中出现”The value of the local variable i is not used”、”The import java.util is never used”，那么请删除这些无用的内容</p>\n<p><strong>23、程序运行过程中避免使用反射</strong></p>\n<p>关于，请参见反射。反射是Java提供给用户一个很强大的功能，功能强大往往意味着效率不高。不建议在程序运行过程中使用尤其是频繁使用反射机制，特别是Method的invoke方法，如果确实有必要，一种建议性的做法是将那些需要通过反射加载的类在项目启动的时候通过反射实例化出一个对象并放入内存—-用户只关心和对端交互的时候获取最快的响应速度，并不关心对端的项目启动花多久时间。</p>\n<p><strong>24、使用数据库连接池和线程池</strong></p>\n<p>这两个池都是用于重用对象的，前者可以避免频繁地打开和关闭连接，后者可以避免频繁地创建和销毁线程</p>\n<p><strong>25、使用带缓冲的输入输出流进行IO操作</strong></p>\n<p>带缓冲的输入输出流，即BufferedReader、BufferedWriter、BufferedInputStream、BufferedOutputStream，这可以极大地提升IO效率</p>\n<p><strong>26、顺序插入和随机访问比较多的场景使用ArrayList，元素删除和中间插入比较多的场景使用LinkedList</strong></p>\n<p>这个，理解ArrayList和LinkedList的原理就知道了</p>\n<p><strong>27、不要让public方法中有太多的形参</strong></p>\n<p>public方法即对外提供的方法，如果给这些方法太多形参的话主要有两点坏处：</p>\n<p>1、违反了面向对象的编程思想，Java讲求一切都是对象，太多的形参，和面向对象的编程思想并不契合</p>\n<p>2、参数太多势必导致方法调用的出错概率增加</p>\n<p>至于这个”太多”指的是多少个，3、4个吧。比如我们用JDBC写一个insertStudentInfo方法，有10个学生信息字段要插如Student表中，可以把这10个参数封装在一个实体类中，作为insert方法的形参</p>\n<p><strong>28、字符串变量和字符串常量equals的时候将字符串常量写在前面</strong></p>\n<p>这是一个比较常见的小技巧了，如果有以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"123\"</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (str.equals(<span class=\"string\">\"123\"</span>)) &#123;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议修改为：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">String str = <span class=\"string\">\"123\"</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"123\"</span>.equals(str))&#123;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这么做主要是可以避免空指针异常</p>\n<p><strong>29、请知道，在java中if (i == 1)和if (1 == i)是没有区别的，但从阅读习惯上讲，建议使用前者</strong></p>\n<p>平时有人问，”if (i == 1)”和”if (1== i)”有没有区别，这就要从C/C++讲起。</p>\n<p>在C/C++中，”if (i == 1)”判断条件成立，是以0与非0为基准的，0表示false，非0表示true，如果有这么一段代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;</div><div class=\"line\"><span class=\"keyword\">if</span> (i == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>C/C++判断”i==1″不成立，所以以0表示，即false。但是如果：</p>\n<p>int i = 2;if (i = 1) { … }else{ … }<br>万一程序员一个不小心，把”if (i == 1)”写成”if (i = 1)”，这样就有问题了。在if之内将i赋值为1，if判断里面的内容非0，返回的就是true了，但是明明i为2，比较的值是1，应该返回的false。这种情况在C/C++的开发中是很可能发生的并且会导致一些难以理解的错误产生，所以，为了避免开发者在if语句中不正确的赋值操作，建议将if语句写为：</p>\n<p>int i = 2;if (1 == i) { … }else{ … }<br>这样，即使开发者不小心写成了”1 = i”，C/C++编译器也可以第一时间检查出来，因为我们可以对一个变量赋值i为1，但是不能对一个常量赋值1为i。</p>\n<p>但是，在Java中，C/C++这种”if (i = 1)”的语法是不可能出现的，因为一旦写了这种语法，Java就会编译报错”Type mismatch: cannot convert from int to boolean”。但是，尽管Java的”if (i == 1)”和”if (1 == i)”在语义上没有任何区别，但是从阅读习惯上讲，建议使用前者会更好些。</p>\n<p><strong>30、不要对数组使用toString()方法</strong></p>\n<p>看一下对数组使用toString()打印出来的是什么：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] is = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</div><div class=\"line\">    System.out.println(is.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>结果是：</p>\n<p>[I@18a992f<br>本意是想打印出数组内容，却有可能因为数组引用is为空而导致空指针异常。不过虽然对数组toString()没有意义，但是对集合toString()是可以打印出集合里面的内容的，因为集合的父类AbstractCollections重写了Object的toString()方法。</p>\n<p><strong>31、不要对超出范围的基本数据类型做向下强制转型</strong></p>\n<p>这绝不会得到想要的结果：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">long</span> l = <span class=\"number\">12345678901234L</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> i = (<span class=\"keyword\">int</span>) l;</div><div class=\"line\">    System.out.println(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>我们可能期望得到其中的某几位，但是结果却是：</p>\n<p>1942892530</p>\n<p>解释一下。Java中long是8个字节64位的，所以12345678901234在计算机中的表示应该是：</p>\n<p>0000 0000 0000 0000 0000 1011 0011 1010 0111 0011 1100 1110 0010 1111 1111 0010</p>\n<p>一个int型数据是4个字节32位的，从低位取出上面这串二进制数据的前32位是：</p>\n<p>0111 0011 1100 1110 0010 1111 1111 0010</p>\n<p>这串二进制表示为十进制1942892530，所以就是我们上面的控制台上输出的内容。从这个例子上还能顺便得到两个结论：</p>\n<p>1、整型默认的数据类型是int，long l = 12345678901234L，这个数字已经超出了int的范围了，所以最后有一个L，表示这是一个long型数。顺便，浮点型的默认类型是double，所以定义float的时候要写成””float f = 3.5f”</p>\n<p>2、接下来再写一句”int ii = l + i;”会报错，因为long + int是一个long，不能赋值给int</p>\n<p><strong>32、公用的集合类中不使用的数据一定要及时remove掉</strong></p>\n<p>如果一个集合类是公用的（也就是说不是方法里面的属性），那么这个集合里面的元素是不会自动释放的，因为始终有引用指向它们。所以，如果公用集合里面的某些数据不使用而不去remove掉它们，那么将会造成这个公用集合不断增大，使得系统有内存泄露的隐患。</p>\n<p><strong>33、把一个基本数据类型转为字符串，基本数据类型.toString()是最快的方式、String.valueOf(数据)次之、数据+””最慢</strong></p>\n<p>把一个基本数据类型转为一般有三种方式，我有一个Integer型数据i，可以使用i.toString()、String.valueOf(i)、i+””三种方式，三种方式的效率如何，看一个测试：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> loopTime = <span class=\"number\">50000</span>;</div><div class=\"line\">    Integer i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">long</span> startTime = System.currentTimeMillis();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)&#123;</div><div class=\"line\">        String str = String.valueOf(i);</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"String.valueOf()：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">    startTime = System.currentTimeMillis();</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)&#123;</div><div class=\"line\">        String str = i.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"Integer.toString()：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">    startTime = System.currentTimeMillis(); <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; loopTime; j++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        String str = i + <span class=\"string\">\"\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"i + \\\"\\\"：\"</span> + (System.currentTimeMillis() - startTime) + <span class=\"string\">\"ms\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>运行结果为：</p>\n<p>String.valueOf()：11ms Integer.toString()：5ms i + “”：25ms<br>所以以后遇到把一个基本数据类型转为String的时候，优先考虑使用toString()方法。至于为什么，很简单：</p>\n<p>1、String.valueOf()方法底层调用了Integer.toString()方法，但是会在调用前做空判断</p>\n<p>2、Integer.toString()方法就不说了，直接调用了</p>\n<p>3、i + “”底层使用了StringBuilder实现，先用append方法拼接，再用toString()方法获取字符串</p>\n<p>三者对比下来，明显是2最快、1次之、3最慢</p>\n<p><strong>34、使用最有效率的方式去遍历Map</strong></p>\n<p>遍历Map的方式有很多，通常场景下我们需要的是遍历Map中的Key和Value，那么推荐使用的、效率最高的方式是：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">    HashMap&lt;String, String&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</div><div class=\"line\">    hm.put(<span class=\"string\">\"111\"</span>, <span class=\"string\">\"222\"</span>);</div><div class=\"line\">    Set&lt;Map.Entry&lt;String, String&gt;&gt; entrySet = hm.entrySet();</div><div class=\"line\">    Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iter = entrySet.iterator();</div><div class=\"line\">    <span class=\"keyword\">while</span> (iter.hasNext())&#123;</div><div class=\"line\">        Map.Entry&lt;String, String&gt; entry = iter.next();</div><div class=\"line\">        System.out.println(entry.getKey() + <span class=\"string\">\"\\t\"</span> + entry.getValue());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果你只是想遍历一下这个Map的key值，那用”Set keySet = hm.keySet();”会比较合适一些</p>\n<p><strong>35、对资源的close()建议分开操作</strong></p>\n<p>意思是，比如我有这么一段代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    XXX.close();</div><div class=\"line\">    YYY.close();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>建议修改为：</p>\n<p>try{ XXX.close(); }catch (Exception e) { … }try{ YYY.close(); }catch (Exception e) { … }<br>虽然有些麻烦，却能避免资源泄露。我们想，如果没有修改过的代码，万一XXX.close()抛异常了，那么就进入了cath块中了，YYY.close()不会执行，YYY这块资源就不会回收了，一直占用着，这样的代码一多，是可能引起资源句柄泄露的。而改为下面的写法之后，就保证了无论如何XXX和YYY都会被close掉。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}