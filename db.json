{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.266c1c.css","path":"main.266c1c.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.096dc6.js","path":"slider.096dc6.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.266c1c.js","path":"main.266c1c.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.906508.js","path":"mobile.906508.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1501230611000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1501230611000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1501230611000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1501230611000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1501230611000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1501230611000},{"_id":"themes/yilia/README.md","hash":"86757b00d393bd4956a252d92a469f11f2ae8914","modified":1501230611000},{"_id":"themes/yilia/_config.yml","hash":"cf5a324b56662522291f062b986229fb0590d9de","modified":1501233968451},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1501230611000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1501230611000},{"_id":"source/_posts/Activity和Service之间通过接口进行通信.md","hash":"c31933d9ed9e72cbe90500dd41737d9751e274e3","modified":1506057577076},{"_id":"source/_posts/Android单元测试.md","hash":"8c353befa5f035eb775b59fbd7a36be75ca712d8","modified":1506055861284},{"_id":"source/_posts/Bitmap内存优化.md","hash":"98a2155b066cdae26f8b79750a1cd0ddf5fd34d8","modified":1506324956906},{"_id":"source/_posts/Intent的高级写法.md","hash":"38eb3d265fd2c4530231947980526351f20c1fad","modified":1506584403127},{"_id":"source/_posts/L6735M平台上如何配置才能使SN号码唯一.md","hash":"c8391949a84028b3486a02918b6f9cb5c20122f0","modified":1506047005696},{"_id":"source/_posts/ListView界面点击按键的时候会显示快捷搜索框.md","hash":"f37a021ca03a370382fba9dff61ca3159e205df9","modified":1505984160317},{"_id":"source/_posts/Observer观察者模式.md","hash":"3f7a87285ef47bc6c29df4aa82633a7096b493a0","modified":1506057492344},{"_id":"source/_posts/Snackbar的学习和使用.md","hash":"619350e1fd5ebc3d6453fc380821cb3825ff4ce6","modified":1506666026161},{"_id":"source/_posts/Toast优化.md","hash":"5d92c5cf500d6a12167725341e272e93d598ed42","modified":1506050112900},{"_id":"source/_posts/adb-shell-input-text源码分析.md","hash":"434aaab1cd5984768c40372329e533eff9b48ac6","modified":1506322878571},{"_id":"source/_posts/adb命令集合.md","hash":"02ef53dd3c91e96fb44f33c62e5e3f0ba506ca46","modified":1506324699370},{"_id":"source/_posts/android-res下资源命名规则.md","hash":"b6436a3049b547d693b41b7314bec0c33c6b15ee","modified":1506325297198},{"_id":"source/_posts/android中media的url.md","hash":"6e27d7cf3db356e82fa194520735b2a6c24c66ed","modified":1505972977581},{"_id":"source/_posts/android清理缓存功能的实现.md","hash":"a93abdfc0b8f17bbdd702e796a88ce1b0eabb08a","modified":1505964071421},{"_id":"source/_posts/ccache.md","hash":"88baf07fcbfbc400c59a57902fb296cecacca6a0","modified":1505984881489},{"_id":"source/_posts/framework下添加一个自定义的服务.md","hash":"1b94a68171d16b2d8fe326f1890ba470c3d6250a","modified":1506322015063},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1501232707547},{"_id":"source/_posts/jack编译报错.md","hash":"9ab7c1196d7a2e3e104592838f0d11b247a92daf","modified":1505803036146},{"_id":"source/_posts/menu菜单的解析.md","hash":"8136f10e82b0b1a6463c74dd1d0674b1ebd20128","modified":1505984970725},{"_id":"source/_posts/setDescendantFocusability的参数含义.md","hash":"ca5c679f1c243a2b98446d846ffe21201acc99bb","modified":1505973272921},{"_id":"source/_posts/shutdown-selinux.md","hash":"87c7db4c08467bc0a3c49a1b01c8dc723680d45c","modified":1505973451713},{"_id":"source/_posts/sqlite-rawQuery.md","hash":"5b535e34e0d8d9ad9b5ffd5fa51497ac10ad769a","modified":1506048396864},{"_id":"source/_posts/support-features.md","hash":"ff57f006b2cc7f05f63842d0a7f1afe57455ece3","modified":1505985218077},{"_id":"source/_posts/ubuntu下cocos2dx学习.md","hash":"d6331d0a25ed336bfa4443babe1dbda041b03a75","modified":1506325056318},{"_id":"source/_posts/ubuntu搜狗输入法无法输入中文.md","hash":"335196535f330da3fba8842dc9db70e4fb4254fc","modified":1505964121653},{"_id":"source/_posts/wifi热点名称保存读取.md","hash":"425694db65492a35a463e440bf3b5c93529ed1ff","modified":1506052622736},{"_id":"source/_posts/两个Activity之间通过接口进行通信.md","hash":"4d41c37e6c1636f622f929a8046b5fe925030285","modified":1506057543828},{"_id":"source/_posts/使用AIDL调用CountryDetector中的接口来获取国家编码.md","hash":"cb699f65e37195ef38fb1bfdac930cc9ebc8a501","modified":1506064265652},{"_id":"source/_posts/保存大文件到sqlite数据库.md","hash":"d3eff1cf8d66ac1af339ec3f8ee23673878824fb","modified":1506057640188},{"_id":"source/_posts/修改SIMToolkit的显示名称.md","hash":"c19905bcf423732d0ab44839f82fee3303a21d17","modified":1506324611498},{"_id":"source/_posts/修改wifi热点默认密码.md","hash":"b3d759c5e32fcc14907b6c843ca02a3fc96d8ed2","modified":1506047478616},{"_id":"source/_posts/修改某些分区表中的某些分区之后不起作用.md","hash":"6777350611a55dffa0cc39c4e2f03ecbfccb9408","modified":1506045631780},{"_id":"source/_posts/修改默认Launcher.md","hash":"c2f51a417970b9569bf43921872e2fabd0e36548","modified":1505980916493},{"_id":"source/_posts/修改默认日期.md","hash":"ffe2206a1cc6a5967208d518e2f7e23fa3124147","modified":1505980449889},{"_id":"source/_posts/修改默认的两个闹钟震动打开.md","hash":"0011ebacf54a9d775f16fddca5150ee7722b95c2","modified":1506047144624},{"_id":"source/_posts/全局对话框.md","hash":"86dcccaa07cad186e3923dd51540b00ec45ea265","modified":1506071233403},{"_id":"source/_posts/关闭NavigationBar.md","hash":"4a86ebbeca3e0377192a833cc9f2148625285793","modified":1506056410948},{"_id":"source/_posts/内存消耗测试.md","hash":"7fe9cf232714626b14832bba53f0d040999f43ca","modified":1506325386054},{"_id":"source/_posts/减缓按键长按事件的处理速度.md","hash":"f385513fce51ec87aa7406ce27dc5aa7206cb498","modified":1505984081557},{"_id":"source/_posts/动态壁纸的学习和使用.md","hash":"08b0963ca03db9da2ec1e0414de685a8df9a4c0d","modified":1506739575503},{"_id":"source/_posts/反编译查看google向导设置息屏时间121000.md","hash":"fcc2910ba551b9b6456eb07bf3f5d6a2772896cd","modified":1506324802610},{"_id":"source/_posts/同时支持两个文件名不同的布局.md","hash":"8428ee70bd7d420f2a7a9d4c4c04929fa258c8d7","modified":1506048834808},{"_id":"source/_posts/圆形的Imageview.md","hash":"b54d8a67985c3aee203ee14113c6482eb5f31e69","modified":1506047586076},{"_id":"source/_posts/在关闭飞行模式之后蓝牙打不开.md","hash":"e80286e529e82110c13f96da3aed6b6a2feed2b4","modified":1506048516880},{"_id":"source/_posts/在刷机之后Camera有可能会消失.md","hash":"56672ff1a4aeec28040b426f76c73f52f93ac8e6","modified":1506323795015},{"_id":"source/_posts/如何去掉AccentedEnglish.md","hash":"9b3dc4d94b8a148ee8f1421676e0f54d2b549f4e","modified":1506060314532},{"_id":"source/_posts/如何在下载好图片之后更新Gallery.md","hash":"5ca511eba98cf2f980382cc98441c68890e0fed0","modified":1506059765964},{"_id":"source/_posts/如何编译ICU资源.md","hash":"fa94be167b7ca650f79e89cc6c02550bb1f66236","modified":1506053622636},{"_id":"source/_posts/如何解析voicemail-conf-xml文件.md","hash":"bed0e1acbe9407e7c6c5f7bc4096037d81a6f09e","modified":1506050199964},{"_id":"source/_posts/如何让EditText不自动获取焦点.md","hash":"dac8524a0d519c0b261404cc8128cce8f20a5555","modified":1506322681671},{"_id":"source/_posts/如何让Launcher支持横屏显示.md","hash":"bf283d9e5ae9a55653aa9900430726d478190bbd","modified":1505982825829},{"_id":"source/_posts/如何过滤出所有动态壁纸的apk.md","hash":"780838f17f6aba3c058585d8fd7ea28e5030985f","modified":1506059947628},{"_id":"source/_posts/如何通过代码动态设置语言.md","hash":"f36e0c6d0a4c65329ad7d0005c55b03622569854","modified":1506059246136},{"_id":"source/_posts/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤.md","hash":"81a64a2d5aca9ad4b1e9e7f7f388c9c05658ff0e","modified":1506052948716},{"_id":"source/_posts/客制化USB-CDROM.md","hash":"f339b0f3a7c2e3f8d7f752cd017d520ca4a84111","modified":1506322335899},{"_id":"source/_posts/工厂方法模式.md","hash":"7475032d8ea4f7ed99f16e62ea0ccb2728d97368","modified":1506057427920},{"_id":"source/_posts/工厂测试中SD卡测试失败.md","hash":"d255f3faf6c9d3cde82f128d11fdc5bee1075153","modified":1505973499529},{"_id":"source/_posts/应用开机自启动.md","hash":"2d04a9a5b28f11e0c74f63d6ada583101ef65a5d","modified":1506042691700},{"_id":"source/_posts/性能测试.md","hash":"266b82d0ee0dbb9394c79b6d6341c3d7950ca507","modified":1506325444594},{"_id":"source/_posts/提高进程优先级.md","hash":"9e536af5d1e15a69b0c3c075c58e3dfe8130ac32","modified":1505973533041},{"_id":"source/_posts/收到短信后未振动手机.md","hash":"78121d30f56fc4181954e73872886e9f62f2f346","modified":1506057991492},{"_id":"source/_posts/数据连接默认开关.md","hash":"ae1f8789438ce125f57fa8edcd48a8326c9c0a18","modified":1506050499488},{"_id":"source/_posts/杀进程的脚本.md","hash":"540685325da28b2ab51a13d88f447a7ec4a4f62a","modified":1505974556425},{"_id":"source/_posts/根据SDK版本号判断使用哪个类中的方法.md","hash":"f5606262c2661f0a47cb65821d7a3be418f4eacf","modified":1506045402300},{"_id":"source/_posts/根据控件的ID名称获取控件的ID值.md","hash":"32fb27d0f9299620bf731795fec2e78ef247f765","modified":1505973323985},{"_id":"source/_posts/沉浸式学习.md","hash":"d1c1fa1f069d753950b275e376c54f0f61ffdf2a","modified":1506667529221},{"_id":"source/_posts/添加MoreRingtone菜单.md","hash":"8b9a99b782347239846e033885268eda598550df","modified":1506060639448},{"_id":"source/_posts/添加代码禁用GoogleCamera.md","hash":"d9dbdf9ab0afa41f47d5cb8e74cb2bab1fd62f2e","modified":1506059501256},{"_id":"source/_posts/添加水印效果.md","hash":"323e55ddc5e29a71fd7c30fd9eb925bee07cebe5","modified":1506044919880},{"_id":"source/_posts/游戏框架.md","hash":"cb7c025719382e79debb398615f767c1341b0a6b","modified":1506325500746},{"_id":"source/_posts/短信转彩信条数限制.md","hash":"023ef56197fa52b33f5942f9437acc86d23f7813","modified":1505973335017},{"_id":"source/_posts/第一次插卡弹出apn对话框.md","hash":"68a6e44cb749d4c819f9857e0011e6b366829c39","modified":1506048276444},{"_id":"source/_posts/给APK进行系统签名.md","hash":"26a3c2c00ed1e1ec6714bf1b7682ff8f1e5ccbe7","modified":1506322420787},{"_id":"source/_posts/网络请求.md","hash":"45436a1b534e6b552423a3761b4d4781085aaaee","modified":1506057097720},{"_id":"source/_posts/耳机模式下播放音乐再拍照音乐会卡顿.md","hash":"9e593163d5269fc630d84e4c75417f8225bea4b0","modified":1505983677281},{"_id":"source/_posts/联系人编辑界面上的号码输入框无法输入加号.md","hash":"60f6aebfa8e9013d40f9fdec1a4919ae2638d6e9","modified":1505984429865},{"_id":"source/_posts/背光亮度设置后待机界面快捷图标不会随之变化.md","hash":"1bb755d7399eb98ee6cd9ac100d8ef50685a0afb","modified":1506052665956},{"_id":"source/_posts/自定义EditText的光标颜色.md","hash":"93d5b07785e0d91d018c969f4c2c6d7aded59ecf","modified":1506041902628},{"_id":"source/_posts/获取SIM卡的IMSI号码.md","hash":"213b946a182fb1e811643be74b13271464284f1e","modified":1506048030288},{"_id":"source/_posts/解析assets文件夹下的xml文件.md","hash":"c18e4911db8f74b423559c39774709fa4ca474fb","modified":1506048436392},{"_id":"source/_posts/解析res-drawable下图片的另一种方式.md","hash":"bf1655c5bf3045af293b8f0469aa591e0029fffa","modified":1506321832527},{"_id":"source/_posts/设置seekbar每一格的进度.md","hash":"aee960deed41c31e7b0ff4c6c91f3adccf89abac","modified":1505983795337},{"_id":"source/_posts/通过代码创建快捷方式.md","hash":"0af57caa02369091ab1596fb73bdbc8e57c96e9c","modified":1505974415001},{"_id":"source/_posts/通过代码动态设置view的selector.md","hash":"25096cda10ba2c435db956fea49f79cef71f7f83","modified":1505974252597},{"_id":"source/_posts/通过代码模拟触屏和按键事件.md","hash":"2869d8df8acf8f8021eb4d503a35e5fa187490ef","modified":1505979222849},{"_id":"source/_posts/通过反射修改全局默认字体.md","hash":"40e19e2a61d8c4799255a198a2425056b6c6e740","modified":1506662099189},{"_id":"source/_posts/通过反射获取FeatureOption中的所有字段的值.md","hash":"e3689025956b23e7595a80f03cfdfd01e01b08e5","modified":1506322164483},{"_id":"source/_posts/配置AGPS.md","hash":"cec4bcad49d88de776e9da669a14ca50747bab56","modified":1506058612816},{"_id":"source/_posts/隐藏QuickSettings中的AutoRotate菜单.md","hash":"2285c12bebf458b4c3e02722e77f4acc2acd7eaf","modified":1506047246072},{"_id":"source/_posts/隐藏三个点的Overflow菜单.md","hash":"a1d929d243897db5f18d7c2d06dc220fd1363023","modified":1505973705681},{"_id":"source/_posts/预置了PDFViewer之后会报错.md","hash":"dc255761bd7bcf9a5f5229facdc394e29833c8bc","modified":1506047365416},{"_id":"source/_posts/预置桌面快捷方式.md","hash":"58d1b20ea3b9ab1e85a4229317ce9070491ee24c","modified":1505983988069},{"_id":"source/_posts/默认打开wifi热点.md","hash":"e3836175b26bca4dac3af793d70179499634366b","modified":1506324269535},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1501230611000},{"_id":"themes/yilia/.git/config","hash":"006b8967ccecc0d260a343e3a129467114c28a83","modified":1501230611000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501230584000},{"_id":"themes/yilia/.git/index","hash":"96168ab9f52cffb946086d9c65c10ce7635695c3","modified":1505962906773},{"_id":"themes/yilia/.git/packed-refs","hash":"6526a81a90a7f96dba4cceb2c37d82bfc4839290","modified":1501230611000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1501230611000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1501230611000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1501230611000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1501230611000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1501230611000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1501230611000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1501230611000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1501230611000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1501230611000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1501230611000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1501230611000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501230611000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501230611000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1501230611000},{"_id":"themes/yilia/source/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1501230611000},{"_id":"themes/yilia/source/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1501230611000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1501230611000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501230611000},{"_id":"themes/yilia/source/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1501230611000},{"_id":"themes/yilia/source/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1501230611000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501230584000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"285293d900ea3cb448a33ebe3e6fc617ef78a45f","modified":1501230584000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501230584000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"241253b6f4e9e319941d33632a99072a970f6d7f","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"b75e8fff732292fa26b5a0b47cd253d4281e321a","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"9bfcbd9e71401b6da6b2bbbe61e97625ca247b7a","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1501230611000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501230611000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501230611000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501230611000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1501230611000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1501230611000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501230611000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1501230611000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1501230611000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1501230611000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1501230611000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1501230611000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1501230611000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1501230611000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1501230611000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1501230611000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1501230611000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1501230611000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1501230611000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1501230611000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1501230611000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1501230611000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1501230611000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1501230611000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1501230611000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1501230611000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1501230611000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1501230611000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9bb1a4918c1b1ee62ce0a71381990a1978c51b2a","modified":1501230611000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1501230611000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1501230611000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1501230611000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1501230611000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1501230611000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1501230611000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"171b130d25c36f496e4b43e3808707a8f1897729","modified":1501230611000},{"_id":"themes/yilia/.git/objects/pack/pack-780db22f6880d24861c4203e638dc729a18bdd3f.idx","hash":"aa9dfee43bbb960f6511e54f43a6712f1e81866a","modified":1501230611000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4d8071322662d313a09ff7b2e716002870d8c94c","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1501230611000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1501230611000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501230611000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501230611000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501230611000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"241253b6f4e9e319941d33632a99072a970f6d7f","modified":1501230611000},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1501230611000},{"_id":"themes/yilia/.git/objects/pack/pack-780db22f6880d24861c4203e638dc729a18bdd3f.pack","hash":"2b1e7912340fd292f00d20d26276ce28840fd79c","modified":1501230611000},{"_id":"public/2017/09/29/Snackbar的学习和使用/index.html","hash":"c956f2f47053fd5a1647e8fc193f186d632434ad","modified":1506667550767},{"_id":"public/2017/09/29/通过反射修改全局默认字体/index.html","hash":"173ea163ffd7e72f99ad3ca2482792fb61cc6976","modified":1506667550776},{"_id":"public/2017/09/28/Intent的高级写法/index.html","hash":"3da00df9b9be10e7ff3285d15b9fcddc19bd7678","modified":1506667550777},{"_id":"public/2017/09/25/游戏框架/index.html","hash":"d6edce77e371713c438091ef34faadda331bea69","modified":1506667550777},{"_id":"public/2017/09/25/性能测试/index.html","hash":"c27188d6ea6331885eb0f4db9f2d6157d1b9bbeb","modified":1506667550777},{"_id":"public/2017/09/25/内存消耗测试/index.html","hash":"f7c856778d8a37cef2ddb79f54e977848a8072f9","modified":1506667550777},{"_id":"public/2017/09/25/android-res下资源命名规则/index.html","hash":"8ea93642ee1262c9c04be6523cc9490f255ac7ac","modified":1506667550777},{"_id":"public/2017/09/25/ubuntu下cocos2dx学习/index.html","hash":"44ecbbf47376e1f48e1d3e6e96f9719669e50885","modified":1506667550778},{"_id":"public/2017/09/25/Bitmap内存优化/index.html","hash":"062dc83911628d4fcc005edec34ed8be0b911236","modified":1506667550778},{"_id":"public/2017/09/25/反编译查看google向导设置息屏时间121000/index.html","hash":"109b132fc3e973eae3abcbfc249fdd193b87f3a5","modified":1506667550778},{"_id":"public/2017/09/25/修改SIMToolkit的显示名称/index.html","hash":"562e01416c2c127b193c4833b54ce974b6535333","modified":1506667550778},{"_id":"public/2017/09/25/默认打开wifi热点/index.html","hash":"e5127c66e1e079720e050ded8d48ecb8271da00f","modified":1506667550778},{"_id":"public/2017/09/25/在刷机之后Camera有可能会消失/index.html","hash":"5fa1c1de1d6fd33e7f93ed1335b71832c5f7c19e","modified":1506667550778},{"_id":"public/2017/09/25/adb-shell-input-text源码分析/index.html","hash":"b644a81f6e34137550517e97fddf3c0ede5c71d2","modified":1506667550778},{"_id":"public/2017/09/25/如何让EditText不自动获取焦点/index.html","hash":"4f39c123cd270525eac9daa36ffae2c85cc427d1","modified":1506667550778},{"_id":"public/2017/09/25/给APK进行系统签名/index.html","hash":"3bf2c9c20b16849c0a0487a0c876a53a620a20a0","modified":1506667550778},{"_id":"public/2017/09/25/客制化USB-CDROM/index.html","hash":"25517171b12923f4233b05dad8550286a76bebc1","modified":1506667550779},{"_id":"public/2017/09/25/通过反射获取FeatureOption中的所有字段的值/index.html","hash":"504e075640d2c9f5613683aaffcee6c4169ae709","modified":1506667550779},{"_id":"public/2017/09/25/解析res-drawable下图片的另一种方式/index.html","hash":"f7d285975874012b7d2468cbaca2361fcaee5240","modified":1506667550779},{"_id":"public/2017/09/25/动态壁纸的学习和使用/index.html","hash":"c6ef0331f966b0743ca64244207e9ecb193fdd76","modified":1506751072757},{"_id":"public/2017/09/22/全局对话框/index.html","hash":"5a930399e7a5bb6ad344e2ca9e864c335063debe","modified":1506667550779},{"_id":"public/2017/09/22/使用AIDL调用CountryDetector中的接口来获取国家编码/index.html","hash":"ea3545e92e710313325b1d87e9531606e1489cb9","modified":1506667550779},{"_id":"public/2017/09/22/添加MoreRingtone菜单/index.html","hash":"18d64144211aedc3ee792002b17f241cb0e58fb3","modified":1506667550779},{"_id":"public/2017/09/22/如何去掉AccentedEnglish/index.html","hash":"c5f4d5d64549cf37f1790d9c2c9ec9101958b46f","modified":1506751073014},{"_id":"public/2017/09/22/如何过滤出所有动态壁纸的apk/index.html","hash":"5cd60ebffadc70a77e611d7f0e7505ae435b16d2","modified":1506667550779},{"_id":"public/2017/09/22/如何在下载好图片之后更新Gallery/index.html","hash":"b519d4aca014d8727c5a2a0803ebc6933d136da6","modified":1506751073050},{"_id":"public/2017/09/22/添加代码禁用GoogleCamera/index.html","hash":"166ec7df8c21c3cd91b76add726f7611db1e9c89","modified":1506667550780},{"_id":"public/2017/09/22/如何通过代码动态设置语言/index.html","hash":"2ab62f171f9ae8814bfbd49244e6ea59cc7f79cb","modified":1506667550780},{"_id":"public/2017/09/22/配置AGPS/index.html","hash":"36a0dd692a019bf2d37587356244523639206ac8","modified":1506667550780},{"_id":"public/2017/09/22/收到短信后未振动手机/index.html","hash":"7b612e11e6ef9321e500d81568f489a32a792aae","modified":1506667550780},{"_id":"public/2017/09/22/保存大文件到sqlite数据库/index.html","hash":"fddd5bf3f03466ffbd88d908421169d844bd852b","modified":1506667550780},{"_id":"public/2017/09/22/Activity和Service之间通过接口进行通信/index.html","hash":"fbca98ef1d91d936a16c60382b285fbe27d2a163","modified":1506667550780},{"_id":"public/2017/09/22/两个Activity之间通过接口进行通信/index.html","hash":"8218ed8a8489ffb8486799dd2b2b75dc6195fe9e","modified":1506667550780},{"_id":"public/2017/09/22/Observer观察者模式/index.html","hash":"27e7d60a7b320328bc9625001c730027a4a0f13c","modified":1506667550780},{"_id":"public/2017/09/22/工厂方法模式/index.html","hash":"737364ab3378e13ee4e9e37aac037aac34bca644","modified":1506667550780},{"_id":"public/2017/09/22/网络请求/index.html","hash":"014b211a892951cf45717762e2365af230f5ded9","modified":1506667550781},{"_id":"public/2017/09/22/关闭NavigationBar/index.html","hash":"cb3b7ba699d23f81dfca1110fe7b2cfcece74505","modified":1506667550781},{"_id":"public/2017/09/22/Android单元测试/index.html","hash":"30b9148492910b97c0211435dd1428aec5479f67","modified":1506667550781},{"_id":"public/2017/09/22/如何编译ICU资源/index.html","hash":"617d5e812274cec4b8fcc1456ef1bed978cddfea","modified":1506667550781},{"_id":"public/2017/09/22/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤/index.html","hash":"6ab6428adbc182d8fb45baabf557d8fdcd948a71","modified":1506667550781},{"_id":"public/2017/09/22/背光亮度设置后待机界面快捷图标不会随之变化/index.html","hash":"63469e9c53e56fafb047ee9bbfc4aa1b7fbc4b95","modified":1506667550781},{"_id":"public/2017/09/22/数据连接默认开关/index.html","hash":"64ce44e89400168669d3abedd52a7de6838fd355","modified":1506667550781},{"_id":"public/2017/09/22/如何解析voicemail-conf-xml文件/index.html","hash":"0d2c77f4c2b98dd682854eea6d1f2312f553c1a9","modified":1506667550782},{"_id":"public/2017/09/22/Toast优化/index.html","hash":"9910b60176c22022d3664434f72a48ab88ace98c","modified":1506667550782},{"_id":"public/2017/09/22/同时支持两个文件名不同的布局/index.html","hash":"a0136eacc4d6cfe3d1b9b6c9e9fbc5d27cdd8060","modified":1506667550782},{"_id":"public/2017/09/22/在关闭飞行模式之后蓝牙打不开/index.html","hash":"b2efba0f25f7f4e2e9045dc621a4ff12d24d2e6f","modified":1506667550782},{"_id":"public/2017/09/22/解析assets文件夹下的xml文件/index.html","hash":"7087a3339f868e007e9f46bc107ec4c182f41cac","modified":1506667550782},{"_id":"public/2017/09/22/sqlite-rawQuery/index.html","hash":"a942a8f3a16625d9ae19ad6ad90a013908907598","modified":1506667550782},{"_id":"public/2017/09/22/第一次插卡弹出apn对话框/index.html","hash":"620a1f2261f108f4f5ee727888872193409da7e4","modified":1506667550782},{"_id":"public/2017/09/22/获取SIM卡的IMSI号码/index.html","hash":"bbe5759ef073fb7a78dcfac1634e0001efd1c45d","modified":1506667550782},{"_id":"public/2017/09/22/圆形的Imageview/index.html","hash":"e2ddfff965d3e01308674253a0e9ed6308c23682","modified":1506667550782},{"_id":"public/2017/09/22/修改wifi热点默认密码/index.html","hash":"7a685ca407042dfc19c4b48e2e3daaa1629e4752","modified":1506667550782},{"_id":"public/2017/09/22/预置了PDFViewer之后会报错/index.html","hash":"ed60a3c60d85753d129042958e0e7ed58113fd4d","modified":1506667550783},{"_id":"public/2017/09/22/隐藏QuickSettings中的AutoRotate菜单/index.html","hash":"cef5172183a8a8c03e84e86f6a4e1384143df70f","modified":1506667550783},{"_id":"public/2017/09/22/修改默认的两个闹钟震动打开/index.html","hash":"bee5183e692789d48a52caa16a73e2f6680d2b6b","modified":1506667550783},{"_id":"public/2017/09/22/L6735M平台上如何配置才能使SN号码唯一/index.html","hash":"74fbca64d137ae8ea300b19aa62a8f05384894c0","modified":1506667550783},{"_id":"public/2017/09/22/修改某些分区表中的某些分区之后不起作用/index.html","hash":"9fdc56e4c8382b9a8839013b755937b4d8a221c9","modified":1506667550783},{"_id":"public/2017/09/22/根据SDK版本号判断使用哪个类中的方法/index.html","hash":"d7a68e2d9c11c5f6d9341ae175afdfb0fc00e056","modified":1506667550783},{"_id":"public/2017/09/22/添加水印效果/index.html","hash":"c260859ab35ea1d0c24d24be3781c8b6ab382d1a","modified":1506667550783},{"_id":"public/2017/09/22/wifi热点名称保存读取/index.html","hash":"42d3c2fd30e4431ee48c2c4dd76bc1d5e224e77e","modified":1506667550783},{"_id":"public/2017/09/22/应用开机自启动/index.html","hash":"43387d3604f04105fcb6357a68b9c43a1197e873","modified":1506667550783},{"_id":"public/2017/09/21/support-features/index.html","hash":"efd831d619755c93406118b55991c544c2e66384","modified":1506667550784},{"_id":"public/2017/09/21/menu菜单的解析/index.html","hash":"e17ee71a5a41bf52db005fd6705673b646852f10","modified":1506667550784},{"_id":"public/2017/09/21/ccache/index.html","hash":"b87a8c2a0408dfa1b0c790de4c3bd5420df04cc0","modified":1506667550784},{"_id":"public/2017/09/21/联系人编辑界面上的号码输入框无法输入加号/index.html","hash":"fc99b00fa67eea6c2d179e69a19402ab1b294397","modified":1506667550784},{"_id":"public/2017/09/21/ListView界面点击按键的时候会显示快捷搜索框/index.html","hash":"7120ba509c085082d3723d81f1cc8a072f8789eb","modified":1506667550784},{"_id":"public/2017/09/21/减缓按键长按事件的处理速度/index.html","hash":"20f859d2aa38b4a9dfed30d587b0c7e5eb41188d","modified":1506667550784},{"_id":"public/2017/09/21/预置桌面快捷方式/index.html","hash":"2497c102f502635cbbc491584bbd5b545a55242d","modified":1506667550784},{"_id":"public/2017/09/21/设置seekbar每一格的进度/index.html","hash":"c1f00020f945d3ead61bef08c7380748661f56fa","modified":1506667550784},{"_id":"public/2017/09/21/耳机模式下播放音乐再拍照音乐会卡顿/index.html","hash":"eed6422442857f99cbc1c8cb504dc9d1dded842b","modified":1506667550784},{"_id":"public/2017/09/21/adb命令集合/index.html","hash":"9103bbe65a7ffcc4703215b9a5586151f6a68a7e","modified":1506667550784},{"_id":"public/2017/09/21/如何让Launcher支持横屏显示/index.html","hash":"bf24cbf377c354e85d43866d7a22c339083e5ba6","modified":1506667550785},{"_id":"public/2017/09/21/修改默认Launcher/index.html","hash":"2dec7789ac6bf799002a2612de94d2cab1aae696","modified":1506667550785},{"_id":"public/2017/09/21/修改默认日期/index.html","hash":"e9f68354489b700e6d9c12a4687cb5e0f462f724","modified":1506667550785},{"_id":"public/2017/09/21/杀进程的脚本/index.html","hash":"3560e4f3506001c75c26e3b07324bf0205a65089","modified":1506667550785},{"_id":"public/2017/09/21/通过代码创建快捷方式/index.html","hash":"ec7f82c52ad6aea09562f5dd52924e95db30015e","modified":1506667550785},{"_id":"public/2017/09/21/通过代码动态设置view的selector/index.html","hash":"85a258b28148a0864e136b822c5e8ea4d5beb77b","modified":1506667550785},{"_id":"public/2017/09/21/通过代码模拟触屏和按键事件/index.html","hash":"731f6d75640c9c23b4c2bea2456811cebc88d926","modified":1506667550785},{"_id":"public/2017/09/21/setDescendantFocusability的参数含义/index.html","hash":"4cafa16ee15892f7fbcfbd775c35d2eefc89d2e1","modified":1506667550785},{"_id":"public/2017/09/21/自定义EditText的光标颜色/index.html","hash":"cdc153774776c1a0a3ba2a909b4cd3f7a509e97f","modified":1506667550785},{"_id":"public/2017/09/21/隐藏三个点的Overflow菜单/index.html","hash":"7b54c9ada2ec99eb6c57383c8cbbc866d7cfcedd","modified":1506667550786},{"_id":"public/2017/09/21/根据控件的ID名称获取控件的ID值/index.html","hash":"da086fca6e5e8f2e4b006f16da28ad2bb3538144","modified":1506667550786},{"_id":"public/2017/09/21/短信转彩信条数限制/index.html","hash":"a98c28c426733624eae92c3f34c01df810f87545","modified":1506667550786},{"_id":"public/2017/09/21/工厂测试中SD卡测试失败/index.html","hash":"8e89fbba5d305f029f3d79db4edb1c9d2b8987e3","modified":1506667550786},{"_id":"public/2017/09/21/android中media的url/index.html","hash":"353ca3bdc50896cfabdb4fdab65882b578b54e31","modified":1506667550786},{"_id":"public/2017/09/21/android清理缓存功能的实现/index.html","hash":"b0ee1d8485390189ea8528f85de7acbdd46858cc","modified":1506667550786},{"_id":"public/2017/09/21/提高进程优先级/index.html","hash":"292bd0ff8dca239b3daf484b86ea7aebfb325fad","modified":1506667550786},{"_id":"public/2017/09/21/ubuntu搜狗输入法无法输入中文/index.html","hash":"3a3e4d80803aa634635ad60e58d19134d4ae1037","modified":1506667550786},{"_id":"public/2017/09/19/shutdown-selinux/index.html","hash":"de0455752a0daeef1f4c90b1f5f30ff43280f950","modified":1506667550786},{"_id":"public/2017/09/19/framework下添加一个自定义的服务/index.html","hash":"04766e6ecdceb314aca63193688ff67b891a0a63","modified":1506667550787},{"_id":"public/2017/09/19/jack编译报错/index.html","hash":"e4f4fa35620cd89228647605052db78a813a7ab5","modified":1506667550787},{"_id":"public/2017/07/28/hello-world/index.html","hash":"010393d53d609f108003bd7189e9d073c98b19dd","modified":1506667550787},{"_id":"public/archives/index.html","hash":"37bba8da35795bda240fef20edd39ed5f21fa987","modified":1506667550787},{"_id":"public/archives/page/2/index.html","hash":"1d7ab9f35bfe91c5f5a7ff3a4e0143d29da17f7a","modified":1506667550787},{"_id":"public/archives/page/3/index.html","hash":"322295758d2f3d1e2e7c95a75488391fa5adf7ae","modified":1506751073056},{"_id":"public/archives/page/4/index.html","hash":"226746a3f9870a82110d843404311c7e6a29fbe8","modified":1506751073056},{"_id":"public/archives/page/5/index.html","hash":"df6d97d652e05925d341578433627c3bcccc2e6b","modified":1506751073056},{"_id":"public/archives/page/6/index.html","hash":"6d0d9229013050e753df85b1cd8b48feb456c9cf","modified":1506751073056},{"_id":"public/archives/page/7/index.html","hash":"330b2187cf8cf0a7efe5b624c3de390143d1e8ad","modified":1506751073056},{"_id":"public/archives/page/8/index.html","hash":"8bb869d3e1a3616cf2bb4c25e86ea6d990fe862e","modified":1506751073056},{"_id":"public/archives/page/9/index.html","hash":"cb729adb91c90c38f2e2c24f77af650681ba4be6","modified":1506751073056},{"_id":"public/archives/page/10/index.html","hash":"27e11160241cfc3bb578834c7642ba3199c110c0","modified":1506751073057},{"_id":"public/archives/2017/index.html","hash":"594f336c8252a9d60eae78eefd54a42ff26c0711","modified":1506667550789},{"_id":"public/archives/2017/page/2/index.html","hash":"a1d9a6e6587e71d71d4e7789a726822fbacf021b","modified":1506667550789},{"_id":"public/archives/2017/page/3/index.html","hash":"abb1dece8702324e2ea956e4f0b4f7ba0d0f24be","modified":1506751073057},{"_id":"public/archives/2017/page/4/index.html","hash":"09d80485eabde73624f59a09bc9dc4732e498aa2","modified":1506751073057},{"_id":"public/archives/2017/page/5/index.html","hash":"8f38e22464cb08294ef7521e08822bfd3b5a6dc4","modified":1506751073057},{"_id":"public/archives/2017/page/6/index.html","hash":"492222960b4326b5b8b5b9d49a460b6b865b7bc3","modified":1506751073057},{"_id":"public/archives/2017/page/7/index.html","hash":"35aae671d344675597783814f0bad6f9eb0d2153","modified":1506751073057},{"_id":"public/archives/2017/page/8/index.html","hash":"36341885d16c322ca6a1847839de2bdb93423a09","modified":1506751073057},{"_id":"public/archives/2017/page/9/index.html","hash":"0eef4e605f437f7256bf0a217331708b51a8fbd4","modified":1506751073057},{"_id":"public/archives/2017/page/10/index.html","hash":"efb99a72e33e5dd3bf5adce63fff6119d1e0f68d","modified":1506751073057},{"_id":"public/archives/2017/07/index.html","hash":"e7717b05f32cd0f45df22ad72bfec872ca61d331","modified":1506667550790},{"_id":"public/archives/2017/09/index.html","hash":"2869d38fe57217688bfeb23e52752f34c162e058","modified":1506667550790},{"_id":"public/archives/2017/09/page/2/index.html","hash":"c2229653b1b3a0353543cd048e4ed9d723650ca5","modified":1506667550790},{"_id":"public/archives/2017/09/page/3/index.html","hash":"94ec9ad05c328e973d9671acc7b0eb6e57dae239","modified":1506751073058},{"_id":"public/archives/2017/09/page/4/index.html","hash":"bc503312f68d89b0e99a929b9c96d2264a046715","modified":1506751073057},{"_id":"public/archives/2017/09/page/5/index.html","hash":"ac3c00f2541a8fa745ebc495d65b318a01522869","modified":1506751073058},{"_id":"public/archives/2017/09/page/6/index.html","hash":"7a0cb80c7c8f26a87a4d3ba1c7b31e40f95bafbe","modified":1506751073058},{"_id":"public/archives/2017/09/page/7/index.html","hash":"7ec05f779f2cd1b3de703fa9f0766de038a76761","modified":1506751073058},{"_id":"public/archives/2017/09/page/8/index.html","hash":"fbe2147aeacb77ef2e8ab1653fd062831c124320","modified":1506751073058},{"_id":"public/archives/2017/09/page/9/index.html","hash":"ac1ff90a290df8320293f0a2d78163713c921e26","modified":1506751073058},{"_id":"public/archives/2017/09/page/10/index.html","hash":"8b259f491ff63cac69a0871d890dd982d0428fbe","modified":1506751073058},{"_id":"public/index.html","hash":"a89811e23280482ffbc315570a0215af28b8232c","modified":1506667550791},{"_id":"public/page/2/index.html","hash":"cc50d72bd5e089e14ba861c0107407ce42d66fe8","modified":1506667550791},{"_id":"public/page/3/index.html","hash":"6b3c3bcc74f05f760f2eeac1481f023c71b8ca61","modified":1506751073055},{"_id":"public/page/4/index.html","hash":"419072fb9d34c097de6c1432a949211387844841","modified":1506751073055},{"_id":"public/page/5/index.html","hash":"4d8ee057261106f62d404eef5daeef89151bb81a","modified":1506751073055},{"_id":"public/page/6/index.html","hash":"00111ae5ebd86e7bccd00faa2ae9342494416cda","modified":1506751073055},{"_id":"public/page/7/index.html","hash":"08cd6714b5779b294308cc4f4a862ca08ee2d1bb","modified":1506751073055},{"_id":"public/page/8/index.html","hash":"47dbb641a9be7c8895b5b377bf918e90f6ae3f60","modified":1506751073055},{"_id":"public/page/9/index.html","hash":"bc3dadc8025e766cd5ff176515dd573a892c94f9","modified":1506751073055},{"_id":"public/page/10/index.html","hash":"a2c8d25e98a349a2dde6ef7808ae882636716153","modified":1506751073056},{"_id":"public/2017/09/29/沉浸式学习/index.html","hash":"a2945a72831690136bb2ef104197eda2f05e2f13","modified":1506667550797},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1506667550800},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1506667550800},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1506667550801},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1506667550801},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1506667550801},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1506667550801},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1506667550801},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1506667550801},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1506667550801},{"_id":"public/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1506667550811},{"_id":"public/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1506667550811},{"_id":"public/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1506667550811},{"_id":"public/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1506667550811}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Activity和Service之间通过接口进行通信","date":"2017-09-22T05:19:22.000Z","_content":"``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startService(new Intent(MainActivity.this,MainService.class));\n        MainService.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle();\n    }\n}\n\npublic class MainService extends Service{\n    public void onCreate(){\n        super.onCreate();\n        if(listener!=null){\n            listener.updateTitle(\"hello\");\n        }\n    }\n    public IBinder onBind(Intent intent){\n        return null;\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","source":"_posts/Activity和Service之间通过接口进行通信.md","raw":"---\ntitle: Activity和Service之间通过接口进行通信\ndate: 2017-09-22 13:19:22\ntags:\n---\n``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startService(new Intent(MainActivity.this,MainService.class));\n        MainService.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle();\n    }\n}\n\npublic class MainService extends Service{\n    public void onCreate(){\n        super.onCreate();\n        if(listener!=null){\n            listener.updateTitle(\"hello\");\n        }\n    }\n    public IBinder onBind(Intent intent){\n        return null;\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","slug":"Activity和Service之间通过接口进行通信","published":1,"updated":"2017-09-22T05:19:37.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygg30000eddxaabm09xp","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startService(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,MainService.class));</div><div class=\"line\">        MainService.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainService</span> <span class=\"keyword\">extends</span> <span class=\"title\">Service</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"keyword\">if</span>(listener!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            listener.updateTitle(<span class=\"string\">\"hello\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IBinder <span class=\"title\">onBind</span><span class=\"params\">(Intent intent)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startService(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,MainService.class));</div><div class=\"line\">        MainService.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainService</span> <span class=\"keyword\">extends</span> <span class=\"title\">Service</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</div><div class=\"line\">        <span class=\"keyword\">if</span>(listener!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            listener.updateTitle(<span class=\"string\">\"hello\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IBinder <span class=\"title\">onBind</span><span class=\"params\">(Intent intent)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Android单元测试","date":"2017-09-22T04:48:21.000Z","_content":"## 1.测试Activity?\n``` Java\npublic class ActivityTest extends ActivityInstrumentationTestCase2<HelloWorldActivity>{\n    private Activity activity;\n    private TextView textView;\n    public ActivityTest(){\n        super(\"com.qust.zq.math.test\",HelloWorldActivity.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        activity = this.getActivity();\n        textView = (TextView)activity.findViewById(R.id.textView);\n    }\n    public void testTextContent() throws Exception{\n        assertEquals(\"hello world\",textView.getText().toString());\n    }\n    public void testTextComponent() throws Exception{\n        assertNotNull(textView);\n    }\n}\n```\n\n## 2.测试ContentProvider?\n``` Java\npublic class ContentProviderTest extends ProviderTestCase2<FriendProvider>{\n    private Cursor cursor;\n    private String name;\n    public ContentProviderTest(){\n        super(FriendProvider.class,\"com.qust.zq.math.test\");\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        try{\n            cursor = getProvider().query(Uri.parse(\"content://com.qust.zq.math.test/friend/\"),null,null,null,null);\n            if(cursor.moveToFirst()){\n                name = cursor.getString(cursor.getColumnIndex(\"name\"));\n            }\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n    public void testCursor() throws Exception{\n        assertNotNull(cursor);\n    }\n    public void testName(){\n        assertEquals(\"xiaozhang\",name);        //这里的查询结果的记录条数为0???????\n    }\n}\n```\n\n## 3.测试Service?\n\n``` Java\npublic class ServiceTest extends ServiceTestCase<MyService>{\n    private MyService service;\n    public ServiceTest(){\n        super(MyService.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        Intent intent = new Intent(mContext,MyService.class);        //这里的mContext是ServiceTestCase中的成员变量\n        startService(intent);\n        service = getService();\n    }\n    public void testService(){\n        assertNotNull(service);\n    }\n    public void testResource(){\n        assertEquals(\"test service\",service.getString(R.string.app_name));\n    }\n}\n```\n\n## 4.测试普通类?\n\n``` Java\npublic class MyClass{\n    private String name = \"Android\";\n    public String getName(){\n        return name;\n    }\n}\n\npublic class Test extends AndroidTestCase{\n    private MyClass myClass;\n    protected void setUp() throws Exception{\n        super.setUp();\n        myClass = new MyClass();\n    }\n    public void testName(){\n        assertEquals(\"Android\",myClass.getName());\n    }\n}\n```","source":"_posts/Android单元测试.md","raw":"---\ntitle: Android单元测试\ndate: 2017-09-22 12:48:21\ntags:\n---\n## 1.测试Activity?\n``` Java\npublic class ActivityTest extends ActivityInstrumentationTestCase2<HelloWorldActivity>{\n    private Activity activity;\n    private TextView textView;\n    public ActivityTest(){\n        super(\"com.qust.zq.math.test\",HelloWorldActivity.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        activity = this.getActivity();\n        textView = (TextView)activity.findViewById(R.id.textView);\n    }\n    public void testTextContent() throws Exception{\n        assertEquals(\"hello world\",textView.getText().toString());\n    }\n    public void testTextComponent() throws Exception{\n        assertNotNull(textView);\n    }\n}\n```\n\n## 2.测试ContentProvider?\n``` Java\npublic class ContentProviderTest extends ProviderTestCase2<FriendProvider>{\n    private Cursor cursor;\n    private String name;\n    public ContentProviderTest(){\n        super(FriendProvider.class,\"com.qust.zq.math.test\");\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        try{\n            cursor = getProvider().query(Uri.parse(\"content://com.qust.zq.math.test/friend/\"),null,null,null,null);\n            if(cursor.moveToFirst()){\n                name = cursor.getString(cursor.getColumnIndex(\"name\"));\n            }\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n    public void testCursor() throws Exception{\n        assertNotNull(cursor);\n    }\n    public void testName(){\n        assertEquals(\"xiaozhang\",name);        //这里的查询结果的记录条数为0???????\n    }\n}\n```\n\n## 3.测试Service?\n\n``` Java\npublic class ServiceTest extends ServiceTestCase<MyService>{\n    private MyService service;\n    public ServiceTest(){\n        super(MyService.class);\n    }\n    protected void setUp() throws Exception{\n        super.setUp();\n        Intent intent = new Intent(mContext,MyService.class);        //这里的mContext是ServiceTestCase中的成员变量\n        startService(intent);\n        service = getService();\n    }\n    public void testService(){\n        assertNotNull(service);\n    }\n    public void testResource(){\n        assertEquals(\"test service\",service.getString(R.string.app_name));\n    }\n}\n```\n\n## 4.测试普通类?\n\n``` Java\npublic class MyClass{\n    private String name = \"Android\";\n    public String getName(){\n        return name;\n    }\n}\n\npublic class Test extends AndroidTestCase{\n    private MyClass myClass;\n    protected void setUp() throws Exception{\n        super.setUp();\n        myClass = new MyClass();\n    }\n    public void testName(){\n        assertEquals(\"Android\",myClass.getName());\n    }\n}\n```","slug":"Android单元测试","published":1,"updated":"2017-09-22T04:51:01.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygg80001eddx9h0uy39e","content":"<h2 id=\"1-测试Activity\"><a href=\"#1-测试Activity\" class=\"headerlink\" title=\"1.测试Activity?\"></a>1.测试Activity?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivityInstrumentationTestCase2</span>&lt;<span class=\"title\">HelloWorldActivity</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView textView;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ActivityTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">\"com.qust.zq.math.test\"</span>,HelloWorldActivity.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        activity = <span class=\"keyword\">this</span>.getActivity();</div><div class=\"line\">        textView = (TextView)activity.findViewById(R.id.textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextContent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"hello world\"</span>,textView.getText().toString());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextComponent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-测试ContentProvider\"><a href=\"#2-测试ContentProvider\" class=\"headerlink\" title=\"2.测试ContentProvider?\"></a>2.测试ContentProvider?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContentProviderTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ProviderTestCase2</span>&lt;<span class=\"title\">FriendProvider</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Cursor cursor;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContentProviderTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(FriendProvider.class,<span class=\"string\">\"com.qust.zq.math.test\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            cursor = getProvider().query(Uri.parse(<span class=\"string\">\"content://com.qust.zq.math.test/friend/\"</span>),<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(cursor.moveToFirst())&#123;</div><div class=\"line\">                name = cursor.getString(cursor.getColumnIndex(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testCursor</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(cursor);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"xiaozhang\"</span>,name);        <span class=\"comment\">//这里的查询结果的记录条数为0???????</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-测试Service\"><a href=\"#3-测试Service\" class=\"headerlink\" title=\"3.测试Service?\"></a>3.测试Service?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServiceTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceTestCase</span>&lt;<span class=\"title\">MyService</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyService service;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServiceTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(MyService.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(mContext,MyService.class);        <span class=\"comment\">//这里的mContext是ServiceTestCase中的成员变量</span></div><div class=\"line\">        startService(intent);</div><div class=\"line\">        service = getService();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testService</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertNotNull(service);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testResource</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"test service\"</span>,service.getString(R.string.app_name));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-测试普通类\"><a href=\"#4-测试普通类\" class=\"headerlink\" title=\"4.测试普通类?\"></a>4.测试普通类?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"Android\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyClass myClass;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        myClass = <span class=\"keyword\">new</span> MyClass();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"Android\"</span>,myClass.getName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-测试Activity\"><a href=\"#1-测试Activity\" class=\"headerlink\" title=\"1.测试Activity?\"></a>1.测试Activity?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivityInstrumentationTestCase2</span>&lt;<span class=\"title\">HelloWorldActivity</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView textView;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ActivityTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"string\">\"com.qust.zq.math.test\"</span>,HelloWorldActivity.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        activity = <span class=\"keyword\">this</span>.getActivity();</div><div class=\"line\">        textView = (TextView)activity.findViewById(R.id.textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextContent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"hello world\"</span>,textView.getText().toString());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testTextComponent</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(textView);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-测试ContentProvider\"><a href=\"#2-测试ContentProvider\" class=\"headerlink\" title=\"2.测试ContentProvider?\"></a>2.测试ContentProvider?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContentProviderTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ProviderTestCase2</span>&lt;<span class=\"title\">FriendProvider</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Cursor cursor;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ContentProviderTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(FriendProvider.class,<span class=\"string\">\"com.qust.zq.math.test\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            cursor = getProvider().query(Uri.parse(<span class=\"string\">\"content://com.qust.zq.math.test/friend/\"</span>),<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(cursor.moveToFirst())&#123;</div><div class=\"line\">                name = cursor.getString(cursor.getColumnIndex(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testCursor</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        assertNotNull(cursor);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"xiaozhang\"</span>,name);        <span class=\"comment\">//这里的查询结果的记录条数为0???????</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-测试Service\"><a href=\"#3-测试Service\" class=\"headerlink\" title=\"3.测试Service?\"></a>3.测试Service?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServiceTest</span> <span class=\"keyword\">extends</span> <span class=\"title\">ServiceTestCase</span>&lt;<span class=\"title\">MyService</span>&gt;</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyService service;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ServiceTest</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(MyService.class);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent(mContext,MyService.class);        <span class=\"comment\">//这里的mContext是ServiceTestCase中的成员变量</span></div><div class=\"line\">        startService(intent);</div><div class=\"line\">        service = getService();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testService</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertNotNull(service);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testResource</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"test service\"</span>,service.getString(R.string.app_name));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-测试普通类\"><a href=\"#4-测试普通类\" class=\"headerlink\" title=\"4.测试普通类?\"></a>4.测试普通类?</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> String name = <span class=\"string\">\"Android\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> name;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MyClass myClass;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">        myClass = <span class=\"keyword\">new</span> MyClass();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testName</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        assertEquals(<span class=\"string\">\"Android\"</span>,myClass.getName());</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Bitmap内存优化","date":"2017-09-25T07:35:36.000Z","_content":"1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收\n参考：http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\n例如：\n获取Drawable的几种方法\n((BitmapDrawable) Drawable.createFromStream(is, \"test.png\")).getBitmap();\n\n2.在必须使用Bitmap的地方\na.使用BitmapFactory.Options指定解码选项\nBitmapFactory.Options opts = new BitmapFactory.Options();\nopts.inPurgeable = true;\t\t\t\t\t\t\t\t\t\t\t\t\t//设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。\n//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。\n//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：  \n//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。\nopts.inPreferredConfig = Bitmap.Config.ARGB_4444;\t\t//这个属性可以减少图片占用的内存大小,节约一半内存\n\nb.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收\n\nc.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析\n\nd.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存\n\ne.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭\n\nf.要及时回收Bitmap内存，并将bitmap设置为null\nBitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。\n仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。\n所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。\n这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。\n所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。\n例如：\nif(bitmap != null && !bitmap.isRecycled()){ \n        // 回收并且置为null\n        bitmap.recycle(); \n        bitmap = null; \n} \nSystem.gc();\n\ng.在解析图片内存溢出的时候捕获Error重新解析\n\n例如：\nprivate void decodeBitmap(String path){\n\tBitmap bitmap = null;\n\ttry {\n\t\t// 实例化Bitmap\n\t\tbitmap = BitmapFactory.decodeFile(path);\n\t} catch (OutOfMemoryError e) {\n\t\te.printStackTrace();\n\t\tSystem.gc();\n\t\tdecodeBitmap(path);\n\t\t\n\t}\n}\n\nh.尝试使用cocos2dx做《WorldCup》的动态壁纸？\n\ni.查看是否有内存泄露\n\n可以使用Eclipse中的DDMS视图查看\n先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了\n如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加\n\nj.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR\n\nk.研究一下gallery加载图片的方法\n\nl.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，\n使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】\n \nm.如何在WallpaperService.Engine中使用Animation???\n\nn.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：\n//decodeStream直接调用 JNI>>nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。\n\no.通过程序设定增强内存处理效率和自定义堆内存大小。","source":"_posts/Bitmap内存优化.md","raw":"---\ntitle: Bitmap内存优化\ndate: 2017-09-25 15:35:36\ntags:\n---\n1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收\n参考：http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\n例如：\n获取Drawable的几种方法\n((BitmapDrawable) Drawable.createFromStream(is, \"test.png\")).getBitmap();\n\n2.在必须使用Bitmap的地方\na.使用BitmapFactory.Options指定解码选项\nBitmapFactory.Options opts = new BitmapFactory.Options();\nopts.inPurgeable = true;\t\t\t\t\t\t\t\t\t\t\t\t\t//设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。\n//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。\n//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：  \n//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。\nopts.inPreferredConfig = Bitmap.Config.ARGB_4444;\t\t//这个属性可以减少图片占用的内存大小,节约一半内存\n\nb.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收\n\nc.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析\n\nd.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存\n\ne.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭\n\nf.要及时回收Bitmap内存，并将bitmap设置为null\nBitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。\n仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。\n所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。\n这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。\n所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。\n例如：\nif(bitmap != null && !bitmap.isRecycled()){ \n        // 回收并且置为null\n        bitmap.recycle(); \n        bitmap = null; \n} \nSystem.gc();\n\ng.在解析图片内存溢出的时候捕获Error重新解析\n\n例如：\nprivate void decodeBitmap(String path){\n\tBitmap bitmap = null;\n\ttry {\n\t\t// 实例化Bitmap\n\t\tbitmap = BitmapFactory.decodeFile(path);\n\t} catch (OutOfMemoryError e) {\n\t\te.printStackTrace();\n\t\tSystem.gc();\n\t\tdecodeBitmap(path);\n\t\t\n\t}\n}\n\nh.尝试使用cocos2dx做《WorldCup》的动态壁纸？\n\ni.查看是否有内存泄露\n\n可以使用Eclipse中的DDMS视图查看\n先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了\n如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加\n\nj.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR\n\nk.研究一下gallery加载图片的方法\n\nl.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，\n使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】\n \nm.如何在WallpaperService.Engine中使用Animation???\n\nn.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：\n//decodeStream直接调用 JNI>>nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。\n\no.通过程序设定增强内存处理效率和自定义堆内存大小。","slug":"Bitmap内存优化","published":1,"updated":"2017-09-25T07:35:56.906Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygg90002eddxuumfuppl","content":"<p>1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收<br>参考：<a href=\"http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html</a><br>例如：<br>获取Drawable的几种方法<br>((BitmapDrawable) Drawable.createFromStream(is, “test.png”)).getBitmap();</p>\n<p>2.在必须使用Bitmap的地方<br>a.使用BitmapFactory.Options指定解码选项<br>BitmapFactory.Options opts = new BitmapFactory.Options();<br>opts.inPurgeable = true;                                                    //设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。<br>//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。<br>//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：<br>//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。<br>opts.inPreferredConfig = Bitmap.Config.ARGB_4444;        //这个属性可以减少图片占用的内存大小,节约一半内存</p>\n<p>b.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收</p>\n<p>c.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析</p>\n<p>d.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存</p>\n<p>e.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭</p>\n<p>f.要及时回收Bitmap内存，并将bitmap设置为null<br>Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。<br>仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。<br>所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。<br>这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。<br>所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。<br>例如：<br>if(bitmap != null &amp;&amp; !bitmap.isRecycled()){<br>        // 回收并且置为null<br>        bitmap.recycle();<br>        bitmap = null;<br>}<br>System.gc();</p>\n<p>g.在解析图片内存溢出的时候捕获Error重新解析</p>\n<p>例如：<br>private void decodeBitmap(String path){<br>    Bitmap bitmap = null;<br>    try {<br>        // 实例化Bitmap<br>        bitmap = BitmapFactory.decodeFile(path);<br>    } catch (OutOfMemoryError e) {<br>        e.printStackTrace();<br>        System.gc();<br>        decodeBitmap(path);</p>\n<pre><code>}\n</code></pre><p>}</p>\n<p>h.尝试使用cocos2dx做《WorldCup》的动态壁纸？</p>\n<p>i.查看是否有内存泄露</p>\n<p>可以使用Eclipse中的DDMS视图查看<br>先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了<br>如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加</p>\n<p>j.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR</p>\n<p>k.研究一下gallery加载图片的方法</p>\n<p>l.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，<br>使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】</p>\n<p>m.如何在WallpaperService.Engine中使用Animation???</p>\n<p>n.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：<br>//decodeStream直接调用 JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。</p>\n<p>o.通过程序设定增强内存处理效率和自定义堆内存大小。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.将加载Bitmap的地方都改为加载Drawable，Drawable应该不属于常驻内存的对象,因为解析Bitmap比较消耗内存，而且Bitmap的内存不容易被系统回收<br>参考：<a href=\"http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_696bcf8f0101etkd.html</a><br>例如：<br>获取Drawable的几种方法<br>((BitmapDrawable) Drawable.createFromStream(is, “test.png”)).getBitmap();</p>\n<p>2.在必须使用Bitmap的地方<br>a.使用BitmapFactory.Options指定解码选项<br>BitmapFactory.Options opts = new BitmapFactory.Options();<br>opts.inPurgeable = true;                                                    //设置Options.inPurgeable和inInputShareable：让系统能及时回收内存。<br>//1）inPurgeable：设置为True时，表示系统内存不足时可以被回 收，设置为False时，表示不能被回收。<br>//2）inInputShareable：设置是否深拷贝，与inPurgeable结合使用，inPurgeable为false时，该参数无意义True：<br>//share  a reference to the input data(inputStream, array,etc) 。 False ：a deep copy。<br>opts.inPreferredConfig = Bitmap.Config.ARGB_4444;        //这个属性可以减少图片占用的内存大小,节约一半内存</p>\n<p>b.将Bitmap用WeakReference或SoftReference包装起来，方便系统回收</p>\n<p>c.将一些常用的Bitmap（如主题应用图标中的foreground和background）缓存到Map中，方便再次获取，而不需要再次解析</p>\n<p>d.在使用流的地方，一点要在finally里面讲流关闭，因为流也会占用一些内存</p>\n<p>e.在需要使用Paint画图的地方，在确保不失真的情况下，可以将paint的anti_alias属性关闭</p>\n<p>f.要及时回收Bitmap内存，并将bitmap设置为null<br>Bitmap类的构造方法都是私有的，所以开发者不能直接new出一个Bitmap对象，只能通过BitmapFactory类的各种静态方法来实例化一个Bitmap。<br>仔细查看BitmapFactory的源代码可以看到，生成Bitmap对象最终都是通过JNI调用方式实现的。<br>所以，加载 Bitmap到内存里以后，是包含两部分内存区域的。简单的说，一部分是Java部分的，一部分是C部分的。<br>这个Bitmap对象是由Java部分分配的，不用的时候系统就会自动回收了，但是那个对应的C可用的内存区域，虚拟机是不能直接回收的，这个只能调用底层的功能释放。<br>所以需要调用 recycle()方法来释放C部分的内存。从Bitmap类的源代码也可以看到，recycle()方法里也的确是调用了JNI方法了的。<br>例如：<br>if(bitmap != null &amp;&amp; !bitmap.isRecycled()){<br>        // 回收并且置为null<br>        bitmap.recycle();<br>        bitmap = null;<br>}<br>System.gc();</p>\n<p>g.在解析图片内存溢出的时候捕获Error重新解析</p>\n<p>例如：<br>private void decodeBitmap(String path){<br>    Bitmap bitmap = null;<br>    try {<br>        // 实例化Bitmap<br>        bitmap = BitmapFactory.decodeFile(path);<br>    } catch (OutOfMemoryError e) {<br>        e.printStackTrace();<br>        System.gc();<br>        decodeBitmap(path);</p>\n<pre><code>}\n</code></pre><p>}</p>\n<p>h.尝试使用cocos2dx做《WorldCup》的动态壁纸？</p>\n<p>i.查看是否有内存泄露</p>\n<p>可以使用Eclipse中的DDMS视图查看<br>先在Device中选择一个进行，点击上面的update heap按钮，在点击heap中的cause gc按钮，就会在下面显示某个进程的内存使用情况了<br>如果存在内存泄露，gc之后内存不会有明显变化，内存还是会一直增加</p>\n<p>j.将解析图片的方法放在子线程中进行，防止主线程阻塞出现ANR</p>\n<p>k.研究一下gallery加载图片的方法</p>\n<p>l.使用多分辨率图片设计[hdpi,mdpi,ldpi,xhdpi]。UI图片分别设计hdpi,mdpi,ldpi,xhdpi等多种规格，这也是官方推荐的方式，<br>使用这种方式，还有好处就是可以降低峰值内存，优先避免内存溢出。在android中图片的加载会根据分辨率来自动缩放【缩放的过程会额外消耗内存】</p>\n<p>m.如何在WallpaperService.Engine中使用Animation???</p>\n<p>n.使用decodeStream代替其他decodeResource,setImageResource,setImageBitmap等方法：<br>//decodeStream直接调用 JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，也不使用java空间进行分辨率适配，虽节省dalvik内存，但需要在hdpi和mdpi，ldpi中配置相应的 图片资源，否则在不同分辨率机器上都是同样大小（像素点数量）。其他方法如setImageBitmap、setImageResource、 BitmapFactory.decodeResource在完成decode后，最终都是通过java层的 createBitmap来完成的，需要消耗更多内存。</p>\n<p>o.通过程序设定增强内存处理效率和自定义堆内存大小。</p>\n"},{"title":"Intent的高级写法","date":"2017-09-28T07:39:49.000Z","_content":"\n\nIntent的高级写法?\n\n1.普通写Intent的方法和缺陷\n\n普通activity a要调用起activity b页面会这么写:\nMainActivity.java\n``` Java\nIntent intent = new Intent(MainActivity.this, SecondActivity.class);\nintent.putExtra(\"is_index\", message);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(\"is_index\");\n    ...\n}\n```\n\n> \n上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。\nso，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。\n\n2.优化写Intent\n\nMainActivity.java\n``` Java\nIntent intent = SecondActivity.newIndexIntent(this, text);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\nprivate final static String IS_INDEX = \"is_index\";\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(IS_INDEX);\n    ...\n}\npublic static Intent newIndexIntent(Context context, String message) {\n    Intent newIntent = new Intent(context, b.class);\n    newIntent.putExtra(IS_INDEX, message);\n    return newIntent;\n}\n```","source":"_posts/Intent的高级写法.md","raw":"---\ntitle: Intent的高级写法\ndate: 2017-09-28 15:39:49\ntags:\n---\n\n\nIntent的高级写法?\n\n1.普通写Intent的方法和缺陷\n\n普通activity a要调用起activity b页面会这么写:\nMainActivity.java\n``` Java\nIntent intent = new Intent(MainActivity.this, SecondActivity.class);\nintent.putExtra(\"is_index\", message);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(\"is_index\");\n    ...\n}\n```\n\n> \n上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。\nso，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。\n\n2.优化写Intent\n\nMainActivity.java\n``` Java\nIntent intent = SecondActivity.newIndexIntent(this, text);\nstartActivity(intent);\n```\n\nSecondActivity.java\n``` Java\nprivate final static String IS_INDEX = \"is_index\";\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {        \n    super.onCreate(savedInstanceState);\n    ...\n    String is_index = getIntent().getExtras().getString(IS_INDEX);\n    ...\n}\npublic static Intent newIndexIntent(Context context, String message) {\n    Intent newIntent = new Intent(context, b.class);\n    newIntent.putExtra(IS_INDEX, message);\n    return newIntent;\n}\n```","slug":"Intent的高级写法","published":1,"updated":"2017-09-28T07:40:03.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygga0003eddxbiactqlt","content":"<p>Intent的高级写法?</p>\n<p>1.普通写Intent的方法和缺陷</p>\n<p>普通activity a要调用起activity b页面会这么写:<br>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>, SecondActivity.class);</div><div class=\"line\">intent.putExtra(<span class=\"string\">\"is_index\"</span>, message);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(<span class=\"string\">\"is_index\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。<br>so，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。</p>\n</blockquote>\n<p>2.优化写Intent</p>\n<p>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = SecondActivity.newIndexIntent(<span class=\"keyword\">this</span>, text);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String IS_INDEX = <span class=\"string\">\"is_index\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(IS_INDEX);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Intent <span class=\"title\">newIndexIntent</span><span class=\"params\">(Context context, String message)</span> </span>&#123;</div><div class=\"line\">    Intent newIntent = <span class=\"keyword\">new</span> Intent(context, b.class);</div><div class=\"line\">    newIntent.putExtra(IS_INDEX, message);</div><div class=\"line\">    <span class=\"keyword\">return</span> newIntent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Intent的高级写法?</p>\n<p>1.普通写Intent的方法和缺陷</p>\n<p>普通activity a要调用起activity b页面会这么写:<br>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>, SecondActivity.class);</div><div class=\"line\">intent.putExtra(<span class=\"string\">\"is_index\"</span>, message);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(<span class=\"string\">\"is_index\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>上面的写法是大多数Intent写法，在发起方创建intent。但这种写法在代码量大大增加的时候会出现一个问题。当activity b在各种地方都会被调用起的时候，并且会传入各种各样不同的extra字段时，会发现很混乱，哪些发起方使用了哪些extra字段，每个字段什么意思，哪些是必须的等等问题。最终造成b代码可读性变差，让以后想要调用起b的页面也不清楚需要传入哪些extra。<br>so，根据以上问题，无意间看到了google官方example代码里一个使用intent的小技巧。</p>\n</blockquote>\n<p>2.优化写Intent</p>\n<p>MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent = SecondActivity.newIndexIntent(<span class=\"keyword\">this</span>, text);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure></p>\n<p>SecondActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String IS_INDEX = <span class=\"string\">\"is_index\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;        </div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    ...</div><div class=\"line\">    String is_index = getIntent().getExtras().getString(IS_INDEX);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Intent <span class=\"title\">newIndexIntent</span><span class=\"params\">(Context context, String message)</span> </span>&#123;</div><div class=\"line\">    Intent newIntent = <span class=\"keyword\">new</span> Intent(context, b.class);</div><div class=\"line\">    newIntent.putExtra(IS_INDEX, message);</div><div class=\"line\">    <span class=\"keyword\">return</span> newIntent;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"L6735M平台上如何配置才能使SN号码唯一","date":"2017-09-22T02:20:50.000Z","_content":"alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig\n\nalps下搜索结果：\n```\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL\n```\n\nKK2版代码将序列号唯一功能的代码放到\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n\n所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件\nalps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h\n\n也可以直接放到mt_boot.c文件。\n另外，修改\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n``` c\nmt_boot_init(){\n    ...\n    key = readl(SERIAL_KEY_HI);\n    key = (key << 32) | readl(SERIAL_KEY_LO);\n    ...\n}\n```\n修改为\n``` c\nmt_boot_init(){\n    ...\n    key = get_devinfo_with_index(13);\n    key = (key << 32) | get_devinfo_with_index(12);\n    ...\n}\n```\n","source":"_posts/L6735M平台上如何配置才能使SN号码唯一.md","raw":"---\ntitle: L6735M平台上如何配置才能使SN号码唯一\ndate: 2017-09-22 10:20:50\ntags:\n---\nalps/bootable/bootloader/lk/app/mt_boot/mt_boot.c\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig\nalps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig\nsagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig\n\nalps下搜索结果：\n```\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set\n./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) && defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL\n./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL\n```\n\nKK2版代码将序列号唯一功能的代码放到\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n\n所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件\nalps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h\n\n也可以直接放到mt_boot.c文件。\n另外，修改\nalps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c\n``` c\nmt_boot_init(){\n    ...\n    key = readl(SERIAL_KEY_HI);\n    key = (key << 32) | readl(SERIAL_KEY_LO);\n    ...\n}\n```\n修改为\n``` c\nmt_boot_init(){\n    ...\n    key = get_devinfo_with_index(13);\n    key = (key << 32) | get_devinfo_with_index(12);\n    ...\n}\n```\n","slug":"L6735M平台上如何配置才能使SN号码唯一","published":1,"updated":"2017-09-22T02:23:25.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggb0004eddxnopvkehf","content":"<p>alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig</p>\n<p>alps下搜索结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL</div></pre></td></tr></table></figure></p>\n<p>KK2版代码将序列号唯一功能的代码放到<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c</p>\n<p>所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件<br>alps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h</chip></p>\n<p>也可以直接放到mt_boot.c文件。<br>另外，修改<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = readl(SERIAL_KEY_HI);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | readl(SERIAL_KEY_LO);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = get_devinfo_with_index(<span class=\"number\">13</span>);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | get_devinfo_with_index(<span class=\"number\">12</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>alps/bootable/bootloader/lk/app/mt_boot/mt_boot.c<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig<br>alps/kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_debug_defconfig<br>sagereal/mk/WQ26_GMO_H515_DDM/sr6735m_35gu_l_defconfig</p>\n<p>alps下搜索结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/source/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./out/target/product/sr6735m_35gu_l/obj/KERNEL_OBJ/.config:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/drivers/misc/mediatek/mach/mt6735/mt_devs.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL)</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm64/configs/sr6735m_65c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gu_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35u_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35gc_l_debug_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./kernel-3.10/arch/arm/configs/sr6735m_35c_l_defconfig:# CONFIG_MTK_USB_UNIQUE_SERIAL is not set</div><div class=\"line\">./bootable/bootloader/lk/platform/mt6735/include/platform/mt_reg_base.h:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#if defined(CONFIG_MTK_USB_UNIQUE_SERIAL) || (defined(MTK_SECURITY_SW_SUPPORT) &amp;&amp; defined(MTK_SEC_FASTBOOT_UNLOCK_SUPPORT))</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#endif /* CONFIG_MTK_USB_UNIQUE_SERIAL */</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/app/mt_boot/mt_boot.c:#ifdef CONFIG_MTK_USB_UNIQUE_SERIAL</div><div class=\"line\">./bootable/bootloader/lk/makefile:CFLAGS += -DCONFIG_MTK_USB_UNIQUE_SERIAL</div></pre></td></tr></table></figure></p>\n<p>KK2版代码将序列号唯一功能的代码放到<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c</p>\n<p>所以定义宏 #define CONFIG_MTK_USB_UNIQUE_SERIAL 的位置要放到文件<br>alps\\bootable\\bootloader\\lk\\platform\\mediatek\\<chip>\\lk\\include\\platform\\mt_reg_base.h</chip></p>\n<p>也可以直接放到mt_boot.c文件。<br>另外，修改<br>alps\\bootable\\bootloader\\lk\\app\\mt_boot\\mt_boot.c<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = readl(SERIAL_KEY_HI);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | readl(SERIAL_KEY_LO);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mt_boot_init()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    key = get_devinfo_with_index(<span class=\"number\">13</span>);</div><div class=\"line\">    key = (key &lt;&lt; <span class=\"number\">32</span>) | get_devinfo_with_index(<span class=\"number\">12</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"ListView界面点击按键的时候会显示快捷搜索框","date":"2017-09-21T08:55:39.000Z","_content":"``` Java\nlistView.setTextFilterEnabled(false);\n```","source":"_posts/ListView界面点击按键的时候会显示快捷搜索框.md","raw":"---\ntitle: ListView界面点击按键的时候会显示快捷搜索框\ndate: 2017-09-21 16:55:39\ntags:\n---\n``` Java\nlistView.setTextFilterEnabled(false);\n```","slug":"ListView界面点击按键的时候会显示快捷搜索框","published":1,"updated":"2017-09-21T08:56:00.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggc0005eddx04d073k0","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView.setTextFilterEnabled(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">listView.setTextFilterEnabled(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>"},{"title":"Observer观察者模式","date":"2017-09-22T05:17:51.000Z","_content":"``` Java\npublic class Invarient{                                        //相当于View\n    private Observer observer;\n    public void template_method(){                            //相当于点击了一下按钮\n        observer.hook_varient();\n    }\n    protected void attach(Observer observer){                //相当于setOnClickListener(OnClickListener onClickListener)方法\n        this.observer = observer;\n    }\n}\npublic abstract class Observer{                                //相当于OnClickListener\n    public abstract void hook_varient();                    //相当于onClick(View v)方法\n}\npublic class ConcreteObserver_Varient extends Observer{        //相当于OnClickListener的实现类\n    public void hook_varient(){\n        System.out.println(\"hook_varient...\");\n    }\n}\npublic class Main{\n    public static void main(String[] args){\n        Invarient iv = new Invarient();                        \n        iv.attach(new ConcreteObserver_Varient());            \n        iv.template_method();\n    }\n}\n```","source":"_posts/Observer观察者模式.md","raw":"---\ntitle: Observer观察者模式\ndate: 2017-09-22 13:17:51\ntags:\n---\n``` Java\npublic class Invarient{                                        //相当于View\n    private Observer observer;\n    public void template_method(){                            //相当于点击了一下按钮\n        observer.hook_varient();\n    }\n    protected void attach(Observer observer){                //相当于setOnClickListener(OnClickListener onClickListener)方法\n        this.observer = observer;\n    }\n}\npublic abstract class Observer{                                //相当于OnClickListener\n    public abstract void hook_varient();                    //相当于onClick(View v)方法\n}\npublic class ConcreteObserver_Varient extends Observer{        //相当于OnClickListener的实现类\n    public void hook_varient(){\n        System.out.println(\"hook_varient...\");\n    }\n}\npublic class Main{\n    public static void main(String[] args){\n        Invarient iv = new Invarient();                        \n        iv.attach(new ConcreteObserver_Varient());            \n        iv.template_method();\n    }\n}\n```","slug":"Observer观察者模式","published":1,"updated":"2017-09-22T05:18:12.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggd0006eddxa0bdexdc","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invarient</span></span>&#123;                                        <span class=\"comment\">//相当于View</span></div><div class=\"line\">    <span class=\"keyword\">private</span> Observer observer;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;                            <span class=\"comment\">//相当于点击了一下按钮</span></div><div class=\"line\">        observer.hook_varient();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">attach</span><span class=\"params\">(Observer observer)</span></span>&#123;                <span class=\"comment\">//相当于setOnClickListener(OnClickListener onClickListener)方法</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.observer = observer;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span></span>&#123;                                <span class=\"comment\">//相当于OnClickListener</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>;                    <span class=\"comment\">//相当于onClick(View v)方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteObserver_Varient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;        <span class=\"comment\">//相当于OnClickListener的实现类</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"hook_varient...\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Invarient iv = <span class=\"keyword\">new</span> Invarient();                        </div><div class=\"line\">        iv.attach(<span class=\"keyword\">new</span> ConcreteObserver_Varient());            </div><div class=\"line\">        iv.template_method();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Invarient</span></span>&#123;                                        <span class=\"comment\">//相当于View</span></div><div class=\"line\">    <span class=\"keyword\">private</span> Observer observer;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;                            <span class=\"comment\">//相当于点击了一下按钮</span></div><div class=\"line\">        observer.hook_varient();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">attach</span><span class=\"params\">(Observer observer)</span></span>&#123;                <span class=\"comment\">//相当于setOnClickListener(OnClickListener onClickListener)方法</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.observer = observer;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span></span>&#123;                                <span class=\"comment\">//相当于OnClickListener</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>;                    <span class=\"comment\">//相当于onClick(View v)方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteObserver_Varient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;        <span class=\"comment\">//相当于OnClickListener的实现类</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hook_varient</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"hook_varient...\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Invarient iv = <span class=\"keyword\">new</span> Invarient();                        </div><div class=\"line\">        iv.attach(<span class=\"keyword\">new</span> ConcreteObserver_Varient());            </div><div class=\"line\">        iv.template_method();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Toast优化","date":"2017-09-22T03:14:53.000Z","_content":"``` Java\nprivate Toast mToast;\nprivate void showToast(String msg){\n    if(mToast == null){\n        mToast = Toast.makeText(mContext,\"\",2000);\n    }\n    mToast.setText(msg);\n    mToast.show();\n}\n```","source":"_posts/Toast优化.md","raw":"---\ntitle: Toast优化\ndate: 2017-09-22 11:14:53\ntags:\n---\n``` Java\nprivate Toast mToast;\nprivate void showToast(String msg){\n    if(mToast == null){\n        mToast = Toast.makeText(mContext,\"\",2000);\n    }\n    mToast.setText(msg);\n    mToast.show();\n}\n```","slug":"Toast优化","published":1,"updated":"2017-09-22T03:15:12.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygge0007eddxutlxkqjd","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> Toast mToast;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showToast</span><span class=\"params\">(String msg)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(mToast == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        mToast = Toast.makeText(mContext,<span class=\"string\">\"\"</span>,<span class=\"number\">2000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mToast.setText(msg);</div><div class=\"line\">    mToast.show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> Toast mToast;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showToast</span><span class=\"params\">(String msg)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(mToast == <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        mToast = Toast.makeText(mContext,<span class=\"string\">\"\"</span>,<span class=\"number\">2000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mToast.setText(msg);</div><div class=\"line\">    mToast.show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Snackbar的学习和使用","date":"2017-09-29T06:15:17.000Z","_content":"Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。\n\n1.Snackbar基本介绍\n\n使用Snackbar要导入com.android.support:design库。\n``` gradle\ndependencies {\n    ...\n    compile 'com.android.support:appcompat-v7:26.+'\n    ...\n}\n```\n\nSnackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。\n\nSnackbar的基本使用很简单，与Toast类似。\n``` Java\nSnackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();\n```\nmake()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。\n\nsetAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。\n``` Java\nSnackbar.make(coordinatorLayout, \"这是massage\", Snackbar.LENGTH_LONG).setAction(\"这是action\", new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Toast.makeText(MainActivity.this, \"你点击了action\", Toast.LENGTH_SHORT).show();\n     }\n }).show();\n```\n\n2.SnackbarUtil工具类\n``` Java\nimport android.graphics.Color;\nimport android.support.design.widget.Snackbar;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\n/**\n * Created by zq on 17-9-29.\n */\n\npublic class SnackbarUtil {\n\n    public static final int Info = 1;\n    public static final int Confirm = 2;\n    public static final int Warning = 3;\n    public static final int Alert = 4;\n\n    public static int red = 0xfff44336;\n    public static int green = 0xff4caf50;\n    public static int blue = 0xff2195f3;\n    public static int orange = 0xffffc107;\n\n    /**\n     * 短显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 短显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    //选择预设类型\n    private static void switchType(Snackbar snackbar, int type) {\n        switch (type) {\n            case Info:\n                setSnackbarColor(snackbar, blue);\n                break;\n            case Confirm:\n                setSnackbarColor(snackbar, green);\n                break;\n            case Warning:\n                setSnackbarColor(snackbar, orange);\n                break;\n            case Alert:\n                setSnackbarColor(snackbar, Color.YELLOW, red);\n                break;\n        }\n    }\n\n    /**\n     * 设置Snackbar背景颜色\n     *\n     * @param snackbar\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n        }\n    }\n\n    /**\n     * 设置Snackbar文字和背景颜色\n     *\n     * @param snackbar\n     * @param messageColor\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int messageColor, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);\n        }\n    }\n\n    /**\n     * 向Snackbar中添加view\n     *\n     * @param snackbar\n     * @param layoutId\n     * @param index    新加布局在Snackbar中的位置\n     */\n    public static void SnackbarAddView(Snackbar snackbar, int layoutId, int index) {\n        View snackbarview = snackbar.getView();\n        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;\n\n        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, null);\n\n        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n        p.gravity = Gravity.CENTER_VERTICAL;\n\n        snackbarLayout.addView(add_view, index, p);\n    }\n\n}\n```","source":"_posts/Snackbar的学习和使用.md","raw":"---\ntitle: Snackbar的学习和使用\ndate: 2017-09-29 14:15:17\ntags:\n---\nSnackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。\n\n1.Snackbar基本介绍\n\n使用Snackbar要导入com.android.support:design库。\n``` gradle\ndependencies {\n    ...\n    compile 'com.android.support:appcompat-v7:26.+'\n    ...\n}\n```\n\nSnackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。\n\nSnackbar的基本使用很简单，与Toast类似。\n``` Java\nSnackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();\n```\nmake()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。\n\nsetAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。\n``` Java\nSnackbar.make(coordinatorLayout, \"这是massage\", Snackbar.LENGTH_LONG).setAction(\"这是action\", new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Toast.makeText(MainActivity.this, \"你点击了action\", Toast.LENGTH_SHORT).show();\n     }\n }).show();\n```\n\n2.SnackbarUtil工具类\n``` Java\nimport android.graphics.Color;\nimport android.support.design.widget.Snackbar;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\n/**\n * Created by zq on 17-9-29.\n */\n\npublic class SnackbarUtil {\n\n    public static final int Info = 1;\n    public static final int Confirm = 2;\n    public static final int Warning = 3;\n    public static final int Alert = 4;\n\n    public static int red = 0xfff44336;\n    public static int green = 0xff4caf50;\n    public static int blue = 0xff2195f3;\n    public static int orange = 0xffffc107;\n\n    /**\n     * 短显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，自定义颜色\n     *\n     * @param view\n     * @param message\n     * @param messageColor\n     * @param backgroundColor\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int messageColor, int backgroundColor) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        setSnackbarColor(snackbar, messageColor, backgroundColor);\n        return snackbar;\n    }\n\n    /**\n     * 短显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar ShortSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 长显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar LongSnackbar(View view, String message, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    /**\n     * 自定义时常显示Snackbar，可选预设类型\n     *\n     * @param view\n     * @param message\n     * @param type\n     * @return\n     */\n    public static Snackbar IndefiniteSnackbar(View view, String message, int duration, int type) {\n        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);\n        switchType(snackbar, type);\n        return snackbar;\n    }\n\n    //选择预设类型\n    private static void switchType(Snackbar snackbar, int type) {\n        switch (type) {\n            case Info:\n                setSnackbarColor(snackbar, blue);\n                break;\n            case Confirm:\n                setSnackbarColor(snackbar, green);\n                break;\n            case Warning:\n                setSnackbarColor(snackbar, orange);\n                break;\n            case Alert:\n                setSnackbarColor(snackbar, Color.YELLOW, red);\n                break;\n        }\n    }\n\n    /**\n     * 设置Snackbar背景颜色\n     *\n     * @param snackbar\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n        }\n    }\n\n    /**\n     * 设置Snackbar文字和背景颜色\n     *\n     * @param snackbar\n     * @param messageColor\n     * @param backgroundColor\n     */\n    public static void setSnackbarColor(Snackbar snackbar, int messageColor, int backgroundColor) {\n        View view = snackbar.getView();\n        if (view != null) {\n            view.setBackgroundColor(backgroundColor);\n            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);\n        }\n    }\n\n    /**\n     * 向Snackbar中添加view\n     *\n     * @param snackbar\n     * @param layoutId\n     * @param index    新加布局在Snackbar中的位置\n     */\n    public static void SnackbarAddView(Snackbar snackbar, int layoutId, int index) {\n        View snackbarview = snackbar.getView();\n        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;\n\n        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, null);\n\n        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n        p.gravity = Gravity.CENTER_VERTICAL;\n\n        snackbarLayout.addView(add_view, index, p);\n    }\n\n}\n```","slug":"Snackbar的学习和使用","published":1,"updated":"2017-09-29T06:20:26.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggf0008eddxifbwcafw","content":"<p>Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。</p>\n<p>1.Snackbar基本介绍</p>\n<p>使用Snackbar要导入com.android.support:design库。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">compile</span> <span class=\"string\">'com.android.support:appcompat-v7:26.+'</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Snackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。</p>\n<p>Snackbar的基本使用很简单，与Toast类似。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();</div></pre></td></tr></table></figure></p>\n<p>make()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。</p>\n<p>setAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(coordinatorLayout, <span class=\"string\">\"这是massage\"</span>, Snackbar.LENGTH_LONG).setAction(<span class=\"string\">\"这是action\"</span>, <span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"你点击了action\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;).show();</div></pre></td></tr></table></figure></p>\n<p>2.SnackbarUtil工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Color;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Gravity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.LayoutInflater;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.LinearLayout;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by zq on 17-9-29.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SnackbarUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Info = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Confirm = <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Warning = <span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Alert = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> red = <span class=\"number\">0xfff44336</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> green = <span class=\"number\">0xff4caf50</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> blue = <span class=\"number\">0xff2195f3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> orange = <span class=\"number\">0xffffc107</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//选择预设类型</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">switchType</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> Info:</div><div class=\"line\">                setSnackbarColor(snackbar, blue);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Confirm:</div><div class=\"line\">                setSnackbarColor(snackbar, green);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Warning:</div><div class=\"line\">                setSnackbarColor(snackbar, orange);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Alert:</div><div class=\"line\">                setSnackbarColor(snackbar, Color.YELLOW, red);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar文字和背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向Snackbar中添加view</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> layoutId</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index    新加布局在Snackbar中的位置</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SnackbarAddView</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">int</span> index)</span> </span>&#123;</div><div class=\"line\">        View snackbarview = snackbar.getView();</div><div class=\"line\">        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class=\"line\"></div><div class=\"line\">        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">        LinearLayout.LayoutParams p = <span class=\"keyword\">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class=\"line\">        p.gravity = Gravity.CENTER_VERTICAL;</div><div class=\"line\"></div><div class=\"line\">        snackbarLayout.addView(add_view, index, p);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Snackbar是Android Support Design Library库中的一个控件，可以在屏幕底部快速弹出消息，比Toast更加好用。本文对原生Snackbar进行了修改，使其更加灵活。</p>\n<p>1.Snackbar基本介绍</p>\n<p>使用Snackbar要导入com.android.support:design库。<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">compile</span> <span class=\"string\">'com.android.support:appcompat-v7:26.+'</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Snackbar显示在所有屏幕其它元素之上(屏幕最顶层)，同一时间只能显示一个snackbar。</p>\n<p>Snackbar的基本使用很简单，与Toast类似。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(view, message_text, duration).setAction(action_text, click_listener).show();</div></pre></td></tr></table></figure></p>\n<p>make()方法是生成Snackbar的。Snackbar需要一个控件容器view用来容纳，官方推荐使用CoordinatorLayout来确保Snackbar和其他组件的交互，比如滑动取消Snackbar、Snackbar出现时FloatingActionButton上移。显示时间duration有三种类型LENGTH_SHORT、LENGTH_LONG和LENGTH_INDEFINITE。</p>\n<p>setAction()方法可设置Snackbar右侧按钮，增加进行交互事件。如果不使用setAction()则只显示左侧message。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Snackbar.make(coordinatorLayout, <span class=\"string\">\"这是massage\"</span>, Snackbar.LENGTH_LONG).setAction(<span class=\"string\">\"这是action\"</span>, <span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(MainActivity.<span class=\"keyword\">this</span>, <span class=\"string\">\"你点击了action\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;).show();</div></pre></td></tr></table></figure></p>\n<p>2.SnackbarUtil工具类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Color;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Gravity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.LayoutInflater;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.LinearLayout;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by zq on 17-9-29.</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SnackbarUtil</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Info = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Confirm = <span class=\"number\">2</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Warning = <span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> Alert = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> red = <span class=\"number\">0xfff44336</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> green = <span class=\"number\">0xff4caf50</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> blue = <span class=\"number\">0xff2195f3</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> orange = <span class=\"number\">0xffffc107</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，自定义颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        setSnackbarColor(snackbar, messageColor, backgroundColor);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 短显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">ShortSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_SHORT);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 长显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">LongSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_LONG);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 自定义时常显示Snackbar，可选预设类型</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> view</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> type</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Snackbar <span class=\"title\">IndefiniteSnackbar</span><span class=\"params\">(View view, String message, <span class=\"keyword\">int</span> duration, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        Snackbar snackbar = Snackbar.make(view, message, Snackbar.LENGTH_INDEFINITE).setDuration(duration);</div><div class=\"line\">        switchType(snackbar, type);</div><div class=\"line\">        <span class=\"keyword\">return</span> snackbar;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//选择预设类型</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">switchType</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> type)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> Info:</div><div class=\"line\">                setSnackbarColor(snackbar, blue);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Confirm:</div><div class=\"line\">                setSnackbarColor(snackbar, green);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Warning:</div><div class=\"line\">                setSnackbarColor(snackbar, orange);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> Alert:</div><div class=\"line\">                setSnackbarColor(snackbar, Color.YELLOW, red);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 设置Snackbar文字和背景颜色</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> messageColor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> backgroundColor</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setSnackbarColor</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> messageColor, <span class=\"keyword\">int</span> backgroundColor)</span> </span>&#123;</div><div class=\"line\">        View view = snackbar.getView();</div><div class=\"line\">        <span class=\"keyword\">if</span> (view != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            view.setBackgroundColor(backgroundColor);</div><div class=\"line\">            ((TextView) view.findViewById(R.id.snackbar_text)).setTextColor(messageColor);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * 向Snackbar中添加view</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> snackbar</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> layoutId</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index    新加布局在Snackbar中的位置</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SnackbarAddView</span><span class=\"params\">(Snackbar snackbar, <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">int</span> index)</span> </span>&#123;</div><div class=\"line\">        View snackbarview = snackbar.getView();</div><div class=\"line\">        Snackbar.SnackbarLayout snackbarLayout = (Snackbar.SnackbarLayout) snackbarview;</div><div class=\"line\"></div><div class=\"line\">        View add_view = LayoutInflater.from(snackbarview.getContext()).inflate(layoutId, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">        LinearLayout.LayoutParams p = <span class=\"keyword\">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class=\"line\">        p.gravity = Gravity.CENTER_VERTICAL;</div><div class=\"line\"></div><div class=\"line\">        snackbarLayout.addView(add_view, index, p);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"adb shell input text源码分析","date":"2017-09-25T07:00:24.000Z","_content":"源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。 \n``` Java\npublic static void main(String[] args) {\n    (new Input()).run(args);                            //在 main() 函数中运行 run() 方法\n}\n\nif (command.equals(\"text\")) {                            //处理 text 命令\n    if (length == 2) {\n        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);\n        sendText(inputSource, args[index+1]);\n        return;\n    }\n}\n\nprivate void sendText(int source, String text) {\n    StringBuffer buff = new StringBuffer(text);\n    boolean escapeFlag = false;\n    for (int i=0; i<buff.length(); i++) {\n        if (escapeFlag) {\n            escapeFlag = false;\n            if (buff.charAt(i) == 's') {\n                buff.setCharAt(i, ' ');\n                buff.deleteCharAt(--i);\n            }\n        }\n        if (buff.charAt(i) == '%') {\n            escapeFlag = true;\n        }\n    }\n    char[] chars = buff.toString().toCharArray();\n    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);\n    KeyEvent[] events = kcm.getEvents(chars);            //将字符转换为按键事件\n    for(int i = 0; i < events.length; i++) {\n        KeyEvent e = events[i];\n        if (source != e.getSource()) {\n            e.setSource(source);\n        }\n        injectKeyEvent(e);\n    }\n}\n```","source":"_posts/adb-shell-input-text源码分析.md","raw":"---\ntitle: adb shell input text源码分析\ndate: 2017-09-25 15:00:24\ntags:\n---\n源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。 \n``` Java\npublic static void main(String[] args) {\n    (new Input()).run(args);                            //在 main() 函数中运行 run() 方法\n}\n\nif (command.equals(\"text\")) {                            //处理 text 命令\n    if (length == 2) {\n        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);\n        sendText(inputSource, args[index+1]);\n        return;\n    }\n}\n\nprivate void sendText(int source, String text) {\n    StringBuffer buff = new StringBuffer(text);\n    boolean escapeFlag = false;\n    for (int i=0; i<buff.length(); i++) {\n        if (escapeFlag) {\n            escapeFlag = false;\n            if (buff.charAt(i) == 's') {\n                buff.setCharAt(i, ' ');\n                buff.deleteCharAt(--i);\n            }\n        }\n        if (buff.charAt(i) == '%') {\n            escapeFlag = true;\n        }\n    }\n    char[] chars = buff.toString().toCharArray();\n    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);\n    KeyEvent[] events = kcm.getEvents(chars);            //将字符转换为按键事件\n    for(int i = 0; i < events.length; i++) {\n        KeyEvent e = events[i];\n        if (source != e.getSource()) {\n            e.setSource(source);\n        }\n        injectKeyEvent(e);\n    }\n}\n```","slug":"adb-shell-input-text源码分析","published":1,"updated":"2017-09-25T07:01:18.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggg0009eddxvkmikcmx","content":"<p>源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    (<span class=\"keyword\">new</span> Input()).run(args);                            <span class=\"comment\">//在 main() 函数中运行 run() 方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (command.equals(<span class=\"string\">\"text\"</span>)) &#123;                            <span class=\"comment\">//处理 text 命令</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (length == <span class=\"number\">2</span>) &#123;</div><div class=\"line\">        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);</div><div class=\"line\">        sendText(inputSource, args[index+<span class=\"number\">1</span>]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendText</span><span class=\"params\">(<span class=\"keyword\">int</span> source, String text)</span> </span>&#123;</div><div class=\"line\">    StringBuffer buff = <span class=\"keyword\">new</span> StringBuffer(text);</div><div class=\"line\">    <span class=\"keyword\">boolean</span> escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;buff.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (escapeFlag) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'s'</span>) &#123;</div><div class=\"line\">                buff.setCharAt(i, <span class=\"string\">' '</span>);</div><div class=\"line\">                buff.deleteCharAt(--i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'%'</span>) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">char</span>[] chars = buff.toString().toCharArray();</div><div class=\"line\">    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);</div><div class=\"line\">    KeyEvent[] events = kcm.getEvents(chars);            <span class=\"comment\">//将字符转换为按键事件</span></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; events.length; i++) &#123;</div><div class=\"line\">        KeyEvent e = events[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (source != e.getSource()) &#123;</div><div class=\"line\">            e.setSource(source);</div><div class=\"line\">        &#125;</div><div class=\"line\">        injectKeyEvent(e);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>源码\\system\\core\\toolbox目录和源码\\frameworks\\base\\cmds目录。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    (<span class=\"keyword\">new</span> Input()).run(args);                            <span class=\"comment\">//在 main() 函数中运行 run() 方法</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (command.equals(<span class=\"string\">\"text\"</span>)) &#123;                            <span class=\"comment\">//处理 text 命令</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (length == <span class=\"number\">2</span>) &#123;</div><div class=\"line\">        inputSource = getSource(inputSource, InputDevice.SOURCE_KEYBOARD);</div><div class=\"line\">        sendText(inputSource, args[index+<span class=\"number\">1</span>]);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sendText</span><span class=\"params\">(<span class=\"keyword\">int</span> source, String text)</span> </span>&#123;</div><div class=\"line\">    StringBuffer buff = <span class=\"keyword\">new</span> StringBuffer(text);</div><div class=\"line\">    <span class=\"keyword\">boolean</span> escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;buff.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (escapeFlag) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'s'</span>) &#123;</div><div class=\"line\">                buff.setCharAt(i, <span class=\"string\">' '</span>);</div><div class=\"line\">                buff.deleteCharAt(--i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (buff.charAt(i) == <span class=\"string\">'%'</span>) &#123;</div><div class=\"line\">            escapeFlag = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">char</span>[] chars = buff.toString().toCharArray();</div><div class=\"line\">    KeyCharacterMap kcm = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);</div><div class=\"line\">    KeyEvent[] events = kcm.getEvents(chars);            <span class=\"comment\">//将字符转换为按键事件</span></div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; events.length; i++) &#123;</div><div class=\"line\">        KeyEvent e = events[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (source != e.getSource()) &#123;</div><div class=\"line\">            e.setSource(source);</div><div class=\"line\">        &#125;</div><div class=\"line\">        injectKeyEvent(e);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"adb命令集合","date":"2017-09-21T08:40:22.000Z","_content":"关机命令\n``` bash\nadb shell reboot -p\nadb shell svc power shutdown\n```\n\n恢复出厂设置\n``` bash\nadb shell am broadcast -a android.intent.action.MASTER_CLEAR\n```\n\n查看手机中安装的所有apk的包名\n``` bash\nadb shell pm -l\n```\n\n保存读取SettingsProvider中的值\n``` bash\nadb shell settings put global device_provisioned 0\nadb shell settings get global device_provisioned\n```\n\n启动 Activity\n``` bash\nadb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity\n```\n\n通过命令行输入字符串\n``` bash\nadb shell input text \"helloworld\"\n```\n\n通过adb命令直接操作sqlite3数据库\n``` bash\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \"select * from favorites;\"\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \".dump\" > sql.txt\n```\n\n通过adb命令快速查看关机动画\n``` bash\nadb shell setprop ctl.start bootanim\nadb shell setprop ctl.stop bootanim\n```","source":"_posts/adb命令集合.md","raw":"---\ntitle: adb命令集合\ndate: 2017-09-21 16:40:22\ntags:\n---\n关机命令\n``` bash\nadb shell reboot -p\nadb shell svc power shutdown\n```\n\n恢复出厂设置\n``` bash\nadb shell am broadcast -a android.intent.action.MASTER_CLEAR\n```\n\n查看手机中安装的所有apk的包名\n``` bash\nadb shell pm -l\n```\n\n保存读取SettingsProvider中的值\n``` bash\nadb shell settings put global device_provisioned 0\nadb shell settings get global device_provisioned\n```\n\n启动 Activity\n``` bash\nadb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity\n```\n\n通过命令行输入字符串\n``` bash\nadb shell input text \"helloworld\"\n```\n\n通过adb命令直接操作sqlite3数据库\n``` bash\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \"select * from favorites;\"\nadb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db \".dump\" > sql.txt\n```\n\n通过adb命令快速查看关机动画\n``` bash\nadb shell setprop ctl.start bootanim\nadb shell setprop ctl.stop bootanim\n```","slug":"adb命令集合","published":1,"updated":"2017-09-25T07:31:39.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggg000aeddx4iyda81z","content":"<p>关机命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell reboot -p</div><div class=\"line\">adb shell svc power shutdown</div></pre></td></tr></table></figure></p>\n<p>恢复出厂设置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am broadcast -a android.intent.action.MASTER_CLEAR</div></pre></td></tr></table></figure></p>\n<p>查看手机中安装的所有apk的包名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm -l</div></pre></td></tr></table></figure></p>\n<p>保存读取SettingsProvider中的值<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell settings put global device_provisioned 0</div><div class=\"line\">adb shell settings get global device_provisioned</div></pre></td></tr></table></figure></p>\n<p>启动 Activity<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity</div></pre></td></tr></table></figure></p>\n<p>通过命令行输入字符串<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell input text <span class=\"string\">\"helloworld\"</span></div></pre></td></tr></table></figure></p>\n<p>通过adb命令直接操作sqlite3数据库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\"select * from favorites;\"</span></div><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\".dump\"</span> &gt; sql.txt</div></pre></td></tr></table></figure></p>\n<p>通过adb命令快速查看关机动画<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setprop ctl.start bootanim</div><div class=\"line\">adb shell setprop ctl.stop bootanim</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>关机命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell reboot -p</div><div class=\"line\">adb shell svc power shutdown</div></pre></td></tr></table></figure></p>\n<p>恢复出厂设置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am broadcast -a android.intent.action.MASTER_CLEAR</div></pre></td></tr></table></figure></p>\n<p>查看手机中安装的所有apk的包名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell pm -l</div></pre></td></tr></table></figure></p>\n<p>保存读取SettingsProvider中的值<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell settings put global device_provisioned 0</div><div class=\"line\">adb shell settings get global device_provisioned</div></pre></td></tr></table></figure></p>\n<p>启动 Activity<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell am start -n com.google.android.setupwizard/com.google.android.setupwizard.WalledGardenActivity</div></pre></td></tr></table></figure></p>\n<p>通过命令行输入字符串<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell input text <span class=\"string\">\"helloworld\"</span></div></pre></td></tr></table></figure></p>\n<p>通过adb命令直接操作sqlite3数据库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\"select * from favorites;\"</span></div><div class=\"line\">adb shell sqlite3 /data/data/com.android.launcher3/databases/launcher.db <span class=\"string\">\".dump\"</span> &gt; sql.txt</div></pre></td></tr></table></figure></p>\n<p>通过adb命令快速查看关机动画<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setprop ctl.start bootanim</div><div class=\"line\">adb shell setprop ctl.stop bootanim</div></pre></td></tr></table></figure></p>\n"},{"title":"android-res下资源命名规则","date":"2017-09-25T07:40:07.000Z","_content":"1、 命名规范\n1. 可用的命名属性\n在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。\n\n2. 命名方法与要求\n1) 命名不区分大小写；\n2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5.....\n资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；\n属性1-属性2-属性3-属性4-属性5.....就是上述的属性集内的属性，如:-en-port-hdpi；\n注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过\n\n3. 实例说明\n1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)\nvalues-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7\n2) 上述例子属性的中文说明\nvalues-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)\n\n2、 定位最佳文件夹\n1. 定位算法\n\nprovidingResource\n特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：\n1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;\n\n2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。\n2. 实例说明\n工程有如下文件夹：\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n手机属性：\nLocale = en-GB \nScreen orientation = port \nScreen pixel density = hdpi \nTouchscreen type = notouch \nPrimary text input method = 12key\n\n1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/\n没被清除。\n2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。\n3)  有包含上述属性的文件夹吗？\n如果没有，跳转步骤２，选择下一优先级高的属性；\n如果有，继续步骤４；\n4) 清除不包含此属性的所有文件夹\ndrawable/\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\n\n最终找到的文件夹就是drawable-en-port/\n\n由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。\n\n3、 备注\n1. 文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;\n2. 对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。","source":"_posts/android-res下资源命名规则.md","raw":"---\ntitle: android-res下资源命名规则\ndate: 2017-09-25 15:40:07\ntags:\n---\n1、 命名规范\n1. 可用的命名属性\n在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。\n\n2. 命名方法与要求\n1) 命名不区分大小写；\n2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5.....\n资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；\n属性1-属性2-属性3-属性4-属性5.....就是上述的属性集内的属性，如:-en-port-hdpi；\n注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过\n\n3. 实例说明\n1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)\nvalues-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7\n2) 上述例子属性的中文说明\nvalues-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)\n\n2、 定位最佳文件夹\n1. 定位算法\n\nprovidingResource\n特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：\n1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;\n\n2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。\n2. 实例说明\n工程有如下文件夹：\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n手机属性：\nLocale = en-GB \nScreen orientation = port \nScreen pixel density = hdpi \nTouchscreen type = notouch \nPrimary text input method = 12key\n\n1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）\ndrawable/\ndrawable-en/\ndrawable-fr-rCA/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/\n没被清除。\n2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。\n3)  有包含上述属性的文件夹吗？\n如果没有，跳转步骤２，选择下一优先级高的属性；\n如果有，继续步骤４；\n4) 清除不包含此属性的所有文件夹\ndrawable/\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\ndrawable-port-ldpi/\ndrawable-port-notouch-12key/\n5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：\ndrawable-en/\ndrawable-en-port/\ndrawable-en-notouch-12key/\n\n最终找到的文件夹就是drawable-en-port/\n\n由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。\n\n3、 备注\n1. 文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;\n2. 对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。","slug":"android-res下资源命名规则","published":1,"updated":"2017-09-25T07:41:37.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggh000beddxnhu7qg33","content":"<p>1、 命名规范</p>\n<ol>\n<li><p>可用的命名属性<br>在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。</p>\n</li>\n<li><p>命名方法与要求<br>1) 命名不区分大小写；<br>2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5…..<br>资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；<br>属性1-属性2-属性3-属性4-属性5…..就是上述的属性集内的属性，如:-en-port-hdpi；<br>注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过</p>\n</li>\n<li><p>实例说明<br>1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)<br>values-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7<br>2) 上述例子属性的中文说明<br>values-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)</p>\n</li>\n</ol>\n<p>2、 定位最佳文件夹</p>\n<ol>\n<li>定位算法</li>\n</ol>\n<p>providingResource<br>特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：<br>1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;</p>\n<p>2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。</p>\n<ol>\n<li>实例说明<br>工程有如下文件夹：<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>手机属性：<br>Locale = en-GB<br>Screen orientation = port<br>Screen pixel density = hdpi<br>Touchscreen type = notouch<br>Primary text input method = 12key</li>\n</ol>\n<p>1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/<br>没被清除。<br>2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。<br>3)  有包含上述属性的文件夹吗？<br>如果没有，跳转步骤２，选择下一优先级高的属性；<br>如果有，继续步骤４；<br>4) 清除不包含此属性的所有文件夹<br>drawable/<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/</p>\n<p>最终找到的文件夹就是drawable-en-port/</p>\n<p>由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。</p>\n<p>3、 备注</p>\n<ol>\n<li>文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;</li>\n<li>对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>1、 命名规范</p>\n<ol>\n<li><p>可用的命名属性<br>在文档1中的表格“Table 2. Configuration qualifier names. ”中有说明(表格太大，不方便在此张贴)，表格中的&quot;Configuration&quot;项集就是Android全体可用命名属性集，表格此项的排列顺序即是各个属性的优先级别顺序。</p>\n</li>\n<li><p>命名方法与要求<br>1) 命名不区分大小写；<br>2) 命名形式：资源名-属性1-属性2-属性3-属性4-属性5…..<br>资源名就是资源类型名，包括:drawable, values, layout, anim, raw, menu, color, animator, xml；<br>属性1-属性2-属性3-属性4-属性5…..就是上述的属性集内的属性，如:-en-port-hdpi；<br>注意：各属性的位置顺序必须遵守优先级从高到低排列！否则编译不过</p>\n</li>\n<li><p>实例说明<br>1) 把全部属性都用上的例子(各属性是按优先级先后排列出来的)<br>values-mcc310-en-sw320dp-w720dp-h720dp-large-long-port-car-night-ldpi-notouch-keysexposed-nokeys-navexposed-nonav-v7<br>2) 上述例子属性的中文说明<br>values-mcc310(sim卡运营商)-en(语言)-sw320dp(屏幕最小宽度)-w720dp(屏幕最佳宽度)-h720dp(屏幕最佳高度)-large(屏幕尺寸)-long(屏幕长短边模式)-port(当前屏幕横竖屏显示模式)-car(dock模式)-night(白天或夜晚)-ldpi(屏幕最佳dpi)-notouch(触摸屏模类型)-keysexposed(键盘类型)-nokey(硬按键类型)-navexposed(方向键是否可用)-nonav(方向键类型)-v7(android版本)</p>\n</li>\n</ol>\n<p>2、 定位最佳文件夹</p>\n<ol>\n<li>定位算法</li>\n</ol>\n<p>providingResource<br>特殊说明：关于屏幕大小size相关的属性不在步骤１的过滤清除条件里（dpi属性和screen size属性）：<br>1) 对于dpi属性系统的选择方法是&quot;best match&quot;－－－即如果没有找到准确的属性，可以接着寻找最接近的属性文件夹。例如：我的g7手机，应该是values-hdpi,但如果没有values-hdpi，则可以找出最接近的文件夹（先找values-xhdpi到values-mdpi到values最后到values-ldpi,注意values在values-ldpi之前先找到，系统认为values比values-ldpi更接近我的values-hdpi属性）;</p>\n<p>2) 对于screen size属性系统的选择方法是&quot;向下best match&quot;，即如果没找到准确的属性，只可以接着在比自身属性小的文件夹里找最接近的属性文件夹。例如：我的g7手机，应该是values-normal,但如果没有values-normal,则可以找出最接近的文件夹(先找values再到values-small,注意，系统认为values比values-small更接近我的values-normal属性，但之后就不会再找values-large与values-xlarge了，因为是&quot;向下best match&quot;，large与xlarge都比normal大)。</p>\n<ol>\n<li>实例说明<br>工程有如下文件夹：<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>手机属性：<br>Locale = en-GB<br>Screen orientation = port<br>Screen pixel density = hdpi<br>Touchscreen type = notouch<br>Primary text input method = 12key</li>\n</ol>\n<p>1) 清除包含任何与手机配置有冲突的属性的资源文件夹（蓝色字体表现被清除）<br>drawable/<br>drawable-en/<br>drawable-fr-rCA/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>注意：因为dpi属性使用&quot;best match&quot;选择，所以drawable-port-ldpi/<br>没被清除。<br>2) 选择文档1中的表格“Table 2. Configuration qualifier names. ”最高优先级的属性（MCC最高，然后依次向下选择）。<br>3)  有包含上述属性的文件夹吗？<br>如果没有，跳转步骤２，选择下一优先级高的属性；<br>如果有，继续步骤４；<br>4) 清除不包含此属性的所有文件夹<br>drawable/<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/<br>drawable-port-ldpi/<br>drawable-port-notouch-12key/<br>5) 重复步骤２和３，直到步骤４中只剩下一个文件夹则返回。例子中，屏幕方向是下一个最高优先级的属性，所以可以清除两个文件夹：<br>drawable-en/<br>drawable-en-port/<br>drawable-en-notouch-12key/</p>\n<p>最终找到的文件夹就是drawable-en-port/</p>\n<p>由上述过程可看出，匹配是看最高优先级别的属性，而不是一共匹配到的属性数量，例如：values-en-normal-hdpi的手机，values-en匹配比vaues-normal-hdpi更合适。</p>\n<p>3、 备注</p>\n<ol>\n<li>文档1中的表格“Table 2. Configuration qualifier names. ”列出的属性集并不是一直不变的，有些新属性是在高级的android version才加入的，系统在识别到此新属性时会自动加上支持新属性的android最低版本属性，例如：xhdpi是android 2.2(sdk[img]/images/smiles/icon_cool.gif&quot; alt=&quot;[/img]新加入的，则values-xhdpi系统会自动认为是values-xhdpi-v8,这样新属性一定不会在android旧版本中匹配到了;</li>\n<li>对于指定分辨率的属性（例如：values-hdpi-1024x600，values-hdpi-960x540，values-mdpi-1024x600），指定分辨率属性并没出现在官网的匹配属性集里，也没找到对于分辨率属性的详细说明，经测试，这个分辨率属性匹配并不准确，例如Galaxy Nexus(1280x720 ),却可以匹配到values-hdpi-1024x600，因此希望最好不使用分辨率属性。</li>\n</ol>\n"},{"title":"android中media的url","date":"2017-09-21T04:52:17.000Z","_content":"```\nhttp://site.com/image.png // from Web\nfile:///mnt/sdcard/image.png // from SD card\nfile:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)\ncontent://media/external/images/media/13 // from content provider\ncontent://media/external/video/media/13 // from content provider (video thumbnail)\nassets://image.png // from assets\ndrawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。\n```","source":"_posts/android中media的url.md","raw":"---\ntitle: android中media的url\ndate: 2017-09-21 12:52:17\ntags:\n---\n```\nhttp://site.com/image.png // from Web\nfile:///mnt/sdcard/image.png // from SD card\nfile:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)\ncontent://media/external/images/media/13 // from content provider\ncontent://media/external/video/media/13 // from content provider (video thumbnail)\nassets://image.png // from assets\ndrawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。\n```","slug":"android中media的url","published":1,"updated":"2017-09-21T05:49:37.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggi000ceddxn69hed93","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://site.com/image.png // from Web</div><div class=\"line\">file:///mnt/sdcard/image.png // from SD card</div><div class=\"line\">file:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)</div><div class=\"line\">content://media/external/images/media/13 // from content provider</div><div class=\"line\">content://media/external/video/media/13 // from content provider (video thumbnail)</div><div class=\"line\">assets://image.png // from assets</div><div class=\"line\">drawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://site.com/image.png // from Web</div><div class=\"line\">file:///mnt/sdcard/image.png // from SD card</div><div class=\"line\">file:///mnt/sdcard/video.mp4 // from SD card (video thumbnail)</div><div class=\"line\">content://media/external/images/media/13 // from content provider</div><div class=\"line\">content://media/external/video/media/13 // from content provider (video thumbnail)</div><div class=\"line\">assets://image.png // from assets</div><div class=\"line\">drawable:// + R.drawable.img // from drawables (non-9patch images) //通常不用。</div></pre></td></tr></table></figure>"},{"title":"android清理缓存功能的实现","date":"2017-09-21T03:15:46.000Z","_content":"相关代码:\n``` Java\nprivate void clearCache() {\n    PackageManager pm = getPackageManager();\n    // 反射\n    try {\n        Method method = PackageManager.class.getMethod(\"getPackageSizeInfo\", new Class[] { String.class, IPackageStatsObserver.class });\n        method.invoke(pm, new Object[] { \"com.wang.clearcache\", new IPackageStatsObserver.Stub() {\n            public void onGetStatsCompleted(PackageStats pStats, boolean succeeded) throws RemoteException {\n                long cachesize = pStats.cacheSize;\n                long codesize = pStats.codeSize;\n                long datasize = pStats.dataSize;\n                System.out.println(\"cachesize:\" + cachesize);\n                System.out.println(\"codesize:\" + codesize);\n                System.out.println(\"datasize\" + datasize);\n            }\n        }});\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```\n\n需要导入两个 aidl 文件\n```\nframeworks/base/core/java/android/content/pm/PackageStats.aidl\nframeworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl\n```\n\n需要添加权限\n```\n<uses-permission android:name=\"android.permission.GET_PACKAGE_SIZE\"/>\n```","source":"_posts/android清理缓存功能的实现.md","raw":"---\ntitle: android清理缓存功能的实现\ndate: 2017-09-21 11:15:46\ntags:\n---\n相关代码:\n``` Java\nprivate void clearCache() {\n    PackageManager pm = getPackageManager();\n    // 反射\n    try {\n        Method method = PackageManager.class.getMethod(\"getPackageSizeInfo\", new Class[] { String.class, IPackageStatsObserver.class });\n        method.invoke(pm, new Object[] { \"com.wang.clearcache\", new IPackageStatsObserver.Stub() {\n            public void onGetStatsCompleted(PackageStats pStats, boolean succeeded) throws RemoteException {\n                long cachesize = pStats.cacheSize;\n                long codesize = pStats.codeSize;\n                long datasize = pStats.dataSize;\n                System.out.println(\"cachesize:\" + cachesize);\n                System.out.println(\"codesize:\" + codesize);\n                System.out.println(\"datasize\" + datasize);\n            }\n        }});\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```\n\n需要导入两个 aidl 文件\n```\nframeworks/base/core/java/android/content/pm/PackageStats.aidl\nframeworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl\n```\n\n需要添加权限\n```\n<uses-permission android:name=\"android.permission.GET_PACKAGE_SIZE\"/>\n```","slug":"android清理缓存功能的实现","published":1,"updated":"2017-09-21T03:21:11.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggj000deddx1mfd7l20","content":"<p>相关代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    PackageManager pm = getPackageManager();</div><div class=\"line\">    <span class=\"comment\">// 反射</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = PackageManager.class.getMethod(<span class=\"string\">\"getPackageSizeInfo\"</span>, <span class=\"keyword\">new</span> Class[] &#123; String.class, IPackageStatsObserver.class &#125;);</div><div class=\"line\">        method.invoke(pm, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"com.wang.clearcache\"</span>, <span class=\"keyword\">new</span> IPackageStatsObserver.Stub() &#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGetStatsCompleted</span><span class=\"params\">(PackageStats pStats, <span class=\"keyword\">boolean</span> succeeded)</span> <span class=\"keyword\">throws</span> RemoteException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">long</span> cachesize = pStats.cacheSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> codesize = pStats.codeSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> datasize = pStats.dataSize;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"cachesize:\"</span> + cachesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"codesize:\"</span> + codesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"datasize\"</span> + datasize);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;&#125;);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要导入两个 aidl 文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">frameworks/base/core/java/android/content/pm/PackageStats.aidl</div><div class=\"line\">frameworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.GET_PACKAGE_SIZE&quot;/&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>相关代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCache</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    PackageManager pm = getPackageManager();</div><div class=\"line\">    <span class=\"comment\">// 反射</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = PackageManager.class.getMethod(<span class=\"string\">\"getPackageSizeInfo\"</span>, <span class=\"keyword\">new</span> Class[] &#123; String.class, IPackageStatsObserver.class &#125;);</div><div class=\"line\">        method.invoke(pm, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"com.wang.clearcache\"</span>, <span class=\"keyword\">new</span> IPackageStatsObserver.Stub() &#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGetStatsCompleted</span><span class=\"params\">(PackageStats pStats, <span class=\"keyword\">boolean</span> succeeded)</span> <span class=\"keyword\">throws</span> RemoteException </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">long</span> cachesize = pStats.cacheSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> codesize = pStats.codeSize;</div><div class=\"line\">                <span class=\"keyword\">long</span> datasize = pStats.dataSize;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"cachesize:\"</span> + cachesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"codesize:\"</span> + codesize);</div><div class=\"line\">                System.out.println(<span class=\"string\">\"datasize\"</span> + datasize);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;&#125;);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>需要导入两个 aidl 文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">frameworks/base/core/java/android/content/pm/PackageStats.aidl</div><div class=\"line\">frameworks/base/core/java/android/content/pm/IPackageStatsObserver.aidl</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.GET_PACKAGE_SIZE&quot;/&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"ccache","date":"2017-09-21T09:02:16.000Z","_content":"### 介绍\n> \nccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。\n\n配置方法如下:\n\n* 1、在~/.bashrc中添加(或者/etc/profile文件中):\n``` mk\n#ccache\nexport USE_CCACHE=1\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache\n```\n默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory>\n> \n注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。\n\n* 2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹\n推荐的cache目录大小为50-100GB，在命令行执行以下命令:\n``` bash\nprebuilt/linux-x86/ccache/ccache -M 50G\n```\n以上命令需要在你所下载的代码的根目录下面执行\n该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。\n\n* 3、查看ccahe使用情况\n``` bash\n$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s\n```\n以上命令需要在你所下载的代码的根目录下面执行\n> \n备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升","source":"_posts/ccache.md","raw":"---\ntitle: ccache\ndate: 2017-09-21 17:02:16\ntags:\n---\n### 介绍\n> \nccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。\n\n配置方法如下:\n\n* 1、在~/.bashrc中添加(或者/etc/profile文件中):\n``` mk\n#ccache\nexport USE_CCACHE=1\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache\n```\n默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory>\n> \n注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。\n\n* 2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹\n推荐的cache目录大小为50-100GB，在命令行执行以下命令:\n``` bash\nprebuilt/linux-x86/ccache/ccache -M 50G\n```\n以上命令需要在你所下载的代码的根目录下面执行\n该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。\n\n* 3、查看ccahe使用情况\n``` bash\n$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s\n```\n以上命令需要在你所下载的代码的根目录下面执行\n> \n备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升","slug":"ccache","published":1,"updated":"2017-09-21T09:08:01.489Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggk000eeddx682bac9r","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><blockquote>\n<p>ccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。</p>\n</blockquote>\n<p>配置方法如下:</p>\n<ul>\n<li>1、在~/.bashrc中添加(或者/etc/profile文件中):<figure class=\"highlight mk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#ccache</span></div><div class=\"line\"><span class=\"keyword\">export</span> USE_CCACHE=1</div><div class=\"line\"><span class=\"keyword\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory></path-to-your-cache-directory></p>\n<blockquote>\n<p>注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。</p>\n</blockquote>\n<ul>\n<li>2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹<br>推荐的cache目录大小为50-100GB，在命令行执行以下命令:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">prebuilt/linux-x86/ccache/ccache -M 50G</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行<br>该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。</p>\n<ul>\n<li>3、查看ccahe使用情况<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行</p>\n<blockquote>\n<p>备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><blockquote>\n<p>ccache（“compiler cache”的缩写）是一个编译器缓存，该工具会高速缓存编译生成的信息，并在编译的特定部分使用高速缓存的信息， 比如头文件，这样就节省了通常使用cpp解析这些信息所需要的时间。如果某头文件中包含对其他头文件的引用，ccache会用那个文件的 cpp-parsed版本来取代include声明。ccache只是将最终的文本拷贝到文件中，使得它可以立即被编译，而不是真正去读取、理解并解释其内容。ccache是以空间换取速度，ccache非常适合经常make clean（或删除out目录）后重新编译的情况。</p>\n</blockquote>\n<p>配置方法如下:</p>\n<ul>\n<li>1、在~/.bashrc中添加(或者/etc/profile文件中):<figure class=\"highlight mk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#ccache</span></div><div class=\"line\"><span class=\"keyword\">export</span> USE_CCACHE=1</div><div class=\"line\"><span class=\"keyword\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认情况下cache（缓存）会保存在~/.ccache目录下，如果主目录位于NFS或其他非本地文件系统上， 设置cache目录位置:export CCACHE_DIR=<path-to-your-cache-directory></path-to-your-cache-directory></p>\n<blockquote>\n<p>注:配置.bashrc后注意source改文件，否则cache（缓存）会保存在~/.ccache目录下，而不是你设置的目录。</p>\n</blockquote>\n<ul>\n<li>2、使用android源码prebuilts目录下面的ccache工具初始化该文件夹<br>推荐的cache目录大小为50-100GB，在命令行执行以下命令:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">prebuilt/linux-x86/ccache/ccache -M 50G</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行<br>该设置会保存到CCACHE_DIR中，且该命令是长效的，不会因系统重启而失效。使用ccache第一次编译后能够明显提高make clean以后再次的编译速度。</p>\n<ul>\n<li>3、查看ccahe使用情况<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上命令需要在你所下载的代码的根目录下面执行</p>\n<blockquote>\n<p>备注:使用ccache之后,第一次编译会时间久一点,之后每次编译速度都会有提升</p>\n</blockquote>\n"},{"title":"framework下添加一个自定义的服务 SELinux Permission Denied","date":"2017-09-19T07:22:13.000Z","_content":"问题点:\n在systemserver.java中添加如下代码，向servicemanager进程中添加一个service\n``` Java\ntry {\n    Slog.i(TAG, \"Hello Service\");\n    ServiceManager.addService(\"hello\", new HelloService());//\n} catch (Throwable e) {\n    Slog.e(TAG, \"Failure starting Hello Service\", e);\n}\n```\n\nservicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。\n执行代码的时候出现了如下错误:\n```\nE SELinux : avc:  denied  { add } for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager\nE ServiceManager: add_service('hello',62) uid=1000 - PERMISSION DENIED\n```\n\n提示为SELinux Permission Denied。\n解决办法参考:\nhttp://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android \n解决办法:\n\nexternal\\sepolicy\\service.te\n```\ntype mytest_service, system_api_service, system_server_service, service_manager_type;\n```\n\nexternal\\sepolicy\\service_contexts\n\n```\nmytestservice u:object_r:mytest_service:s0\n```","source":"_posts/framework下添加一个自定义的服务.md","raw":"---\ntitle: framework下添加一个自定义的服务 SELinux Permission Denied\ndate: 2017-09-19 15:22:13\ntags:\n---\n问题点:\n在systemserver.java中添加如下代码，向servicemanager进程中添加一个service\n``` Java\ntry {\n    Slog.i(TAG, \"Hello Service\");\n    ServiceManager.addService(\"hello\", new HelloService());//\n} catch (Throwable e) {\n    Slog.e(TAG, \"Failure starting Hello Service\", e);\n}\n```\n\nservicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。\n执行代码的时候出现了如下错误:\n```\nE SELinux : avc:  denied  { add } for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager\nE ServiceManager: add_service('hello',62) uid=1000 - PERMISSION DENIED\n```\n\n提示为SELinux Permission Denied。\n解决办法参考:\nhttp://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android \n解决办法:\n\nexternal\\sepolicy\\service.te\n```\ntype mytest_service, system_api_service, system_server_service, service_manager_type;\n```\n\nexternal\\sepolicy\\service_contexts\n\n```\nmytestservice u:object_r:mytest_service:s0\n```","slug":"framework下添加一个自定义的服务","published":1,"updated":"2017-09-25T06:46:55.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggk000feddxjvi5iozj","content":"<p>问题点:<br>在systemserver.java中添加如下代码，向servicemanager进程中添加一个service<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Hello Service\"</span>);</div><div class=\"line\">    ServiceManager.addService(<span class=\"string\">\"hello\"</span>, <span class=\"keyword\">new</span> HelloService());<span class=\"comment\">//</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</div><div class=\"line\">    Slog.e(TAG, <span class=\"string\">\"Failure starting Hello Service\"</span>, e);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>servicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。<br>执行代码的时候出现了如下错误:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E SELinux : avc:  denied  &#123; add &#125; for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager</div><div class=\"line\">E ServiceManager: add_service(&apos;hello&apos;,62) uid=1000 - PERMISSION DENIED</div></pre></td></tr></table></figure></p>\n<p>提示为SELinux Permission Denied。<br>解决办法参考:<br><a href=\"http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android</a><br>解决办法:</p>\n<p>external\\sepolicy\\service.te<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type mytest_service, system_api_service, system_server_service, service_manager_type;</div></pre></td></tr></table></figure></p>\n<p>external\\sepolicy\\service_contexts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mytestservice u:object_r:mytest_service:s0</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>问题点:<br>在systemserver.java中添加如下代码，向servicemanager进程中添加一个service<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Hello Service\"</span>);</div><div class=\"line\">    ServiceManager.addService(<span class=\"string\">\"hello\"</span>, <span class=\"keyword\">new</span> HelloService());<span class=\"comment\">//</span></div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</div><div class=\"line\">    Slog.e(TAG, <span class=\"string\">\"Failure starting Hello Service\"</span>, e);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>servicemanager是BINDER的管理者，负责协调Android里的进程通信。这里添加的helloservice是一个硬件管理服务，运行在单独的进程里，如果APP想要使用这个服务就必须通过servicemanager查询和调用。<br>执行代码的时候出现了如下错误:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">E SELinux : avc:  denied  &#123; add &#125; for service=hello scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager</div><div class=\"line\">E ServiceManager: add_service(&apos;hello&apos;,62) uid=1000 - PERMISSION DENIED</div></pre></td></tr></table></figure></p>\n<p>提示为SELinux Permission Denied。<br>解决办法参考:<br><a href=\"http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/30165852/selinux-permission-denied-for-a-new-framework-service-in-android</a><br>解决办法:</p>\n<p>external\\sepolicy\\service.te<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type mytest_service, system_api_service, system_server_service, service_manager_type;</div></pre></td></tr></table></figure></p>\n<p>external\\sepolicy\\service_contexts</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mytestservice u:object_r:mytest_service:s0</div></pre></td></tr></table></figure>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-07-28T09:05:07.547Z","updated":"2017-07-28T09:05:07.547Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggl000geddx97bky8sk","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"编译报错 Out of memory error (version 1.2-rc4 'Carnac'","date":"2017-09-19T06:34:29.000Z","_content":"Starting build with ninja\nninja: Entering directory `.' \n[  0% 8/30301] Ensure Jack server is installed and started\nJack server already installed in \"/home/guochongxin/.jack-server\"\nLaunching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher\n[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack\n[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex\nFAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp\nOut of memory error (version 1.2-rc4 'Carnac' (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).\nGC overhead limit exceeded.\nTry increasing heap size with java option '-Xmx<size>'.\nWarning: This may have produced partial or corrupted output.\n[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm...AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack\nninja: build stopped: subcommand failed.\nmake: *** [ninja_wrapper] Error 1\n按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n\n将其修改为：\n>\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n然后在源码根目录下执行如下命令：\n./prebuilts/sdk/tools/jack-admin stop-server\n./prebuilts/sdk/tools/jack-admin start-server\n重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。\n参考网址：\nhttp://www.cnblogs.com/dinphy/p/6138803.html\nhttp://blog.csdn.net/u014386544/article/details/53287861\nhttp://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html","source":"_posts/jack编译报错.md","raw":"---\ntitle: 编译报错 Out of memory error (version 1.2-rc4 'Carnac'\ndate: 2017-09-19 14:34:29\ntags:\n---\nStarting build with ninja\nninja: Entering directory `.' \n[  0% 8/30301] Ensure Jack server is installed and started\nJack server already installed in \"/home/guochongxin/.jack-server\"\nLaunching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher\n[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack\n[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex\nFAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp\nOut of memory error (version 1.2-rc4 'Carnac' (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).\nGC overhead limit exceeded.\nTry increasing heap size with java option '-Xmx<size>'.\nWarning: This may have produced partial or corrupted output.\n[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm...AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack\nninja: build stopped: subcommand failed.\nmake: *** [ninja_wrapper] Error 1\n按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n\n将其修改为：\n>\nJACK_SERVER_COMMAND=\"java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir\n=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME\"\n然后在源码根目录下执行如下命令：\n./prebuilts/sdk/tools/jack-admin stop-server\n./prebuilts/sdk/tools/jack-admin start-server\n重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。\n参考网址：\nhttp://www.cnblogs.com/dinphy/p/6138803.html\nhttp://blog.csdn.net/u014386544/article/details/53287861\nhttp://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html","slug":"jack编译报错","published":1,"updated":"2017-09-19T06:37:16.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggm000heddxwo79aqth","content":"<p>Starting build with ninja<br>ninja: Entering directory `.’<br>[  0% 8/30301] Ensure Jack server is installed and started<br>Jack server already installed in “/home/guochongxin/.jack-server”<br>Launching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher<br>[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack<br>[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex<br>FAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp<br>Out of memory error (version 1.2-rc4 ‘Carnac’ (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).<br>GC overhead limit exceeded.<br>Try increasing heap size with java option ‘-Xmx<size>‘.<br>Warning: This may have produced partial or corrupted output.<br>[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm…AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack<br>ninja: build stopped: subcommand failed.<br>make: <em>*</em> [ninja_wrapper] Error 1<br>按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME”</size></p>\n<p>将其修改为：<br>&gt;<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME”<br>然后在源码根目录下执行如下命令：<br>./prebuilts/sdk/tools/jack-admin stop-server<br>./prebuilts/sdk/tools/jack-admin start-server<br>重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。<br>参考网址：<br><a href=\"http://www.cnblogs.com/dinphy/p/6138803.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/dinphy/p/6138803.html</a><br><a href=\"http://blog.csdn.net/u014386544/article/details/53287861\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014386544/article/details/53287861</a><br><a href=\"http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html\" target=\"_blank\" rel=\"external\">http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Starting build with ninja<br>ninja: Entering directory `.’<br>[  0% 8/30301] Ensure Jack server is installed and started<br>Jack server already installed in “/home/guochongxin/.jack-server”<br>Launching Jack server java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir=/tmp -Dfile.encoding=UTF-8 -XX:+TieredCompilation -cp /home/guochongxin/.jack-server/launcher.jar com.android.jack.launcher.ServerLauncher<br>[  0% 10/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/libprotobuf-java-micro_intermediates/classes.jack<br>[  0% 12/30301] Building with Jack: out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex<br>FAILED: /bin/bash out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/with-local/classes.dex.rsp<br>Out of memory error (version 1.2-rc4 ‘Carnac’ (298900 f95d7bdecfceb327f9d201a1348397ed8a843843 by android-jack-team@google.com)).<br>GC overhead limit exceeded.<br>Try increasing heap size with java option ‘-Xmx<size>‘.<br>Warning: This may have produced partial or corrupted output.<br>[  0% 12/30301] Compiling SDK Stubs with Jack: out/target/comm…AVA_LIBRARIES/android_stubs_current_intermediates/classes.jack<br>ninja: build stopped: subcommand failed.<br>make: <em>*</em> [ninja_wrapper] Error 1<br>按照提示修改prebuilts/sdk/tools/jack-admin文件，找到如下内容：<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -cp $LAUNCHER_JAR $LAUNCHER_NAME”</size></p>\n<p>将其修改为：<br>&gt;<br>JACK_SERVER_COMMAND=”java -XX:MaxJavaStackTraceDepth=-1 -Djava.io.tmpdir<br>=$TMPDIR $JACK_SERVER_VM_ARGUMENTS -Xmx4096m -cp $LAUNCHER_JAR $LAUNCHER_NAME”<br>然后在源码根目录下执行如下命令：<br>./prebuilts/sdk/tools/jack-admin stop-server<br>./prebuilts/sdk/tools/jack-admin start-server<br>重启下jack-admin服务，此时再重新执行编译命令就能编译通过ninja了。<br>参考网址：<br><a href=\"http://www.cnblogs.com/dinphy/p/6138803.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/dinphy/p/6138803.html</a><br><a href=\"http://blog.csdn.net/u014386544/article/details/53287861\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014386544/article/details/53287861</a><br><a href=\"http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html\" target=\"_blank\" rel=\"external\">http://berniechenopenvpn.blogspot.jp/2016/07/hikey-board-android.html</a></p>\n"},{"title":"menu菜单的解析","date":"2017-09-21T09:08:54.000Z","_content":"``` Java\nprivate void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException {\n    MenuState menuState = new MenuState(menu);\n\n    int eventType = parser.getEventType();\n    String tagName;\n    boolean lookingForEndOfUnknownTag = false;\n    String unknownTagName = null;\n\n    // This loop will skip to the menu start tag\n    do {\n        if (eventType == XmlPullParser.START_TAG) {\n            tagName = parser.getName();\n            if (tagName.equals(XML_MENU)) {                                 //\"menu\"\n                // Go to next tag\n                eventType = parser.next();\n                break;\n            }\n            throw new RuntimeException(\"Expecting menu, got \" + tagName);\n        }\n        eventType = parser.next();\n    } while (eventType != XmlPullParser.END_DOCUMENT);\n\n    boolean reachedEndOfMenu = false;\n    while (!reachedEndOfMenu) {\n        switch (eventType) {\n            case XmlPullParser.START_TAG:\n                if (lookingForEndOfUnknownTag) {\n                    break;\n                }\n\n                tagName = parser.getName();\n                if (tagName.equals(XML_GROUP)) {                            //\"group\"\n                    menuState.readGroup(attrs);\n                } else if (tagName.equals(XML_ITEM)) {                      //\"item\"\n                    menuState.readItem(attrs);\n                } else if (tagName.equals(XML_MENU)) {                      //\"menu\"\n                    // A menu start tag denotes a submenu for an item\n                    SubMenu subMenu = menuState.addSubMenuItem();\n\n                    // Parse the submenu into returned SubMenu\n                    parseMenu(parser, attrs, subMenu);\n                } else {\n                    lookingForEndOfUnknownTag = true;\n                    unknownTagName = tagName;\n                }\n                break;\n\n            case XmlPullParser.END_TAG:\n                tagName = parser.getName();\n                if (lookingForEndOfUnknownTag && tagName.equals(unknownTagName)) {\n                    lookingForEndOfUnknownTag = false;\n                    unknownTagName = null;\n                } else if (tagName.equals(XML_GROUP)) {\n                    menuState.resetGroup();\n                } else if (tagName.equals(XML_ITEM)) {\n                    // Add the item if it hasn't been added (if the item was\n                    // a submenu, it would have been added already)\n                    if (!menuState.hasAddedItem()) {\n                        if (menuState.itemActionProvider != null &&\n                                menuState.itemActionProvider.hasSubMenu()) {\n                            menuState.addSubMenuItem();\n                        } else {\n                            menuState.addItem();\n                        }\n                    }\n                } else if (tagName.equals(XML_MENU)) {\n                    reachedEndOfMenu = true;\n                }\n                break;\n\n            case XmlPullParser.END_DOCUMENT:\n                throw new RuntimeException(\"Unexpected end of document\");\n        }\n        eventType = parser.next();\n    }\n}\n```","source":"_posts/menu菜单的解析.md","raw":"---\ntitle: menu菜单的解析\ndate: 2017-09-21 17:08:54\ntags:\n---\n``` Java\nprivate void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException {\n    MenuState menuState = new MenuState(menu);\n\n    int eventType = parser.getEventType();\n    String tagName;\n    boolean lookingForEndOfUnknownTag = false;\n    String unknownTagName = null;\n\n    // This loop will skip to the menu start tag\n    do {\n        if (eventType == XmlPullParser.START_TAG) {\n            tagName = parser.getName();\n            if (tagName.equals(XML_MENU)) {                                 //\"menu\"\n                // Go to next tag\n                eventType = parser.next();\n                break;\n            }\n            throw new RuntimeException(\"Expecting menu, got \" + tagName);\n        }\n        eventType = parser.next();\n    } while (eventType != XmlPullParser.END_DOCUMENT);\n\n    boolean reachedEndOfMenu = false;\n    while (!reachedEndOfMenu) {\n        switch (eventType) {\n            case XmlPullParser.START_TAG:\n                if (lookingForEndOfUnknownTag) {\n                    break;\n                }\n\n                tagName = parser.getName();\n                if (tagName.equals(XML_GROUP)) {                            //\"group\"\n                    menuState.readGroup(attrs);\n                } else if (tagName.equals(XML_ITEM)) {                      //\"item\"\n                    menuState.readItem(attrs);\n                } else if (tagName.equals(XML_MENU)) {                      //\"menu\"\n                    // A menu start tag denotes a submenu for an item\n                    SubMenu subMenu = menuState.addSubMenuItem();\n\n                    // Parse the submenu into returned SubMenu\n                    parseMenu(parser, attrs, subMenu);\n                } else {\n                    lookingForEndOfUnknownTag = true;\n                    unknownTagName = tagName;\n                }\n                break;\n\n            case XmlPullParser.END_TAG:\n                tagName = parser.getName();\n                if (lookingForEndOfUnknownTag && tagName.equals(unknownTagName)) {\n                    lookingForEndOfUnknownTag = false;\n                    unknownTagName = null;\n                } else if (tagName.equals(XML_GROUP)) {\n                    menuState.resetGroup();\n                } else if (tagName.equals(XML_ITEM)) {\n                    // Add the item if it hasn't been added (if the item was\n                    // a submenu, it would have been added already)\n                    if (!menuState.hasAddedItem()) {\n                        if (menuState.itemActionProvider != null &&\n                                menuState.itemActionProvider.hasSubMenu()) {\n                            menuState.addSubMenuItem();\n                        } else {\n                            menuState.addItem();\n                        }\n                    }\n                } else if (tagName.equals(XML_MENU)) {\n                    reachedEndOfMenu = true;\n                }\n                break;\n\n            case XmlPullParser.END_DOCUMENT:\n                throw new RuntimeException(\"Unexpected end of document\");\n        }\n        eventType = parser.next();\n    }\n}\n```","slug":"menu菜单的解析","published":1,"updated":"2017-09-21T09:09:30.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggo000ieddxabxxzbas","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">parseMenu</span><span class=\"params\">(XmlPullParser parser, AttributeSet attrs, Menu menu)</span> <span class=\"keyword\">throws</span> XmlPullParserException, IOException </span>&#123;</div><div class=\"line\">    MenuState menuState = <span class=\"keyword\">new</span> MenuState(menu);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> eventType = parser.getEventType();</div><div class=\"line\">    String tagName;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    String unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// This loop will skip to the menu start tag</span></div><div class=\"line\">    <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (eventType == XmlPullParser.START_TAG) &#123;</div><div class=\"line\">            tagName = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                                 <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                <span class=\"comment\">// Go to next tag</span></div><div class=\"line\">                eventType = parser.next();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Expecting menu, got \"</span> + tagName);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125; <span class=\"keyword\">while</span> (eventType != XmlPullParser.END_DOCUMENT);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">boolean</span> reachedEndOfMenu = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (!reachedEndOfMenu) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (eventType) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.START_TAG:</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag) &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;                            <span class=\"comment\">//\"group\"</span></div><div class=\"line\">                    menuState.readGroup(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;                      <span class=\"comment\">//\"item\"</span></div><div class=\"line\">                    menuState.readItem(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                      <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                    <span class=\"comment\">// A menu start tag denotes a submenu for an item</span></div><div class=\"line\">                    SubMenu subMenu = menuState.addSubMenuItem();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">// Parse the submenu into returned SubMenu</span></div><div class=\"line\">                    parseMenu(parser, attrs, subMenu);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    unknownTagName = tagName;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_TAG:</div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag &amp;&amp; tagName.equals(unknownTagName)) &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;</div><div class=\"line\">                    menuState.resetGroup();</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;</div><div class=\"line\">                    <span class=\"comment\">// Add the item if it hasn't been added (if the item was</span></div><div class=\"line\">                    <span class=\"comment\">// a submenu, it would have been added already)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (!menuState.hasAddedItem()) &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (menuState.itemActionProvider != <span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">                                menuState.itemActionProvider.hasSubMenu()) &#123;</div><div class=\"line\">                            menuState.addSubMenuItem();</div><div class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                            menuState.addItem();</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;</div><div class=\"line\">                    reachedEndOfMenu = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_DOCUMENT:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Unexpected end of document\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">parseMenu</span><span class=\"params\">(XmlPullParser parser, AttributeSet attrs, Menu menu)</span> <span class=\"keyword\">throws</span> XmlPullParserException, IOException </span>&#123;</div><div class=\"line\">    MenuState menuState = <span class=\"keyword\">new</span> MenuState(menu);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> eventType = parser.getEventType();</div><div class=\"line\">    String tagName;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">    String unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// This loop will skip to the menu start tag</span></div><div class=\"line\">    <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (eventType == XmlPullParser.START_TAG) &#123;</div><div class=\"line\">            tagName = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                                 <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                <span class=\"comment\">// Go to next tag</span></div><div class=\"line\">                eventType = parser.next();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Expecting menu, got \"</span> + tagName);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125; <span class=\"keyword\">while</span> (eventType != XmlPullParser.END_DOCUMENT);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">boolean</span> reachedEndOfMenu = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span> (!reachedEndOfMenu) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (eventType) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.START_TAG:</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag) &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;                            <span class=\"comment\">//\"group\"</span></div><div class=\"line\">                    menuState.readGroup(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;                      <span class=\"comment\">//\"item\"</span></div><div class=\"line\">                    menuState.readItem(attrs);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;                      <span class=\"comment\">//\"menu\"</span></div><div class=\"line\">                    <span class=\"comment\">// A menu start tag denotes a submenu for an item</span></div><div class=\"line\">                    SubMenu subMenu = menuState.addSubMenuItem();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">// Parse the submenu into returned SubMenu</span></div><div class=\"line\">                    parseMenu(parser, attrs, subMenu);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">true</span>;</div><div class=\"line\">                    unknownTagName = tagName;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_TAG:</div><div class=\"line\">                tagName = parser.getName();</div><div class=\"line\">                <span class=\"keyword\">if</span> (lookingForEndOfUnknownTag &amp;&amp; tagName.equals(unknownTagName)) &#123;</div><div class=\"line\">                    lookingForEndOfUnknownTag = <span class=\"keyword\">false</span>;</div><div class=\"line\">                    unknownTagName = <span class=\"keyword\">null</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_GROUP)) &#123;</div><div class=\"line\">                    menuState.resetGroup();</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_ITEM)) &#123;</div><div class=\"line\">                    <span class=\"comment\">// Add the item if it hasn't been added (if the item was</span></div><div class=\"line\">                    <span class=\"comment\">// a submenu, it would have been added already)</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (!menuState.hasAddedItem()) &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (menuState.itemActionProvider != <span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">                                menuState.itemActionProvider.hasSubMenu()) &#123;</div><div class=\"line\">                            menuState.addSubMenuItem();</div><div class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                            menuState.addItem();</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (tagName.equals(XML_MENU)) &#123;</div><div class=\"line\">                    reachedEndOfMenu = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">case</span> XmlPullParser.END_DOCUMENT:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"Unexpected end of document\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        eventType = parser.next();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"setDescendantFocusability的参数含义","date":"2017-09-21T05:39:14.000Z","_content":"beforeDescendants:viewgroup会优先其子类控件而获取到焦点\nafterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点\nblocksDescendants:viewgroup会覆盖子类控件而直接获得焦点\n\nViewGroup.java\n``` Java\npublic void setDescendantFocusability(int focusability) {\n    switch (focusability) {\n    case FOCUS_BEFORE_DESCENDANTS:\n    case FOCUS_AFTER_DESCENDANTS:\n    case FOCUS_BLOCK_DESCENDANTS:\n        break;\n    default:\n        throw new IllegalArgumentException(\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\");\n    }\n    mGroupFlags &= ~FLAG_MASK_FOCUSABILITY;\n    mGroupFlags |= (focusability & FLAG_MASK_FOCUSABILITY);\n}\n```","source":"_posts/setDescendantFocusability的参数含义.md","raw":"---\ntitle: setDescendantFocusability的参数含义\ndate: 2017-09-21 13:39:14\ntags:\n---\nbeforeDescendants:viewgroup会优先其子类控件而获取到焦点\nafterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点\nblocksDescendants:viewgroup会覆盖子类控件而直接获得焦点\n\nViewGroup.java\n``` Java\npublic void setDescendantFocusability(int focusability) {\n    switch (focusability) {\n    case FOCUS_BEFORE_DESCENDANTS:\n    case FOCUS_AFTER_DESCENDANTS:\n    case FOCUS_BLOCK_DESCENDANTS:\n        break;\n    default:\n        throw new IllegalArgumentException(\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\");\n    }\n    mGroupFlags &= ~FLAG_MASK_FOCUSABILITY;\n    mGroupFlags |= (focusability & FLAG_MASK_FOCUSABILITY);\n}\n```","slug":"setDescendantFocusability的参数含义","published":1,"updated":"2017-09-21T05:54:32.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggp000jeddxv5jcywir","content":"<p>beforeDescendants:viewgroup会优先其子类控件而获取到焦点<br>afterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点<br>blocksDescendants:viewgroup会覆盖子类控件而直接获得焦点</p>\n<p>ViewGroup.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDescendantFocusability</span><span class=\"params\">(<span class=\"keyword\">int</span> focusability)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (focusability) &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BEFORE_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_AFTER_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BLOCK_DESCENDANTS:</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    <span class=\"keyword\">default</span>:</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mGroupFlags &amp;= ~FLAG_MASK_FOCUSABILITY;</div><div class=\"line\">    mGroupFlags |= (focusability &amp; FLAG_MASK_FOCUSABILITY);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>beforeDescendants:viewgroup会优先其子类控件而获取到焦点<br>afterDescendants:viewgroup只有当其子类控件不需要获取焦点时才获取焦点<br>blocksDescendants:viewgroup会覆盖子类控件而直接获得焦点</p>\n<p>ViewGroup.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDescendantFocusability</span><span class=\"params\">(<span class=\"keyword\">int</span> focusability)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (focusability) &#123;</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BEFORE_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_AFTER_DESCENDANTS:</div><div class=\"line\">    <span class=\"keyword\">case</span> FOCUS_BLOCK_DESCENDANTS:</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    <span class=\"keyword\">default</span>:</div><div class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"must be one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mGroupFlags &amp;= ~FLAG_MASK_FOCUSABILITY;</div><div class=\"line\">    mGroupFlags |= (focusability &amp; FLAG_MASK_FOCUSABILITY);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"如何设置确认selinux 模式","date":"2017-09-19T07:54:53.000Z","_content":"[Description]\nlinux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？\n \n[Keyword]\nandroid, SELinux, Enforce, Permissive\n \n[Solution]\n在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。\n在ENG 版本中, 可以使用setenforce 命令进行设置:\n``` bash\nadb shell setenforce 0    //设置成permissive 模式\nadb shell setenforce 1    //设置成enforce 模式\n```\n \n在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：\n``` bash\nroot@mt6589_phone_720pv2:/ # getenforce\ngetenforce\nEnforcing\n```\n \n如果想开机一启动就设置模式，你可以用下面方式:\nKK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk\nL  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk\nM 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk\nchoose one of following value -> 1: disabled/ 2: permissive /3: enforcing\nSELINUX_STATUS := 3\n可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。\n \n注意的是:\n在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,\n需要修改 system/core/init/Android.mk\n如果是 L 版本 新增:\n```\nifeq ($(strip $(TARGET_BUILD_VARIANT)),user)\nLOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1\nendif\n```\n \n如果是在 M 版本 将:\n```\nifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n\n修改成:\n```\nifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n \n需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. \n \n \n[相关FAQ]\n[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现\"avc: denied\" 要如何处理\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11486\n[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11485\n[FAQ11483] 如何快速Debug SELinux Policy 问题\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11483","source":"_posts/shutdown-selinux.md","raw":"---\ntitle: 如何设置确认selinux 模式\ndate: 2017-09-19 15:54:53\ntags:\n---\n[Description]\nlinux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？\n \n[Keyword]\nandroid, SELinux, Enforce, Permissive\n \n[Solution]\n在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。\n在ENG 版本中, 可以使用setenforce 命令进行设置:\n``` bash\nadb shell setenforce 0    //设置成permissive 模式\nadb shell setenforce 1    //设置成enforce 模式\n```\n \n在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：\n``` bash\nroot@mt6589_phone_720pv2:/ # getenforce\ngetenforce\nEnforcing\n```\n \n如果想开机一启动就设置模式，你可以用下面方式:\nKK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk\nL  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk\nM 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk\nchoose one of following value -> 1: disabled/ 2: permissive /3: enforcing\nSELINUX_STATUS := 3\n可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。\n \n注意的是:\n在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,\n需要修改 system/core/init/Android.mk\n如果是 L 版本 新增:\n```\nifeq ($(strip $(TARGET_BUILD_VARIANT)),user)\nLOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1\nendif\n```\n \n如果是在 M 版本 将:\n```\nifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n\n修改成:\n```\nifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))\ninit_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1\ninit_options += -DINIT_ENG_BUILD\nelse\n```\n \n需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. \n \n \n[相关FAQ]\n[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现\"avc: denied\" 要如何处理\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11486\n[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11485\n[FAQ11483] 如何快速Debug SELinux Policy 问题\nhttps://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ11483","slug":"shutdown-selinux","published":1,"updated":"2017-09-21T05:57:31.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggq000keddxxlu9e2au","content":"<p>[Description]<br>linux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？</p>\n<p>[Keyword]<br>android, SELinux, Enforce, Permissive</p>\n<p>[Solution]<br>在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。<br>在ENG 版本中, 可以使用setenforce 命令进行设置:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setenforce 0    //设置成permissive 模式</div><div class=\"line\">adb shell setenforce 1    //设置成enforce 模式</div></pre></td></tr></table></figure></p>\n<p>在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mt6589_phone_720pv2:/ <span class=\"comment\"># getenforce</span></div><div class=\"line\">getenforce</div><div class=\"line\">Enforcing</div></pre></td></tr></table></figure></p>\n<p>如果想开机一启动就设置模式，你可以用下面方式:<br>KK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk<br>L  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk<br>M 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk<br>choose one of following value -&gt; 1: disabled/ 2: permissive /3: enforcing<br>SELINUX_STATUS := 3<br>可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。</p>\n<p>注意的是:<br>在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,<br>需要修改 system/core/init/Android.mk<br>如果是 L 版本 新增:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifeq ($(strip $(TARGET_BUILD_VARIANT)),user)</div><div class=\"line\">LOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">endif</div></pre></td></tr></table></figure></p>\n<p>如果是在 M 版本 将:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>修改成:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. </p>\n<p>[相关FAQ]<br>[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现”avc: denied” 要如何处理<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486</a><br>[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485</a><br>[FAQ11483] 如何快速Debug SELinux Policy 问题<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>[Description]<br>linux SELinux 分成Enforce 以及 Permissive 两种模式，如何进行设置与确认当前SELinux模式？</p>\n<p>[Keyword]<br>android, SELinux, Enforce, Permissive</p>\n<p>[Solution]<br>在Android KK 4.4 版本后，Google 有正式有限制的启用SELinux, 来增强android 的安全保护。<br>在ENG 版本中, 可以使用setenforce 命令进行设置:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">adb shell setenforce 0    //设置成permissive 模式</div><div class=\"line\">adb shell setenforce 1    //设置成enforce 模式</div></pre></td></tr></table></figure></p>\n<p>在ENG/USER 版本中，都可以使用getenforce 命令进行查询，如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@mt6589_phone_720pv2:/ <span class=\"comment\"># getenforce</span></div><div class=\"line\">getenforce</div><div class=\"line\">Enforcing</div></pre></td></tr></table></figure></p>\n<p>如果想开机一启动就设置模式，你可以用下面方式:<br>KK 版本:更新mediatek/custom/{platform}/lk/rules_platform.mk<br>L  版本: 更新bootable/bootloader/lk/platform/mt6xxx/rules.mk<br>M 版本: 更新vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6XXX/rules.mk<br>choose one of following value -&gt; 1: disabled/ 2: permissive /3: enforcing<br>SELINUX_STATUS := 3<br>可直接调整这个SELINUX_STATUS这个的值为2, 严禁直接设置成1:disabled, 此会造成生成的文件无法正确的打上标签,造成在再次设置成enforcing时，难以预料的情况发生。</p>\n<p>注意的是:<br>在L 版本后, Google 要求强制性开启enforcing mode, 前面的设置只针对userdebug, eng 版本有效, 如果要对 user 版本有效,<br>需要修改 system/core/init/Android.mk<br>如果是 L 版本 新增:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifeq ($(strip $(TARGET_BUILD_VARIANT)),user)</div><div class=\"line\">LOCAL_CFLAGS += -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">endif</div></pre></td></tr></table></figure></p>\n<p>如果是在 M 版本 将:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>修改成:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifneq (,$(filter user userdebug eng,$(TARGET_BUILD_VARIANT)))</div><div class=\"line\">init_options += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1</div><div class=\"line\">init_options += -DINIT_ENG_BUILD</div><div class=\"line\">else</div></pre></td></tr></table></figure></p>\n<p>需要注意的是, Google 要求强制性开启SELinux Enforcing Mode, 如果您关闭，将无法通过Google CTS. </p>\n<p>[相关FAQ]<br>[FAQ11486] [SELinux Policy] 如何设置SELinux 策略规则 ? 在Kernel Log 中出现”avc: denied” 要如何处理<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11486</a><br>[FAQ11485] 权限(Permission denied)问题如何确认是Selinux 约束引起<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11485</a><br>[FAQ11483] 如何快速Debug SELinux Policy 问题<br><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483\" target=\"_blank\" rel=\"external\">https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ11483</a></p>\n"},{"title":"sqlite rawQuery() 方法怎么用","date":"2017-09-22T02:45:52.000Z","_content":"``` Java\nCursor cursor = database.rawQuery(\"select count(*) from contacts;\", null);\ncursor.moveToFirst();\t\t//这里必须要加上这句话，否则会报错\nint count = cursor.getInt(0);\n```","source":"_posts/sqlite-rawQuery.md","raw":"---\ntitle: sqlite rawQuery() 方法怎么用\ndate: 2017-09-22 10:45:52\ntags:\n---\n``` Java\nCursor cursor = database.rawQuery(\"select count(*) from contacts;\", null);\ncursor.moveToFirst();\t\t//这里必须要加上这句话，否则会报错\nint count = cursor.getInt(0);\n```","slug":"sqlite-rawQuery","published":1,"updated":"2017-09-22T02:46:36.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggq000leddxsliipy5c","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor = database.rawQuery(<span class=\"string\">\"select count(*) from contacts;\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">cursor.moveToFirst();\t\t<span class=\"comment\">//这里必须要加上这句话，否则会报错</span></div><div class=\"line\"><span class=\"keyword\">int</span> count = cursor.getInt(<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor = database.rawQuery(<span class=\"string\">\"select count(*) from contacts;\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">cursor.moveToFirst();\t\t<span class=\"comment\">//这里必须要加上这句话，否则会报错</span></div><div class=\"line\"><span class=\"keyword\">int</span> count = cursor.getInt(<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>"},{"title":"support_features","date":"2017-09-21T09:10:05.000Z","_content":"1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，\nA) System Feature\nPackageManager pm = getPackageManager();\npm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)\nIt returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS\n客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性\n\n解决：\na. PackageManager.hasSystemFeature() 源码分析\nalps/frameworks/base/core/java/android/content/pm/PackageManager.java\nalps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java\n跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true\n所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }\nvoid readPermissions() {} 这个方法会读取 \"etc/permissions\" 目录下的所有文件中的 feature 属性\n\n通过下面这段代码可以查看手机支持的所有feature\n``` Java\nandroid.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();\nfor(android.content.pm.FeatureInfo featureInfo : featureInfos){\n    android.util.Log.e(\"zhangqi8888\", \"DialpadFragment->featureInfo:\"+featureInfo.toString());\n}\n```\n\nb. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括\n...\n/system/etc/permissions/handheld_core_hardware.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\n/system/etc/permissions/android.hardware.touchscreen.xml\n在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\" />\n\nc. 通过在 alps/ 目录下搜索文件 find . -name \"android.hardware.touchscreen\"，找到在如下一些文件\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n\n这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下\n``` Makefile\n#touch related file for CTS\nifeq ($(strip $(CUSTOM_KERNEL_TOUCHPANEL)),generic)\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nelse\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nendif\n```\n\n在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值\n#touch driver need to report correct touch axes\nCUSTOM_KERNEL_TOUCHPANEL=\n\nd. 最终修改\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n把以上几个文件中 <feature name=\"android.hardware.touchscreen\" /> 的相关属性都注释掉\n\ne. 有何影响\n通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nmIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);\nif (mIsTouchDevice) {\n    if ((sources & InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) {\n        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;\n    }\n}\n```\n改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响\n\n2.\nB) Configuration.touchscreen\n``` Java\nConfiguration config = getResources().getConfiguration();\nconfig.touchscreen\n```\nit returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.\n\n解决方案：\n默认就是 TOUCHSCREEN_NOTOUCH，无需修改\n\n3.\nC) Configuration.keyboard\nconfig.keyboard\nit returns KEYBOARD_NOKEYS on the test device which is NOT correct. \nIt should return KEYBOARD_12KEY\n\n解决方案：\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nboolean computeScreenConfigurationLocked(Configuration config) {\n    ......\n    //zhangqi modified begin\n    if (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) {\n        config.keyboard = Configuration.KEYBOARD_QWERTY;\n        keyboardPresence |= presenceFlag;\n    }else if(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC){\n        config.keyboard = Configuration.KEYBOARD_12KEY;     //配置成 KEYBOARD_12KEY\n    }\n    //zhangqi modified end\n    ......\n}\n```","source":"_posts/support-features.md","raw":"---\ntitle: support_features\ndate: 2017-09-21 17:10:05\ntags:\n---\n1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，\nA) System Feature\nPackageManager pm = getPackageManager();\npm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)\nIt returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS\n客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性\n\n解决：\na. PackageManager.hasSystemFeature() 源码分析\nalps/frameworks/base/core/java/android/content/pm/PackageManager.java\nalps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java\n跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true\n所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }\nvoid readPermissions() {} 这个方法会读取 \"etc/permissions\" 目录下的所有文件中的 feature 属性\n\n通过下面这段代码可以查看手机支持的所有feature\n``` Java\nandroid.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();\nfor(android.content.pm.FeatureInfo featureInfo : featureInfos){\n    android.util.Log.e(\"zhangqi8888\", \"DialpadFragment->featureInfo:\"+featureInfo.toString());\n}\n```\n\nb. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括\n...\n/system/etc/permissions/handheld_core_hardware.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.xml\n/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\n/system/etc/permissions/android.hardware.touchscreen.xml\n在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\" />\n\nc. 通过在 alps/ 目录下搜索文件 find . -name \"android.hardware.touchscreen\"，找到在如下一些文件\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n\n这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下\n``` Makefile\n#touch related file for CTS\nifeq ($(strip $(CUSTOM_KERNEL_TOUCHPANEL)),generic)\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nelse\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml\nPRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml\nendif\n```\n\n在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值\n#touch driver need to report correct touch axes\nCUSTOM_KERNEL_TOUCHPANEL=\n\nd. 最终修改\nframeworks/native/data/etc/handheld_core_hardware.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.xml\nframeworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml\nframeworks/native/data/etc/android.hardware.touchscreen.xml\nmediatek/config/sr72_w_kk/android.hardware.touchscreen.xml\n把以上几个文件中 <feature name=\"android.hardware.touchscreen\" /> 的相关属性都注释掉\n\ne. 有何影响\n通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nmIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);\nif (mIsTouchDevice) {\n    if ((sources & InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) {\n        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;\n    }\n}\n```\n改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响\n\n2.\nB) Configuration.touchscreen\n``` Java\nConfiguration config = getResources().getConfiguration();\nconfig.touchscreen\n```\nit returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.\n\n解决方案：\n默认就是 TOUCHSCREEN_NOTOUCH，无需修改\n\n3.\nC) Configuration.keyboard\nconfig.keyboard\nit returns KEYBOARD_NOKEYS on the test device which is NOT correct. \nIt should return KEYBOARD_12KEY\n\n解决方案：\nalps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nboolean computeScreenConfigurationLocked(Configuration config) {\n    ......\n    //zhangqi modified begin\n    if (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) {\n        config.keyboard = Configuration.KEYBOARD_QWERTY;\n        keyboardPresence |= presenceFlag;\n    }else if(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC){\n        config.keyboard = Configuration.KEYBOARD_12KEY;     //配置成 KEYBOARD_12KEY\n    }\n    //zhangqi modified end\n    ......\n}\n```","slug":"support-features","published":1,"updated":"2017-09-21T09:13:38.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggr000meddxgivg2eyx","content":"<p>1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，<br>A) System Feature<br>PackageManager pm = getPackageManager();<br>pm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)<br>It returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS<br>客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性</p>\n<p>解决：<br>a. PackageManager.hasSystemFeature() 源码分析<br>alps/frameworks/base/core/java/android/content/pm/PackageManager.java<br>alps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java<br>跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true<br>所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }<br>void readPermissions() {} 这个方法会读取 “etc/permissions” 目录下的所有文件中的 feature 属性</p>\n<p>通过下面这段代码可以查看手机支持的所有feature<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();</div><div class=\"line\"><span class=\"keyword\">for</span>(android.content.pm.FeatureInfo featureInfo : featureInfos)&#123;</div><div class=\"line\">    android.util.Log.e(<span class=\"string\">\"zhangqi8888\"</span>, <span class=\"string\">\"DialpadFragment-&gt;featureInfo:\"</span>+featureInfo.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>b. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括<br>…<br>/system/etc/permissions/handheld_core_hardware.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml<br>/system/etc/permissions/android.hardware.touchscreen.xml<br>在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\"></feature></p>\n<p>c. 通过在 alps/ 目录下搜索文件 find . -name “android.hardware.touchscreen”，找到在如下一些文件<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml</p>\n<p>这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#touch related file for CTS</span></div><div class=\"line\"><span class=\"keyword\">ifeq</span> (<span class=\"variable\">$(<span class=\"built_in\">strip</span> <span class=\"variable\">$(CUSTOM_KERNEL_TOUCHPANEL)</span>)</span>,generic)</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值</p>\n<p>#touch driver need to report correct touch axes<br>CUSTOM_KERNEL_TOUCHPANEL=</p>\n<p>d. 最终修改<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml<br>把以上几个文件中 <feature name=\"android.hardware.touchscreen\"> 的相关属性都注释掉</feature></p>\n<p>e. 有何影响<br>通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);</div><div class=\"line\"><span class=\"keyword\">if</span> (mIsTouchDevice) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((sources &amp; InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) &#123;</div><div class=\"line\">        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响</p>\n<p>2.<br>B) Configuration.touchscreen<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Configuration config = getResources().getConfiguration();</div><div class=\"line\">config.touchscreen</div></pre></td></tr></table></figure></p>\n<p>it returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.</p>\n<p>解决方案：<br>默认就是 TOUCHSCREEN_NOTOUCH，无需修改</p>\n<p>3.<br>C) Configuration.keyboard<br>config.keyboard<br>it returns KEYBOARD_NOKEYS on the test device which is NOT correct.<br>It should return KEYBOARD_12KEY</p>\n<p>解决方案：<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">computeScreenConfigurationLocked</span><span class=\"params\">(Configuration config)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified begin</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) &#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_QWERTY;</div><div class=\"line\">        keyboardPresence |= presenceFlag;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC)&#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_12KEY;     <span class=\"comment\">//配置成 KEYBOARD_12KEY</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified end</span></div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.关闭 PackageManager.FEATURE_TOUCHSCREEN 支持，<br>A) System Feature<br>PackageManager pm = getPackageManager();<br>pm.hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN)<br>It returns ‘TRUE’ on the test device which is NOT correct, It should return TOUCHSCREEN_NOTOUCH, TOUCHSCREEN_UNDEFINED, or TOUCHSCREEN_STYLUS<br>客户反馈说Facebook检测到我们的非触屏手机M2414中有 PackageManager.FEATURE_TOUCHSCREEN 属性，现在需要去掉该属性</p>\n<p>解决：<br>a. PackageManager.hasSystemFeature() 源码分析<br>alps/frameworks/base/core/java/android/content/pm/PackageManager.java<br>alps/frameworks/base/services/java/com/android/server/pm/PackageManagerService.java<br>跟踪代码发现 hasSystemFeature(feature) 方法只要在 mAvailableFeatures 里面包含对应的 feature 就会返回true<br>所有的 feature 的加载是在 private void readPermissionsFromXml(File permFile) { }<br>void readPermissions() {} 这个方法会读取 “etc/permissions” 目录下的所有文件中的 feature 属性</p>\n<p>通过下面这段代码可以查看手机支持的所有feature<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android.content.pm.FeatureInfo[] featureInfos = getPackageManager().getSystemAvailableFeatures();</div><div class=\"line\"><span class=\"keyword\">for</span>(android.content.pm.FeatureInfo featureInfo : featureInfos)&#123;</div><div class=\"line\">    android.util.Log.e(<span class=\"string\">\"zhangqi8888\"</span>, <span class=\"string\">\"DialpadFragment-&gt;featureInfo:\"</span>+featureInfo.toString());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>b. 通过 adb shell 查看 etc/permissions 目录下的所有文件，包括<br>…<br>/system/etc/permissions/handheld_core_hardware.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.xml<br>/system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml<br>/system/etc/permissions/android.hardware.touchscreen.xml<br>在以上几个文件中都能找到 <feature name=\"android.hardware.touchscreen\"></feature></p>\n<p>c. 通过在 alps/ 目录下搜索文件 find . -name “android.hardware.touchscreen”，找到在如下一些文件<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml</p>\n<p>这些文件在 mediatek/frameworks-ext/native/etc/sensor_touch_permission.mk 文件中编译拷贝到 /system/etc/下面，代码如下<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#touch related file for CTS</span></div><div class=\"line\"><span class=\"keyword\">ifeq</span> (<span class=\"variable\">$(<span class=\"built_in\">strip</span> <span class=\"variable\">$(CUSTOM_KERNEL_TOUCHPANEL)</span>)</span>,generic)</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.faketouch.xml:system/etc/permissions/android.hardware.faketouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.distinct.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.jazzhand.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml:system/etc/permissions/android.hardware.touchscreen.multitouch.xml</div><div class=\"line\">PRODUCT_COPY_FILES += frameworks/native/data/etc/android.hardware.touchscreen.xml:system/etc/permissions/android.hardware.touchscreen.xml</div><div class=\"line\"><span class=\"keyword\">endif</span></div></pre></td></tr></table></figure></p>\n<p>在 ProjectConfig.mk 文件中查看 CUSTOM_KERNEL_TOUCHPANEL 这个宏里面没有值</p>\n<p>#touch driver need to report correct touch axes<br>CUSTOM_KERNEL_TOUCHPANEL=</p>\n<p>d. 最终修改<br>frameworks/native/data/etc/handheld_core_hardware.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.jazzhand.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.multitouch.distinct.xml<br>frameworks/native/data/etc/android.hardware.touchscreen.xml<br>mediatek/config/sr72_w_kk/android.hardware.touchscreen.xml<br>把以上几个文件中 <feature name=\"android.hardware.touchscreen\"> 的相关属性都注释掉</feature></p>\n<p>e. 有何影响<br>通过搜索发现只在 WindowManagerService.java 文件中有使用这个属性<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mIsTouchDevice = mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_TOUCHSCREEN);</div><div class=\"line\"><span class=\"keyword\">if</span> (mIsTouchDevice) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> ((sources &amp; InputDevice.SOURCE_TOUCHSCREEN) == InputDevice.SOURCE_TOUCHSCREEN) &#123;</div><div class=\"line\">        config.touchscreen = Configuration.TOUCHSCREEN_FINGER;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>改了之后，只是不会走上面这段代码把 touchscreen 设置为 TOUCHSCREEN_FINGER，而通过调试发现修改之前 touchscreen 也是 TOUCHSCREEN_NOTOUCH，所以不会有影响</p>\n<p>2.<br>B) Configuration.touchscreen<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Configuration config = getResources().getConfiguration();</div><div class=\"line\">config.touchscreen</div></pre></td></tr></table></figure></p>\n<p>it returns TOUCHSCREEN_NOTOUCH on the test device, which should be correct. Please make sure it will return NOTOUCH in future.</p>\n<p>解决方案：<br>默认就是 TOUCHSCREEN_NOTOUCH，无需修改</p>\n<p>3.<br>C) Configuration.keyboard<br>config.keyboard<br>it returns KEYBOARD_NOKEYS on the test device which is NOT correct.<br>It should return KEYBOARD_12KEY</p>\n<p>解决方案：<br>alps/frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">computeScreenConfigurationLocked</span><span class=\"params\">(Configuration config)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified begin</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_ALPHABETIC) &#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_QWERTY;</div><div class=\"line\">        keyboardPresence |= presenceFlag;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(device.getKeyboardType() == InputDevice.KEYBOARD_TYPE_NON_ALPHABETIC)&#123;</div><div class=\"line\">        config.keyboard = Configuration.KEYBOARD_12KEY;     <span class=\"comment\">//配置成 KEYBOARD_12KEY</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//zhangqi modified end</span></div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"ubuntu下cocos2dx学习","date":"2017-09-25T07:36:46.000Z","_content":"1. 编译cocos2dx整个工程的时候编译不过？？？\n\n解决:\na.../CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’\n只要在LabelReader.cpp文件中添加#include <algorithm> 就可以\nb.会报Lua编译不过的异常\n只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了\n\n2. 如何创建工程之后如何编译？？？\n\n解决:\n只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了\n\n3. cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()' 报错?????\n\n解决:\n没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用\n需要在 Makefile 文件中添加编译 GameScene.cpp就行了\n\n4. ../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？\n\n解决:\n类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加\";\"就可以了","source":"_posts/ubuntu下cocos2dx学习.md","raw":"---\ntitle: ubuntu下cocos2dx学习\ndate: 2017-09-25 15:36:46\ntags:\n---\n1. 编译cocos2dx整个工程的时候编译不过？？？\n\n解决:\na.../CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’\n只要在LabelReader.cpp文件中添加#include <algorithm> 就可以\nb.会报Lua编译不过的异常\n只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了\n\n2. 如何创建工程之后如何编译？？？\n\n解决:\n只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了\n\n3. cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()' 报错?????\n\n解决:\n没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用\n需要在 Makefile 文件中添加编译 GameScene.cpp就行了\n\n4. ../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？\n\n解决:\n类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加\";\"就可以了","slug":"ubuntu下cocos2dx学习","published":1,"updated":"2017-09-25T07:37:36.318Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggs000neddxv4e61q92","content":"<ol>\n<li>编译cocos2dx整个工程的时候编译不过？？？</li>\n</ol>\n<p>解决:<br>a…/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’<br>只要在LabelReader.cpp文件中添加#include <algorithm> 就可以<br>b.会报Lua编译不过的异常<br>只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了</algorithm></p>\n<ol>\n<li>如何创建工程之后如何编译？？？</li>\n</ol>\n<p>解决:<br>只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了</p>\n<ol>\n<li>cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()’ 报错?????</li>\n</ol>\n<p>解决:<br>没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用<br>需要在 Makefile 文件中添加编译 GameScene.cpp就行了</p>\n<ol>\n<li>../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？</li>\n</ol>\n<p>解决:<br>类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加”;”就可以了</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>编译cocos2dx整个工程的时候编译不过？？？</li>\n</ol>\n<p>解决:<br>a…/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp:54: error: ‘transform’ is not a member of ‘std’<br>只要在LabelReader.cpp文件中添加#include <algorithm> 就可以<br>b.会报Lua编译不过的异常<br>只要将cocos2dx根目录下的Makefile文件中编译Lua的部分去掉就可以了</algorithm></p>\n<ol>\n<li>如何创建工程之后如何编译？？？</li>\n</ol>\n<p>解决:<br>只需要执行 cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/build.sh 这个脚本就可以了</p>\n<ol>\n<li>cocos2d-x-2.2.5/projects/FlappyBird/proj.linux/../Classes/HelloWorldScene.cpp:88: undefined reference to `GameScene::scene()’ 报错?????</li>\n</ol>\n<p>解决:<br>没有将GameScene.cpp文件编进去，找不到GameScene::scene()函数的引用<br>需要在 Makefile 文件中添加编译 GameScene.cpp就行了</p>\n<ol>\n<li>../Classes/HelloWorldScene.cpp:5: error: expected unqualified-id before ‘using’？？？？</li>\n</ol>\n<p>解决:<br>类定义的时候的问题，只需要在 GameScene.h 头文件中类定义的结尾添加”;”就可以了</p>\n"},{"title":"ubuntu搜狗输入法无法输入中文","date":"2017-09-21T02:42:39.000Z","_content":"\n今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。\n系统环境;ubuntu 14.04LTS\n搜狗版本:2.1.0.0082\nfcitx版本:1:4.2.9.1-lu\n\n### 方法一:重新启动搜狗输入法\n通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:\n``` bash\n~$ sudo killall fcitx\n~$ sudo killall sogou-qinpanel\n```\n\n### 方法二:检查修复安装依赖\n因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题\n``` bash\n~$ sudo apt-get install -f\n```\n\n### 方法三:删除配置文件，重启搜狗\nubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：\nSogouPY、SogouPY.users、sogou-qimpanel\n删除这3个文件夹，然后重启搜狗。\n我使用这种方法后解决了无法输入中文问题。\n\n### 小记:\nLinux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.\n因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.","source":"_posts/ubuntu搜狗输入法无法输入中文.md","raw":"---\ntitle: ubuntu搜狗输入法无法输入中文\ndate: 2017-09-21 10:42:39\ntags:\n---\n\n今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。\n系统环境;ubuntu 14.04LTS\n搜狗版本:2.1.0.0082\nfcitx版本:1:4.2.9.1-lu\n\n### 方法一:重新启动搜狗输入法\n通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:\n``` bash\n~$ sudo killall fcitx\n~$ sudo killall sogou-qinpanel\n```\n\n### 方法二:检查修复安装依赖\n因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题\n``` bash\n~$ sudo apt-get install -f\n```\n\n### 方法三:删除配置文件，重启搜狗\nubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：\nSogouPY、SogouPY.users、sogou-qimpanel\n删除这3个文件夹，然后重启搜狗。\n我使用这种方法后解决了无法输入中文问题。\n\n### 小记:\nLinux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.\n因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.","slug":"ubuntu搜狗输入法无法输入中文","published":1,"updated":"2017-09-21T03:22:01.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggt000oeddxgxs0xt7q","content":"<p>今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。<br>系统环境;ubuntu 14.04LTS<br>搜狗版本:2.1.0.0082<br>fcitx版本:1:4.2.9.1-lu</p>\n<h3 id=\"方法一-重新启动搜狗输入法\"><a href=\"#方法一-重新启动搜狗输入法\" class=\"headerlink\" title=\"方法一:重新启动搜狗输入法\"></a>方法一:重新启动搜狗输入法</h3><p>通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo killall fcitx</div><div class=\"line\">~$ sudo killall sogou-qinpanel</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-检查修复安装依赖\"><a href=\"#方法二-检查修复安装依赖\" class=\"headerlink\" title=\"方法二:检查修复安装依赖\"></a>方法二:检查修复安装依赖</h3><p>因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo apt-get install -f</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法三-删除配置文件，重启搜狗\"><a href=\"#方法三-删除配置文件，重启搜狗\" class=\"headerlink\" title=\"方法三:删除配置文件，重启搜狗\"></a>方法三:删除配置文件，重启搜狗</h3><p>ubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：<br>SogouPY、SogouPY.users、sogou-qimpanel<br>删除这3个文件夹，然后重启搜狗。<br>我使用这种方法后解决了无法输入中文问题。</p>\n<h3 id=\"小记\"><a href=\"#小记\" class=\"headerlink\" title=\"小记:\"></a>小记:</h3><p>Linux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.<br>因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天晚上在搜东西的时候,突然间这搜狗输入法跟中了邪一样,只能输入拼音了(具体现象是，可以呼出搜狗输入法界面，但是候选词列表无显示），解决之后记录下来，希望能为同样遇到这个问题的人提供参考。总结了以下集中情况:同时附linux下常见软件崩溃问题解决方案。<br>系统环境;ubuntu 14.04LTS<br>搜狗版本:2.1.0.0082<br>fcitx版本:1:4.2.9.1-lu</p>\n<h3 id=\"方法一-重新启动搜狗输入法\"><a href=\"#方法一-重新启动搜狗输入法\" class=\"headerlink\" title=\"方法一:重新启动搜狗输入法\"></a>方法一:重新启动搜狗输入法</h3><p>通过下面的两个命令重启搜狗输入法,看重启之后是否可以正常使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo killall fcitx</div><div class=\"line\">~$ sudo killall sogou-qinpanel</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-检查修复安装依赖\"><a href=\"#方法二-检查修复安装依赖\" class=\"headerlink\" title=\"方法二:检查修复安装依赖\"></a>方法二:检查修复安装依赖</h3><p>因为我是在正常使用下出现的问题,所以不是安装依赖的问题不适用,刚安装好的朋友如果无法使用,可以用下面的领了排查或者修复安装依赖问题<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~$ sudo apt-get install -f</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法三-删除配置文件，重启搜狗\"><a href=\"#方法三-删除配置文件，重启搜狗\" class=\"headerlink\" title=\"方法三:删除配置文件，重启搜狗\"></a>方法三:删除配置文件，重启搜狗</h3><p>ubuntu下搜狗的配置文件在 ~/.config下的3个文件夹里：<br>SogouPY、SogouPY.users、sogou-qimpanel<br>删除这3个文件夹，然后重启搜狗。<br>我使用这种方法后解决了无法输入中文问题。</p>\n<h3 id=\"小记\"><a href=\"#小记\" class=\"headerlink\" title=\"小记:\"></a>小记:</h3><p>Linux下的软件会经常出现配置问题而崩溃,最直接的反应就是无法使用,之前的Wildfly也是因为配置文档的原因无法启动.<br>因此,如果Linux下正常使用的软件突然无法使用,崩溃,可以尝试删除或者修改配置文档的方式来解决.</p>\n"},{"title":"wifi热点名称保存读取","date":"2017-09-22T01:27:51.000Z","_content":"\nframeworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n\n//保存到 softap.conf 文件中\n``` Java\nprivate static final String AP_CONFIG_FILE = Environment.getDataDirectory() + \"/misc/wifi/softap.conf\";\n```\n\n//保存\n``` Java\nprivate void writeApConfiguration(final WifiConfiguration config) {\n    DataOutputStream out = null;\n    try {\n        out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(AP_CONFIG_FILE)));\n        out.writeInt(AP_CONFIG_FILE_VERSION);\n        out.writeUTF(config.SSID);\n        int authType = config.getAuthType();\n        out.writeInt(authType);\n        if (authType != KeyMgmt.NONE) {\n            out.writeUTF(config.preSharedKey);\n        }\n        out.writeInt(config.channel);\n        out.writeInt(config.channelWidth);\n    } catch (IOException e) {\n        Log.e(TAG, \"Error writing hotspot configuration\" + e);\n    } finally {\n        if (out != null) {\n            try {\n                out.close();\n            } catch (IOException e) {}\n        }\n    }\n}\n```\n//读取\n``` Java\nvoid loadApConfiguration() {\n    DataInputStream in = null;\n    try {\n        WifiConfiguration config = new WifiConfiguration();\n        in = new DataInputStream(new BufferedInputStream(new FileInputStream(AP_CONFIG_FILE)));\n        int version = in.readInt();\n        if (version != 1) {\n            Log.e(TAG, \"Bad version on hotspot configuration file, set defaults\");\n            setDefaultApConfiguration();\n            return;\n        }\n        config.SSID = in.readUTF();\n        int authType = in.readInt();\n        config.allowedKeyManagement.set(authType);\n        if (authType != KeyMgmt.NONE) {\n            config.preSharedKey = in.readUTF();\n        }\n        config.channel = in.readInt();\n        config.channelWidth = in.readInt();\n        mWifiApConfig = config;\n    } catch (IOException ignore) {\n        setDefaultApConfiguration();\n    } finally {\n        if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","source":"_posts/wifi热点名称保存读取.md","raw":"---\ntitle: wifi热点名称保存读取\ndate: 2017-09-22 09:27:51\ntags:\n---\n\nframeworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n\n//保存到 softap.conf 文件中\n``` Java\nprivate static final String AP_CONFIG_FILE = Environment.getDataDirectory() + \"/misc/wifi/softap.conf\";\n```\n\n//保存\n``` Java\nprivate void writeApConfiguration(final WifiConfiguration config) {\n    DataOutputStream out = null;\n    try {\n        out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(AP_CONFIG_FILE)));\n        out.writeInt(AP_CONFIG_FILE_VERSION);\n        out.writeUTF(config.SSID);\n        int authType = config.getAuthType();\n        out.writeInt(authType);\n        if (authType != KeyMgmt.NONE) {\n            out.writeUTF(config.preSharedKey);\n        }\n        out.writeInt(config.channel);\n        out.writeInt(config.channelWidth);\n    } catch (IOException e) {\n        Log.e(TAG, \"Error writing hotspot configuration\" + e);\n    } finally {\n        if (out != null) {\n            try {\n                out.close();\n            } catch (IOException e) {}\n        }\n    }\n}\n```\n//读取\n``` Java\nvoid loadApConfiguration() {\n    DataInputStream in = null;\n    try {\n        WifiConfiguration config = new WifiConfiguration();\n        in = new DataInputStream(new BufferedInputStream(new FileInputStream(AP_CONFIG_FILE)));\n        int version = in.readInt();\n        if (version != 1) {\n            Log.e(TAG, \"Bad version on hotspot configuration file, set defaults\");\n            setDefaultApConfiguration();\n            return;\n        }\n        config.SSID = in.readUTF();\n        int authType = in.readInt();\n        config.allowedKeyManagement.set(authType);\n        if (authType != KeyMgmt.NONE) {\n            config.preSharedKey = in.readUTF();\n        }\n        config.channel = in.readInt();\n        config.channelWidth = in.readInt();\n        mWifiApConfig = config;\n    } catch (IOException ignore) {\n        setDefaultApConfiguration();\n    } finally {\n        if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","slug":"wifi热点名称保存读取","published":1,"updated":"2017-09-22T03:57:02.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggt000peddxwfnqrqdr","content":"<p>frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java</p>\n<p>//保存到 softap.conf 文件中<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String AP_CONFIG_FILE = Environment.getDataDirectory() + <span class=\"string\">\"/misc/wifi/softap.conf\"</span>;</div></pre></td></tr></table></figure></p>\n<p>//保存<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeApConfiguration</span><span class=\"params\">(<span class=\"keyword\">final</span> WifiConfiguration config)</span> </span>&#123;</div><div class=\"line\">    DataOutputStream out = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        out = <span class=\"keyword\">new</span> DataOutputStream(<span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        out.writeInt(AP_CONFIG_FILE_VERSION);</div><div class=\"line\">        out.writeUTF(config.SSID);</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = config.getAuthType();</div><div class=\"line\">        out.writeInt(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            out.writeUTF(config.preSharedKey);</div><div class=\"line\">        &#125;</div><div class=\"line\">        out.writeInt(config.channel);</div><div class=\"line\">        out.writeInt(config.channelWidth);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.e(TAG, <span class=\"string\">\"Error writing hotspot configuration\"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (out != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                out.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//读取<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    DataInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        WifiConfiguration config = <span class=\"keyword\">new</span> WifiConfiguration();</div><div class=\"line\">        in = <span class=\"keyword\">new</span> DataInputStream(<span class=\"keyword\">new</span> BufferedInputStream(<span class=\"keyword\">new</span> FileInputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        <span class=\"keyword\">int</span> version = in.readInt();</div><div class=\"line\">        <span class=\"keyword\">if</span> (version != <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            Log.e(TAG, <span class=\"string\">\"Bad version on hotspot configuration file, set defaults\"</span>);</div><div class=\"line\">            setDefaultApConfiguration();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.SSID = in.readUTF();</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = in.readInt();</div><div class=\"line\">        config.allowedKeyManagement.set(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            config.preSharedKey = in.readUTF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.channel = in.readInt();</div><div class=\"line\">        config.channelWidth = in.readInt();</div><div class=\"line\">        mWifiApConfig = config;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException ignore) &#123;</div><div class=\"line\">        setDefaultApConfiguration();</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java</p>\n<p>//保存到 softap.conf 文件中<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String AP_CONFIG_FILE = Environment.getDataDirectory() + <span class=\"string\">\"/misc/wifi/softap.conf\"</span>;</div></pre></td></tr></table></figure></p>\n<p>//保存<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">writeApConfiguration</span><span class=\"params\">(<span class=\"keyword\">final</span> WifiConfiguration config)</span> </span>&#123;</div><div class=\"line\">    DataOutputStream out = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        out = <span class=\"keyword\">new</span> DataOutputStream(<span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        out.writeInt(AP_CONFIG_FILE_VERSION);</div><div class=\"line\">        out.writeUTF(config.SSID);</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = config.getAuthType();</div><div class=\"line\">        out.writeInt(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            out.writeUTF(config.preSharedKey);</div><div class=\"line\">        &#125;</div><div class=\"line\">        out.writeInt(config.channel);</div><div class=\"line\">        out.writeInt(config.channelWidth);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.e(TAG, <span class=\"string\">\"Error writing hotspot configuration\"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (out != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                out.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//读取<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loadApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    DataInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        WifiConfiguration config = <span class=\"keyword\">new</span> WifiConfiguration();</div><div class=\"line\">        in = <span class=\"keyword\">new</span> DataInputStream(<span class=\"keyword\">new</span> BufferedInputStream(<span class=\"keyword\">new</span> FileInputStream(AP_CONFIG_FILE)));</div><div class=\"line\">        <span class=\"keyword\">int</span> version = in.readInt();</div><div class=\"line\">        <span class=\"keyword\">if</span> (version != <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            Log.e(TAG, <span class=\"string\">\"Bad version on hotspot configuration file, set defaults\"</span>);</div><div class=\"line\">            setDefaultApConfiguration();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.SSID = in.readUTF();</div><div class=\"line\">        <span class=\"keyword\">int</span> authType = in.readInt();</div><div class=\"line\">        config.allowedKeyManagement.set(authType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (authType != KeyMgmt.NONE) &#123;</div><div class=\"line\">            config.preSharedKey = in.readUTF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        config.channel = in.readInt();</div><div class=\"line\">        config.channelWidth = in.readInt();</div><div class=\"line\">        mWifiApConfig = config;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException ignore) &#123;</div><div class=\"line\">        setDefaultApConfiguration();</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"两个Activity之间通过接口进行通信","date":"2017-09-22T05:18:42.000Z","_content":"``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startActivity(new Intent(MainActivity.this,SecondActivity.class));\n        SecondActivity.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle(String title);\n    }\n}\n\npublic class SecondActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        findViewById(R.id.btn_update).setOnClickListener(new OnClickListener(){\n            public void onClick(View v){\n                listener.updateTitle(\"hello\");        //这里调用接口中的方法\n            }\n        });\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","source":"_posts/两个Activity之间通过接口进行通信.md","raw":"---\ntitle: 两个Activity之间通过接口进行通信\ndate: 2017-09-22 13:18:42\ntags:\n---\n``` Java\npublic class MainActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        startActivity(new Intent(MainActivity.this,SecondActivity.class));\n        SecondActivity.setListener(new IListener(){\n            public void updateTitle(String title){\n                setTitle(title);\n            }\n        });\n    }\n    public interface IListener{\n        public void updateTitle(String title);\n    }\n}\n\npublic class SecondActivity extends Activity{\n    public void onCreate(Bundle savedInstanceState){\n        findViewById(R.id.btn_update).setOnClickListener(new OnClickListener(){\n            public void onClick(View v){\n                listener.updateTitle(\"hello\");        //这里调用接口中的方法\n            }\n        });\n    }\n    private static IListener listener;\n    public static void setListener(IListener listener){\n        this.listener = listener;\n    }\n}\n```","slug":"两个Activity之间通过接口进行通信","published":1,"updated":"2017-09-22T05:19:03.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggu000qeddxwnrmrejm","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startActivity(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,SecondActivity.class));</div><div class=\"line\">        SecondActivity.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecondActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        findViewById(R.id.btn_update).setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;</div><div class=\"line\">                listener.updateTitle(<span class=\"string\">\"hello\"</span>);        <span class=\"comment\">//这里调用接口中的方法</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        startActivity(<span class=\"keyword\">new</span> Intent(MainActivity.<span class=\"keyword\">this</span>,SecondActivity.class));</div><div class=\"line\">        SecondActivity.setListener(<span class=\"keyword\">new</span> IListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>&#123;</div><div class=\"line\">                setTitle(title);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IListener</span></span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateTitle</span><span class=\"params\">(String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecondActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span></span>&#123;</div><div class=\"line\">        findViewById(R.id.btn_update).setOnClickListener(<span class=\"keyword\">new</span> OnClickListener()&#123;</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span></span>&#123;</div><div class=\"line\">                listener.updateTitle(<span class=\"string\">\"hello\"</span>);        <span class=\"comment\">//这里调用接口中的方法</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> IListener listener;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setListener</span><span class=\"params\">(IListener listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.listener = listener;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"使用AIDL调用CountryDetector中的接口来获取国家编码","date":"2017-09-22T06:12:26.000Z","_content":"``` Java\n//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码\nprivate String getCountryCode() {\n    String countryCode = \"\";\n    try {\n        Method method = Class.forName(\"android.os.ServiceManager\").getMethod(\"getService\", String.class);\n        IBinder binder = (IBinder) method.invoke(null, new Object[] { \"country_detector\" });            //这里的country_detector不要写错，否则获取不到服务\n        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);\n        Country country = countryDetector.detectCountry();\n        if (country != null) {\n            countryCode = country.getCountryIso();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return countryCode;\n}\n```\n> \ntips:该方法同样使用于其他AIDL的服务","source":"_posts/使用AIDL调用CountryDetector中的接口来获取国家编码.md","raw":"---\ntitle: 使用AIDL调用CountryDetector中的接口来获取国家编码\ndate: 2017-09-22 14:12:26\ntags:\n---\n``` Java\n//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码\nprivate String getCountryCode() {\n    String countryCode = \"\";\n    try {\n        Method method = Class.forName(\"android.os.ServiceManager\").getMethod(\"getService\", String.class);\n        IBinder binder = (IBinder) method.invoke(null, new Object[] { \"country_detector\" });            //这里的country_detector不要写错，否则获取不到服务\n        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);\n        Country country = countryDetector.detectCountry();\n        if (country != null) {\n            countryCode = country.getCountryIso();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return countryCode;\n}\n```\n> \ntips:该方法同样使用于其他AIDL的服务","slug":"使用AIDL调用CountryDetector中的接口来获取国家编码","published":1,"updated":"2017-09-22T07:11:05.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggv000reddx840hq1lo","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getCountryCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    String countryCode = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = Class.forName(<span class=\"string\">\"android.os.ServiceManager\"</span>).getMethod(<span class=\"string\">\"getService\"</span>, String.class);</div><div class=\"line\">        IBinder binder = (IBinder) method.invoke(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"country_detector\"</span> &#125;);            <span class=\"comment\">//这里的country_detector不要写错，否则获取不到服务</span></div><div class=\"line\">        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);</div><div class=\"line\">        Country country = countryDetector.detectCountry();</div><div class=\"line\">        <span class=\"keyword\">if</span> (country != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            countryCode = country.getCountryIso();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> countryCode;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:该方法同样使用于其他AIDL的服务</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//在自己的代码中使用AIDL调用CountryDetector中的接口来获取国家编码</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getCountryCode</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    String countryCode = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Method method = Class.forName(<span class=\"string\">\"android.os.ServiceManager\"</span>).getMethod(<span class=\"string\">\"getService\"</span>, String.class);</div><div class=\"line\">        IBinder binder = (IBinder) method.invoke(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> Object[] &#123; <span class=\"string\">\"country_detector\"</span> &#125;);            <span class=\"comment\">//这里的country_detector不要写错，否则获取不到服务</span></div><div class=\"line\">        ICountryDetector countryDetector = ICountryDetector.Stub.asInterface(binder);</div><div class=\"line\">        Country country = countryDetector.detectCountry();</div><div class=\"line\">        <span class=\"keyword\">if</span> (country != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            countryCode = country.getCountryIso();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> countryCode;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:该方法同样使用于其他AIDL的服务</p>\n</blockquote>\n"},{"title":"保存大文件到sqlite数据库","date":"2017-09-22T05:20:16.000Z","_content":"``` Java\nContentValues contentValues = new ContentValues();\nInputStream is = getResources().openRawResource(rid);\nint bufSize = 63 * 1024;\nbyte[] buffer = new byte[bufSize];\ntry{\n    int size = is.read(buffer);\n    while(size > = 0){\n        ByteArrayOutputStream out = new ByteArrayOutputStream(size);\n        out.write(buffer,0,size);\n        out.flush();\n        out.close();\n        contentValues.put(\"song_mp3\",out.toByteArray());\n        db.insert(mySong,null,contentValues);\n        size = is.read(buffer);\n    }\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/保存大文件到sqlite数据库.md","raw":"---\ntitle: 保存大文件到sqlite数据库\ndate: 2017-09-22 13:20:16\ntags:\n---\n``` Java\nContentValues contentValues = new ContentValues();\nInputStream is = getResources().openRawResource(rid);\nint bufSize = 63 * 1024;\nbyte[] buffer = new byte[bufSize];\ntry{\n    int size = is.read(buffer);\n    while(size > = 0){\n        ByteArrayOutputStream out = new ByteArrayOutputStream(size);\n        out.write(buffer,0,size);\n        out.flush();\n        out.close();\n        contentValues.put(\"song_mp3\",out.toByteArray());\n        db.insert(mySong,null,contentValues);\n        size = is.read(buffer);\n    }\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"保存大文件到sqlite数据库","published":1,"updated":"2017-09-22T05:20:40.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggv000seddxvuakx71j","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">InputStream is = getResources().openRawResource(rid);</div><div class=\"line\"><span class=\"keyword\">int</span> bufSize = <span class=\"number\">63</span> * <span class=\"number\">1024</span>;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[bufSize];</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> size = is.read(buffer);</div><div class=\"line\">    <span class=\"keyword\">while</span>(size &gt; = <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream(size);</div><div class=\"line\">        out.write(buffer,<span class=\"number\">0</span>,size);</div><div class=\"line\">        out.flush();</div><div class=\"line\">        out.close();</div><div class=\"line\">        contentValues.put(<span class=\"string\">\"song_mp3\"</span>,out.toByteArray());</div><div class=\"line\">        db.insert(mySong,<span class=\"keyword\">null</span>,contentValues);</div><div class=\"line\">        size = is.read(buffer);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">InputStream is = getResources().openRawResource(rid);</div><div class=\"line\"><span class=\"keyword\">int</span> bufSize = <span class=\"number\">63</span> * <span class=\"number\">1024</span>;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[bufSize];</div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> size = is.read(buffer);</div><div class=\"line\">    <span class=\"keyword\">while</span>(size &gt; = <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream(size);</div><div class=\"line\">        out.write(buffer,<span class=\"number\">0</span>,size);</div><div class=\"line\">        out.flush();</div><div class=\"line\">        out.close();</div><div class=\"line\">        contentValues.put(<span class=\"string\">\"song_mp3\"</span>,out.toByteArray());</div><div class=\"line\">        db.insert(mySong,<span class=\"keyword\">null</span>,contentValues);</div><div class=\"line\">        size = is.read(buffer);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"修改SIMToolkit的显示名称","date":"2017-09-25T07:29:07.000Z","_content":"//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java\n``` Java\nCatLog.d(this, \"add AlphaId: \" + menu.title);\nandroid.os.SystemProperties.set(\"gsm.zhangqi.stkmenu\", menu.title);        //添加这一行代码将 menu.title\n```\n保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件\n\n//frameworks/base/core/java/android/app/ApplicationPackageManager.java\n``` Java\nif(packageName.equalsIgnoreCase(\"com.android.stk\")) {\n    String tmptext = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\n    String numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && tmptext != null && !tmptext.isEmpty() ){\n        text = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\n        if(text == null || text.toString().isEmpty()){\n            if(tmptext.toLowerCase().contains(\"telenor\")){\n                text = \"Telenor\";\n            }else if(tmptext.toLowerCase().contains(\"globul\")){\n                text = \"My Globul\";\n            }\n        }\n    }\n}\n```\n\n//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java\n``` Java\nString alpha = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\nString numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\nString title = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\nif(title == null || title.isEmpty()){\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && alpha != null && !alpha.isEmpty() ){\n        if(alpha.toLowerCase().contains(\"telenor\")){\n            textView.setText(\"Telenor\");\n        }else if(alpha.toLowerCase().contains(\"globul\")){\n            textView.setText(\"My Globul\");\n        }\n    }\n}\n```","source":"_posts/修改SIMToolkit的显示名称.md","raw":"---\ntitle: 修改SIMToolkit的显示名称\ndate: 2017-09-25 15:29:07\ntags:\n---\n//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java\n``` Java\nCatLog.d(this, \"add AlphaId: \" + menu.title);\nandroid.os.SystemProperties.set(\"gsm.zhangqi.stkmenu\", menu.title);        //添加这一行代码将 menu.title\n```\n保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件\n\n//frameworks/base/core/java/android/app/ApplicationPackageManager.java\n``` Java\nif(packageName.equalsIgnoreCase(\"com.android.stk\")) {\n    String tmptext = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\n    String numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && tmptext != null && !tmptext.isEmpty() ){\n        text = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\n        if(text == null || text.toString().isEmpty()){\n            if(tmptext.toLowerCase().contains(\"telenor\")){\n                text = \"Telenor\";\n            }else if(tmptext.toLowerCase().contains(\"globul\")){\n                text = \"My Globul\";\n            }\n        }\n    }\n}\n```\n\n//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java\n``` Java\nString alpha = android.os.SystemProperties.get(\"gsm.sim.operator.alpha\");\nString numeric = android.os.SystemProperties.get(\"gsm.sim.operator.numeric\");\nString title = android.os.SystemProperties.get(\"gsm.zhangqi.stkmenu\");            //添加一个判断\nif(title == null || title.isEmpty()){\n    if(numeric != null && numeric.equalsIgnoreCase(\"28405\") && alpha != null && !alpha.isEmpty() ){\n        if(alpha.toLowerCase().contains(\"telenor\")){\n            textView.setText(\"Telenor\");\n        }else if(alpha.toLowerCase().contains(\"globul\")){\n            textView.setText(\"My Globul\");\n        }\n    }\n}\n```","slug":"修改SIMToolkit的显示名称","published":1,"updated":"2017-09-25T07:30:11.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggw000teddxnj746msw","content":"<p>//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CatLog.d(<span class=\"keyword\">this</span>, <span class=\"string\">\"add AlphaId: \"</span> + menu.title);</div><div class=\"line\">android.os.SystemProperties.set(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>, menu.title);        <span class=\"comment\">//添加这一行代码将 menu.title</span></div></pre></td></tr></table></figure></p>\n<p>保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件</p>\n<p>//frameworks/base/core/java/android/app/ApplicationPackageManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(packageName.equalsIgnoreCase(<span class=\"string\">\"com.android.stk\"</span>)) &#123;</div><div class=\"line\">    String tmptext = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">    String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; tmptext != <span class=\"keyword\">null</span> &amp;&amp; !tmptext.isEmpty() )&#123;</div><div class=\"line\">        text = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(text == <span class=\"keyword\">null</span> || text.toString().isEmpty())&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"Telenor\"</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"My Globul\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">String alpha = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">String title = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\"><span class=\"keyword\">if</span>(title == <span class=\"keyword\">null</span> || title.isEmpty())&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; alpha != <span class=\"keyword\">null</span> &amp;&amp; !alpha.isEmpty() )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"Telenor\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"My Globul\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//frameworks/opt/telephony/src/java/com/android/internal/telephony/cat/CommandParamsFactory.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">CatLog.d(<span class=\"keyword\">this</span>, <span class=\"string\">\"add AlphaId: \"</span> + menu.title);</div><div class=\"line\">android.os.SystemProperties.set(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>, menu.title);        <span class=\"comment\">//添加这一行代码将 menu.title</span></div></pre></td></tr></table></figure></p>\n<p>保存到 build.prop 文件中，注意这里需要将键值修改为 gsm 开头，参照system/core/init/property_service.c文件</p>\n<p>//frameworks/base/core/java/android/app/ApplicationPackageManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(packageName.equalsIgnoreCase(<span class=\"string\">\"com.android.stk\"</span>)) &#123;</div><div class=\"line\">    String tmptext = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">    String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; tmptext != <span class=\"keyword\">null</span> &amp;&amp; !tmptext.isEmpty() )&#123;</div><div class=\"line\">        text = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(text == <span class=\"keyword\">null</span> || text.toString().isEmpty())&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"Telenor\"</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(tmptext.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">                text = <span class=\"string\">\"My Globul\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/packages/apps/Stk1/src/com/android/stk/StkMenuInstance.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">String alpha = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.alpha\"</span>);</div><div class=\"line\">String numeric = android.os.SystemProperties.get(<span class=\"string\">\"gsm.sim.operator.numeric\"</span>);</div><div class=\"line\">String title = android.os.SystemProperties.get(<span class=\"string\">\"gsm.zhangqi.stkmenu\"</span>);            <span class=\"comment\">//添加一个判断</span></div><div class=\"line\"><span class=\"keyword\">if</span>(title == <span class=\"keyword\">null</span> || title.isEmpty())&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(numeric != <span class=\"keyword\">null</span> &amp;&amp; numeric.equalsIgnoreCase(<span class=\"string\">\"28405\"</span>) &amp;&amp; alpha != <span class=\"keyword\">null</span> &amp;&amp; !alpha.isEmpty() )&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"telenor\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"Telenor\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(alpha.toLowerCase().contains(<span class=\"string\">\"globul\"</span>))&#123;</div><div class=\"line\">            textView.setText(<span class=\"string\">\"My Globul\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"修改wifi热点默认密码","date":"2017-09-22T02:30:07.000Z","_content":"M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n``` Java\nprivate void setDefaultApConfiguration() {\n\t...\n    //config.preSharedKey = \"sayyezz.com\";\n    config.preSharedKey = randomUUID.substring(0, 8);    //随机wifi热点密码\n    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);\n    ...\n}\n```","source":"_posts/修改wifi热点默认密码.md","raw":"---\ntitle: 修改wifi热点默认密码\ndate: 2017-09-22 10:30:07\ntags:\n---\nM:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java\n``` Java\nprivate void setDefaultApConfiguration() {\n\t...\n    //config.preSharedKey = \"sayyezz.com\";\n    config.preSharedKey = randomUUID.substring(0, 8);    //随机wifi热点密码\n    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);\n    ...\n}\n```","slug":"修改wifi热点默认密码","published":1,"updated":"2017-09-22T02:31:18.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggx000ueddx073hf672","content":"<p>M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">//config.preSharedKey = \"sayyezz.com\";</span></div><div class=\"line\">    config.preSharedKey = randomUUID.substring(<span class=\"number\">0</span>, <span class=\"number\">8</span>);    <span class=\"comment\">//随机wifi热点密码</span></div><div class=\"line\">    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>M:frameworks/base/wifi/java/android/net/wifi/WifiApConfigStore.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setDefaultApConfiguration</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">//config.preSharedKey = \"sayyezz.com\";</span></div><div class=\"line\">    config.preSharedKey = randomUUID.substring(<span class=\"number\">0</span>, <span class=\"number\">8</span>);    <span class=\"comment\">//随机wifi热点密码</span></div><div class=\"line\">    sendMessage(WifiStateMachine.CMD_SET_AP_CONFIG, config);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"修改某些分区表中的某些分区之后不起作用","date":"2017-09-22T01:58:35.000Z","_content":"//out/target/product/up09l_h401_ddm_gci_ptgen.log\n```\nby project size ANDROID = 1536000 KB\nby project size USRDATA = 942080 KB\n```\n\n//mediatek/build/tools/ptgen/MT6582/ptgen.pl\n``` perl\nmy $board_config = &open_for_read(\"mediatek/config/$PROJECT/BoardConfig.mk\");\t//从这个文件可以看到\nmy $iter;\nif ($board_config)\n{\n    my $line;\n    while (defined($line = <$board_config>))\n    {\n        for($iter=0;$iter< @PARTITION_FIELD;$iter++)\n        {\n            my $part_name = $PARTITION_FIELD[$iter];\n            if ($line =~ /\\A\\s*BOARD_MTK_${part_name}_SIZE_KB\\s*:=\\s*(\\d+)/)\n            {\n                $SIZE_FIELD_KB[$iter] = $1;\n                print \"by project size $part_name = $1 KB\\n\";\t\t\t\t\t//打印上面那个文件中的信息\n            }\n        }\n    }\n    close $board_config;\n}\n```\n\n//mediatek/config/mq16_h501_pegasus/BoardConfig.mk\n```\nBOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了\nBOARD_MTK_USRDATA_SIZE_KB := 942080\n```","source":"_posts/修改某些分区表中的某些分区之后不起作用.md","raw":"---\ntitle: 修改某些分区表中的某些分区之后不起作用\ndate: 2017-09-22 09:58:35\ntags:\n---\n//out/target/product/up09l_h401_ddm_gci_ptgen.log\n```\nby project size ANDROID = 1536000 KB\nby project size USRDATA = 942080 KB\n```\n\n//mediatek/build/tools/ptgen/MT6582/ptgen.pl\n``` perl\nmy $board_config = &open_for_read(\"mediatek/config/$PROJECT/BoardConfig.mk\");\t//从这个文件可以看到\nmy $iter;\nif ($board_config)\n{\n    my $line;\n    while (defined($line = <$board_config>))\n    {\n        for($iter=0;$iter< @PARTITION_FIELD;$iter++)\n        {\n            my $part_name = $PARTITION_FIELD[$iter];\n            if ($line =~ /\\A\\s*BOARD_MTK_${part_name}_SIZE_KB\\s*:=\\s*(\\d+)/)\n            {\n                $SIZE_FIELD_KB[$iter] = $1;\n                print \"by project size $part_name = $1 KB\\n\";\t\t\t\t\t//打印上面那个文件中的信息\n            }\n        }\n    }\n    close $board_config;\n}\n```\n\n//mediatek/config/mq16_h501_pegasus/BoardConfig.mk\n```\nBOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了\nBOARD_MTK_USRDATA_SIZE_KB := 942080\n```","slug":"修改某些分区表中的某些分区之后不起作用","published":1,"updated":"2017-09-22T02:00:31.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggx000veddxsngso50x","content":"<p>//out/target/product/up09l_h401_ddm_gci_ptgen.log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">by project size ANDROID = 1536000 KB</div><div class=\"line\">by project size USRDATA = 942080 KB</div></pre></td></tr></table></figure></p>\n<p>//mediatek/build/tools/ptgen/MT6582/ptgen.pl<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">my</span> $board_config = &amp;open_for_read(<span class=\"string\">\"mediatek/config/$PROJECT/BoardConfig.mk\"</span>);\t<span class=\"regexp\">//</span>从这个文件可以看到</div><div class=\"line\"><span class=\"keyword\">my</span> $iter;</div><div class=\"line\"><span class=\"keyword\">if</span> ($board_config)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">my</span> $line;</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">defined</span>($line = &lt;$board_config&gt;))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>($iter=<span class=\"number\">0</span>;$iter&lt; @PARTITION_FIELD;$iter++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">my</span> $part_name = $PARTITION_FIELD[$iter];</div><div class=\"line\">            <span class=\"keyword\">if</span> ($line =~ <span class=\"regexp\">/\\A\\s*BOARD_MTK_$&#123;part_name&#125;_SIZE_KB\\s*:=\\s*(\\d+)/</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $SIZE_FIELD_KB[$iter] = $1;</div><div class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"by project size $part_name = $1 KB\\n\"</span>;\t\t\t\t\t<span class=\"regexp\">//</span>打印上面那个文件中的信息</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">close</span> $board_config;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/config/mq16_h501_pegasus/BoardConfig.mk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">BOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了</div><div class=\"line\">BOARD_MTK_USRDATA_SIZE_KB := 942080</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//out/target/product/up09l_h401_ddm_gci_ptgen.log<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">by project size ANDROID = 1536000 KB</div><div class=\"line\">by project size USRDATA = 942080 KB</div></pre></td></tr></table></figure></p>\n<p>//mediatek/build/tools/ptgen/MT6582/ptgen.pl<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">my</span> $board_config = &amp;open_for_read(<span class=\"string\">\"mediatek/config/$PROJECT/BoardConfig.mk\"</span>);\t<span class=\"regexp\">//</span>从这个文件可以看到</div><div class=\"line\"><span class=\"keyword\">my</span> $iter;</div><div class=\"line\"><span class=\"keyword\">if</span> ($board_config)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">my</span> $line;</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">defined</span>($line = &lt;$board_config&gt;))</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>($iter=<span class=\"number\">0</span>;$iter&lt; @PARTITION_FIELD;$iter++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">my</span> $part_name = $PARTITION_FIELD[$iter];</div><div class=\"line\">            <span class=\"keyword\">if</span> ($line =~ <span class=\"regexp\">/\\A\\s*BOARD_MTK_$&#123;part_name&#125;_SIZE_KB\\s*:=\\s*(\\d+)/</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $SIZE_FIELD_KB[$iter] = $1;</div><div class=\"line\">                <span class=\"keyword\">print</span> <span class=\"string\">\"by project size $part_name = $1 KB\\n\"</span>;\t\t\t\t\t<span class=\"regexp\">//</span>打印上面那个文件中的信息</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">close</span> $board_config;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//mediatek/config/mq16_h501_pegasus/BoardConfig.mk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">BOARD_MTK_ANDROID_SIZE_KB := 1536000\t//在这个地方将分区表的大小写死了，只要修改这个地方就可以了</div><div class=\"line\">BOARD_MTK_USRDATA_SIZE_KB := 942080</div></pre></td></tr></table></figure></p>\n"},{"title":"修改默认Launcher","date":"2017-09-21T07:35:40.000Z","_content":"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\n\n[DESCRIPTION]\n> \n开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？\n\n[SOLUTION]\n> \n注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。 \n如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。\n\n一、修改ActivityManagerService.java的startHomeActivityLocked方法\n\n``` Java\nboolean startHomeActivityLocked(int userId, String reason) {\n    if (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL && mTopAction == null) {\n        // We are running in factory test mode, but unable to find\n        // the factory test app, so just sit around displaying the\n        // error message and don't try to start anything.\n        return false;\n    }\n\n    //mtk add start\n    final PackageManager mPm = mContext.getPackageManager();\n    Intent homeIntent=new Intent();\n    homeIntent.addCategory(Intent.CATEGORY_HOME);\n    homeIntent.setAction(Intent.ACTION_MAIN);\n    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);\n    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);\n    if(\"android\".equals(info.activityInfo.packageName)){ //if there is a default Launcher?\n        ComponentName DefaultLauncher=new ComponentName(\"com.android.launcher3\",\"com.android.launcher3.Launcher\"); //here set the package name and class name of default launcher.\n        ArrayList<ResolveInfo> homeActivities = new ArrayList<ResolveInfo>();\n        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);\n        ComponentName[] mHomeComponentSet = new ComponentName[homeActivities.size()];\n        for (int i = 0; i < homeActivities.size(); i++) {\n            final ResolveInfo candidate = homeActivities.get(i);\n            Log.d(TAG,\"homeActivitie: candidate = \"+candidate);\n            final ActivityInfo activityInfo= candidate.activityInfo;\n            ComponentName activityName = new ComponentName(activityInfo.packageName, activityInfo.name);\n            mHomeComponentSet[i] = activityName;\n        }\n        IntentFilter mHomeFilter = new IntentFilter(Intent.ACTION_MAIN);\n        mHomeFilter.addCategory(Intent.CATEGORY_HOME);\n        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);\n        List<ComponentName>Activities=new ArrayList();\n        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);\n    }\n\n\t//mtk add end\n\n    Intent intent = getHomeIntent();\n    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);\n    ......\n}\n```\n\n二、如果预置了GMS，还需要按照下面的方法修改:\n\n请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:\n``` Java\n//mtk add start\nif(isFirstBoot()) {\n    String examplePackageName = \"com.android.launcher3\";  //default  package name of launcher\n    String exampleActivityName = \"com.android.launcher3.Launcher\"; //default  activity name of  launcher   \n    Intent intent=new Intent(Intent.ACTION_MAIN);\n    intent.addCategory(Intent.CATEGORY_HOME);\n    final int callingUserId = UserHandle.getCallingUserId();\n    \n    List<ResolveInfo> resolveInfoList = queryIntentActivities(intent,null, PackageManager.GET_META_DATA,callingUserId);\n    if(resolveInfoList != null){\n        int size = resolveInfoList.size();\n        for(int j=0;j<size;){\n            final ResolveInfo r = resolveInfoList.get(j);\n            if(!r.activityInfo.packageName.equals(examplePackageName)) { \n                resolveInfoList.remove(j);\n                size -= 1;\n            } else {\n                j++;\n            }\n        } \n       ComponentName[] set = new ComponentName[size];\n       ComponentName defaultLauncher=new ComponentName(examplePackageName, exampleActivityName);\n       int defaultMatch=0;\n       for(int i=0;i<size;i++){\n           final ResolveInfo resolveInfo = resolveInfoList.get(i);\n           Log.d(TAG,\"resolveInfo = \" + resolveInfo.toString());\n           set[i] = new ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);\n           if(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name)){\n               defaultMatch = resolveInfo.match;\n           }\n       }\n       Log.d(TAG,\"defaultMatch=\"+Integer.toHexString(defaultMatch));\n       IntentFilter filter=new IntentFilter();\n       filter.addAction(Intent.ACTION_MAIN);\n       filter.addCategory(Intent.CATEGORY_HOME);\n       filter.addCategory(Intent.CATEGORY_DEFAULT);\n      \n       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);\n    }\n}\n//mtk add end\n```\n \n在PackageManagerService.java中增加addPreferredActivity2方法：\n``` Java\n//mtk add start\npublic void addPreferredActivity2(IntentFilter filter, int match,ComponentName[] set, ComponentName activity) {\n    synchronized (mPackages) {     \n        filter.dump(new LogPrinter(Log.INFO, TAG), \"  \");\n        mSettings.editPreferredActivitiesLPw(0).addFilter(new PreferredActivity(filter, match, set, activity, true));\n        scheduleWriteSettingsLocked();     \n    }\n}\n//mtk add end\n```\n \n请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：\n``` Java\nif (removeMatches) {\n    pir.removeFilter(pa);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n    }\n    break;\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query, priority)) {\n    Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n    }\n    pir.removeFilter(pa);\n    // Re-add the filter as a \"last chosen\" entry (!always)\n    PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n    pir.addFilter(lastChosen);\n    mSettings.writePackageRestrictionsLPr(userId);\n    return null;\n}\n```\n修改为:\n``` Java\n//mtk add start\nif(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null &&\n    intent.getCategories().contains(intent.CATEGORY_HOME))) {       \n    Log.d(TAG,\"Home\");      \n}else {\n    if (removeMatches) {\n        pir.removeFilter(pa);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n        }\n        break;\n    }\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query)) {                           \n    if(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null && \n        intent.getCategories().contains(intent.CATEGORY_HOME))) {\n        Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n        }\n        pir.removeFilter(pa);\n        // Re-add the filter as a \"last chosen\" entry (!always)\n        PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n        pir.addFilter(lastChosen);\n        mSettings.writePackageRestrictionsLPr(userId);\n        return null;\n    }\n}\n//mtk add end\n```","source":"_posts/修改默认Launcher.md","raw":"---\ntitle: 修改默认Launcher\ndate: 2017-09-21 15:35:40\ntags:\n---\nhttps://onlinesso.mediatek.com/FAQ/SW/FAQ03426\n\n[DESCRIPTION]\n> \n开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？\n\n[SOLUTION]\n> \n注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。 \n如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。\n\n一、修改ActivityManagerService.java的startHomeActivityLocked方法\n\n``` Java\nboolean startHomeActivityLocked(int userId, String reason) {\n    if (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL && mTopAction == null) {\n        // We are running in factory test mode, but unable to find\n        // the factory test app, so just sit around displaying the\n        // error message and don't try to start anything.\n        return false;\n    }\n\n    //mtk add start\n    final PackageManager mPm = mContext.getPackageManager();\n    Intent homeIntent=new Intent();\n    homeIntent.addCategory(Intent.CATEGORY_HOME);\n    homeIntent.setAction(Intent.ACTION_MAIN);\n    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);\n    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);\n    if(\"android\".equals(info.activityInfo.packageName)){ //if there is a default Launcher?\n        ComponentName DefaultLauncher=new ComponentName(\"com.android.launcher3\",\"com.android.launcher3.Launcher\"); //here set the package name and class name of default launcher.\n        ArrayList<ResolveInfo> homeActivities = new ArrayList<ResolveInfo>();\n        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);\n        ComponentName[] mHomeComponentSet = new ComponentName[homeActivities.size()];\n        for (int i = 0; i < homeActivities.size(); i++) {\n            final ResolveInfo candidate = homeActivities.get(i);\n            Log.d(TAG,\"homeActivitie: candidate = \"+candidate);\n            final ActivityInfo activityInfo= candidate.activityInfo;\n            ComponentName activityName = new ComponentName(activityInfo.packageName, activityInfo.name);\n            mHomeComponentSet[i] = activityName;\n        }\n        IntentFilter mHomeFilter = new IntentFilter(Intent.ACTION_MAIN);\n        mHomeFilter.addCategory(Intent.CATEGORY_HOME);\n        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);\n        List<ComponentName>Activities=new ArrayList();\n        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);\n    }\n\n\t//mtk add end\n\n    Intent intent = getHomeIntent();\n    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);\n    ......\n}\n```\n\n二、如果预置了GMS，还需要按照下面的方法修改:\n\n请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:\n``` Java\n//mtk add start\nif(isFirstBoot()) {\n    String examplePackageName = \"com.android.launcher3\";  //default  package name of launcher\n    String exampleActivityName = \"com.android.launcher3.Launcher\"; //default  activity name of  launcher   \n    Intent intent=new Intent(Intent.ACTION_MAIN);\n    intent.addCategory(Intent.CATEGORY_HOME);\n    final int callingUserId = UserHandle.getCallingUserId();\n    \n    List<ResolveInfo> resolveInfoList = queryIntentActivities(intent,null, PackageManager.GET_META_DATA,callingUserId);\n    if(resolveInfoList != null){\n        int size = resolveInfoList.size();\n        for(int j=0;j<size;){\n            final ResolveInfo r = resolveInfoList.get(j);\n            if(!r.activityInfo.packageName.equals(examplePackageName)) { \n                resolveInfoList.remove(j);\n                size -= 1;\n            } else {\n                j++;\n            }\n        } \n       ComponentName[] set = new ComponentName[size];\n       ComponentName defaultLauncher=new ComponentName(examplePackageName, exampleActivityName);\n       int defaultMatch=0;\n       for(int i=0;i<size;i++){\n           final ResolveInfo resolveInfo = resolveInfoList.get(i);\n           Log.d(TAG,\"resolveInfo = \" + resolveInfo.toString());\n           set[i] = new ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);\n           if(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name)){\n               defaultMatch = resolveInfo.match;\n           }\n       }\n       Log.d(TAG,\"defaultMatch=\"+Integer.toHexString(defaultMatch));\n       IntentFilter filter=new IntentFilter();\n       filter.addAction(Intent.ACTION_MAIN);\n       filter.addCategory(Intent.CATEGORY_HOME);\n       filter.addCategory(Intent.CATEGORY_DEFAULT);\n      \n       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);\n    }\n}\n//mtk add end\n```\n \n在PackageManagerService.java中增加addPreferredActivity2方法：\n``` Java\n//mtk add start\npublic void addPreferredActivity2(IntentFilter filter, int match,ComponentName[] set, ComponentName activity) {\n    synchronized (mPackages) {     \n        filter.dump(new LogPrinter(Log.INFO, TAG), \"  \");\n        mSettings.editPreferredActivitiesLPw(0).addFilter(new PreferredActivity(filter, match, set, activity, true));\n        scheduleWriteSettingsLocked();     \n    }\n}\n//mtk add end\n```\n \n请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：\n``` Java\nif (removeMatches) {\n    pir.removeFilter(pa);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n    }\n    break;\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query, priority)) {\n    Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n    if (DEBUG_PREFERRED) {\n    \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n    }\n    pir.removeFilter(pa);\n    // Re-add the filter as a \"last chosen\" entry (!always)\n    PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n    pir.addFilter(lastChosen);\n    mSettings.writePackageRestrictionsLPr(userId);\n    return null;\n}\n```\n修改为:\n``` Java\n//mtk add start\nif(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null &&\n    intent.getCategories().contains(intent.CATEGORY_HOME))) {       \n    Log.d(TAG,\"Home\");      \n}else {\n    if (removeMatches) {\n        pir.removeFilter(pa);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing match \" + pa.mPref.mComponent);\n        }\n        break;\n    }\n}\n\n// Okay we found a previously set preferred or last chosen app.\n// If the result set is different from when this\n// was created, we need to clear it and re-ask the\n// user their preference, if we're looking for an \"always\" type entry.\nif (always && !pa.mPref.sameSet(query)) {                           \n    if(!(intent.getAction() != null && intent.getAction().equals(intent.ACTION_MAIN) && intent.getCategories()!=null && \n        intent.getCategories().contains(intent.CATEGORY_HOME))) {\n        Slog.i(TAG, \"Result set changed, dropping preferred activity for \" + intent + \" type \" + resolvedType);\n        if (DEBUG_PREFERRED) {\n        \tSlog.v(TAG, \"Removing preferred activity since set changed \" + pa.mPref.mComponent);\n        }\n        pir.removeFilter(pa);\n        // Re-add the filter as a \"last chosen\" entry (!always)\n        PreferredActivity lastChosen = new PreferredActivity(pa, pa.mPref.mMatch, null, pa.mPref.mComponent, false);\n        pir.addFilter(lastChosen);\n        mSettings.writePackageRestrictionsLPr(userId);\n        return null;\n    }\n}\n//mtk add end\n```","slug":"修改默认Launcher","published":1,"updated":"2017-09-21T08:01:56.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggy000weddxdx702pwa","content":"<p><a href=\"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/FAQ/SW/FAQ03426</a></p>\n<p>[DESCRIPTION]</p>\n<blockquote>\n<p>开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？</p>\n</blockquote>\n<p>[SOLUTION]</p>\n<blockquote>\n<p>注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。<br>如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。</p>\n</blockquote>\n<p>一、修改ActivityManagerService.java的startHomeActivityLocked方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">startHomeActivityLocked</span><span class=\"params\">(<span class=\"keyword\">int</span> userId, String reason)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL &amp;&amp; mTopAction == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// We are running in factory test mode, but unable to find</span></div><div class=\"line\">        <span class=\"comment\">// the factory test app, so just sit around displaying the</span></div><div class=\"line\">        <span class=\"comment\">// error message and don't try to start anything.</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mtk add start</span></div><div class=\"line\">    <span class=\"keyword\">final</span> PackageManager mPm = mContext.getPackageManager();</div><div class=\"line\">    Intent homeIntent=<span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    homeIntent.setAction(Intent.ACTION_MAIN);</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">\"android\"</span>.equals(info.activityInfo.packageName))&#123; <span class=\"comment\">//if there is a default Launcher?</span></div><div class=\"line\">        ComponentName DefaultLauncher=<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher3\"</span>,<span class=\"string\">\"com.android.launcher3.Launcher\"</span>); <span class=\"comment\">//here set the package name and class name of default launcher.</span></div><div class=\"line\">        ArrayList&lt;ResolveInfo&gt; homeActivities = <span class=\"keyword\">new</span> ArrayList&lt;ResolveInfo&gt;();</div><div class=\"line\">        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);</div><div class=\"line\">        ComponentName[] mHomeComponentSet = <span class=\"keyword\">new</span> ComponentName[homeActivities.size()];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; homeActivities.size(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo candidate = homeActivities.get(i);</div><div class=\"line\">            Log.d(TAG,<span class=\"string\">\"homeActivitie: candidate = \"</span>+candidate);</div><div class=\"line\">            <span class=\"keyword\">final</span> ActivityInfo activityInfo= candidate.activityInfo;</div><div class=\"line\">            ComponentName activityName = <span class=\"keyword\">new</span> ComponentName(activityInfo.packageName, activityInfo.name);</div><div class=\"line\">            mHomeComponentSet[i] = activityName;</div><div class=\"line\">        &#125;</div><div class=\"line\">        IntentFilter mHomeFilter = <span class=\"keyword\">new</span> IntentFilter(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">        List&lt;ComponentName&gt;Activities=<span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//mtk add end</span></div><div class=\"line\"></div><div class=\"line\">    Intent intent = getHomeIntent();</div><div class=\"line\">    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、如果预置了GMS，还需要按照下面的方法修改:</p>\n<p>请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(isFirstBoot()) &#123;</div><div class=\"line\">    String examplePackageName = <span class=\"string\">\"com.android.launcher3\"</span>;  <span class=\"comment\">//default  package name of launcher</span></div><div class=\"line\">    String exampleActivityName = <span class=\"string\">\"com.android.launcher3.Launcher\"</span>; <span class=\"comment\">//default  activity name of  launcher   </span></div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(Intent.ACTION_MAIN);</div><div class=\"line\">    intent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> callingUserId = UserHandle.getCallingUserId();</div><div class=\"line\">    </div><div class=\"line\">    List&lt;ResolveInfo&gt; resolveInfoList = queryIntentActivities(intent,<span class=\"keyword\">null</span>, PackageManager.GET_META_DATA,callingUserId);</div><div class=\"line\">    <span class=\"keyword\">if</span>(resolveInfoList != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> size = resolveInfoList.size();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;size;)&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo r = resolveInfoList.get(j);</div><div class=\"line\">            <span class=\"keyword\">if</span>(!r.activityInfo.packageName.equals(examplePackageName)) &#123; </div><div class=\"line\">                resolveInfoList.remove(j);</div><div class=\"line\">                size -= <span class=\"number\">1</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; </div><div class=\"line\">       ComponentName[] set = <span class=\"keyword\">new</span> ComponentName[size];</div><div class=\"line\">       ComponentName defaultLauncher=<span class=\"keyword\">new</span> ComponentName(examplePackageName, exampleActivityName);</div><div class=\"line\">       <span class=\"keyword\">int</span> defaultMatch=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</div><div class=\"line\">           <span class=\"keyword\">final</span> ResolveInfo resolveInfo = resolveInfoList.get(i);</div><div class=\"line\">           Log.d(TAG,<span class=\"string\">\"resolveInfo = \"</span> + resolveInfo.toString());</div><div class=\"line\">           set[i] = <span class=\"keyword\">new</span> ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);</div><div class=\"line\">           <span class=\"keyword\">if</span>(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name))&#123;</div><div class=\"line\">               defaultMatch = resolveInfo.match;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       Log.d(TAG,<span class=\"string\">\"defaultMatch=\"</span>+Integer.toHexString(defaultMatch));</div><div class=\"line\">       IntentFilter filter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">       filter.addAction(Intent.ACTION_MAIN);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">      </div><div class=\"line\">       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>在PackageManagerService.java中增加addPreferredActivity2方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addPreferredActivity2</span><span class=\"params\">(IntentFilter filter, <span class=\"keyword\">int</span> match,ComponentName[] set, ComponentName activity)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mPackages) &#123;     </div><div class=\"line\">        filter.dump(<span class=\"keyword\">new</span> LogPrinter(Log.INFO, TAG), <span class=\"string\">\"  \"</span>);</div><div class=\"line\">        mSettings.editPreferredActivitiesLPw(<span class=\"number\">0</span>).addFilter(<span class=\"keyword\">new</span> PreferredActivity(filter, match, set, activity, <span class=\"keyword\">true</span>));</div><div class=\"line\">        scheduleWriteSettingsLocked();     </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query, priority)) &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">    PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">    pir.addFilter(lastChosen);</div><div class=\"line\">    mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">    intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;       </div><div class=\"line\">    Log.d(TAG,<span class=\"string\">\"Home\"</span>);      </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query)) &#123;                           </div><div class=\"line\">    <span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp; </div><div class=\"line\">        intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">        PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">        pir.addFilter(lastChosen);</div><div class=\"line\">        mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/FAQ/SW/FAQ03426\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/FAQ/SW/FAQ03426</a></p>\n<p>[DESCRIPTION]</p>\n<blockquote>\n<p>开机完成并解锁后，如果系统存在多个Launcher，系统会弹出一个选择框让用户选择进入某个Launcher。如果用户不想选择，而是想直接进入某一个默认的Launcher，要怎么修改？</p>\n</blockquote>\n<p>[SOLUTION]</p>\n<blockquote>\n<p>注意:此修改方法对Google Now Launcher(GoogleHome.apk)无效。<br>如果没有预置GMS，只需按照步骤一修改，如果预置了GMS请按照步骤一、二修改。</p>\n</blockquote>\n<p>一、修改ActivityManagerService.java的startHomeActivityLocked方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">startHomeActivityLocked</span><span class=\"params\">(<span class=\"keyword\">int</span> userId, String reason)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mFactoryTest == FactoryTest.FACTORY_TEST_LOW_LEVEL &amp;&amp; mTopAction == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// We are running in factory test mode, but unable to find</span></div><div class=\"line\">        <span class=\"comment\">// the factory test app, so just sit around displaying the</span></div><div class=\"line\">        <span class=\"comment\">// error message and don't try to start anything.</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//mtk add start</span></div><div class=\"line\">    <span class=\"keyword\">final</span> PackageManager mPm = mContext.getPackageManager();</div><div class=\"line\">    Intent homeIntent=<span class=\"keyword\">new</span> Intent();</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    homeIntent.setAction(Intent.ACTION_MAIN);</div><div class=\"line\">    homeIntent.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">    ResolveInfo info = mPm.resolveActivity(homeIntent, PackageManager.MATCH_DEFAULT_ONLY);</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">\"android\"</span>.equals(info.activityInfo.packageName))&#123; <span class=\"comment\">//if there is a default Launcher?</span></div><div class=\"line\">        ComponentName DefaultLauncher=<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.launcher3\"</span>,<span class=\"string\">\"com.android.launcher3.Launcher\"</span>); <span class=\"comment\">//here set the package name and class name of default launcher.</span></div><div class=\"line\">        ArrayList&lt;ResolveInfo&gt; homeActivities = <span class=\"keyword\">new</span> ArrayList&lt;ResolveInfo&gt;();</div><div class=\"line\">        ComponentName currentDefaultHome = mPm.getHomeActivities(homeActivities);</div><div class=\"line\">        ComponentName[] mHomeComponentSet = <span class=\"keyword\">new</span> ComponentName[homeActivities.size()];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; homeActivities.size(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo candidate = homeActivities.get(i);</div><div class=\"line\">            Log.d(TAG,<span class=\"string\">\"homeActivitie: candidate = \"</span>+candidate);</div><div class=\"line\">            <span class=\"keyword\">final</span> ActivityInfo activityInfo= candidate.activityInfo;</div><div class=\"line\">            ComponentName activityName = <span class=\"keyword\">new</span> ComponentName(activityInfo.packageName, activityInfo.name);</div><div class=\"line\">            mHomeComponentSet[i] = activityName;</div><div class=\"line\">        &#125;</div><div class=\"line\">        IntentFilter mHomeFilter = <span class=\"keyword\">new</span> IntentFilter(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeFilter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">        List&lt;ComponentName&gt;Activities=<span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        mPm.replacePreferredActivity(mHomeFilter, IntentFilter.MATCH_CATEGORY_EMPTY,mHomeComponentSet, DefaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//mtk add end</span></div><div class=\"line\"></div><div class=\"line\">    Intent intent = getHomeIntent();</div><div class=\"line\">    ActivityInfo aInfo = resolveActivityInfo(intent, STOCK_PM_FLAGS, userId);</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、如果预置了GMS，还需要按照下面的方法修改:</p>\n<p>请找到PackageManagerService.java的systemReady方法，在这个方法的最后增加以下示例代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(isFirstBoot()) &#123;</div><div class=\"line\">    String examplePackageName = <span class=\"string\">\"com.android.launcher3\"</span>;  <span class=\"comment\">//default  package name of launcher</span></div><div class=\"line\">    String exampleActivityName = <span class=\"string\">\"com.android.launcher3.Launcher\"</span>; <span class=\"comment\">//default  activity name of  launcher   </span></div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(Intent.ACTION_MAIN);</div><div class=\"line\">    intent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> callingUserId = UserHandle.getCallingUserId();</div><div class=\"line\">    </div><div class=\"line\">    List&lt;ResolveInfo&gt; resolveInfoList = queryIntentActivities(intent,<span class=\"keyword\">null</span>, PackageManager.GET_META_DATA,callingUserId);</div><div class=\"line\">    <span class=\"keyword\">if</span>(resolveInfoList != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> size = resolveInfoList.size();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;size;)&#123;</div><div class=\"line\">            <span class=\"keyword\">final</span> ResolveInfo r = resolveInfoList.get(j);</div><div class=\"line\">            <span class=\"keyword\">if</span>(!r.activityInfo.packageName.equals(examplePackageName)) &#123; </div><div class=\"line\">                resolveInfoList.remove(j);</div><div class=\"line\">                size -= <span class=\"number\">1</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; </div><div class=\"line\">       ComponentName[] set = <span class=\"keyword\">new</span> ComponentName[size];</div><div class=\"line\">       ComponentName defaultLauncher=<span class=\"keyword\">new</span> ComponentName(examplePackageName, exampleActivityName);</div><div class=\"line\">       <span class=\"keyword\">int</span> defaultMatch=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;size;i++)&#123;</div><div class=\"line\">           <span class=\"keyword\">final</span> ResolveInfo resolveInfo = resolveInfoList.get(i);</div><div class=\"line\">           Log.d(TAG,<span class=\"string\">\"resolveInfo = \"</span> + resolveInfo.toString());</div><div class=\"line\">           set[i] = <span class=\"keyword\">new</span> ComponentName(resolveInfo.activityInfo.packageName,resolveInfo.activityInfo.name);</div><div class=\"line\">           <span class=\"keyword\">if</span>(defaultLauncher.getClassName().equals(resolveInfo.activityInfo.name))&#123;</div><div class=\"line\">               defaultMatch = resolveInfo.match;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\">       Log.d(TAG,<span class=\"string\">\"defaultMatch=\"</span>+Integer.toHexString(defaultMatch));</div><div class=\"line\">       IntentFilter filter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">       filter.addAction(Intent.ACTION_MAIN);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">       filter.addCategory(Intent.CATEGORY_DEFAULT);</div><div class=\"line\">      </div><div class=\"line\">       addPreferredActivity2(filter, defaultMatch, set, defaultLauncher);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>在PackageManagerService.java中增加addPreferredActivity2方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addPreferredActivity2</span><span class=\"params\">(IntentFilter filter, <span class=\"keyword\">int</span> match,ComponentName[] set, ComponentName activity)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">synchronized</span> (mPackages) &#123;     </div><div class=\"line\">        filter.dump(<span class=\"keyword\">new</span> LogPrinter(Log.INFO, TAG), <span class=\"string\">\"  \"</span>);</div><div class=\"line\">        mSettings.editPreferredActivitiesLPw(<span class=\"number\">0</span>).addFilter(<span class=\"keyword\">new</span> PreferredActivity(filter, match, set, activity, <span class=\"keyword\">true</span>));</div><div class=\"line\">        scheduleWriteSettingsLocked();     </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n<p>请修改PackageManagerService.java的findPreferredActivity方法，将以下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query, priority)) &#123;</div><div class=\"line\">    Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">    <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">    \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">    &#125;</div><div class=\"line\">    pir.removeFilter(pa);</div><div class=\"line\">    <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">    PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">    pir.addFilter(lastChosen);</div><div class=\"line\">    mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改为:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mtk add start</span></div><div class=\"line\"><span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp;</div><div class=\"line\">    intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;       </div><div class=\"line\">    Log.d(TAG,<span class=\"string\">\"Home\"</span>);      </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (removeMatches) &#123;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing match \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Okay we found a previously set preferred or last chosen app.</span></div><div class=\"line\"><span class=\"comment\">// If the result set is different from when this</span></div><div class=\"line\"><span class=\"comment\">// was created, we need to clear it and re-ask the</span></div><div class=\"line\"><span class=\"comment\">// user their preference, if we're looking for an \"always\" type entry.</span></div><div class=\"line\"><span class=\"keyword\">if</span> (always &amp;&amp; !pa.mPref.sameSet(query)) &#123;                           </div><div class=\"line\">    <span class=\"keyword\">if</span>(!(intent.getAction() != <span class=\"keyword\">null</span> &amp;&amp; intent.getAction().equals(intent.ACTION_MAIN) &amp;&amp; intent.getCategories()!=<span class=\"keyword\">null</span> &amp;&amp; </div><div class=\"line\">        intent.getCategories().contains(intent.CATEGORY_HOME))) &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"Result set changed, dropping preferred activity for \"</span> + intent + <span class=\"string\">\" type \"</span> + resolvedType);</div><div class=\"line\">        <span class=\"keyword\">if</span> (DEBUG_PREFERRED) &#123;</div><div class=\"line\">        \tSlog.v(TAG, <span class=\"string\">\"Removing preferred activity since set changed \"</span> + pa.mPref.mComponent);</div><div class=\"line\">        &#125;</div><div class=\"line\">        pir.removeFilter(pa);</div><div class=\"line\">        <span class=\"comment\">// Re-add the filter as a \"last chosen\" entry (!always)</span></div><div class=\"line\">        PreferredActivity lastChosen = <span class=\"keyword\">new</span> PreferredActivity(pa, pa.mPref.mMatch, <span class=\"keyword\">null</span>, pa.mPref.mComponent, <span class=\"keyword\">false</span>);</div><div class=\"line\">        pir.addFilter(lastChosen);</div><div class=\"line\">        mSettings.writePackageRestrictionsLPr(userId);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//mtk add end</span></div></pre></td></tr></table></figure></p>\n"},{"title":"修改默认日期","date":"2017-09-21T06:19:03.000Z","_content":"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04318\n\n[DESCRIPTION]\n手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。\n如何客制化默认时区以及时间呢？\n\n[Solution]\n### 修改默认时间\n1、修改RTC默认日期\nAndroid L之前:\nalps\\mediatek\\custom\\[project]\\preloader\\inc\\cust_rtc.h\nalps\\mediatek\\custom\\[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h\n\nAndroid L或M\nbootable\\bootloader\\preloader\\custom\\[project]\\inc\\cust_rtc.h\n#define RTC_DEFAULT_YEA         2012\n#define RTC_DEFAULT_MTH        2\n#define RTC_DEFAULT_DOM        1\n\n### 修改默认日期\nframework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n```\nsystemReady()\n……\nif(isFirstBoot){\nTime today = new Time(Time.getCurrentTimezone());\ntoday.setToNow();   // 将时间恢复到RTC时间\ntoday.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份\n```\n\n如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();\n如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);\n这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。\n\n如果要設置出廠默認年份需要修改\n\n1)   \nAndroid KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml\n\nAndroid L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml\n``` xml\n<!-- default year for first power on-->\n<integer name=\"default_restore_year\">2013</integer>\n```\n\n2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n``` Java\nif(today.year <= 2010){ //删除此行判断条件\n    today.set(today.monthDay, today.month, 2013);\n    Log.d(TAG, \"Set the year to 2013\");\n    SystemProperties.set(BOOT_SYS_PROPERTY, \"false\");\n    SystemClock.setCurrentTimeMillis(today.toMillis(false));\n}\n```\n\n修改后的表现可通过Setting菜单->时间日期设置):\n\n3、修改默认时区:\n在系统属性中增加下面字段(假设改为Moscow)\nAndroid L之前:\nmediatek\\config\\[project]\\system.prop\nAndroid L:\ndevice\\mediatek\\[project]\\system.prop\npersist.sys.timezone = Europe/Moscow\n>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。","source":"_posts/修改默认日期.md","raw":"---\ntitle: 修改默认日期\ndate: 2017-09-21 14:19:03\ntags:\n---\nhttps://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04318\n\n[DESCRIPTION]\n手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。\n如何客制化默认时区以及时间呢？\n\n[Solution]\n### 修改默认时间\n1、修改RTC默认日期\nAndroid L之前:\nalps\\mediatek\\custom\\[project]\\preloader\\inc\\cust_rtc.h\nalps\\mediatek\\custom\\[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h\n\nAndroid L或M\nbootable\\bootloader\\preloader\\custom\\[project]\\inc\\cust_rtc.h\n#define RTC_DEFAULT_YEA         2012\n#define RTC_DEFAULT_MTH        2\n#define RTC_DEFAULT_DOM        1\n\n### 修改默认日期\nframework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n```\nsystemReady()\n……\nif(isFirstBoot){\nTime today = new Time(Time.getCurrentTimezone());\ntoday.setToNow();   // 将时间恢复到RTC时间\ntoday.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份\n```\n\n如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();\n如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);\n这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。\n\n如果要設置出廠默認年份需要修改\n\n1)   \nAndroid KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml\n\nAndroid L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml\n``` xml\n<!-- default year for first power on-->\n<integer name=\"default_restore_year\">2013</integer>\n```\n\n2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java\n``` Java\nif(today.year <= 2010){ //删除此行判断条件\n    today.set(today.monthDay, today.month, 2013);\n    Log.d(TAG, \"Set the year to 2013\");\n    SystemProperties.set(BOOT_SYS_PROPERTY, \"false\");\n    SystemClock.setCurrentTimeMillis(today.toMillis(false));\n}\n```\n\n修改后的表现可通过Setting菜单->时间日期设置):\n\n3、修改默认时区:\n在系统属性中增加下面字段(假设改为Moscow)\nAndroid L之前:\nmediatek\\config\\[project]\\system.prop\nAndroid L:\ndevice\\mediatek\\[project]\\system.prop\npersist.sys.timezone = Europe/Moscow\n>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。","slug":"修改默认日期","published":1,"updated":"2017-09-21T07:54:09.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggy000xeddx2fhxga6p","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318</a></p>\n<p>[DESCRIPTION]<br>手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。<br>如何客制化默认时区以及时间呢？</p>\n<p>[Solution]</p>\n<h3 id=\"修改默认时间\"><a href=\"#修改默认时间\" class=\"headerlink\" title=\"修改默认时间\"></a>修改默认时间</h3><p>1、修改RTC默认日期<br>Android L之前:<br>alps\\mediatek\\custom[project]\\preloader\\inc\\cust_rtc.h<br>alps\\mediatek\\custom[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h</p>\n<p>Android L或M<br>bootable\\bootloader\\preloader\\custom[project]\\inc\\cust_rtc.h</p>\n<p>#define RTC_DEFAULT_YEA         2012</p>\n<p>#define RTC_DEFAULT_MTH        2</p>\n<p>#define RTC_DEFAULT_DOM        1</p>\n<h3 id=\"修改默认日期\"><a href=\"#修改默认日期\" class=\"headerlink\" title=\"修改默认日期\"></a>修改默认日期</h3><p>framework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemReady()</div><div class=\"line\">……</div><div class=\"line\">if(isFirstBoot)&#123;</div><div class=\"line\">Time today = new Time(Time.getCurrentTimezone());</div><div class=\"line\">today.setToNow();   // 将时间恢复到RTC时间</div><div class=\"line\">today.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份</div></pre></td></tr></table></figure></p>\n<p>如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();<br>如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);<br>这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。</p>\n<p>如果要設置出廠默認年份需要修改</p>\n<p>1)<br>Android KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml</p>\n<p>Android L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- default year for first power on--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">integer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default_restore_year\"</span>&gt;</span>2013<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(today.year &lt;= <span class=\"number\">2010</span>)&#123; <span class=\"comment\">//删除此行判断条件</span></div><div class=\"line\">    today.set(today.monthDay, today.month, <span class=\"number\">2013</span>);</div><div class=\"line\">    Log.d(TAG, <span class=\"string\">\"Set the year to 2013\"</span>);</div><div class=\"line\">    SystemProperties.set(BOOT_SYS_PROPERTY, <span class=\"string\">\"false\"</span>);</div><div class=\"line\">    SystemClock.setCurrentTimeMillis(today.toMillis(<span class=\"keyword\">false</span>));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改后的表现可通过Setting菜单-&gt;时间日期设置):</p>\n<p>3、修改默认时区:<br>在系统属性中增加下面字段(假设改为Moscow)<br>Android L之前:<br>mediatek\\config[project]\\system.prop<br>Android L:<br>device\\mediatek[project]\\system.prop<br>persist.sys.timezone = Europe/Moscow</p>\n<blockquote>\n<p>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318\" target=\"_blank\" rel=\"external\">https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04318</a></p>\n<p>[DESCRIPTION]<br>手机第一次开机默认是没有定制时区的（默认是GMT:+00:00），但是会有一个默认日期，如2013年1月1日。<br>如何客制化默认时区以及时间呢？</p>\n<p>[Solution]</p>\n<h3 id=\"修改默认时间\"><a href=\"#修改默认时间\" class=\"headerlink\" title=\"修改默认时间\"></a>修改默认时间</h3><p>1、修改RTC默认日期<br>Android L之前:<br>alps\\mediatek\\custom[project]\\preloader\\inc\\cust_rtc.h<br>alps\\mediatek\\custom[project]\\kernel\\rtc\\rtc\\rtc-mt65XX.h</p>\n<p>Android L或M<br>bootable\\bootloader\\preloader\\custom[project]\\inc\\cust_rtc.h</p>\n<p>#define RTC_DEFAULT_YEA         2012</p>\n<p>#define RTC_DEFAULT_MTH        2</p>\n<p>#define RTC_DEFAULT_DOM        1</p>\n<h3 id=\"修改默认日期\"><a href=\"#修改默认日期\" class=\"headerlink\" title=\"修改默认日期\"></a>修改默认日期</h3><p>framework\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">systemReady()</div><div class=\"line\">……</div><div class=\"line\">if(isFirstBoot)&#123;</div><div class=\"line\">Time today = new Time(Time.getCurrentTimezone());</div><div class=\"line\">today.setToNow();   // 将时间恢复到RTC时间</div><div class=\"line\">today.set(1, 0, mDefaultYear ); //设立出厂默认日期，mDefaultYear是默认年份</div></pre></td></tr></table></figure></p>\n<p>如果想恢复出厂设置后，系统时间不变，可使用today.setToNow();<br>如果想恢复出厂设置后，系统时间也恢复成出厂时间，可使用today.set(1, 0, mDefaultYear);<br>这个today.set方法有6个参数的重载，可以精确到秒，具体使用方法请自行查询API，所以在这里设置系统默认时间就可以了。</p>\n<p>如果要設置出廠默認年份需要修改</p>\n<p>1)<br>Android KK : mediatek\\frameworks\\base\\res\\res\\values\\config.xml</p>\n<p>Android L : vendor\\mediatek\\proprietary\\frameworks\\base\\res\\res\\values\\config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- default year for first power on--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">integer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default_restore_year\"</span>&gt;</span>2013<span class=\"tag\">&lt;/<span class=\"name\">integer</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>2)   frameworks\\base\\services\\java\\com\\android\\server\\NetworkTimeUpdateService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(today.year &lt;= <span class=\"number\">2010</span>)&#123; <span class=\"comment\">//删除此行判断条件</span></div><div class=\"line\">    today.set(today.monthDay, today.month, <span class=\"number\">2013</span>);</div><div class=\"line\">    Log.d(TAG, <span class=\"string\">\"Set the year to 2013\"</span>);</div><div class=\"line\">    SystemProperties.set(BOOT_SYS_PROPERTY, <span class=\"string\">\"false\"</span>);</div><div class=\"line\">    SystemClock.setCurrentTimeMillis(today.toMillis(<span class=\"keyword\">false</span>));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>修改后的表现可通过Setting菜单-&gt;时间日期设置):</p>\n<p>3、修改默认时区:<br>在系统属性中增加下面字段(假设改为Moscow)<br>Android L之前:<br>mediatek\\config[project]\\system.prop<br>Android L:<br>device\\mediatek[project]\\system.prop<br>persist.sys.timezone = Europe/Moscow</p>\n<blockquote>\n<p>注意：默认时区的修改会影响默认时间的值，会根据与格林尼治标准时间差来更新时间，这是正常现象。如当前设置为中国标准时间GMT+8:00，则手机的出厂时间会变为8:00。</p>\n</blockquote>\n"},{"_content":"---\ntitle: 修改默认的两个闹钟震动打开\ndate: 2017-09-22 10:25:03\ntags:\n---\tpackages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java\n``` Java\n// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri\nprivate static final String DEFAULT_ALARM_1 = \"(8, 30, 31, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n\n// This creates a default alarm at 9:30 for every Sat,Sun\nprivate static final String DEFAULT_ALARM_2 = \"(9, 00, 96, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n```","source":"_posts/修改默认的两个闹钟震动打开.md","raw":"---\ntitle: 修改默认的两个闹钟震动打开\ndate: 2017-09-22 10:25:03\ntags:\n---\tpackages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java\n``` Java\n// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri\nprivate static final String DEFAULT_ALARM_1 = \"(8, 30, 31, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n\n// This creates a default alarm at 9:30 for every Sat,Sun\nprivate static final String DEFAULT_ALARM_2 = \"(9, 00, 96, 0, 1, '', NULL, 0);\";\t//把这里的第五位改为 1 即可\n```","slug":"修改默认的两个闹钟震动打开","published":1,"date":"2017-09-22T02:25:44.624Z","updated":"2017-09-22T02:25:44.624Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggz000yeddxt8afic0u","content":"<hr>\n<p>title: 修改默认的两个闹钟震动打开<br>date: 2017-09-22 10:25:03<br>tags:<br>—    packages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_1 = <span class=\"string\">\"(8, 30, 31, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 9:30 for every Sat,Sun</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_2 = <span class=\"string\">\"(9, 00, 96, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>title: 修改默认的两个闹钟震动打开<br>date: 2017-09-22 10:25:03<br>tags:<br>—    packages/apps/DeskClock/src/com/android/deskclock/provider/ClockDatabaseHelper.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 8:30 for every Mon,Tue,Wed,Thu,Fri</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_1 = <span class=\"string\">\"(8, 30, 31, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// This creates a default alarm at 9:30 for every Sat,Sun</span></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ALARM_2 = <span class=\"string\">\"(9, 00, 96, 0, 1, '', NULL, 0);\"</span>;\t<span class=\"comment\">//把这里的第五位改为 1 即可</span></div></pre></td></tr></table></figure></p>\n"},{"title":"全局对话框","date":"2017-09-22T07:11:55.000Z","_content":"使用 Application 作为 Dialog 的 Context\n将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT\n``` Java\nAlertDialog.Builder builder = new AlertDialog.Builder(mApplicationContext);\n...\nAlertDialog alertDialog = builder.create();\nalertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\nalertDialog.show();\n```\n//在AndroidManifest.xml文件中添加如下权限\n``` xml\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n```","source":"_posts/全局对话框.md","raw":"---\ntitle: 全局对话框\ndate: 2017-09-22 15:11:55\ntags:\n---\n使用 Application 作为 Dialog 的 Context\n将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT\n``` Java\nAlertDialog.Builder builder = new AlertDialog.Builder(mApplicationContext);\n...\nAlertDialog alertDialog = builder.create();\nalertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\nalertDialog.show();\n```\n//在AndroidManifest.xml文件中添加如下权限\n``` xml\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n```","slug":"全局对话框","published":1,"updated":"2017-09-22T09:07:13.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyggz000zeddxrk2jf5fy","content":"<p>使用 Application 作为 Dialog 的 Context<br>将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(mApplicationContext);</div><div class=\"line\">...</div><div class=\"line\">AlertDialog alertDialog = builder.create();</div><div class=\"line\">alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">alertDialog.show();</div></pre></td></tr></table></figure></p>\n<p>//在AndroidManifest.xml文件中添加如下权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.SYSTEM_ALERT_WINDOW\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用 Application 作为 Dialog 的 Context<br>将对话框的window类型设置为 WindowManager.LayoutParams.TYPE_SYSTEM_ALERT<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(mApplicationContext);</div><div class=\"line\">...</div><div class=\"line\">AlertDialog alertDialog = builder.create();</div><div class=\"line\">alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">alertDialog.show();</div></pre></td></tr></table></figure></p>\n<p>//在AndroidManifest.xml文件中添加如下权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.SYSTEM_ALERT_WINDOW\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"关闭NavigationBar","date":"2017-09-22T04:54:57.000Z","_content":"[FAQ04788](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04788)\n### KK及之前版本:\n默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。\n \nMT6589 和MT6572:\n1. 在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:\nalps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml\n``` Xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。\n \n2. MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义\n3. JB3 MP之后所有版本统一如下路径修改\n\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml\n``` xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。 \n\n4. 其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar\n\n### L和M版本:\n\n这个两个版本的修改方式与之前的版本也是类似:\n\n1. 先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。\n\n2. 再检查qemu.hw.mainkeys值的设置。\n\n3. 是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。","source":"_posts/关闭NavigationBar.md","raw":"---\ntitle: 关闭NavigationBar\ndate: 2017-09-22 12:54:57\ntags:\n---\n[FAQ04788](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ04788)\n### KK及之前版本:\n默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。\n \nMT6589 和MT6572:\n1. 在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:\nalps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml\n``` Xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。\n \n2. MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义\n3. JB3 MP之后所有版本统一如下路径修改\n\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml\n``` xml\n<bool name=\"config_showNavigationBar\">true</bool>\n```\n将这个配置信息修改为false即可。 \n\n4. 其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar\n\n### L和M版本:\n\n这个两个版本的修改方式与之前的版本也是类似:\n\n1. 先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。\n\n2. 再检查qemu.hw.mainkeys值的设置。\n\n3. 是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。","slug":"关闭NavigationBar","published":1,"updated":"2017-09-22T05:00:10.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh00010eddxl3s3upzb","content":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04788\" target=\"_blank\" rel=\"external\">FAQ04788</a></p>\n<h3 id=\"KK及之前版本\"><a href=\"#KK及之前版本\" class=\"headerlink\" title=\"KK及之前版本:\"></a>KK及之前版本:</h3><p>默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。</p>\n<p>MT6589 和MT6572:</p>\n<ol>\n<li>在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:<br>alps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。</p>\n<ol>\n<li>MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义</li>\n<li>JB3 MP之后所有版本统一如下路径修改<br>\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。 </p>\n<ol>\n<li>其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar</li>\n</ol>\n<h3 id=\"L和M版本\"><a href=\"#L和M版本\" class=\"headerlink\" title=\"L和M版本:\"></a>L和M版本:</h3><p>这个两个版本的修改方式与之前的版本也是类似:</p>\n<ol>\n<li><p>先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。</p>\n</li>\n<li><p>再检查qemu.hw.mainkeys值的设置。</p>\n</li>\n<li><p>是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ04788\" target=\"_blank\" rel=\"external\">FAQ04788</a></p>\n<h3 id=\"KK及之前版本\"><a href=\"#KK及之前版本\" class=\"headerlink\" title=\"KK及之前版本:\"></a>KK及之前版本:</h3><p>默认Navigation Bar的控制在 alps/frameworks/base/core/res/res/values/config.xml文件中<bool name=\"config_showNavigationBar\">true</bool>， 但是在6589项目以及6572等项目上修改为false不起作用，或者默认已经是false，但是还是会显示navigation Bar。</p>\n<p>MT6589 和MT6572:</p>\n<ol>\n<li>在6589项目和6572项目上，MTK内部Demo Project有Navigation Bar的需求，因此通过Resource Overlay机制默认打开了Navigation Bar，如果要关闭，需要确认resource overlay部分是否也有定义，具体如下:<br>alps/mediatek/custom/project_name/resource_overlay/generic/frameworks/base/core/res/res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。</p>\n<ol>\n<li>MT6572:如果上面的xml文件定义都是false，请再确认下mediatek/config/工程名字的目录/system.prop 是否有qemu.hw.mainkeys=0,如果有，请去掉qemu.hw.mainkeys=0的定义</li>\n<li>JB3 MP之后所有版本统一如下路径修改<br>\\mediatek\\custom\\common\\resource_overlay\\navbar\\frameworks\\base\\core\\res\\res\\values\\config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config_showNavigationBar\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>将这个配置信息修改为false即可。 </p>\n<ol>\n<li>其他平台或者branch都可以类似查找，以上都找不到，请全局搜索config_showNavigationBar</li>\n</ol>\n<h3 id=\"L和M版本\"><a href=\"#L和M版本\" class=\"headerlink\" title=\"L和M版本:\"></a>L和M版本:</h3><p>这个两个版本的修改方式与之前的版本也是类似:</p>\n<ol>\n<li><p>先查看config_showNavigationBar值的定义，默认定义在:alps/frameworks/base/core/res/res/values/config.xml，如果没有请全局搜索。</p>\n</li>\n<li><p>再检查qemu.hw.mainkeys值的设置。</p>\n</li>\n<li><p>是否显示Navigation Bar，判断的值在PhoneWindowManager.java文件中的setInitialDisplaySize 函数中被设置，检查mHasNavigationBar的值是如何被设置的。如果mHasNavigationBar为true，Navigation Bar会显示，否则不显示。</p>\n</li>\n</ol>\n"},{"title":"内存消耗测试","date":"2017-09-25T07:42:23.000Z","_content":"``` Java\npublic interface MemoryConsumer{\n    public void createArray();\n    public void createHashMap();\n}\n\npublic class MemoConsumerImpl implements MemoryConsumer{\n    private ArrayList arr = null;\n    private HashMap hash = null;\n    public void createArray(){\n        arr = new ArrayList(1000);\n    }\n    public void createHashMap(){\n        hash = new HashMap(1000);\n    }\n}\n\npublic class Memory{\n    public static long used(){\n        long total = Runtime.getRuntime().totalMemory();\n        long free = Runtime.getRuntime().freeMemory();\n        return (totao - free);\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = Memory.used();\n            result = method.invoke(obj,args);\n            long end = Memory.used();\n            Log.e(\"test\",method.getName()+\" test spend:\"+(end - start)+\" bytes\");\n        }catch(Exception e){\n            e.printStaceTrace();\n        }\n    }\n}\n\ntry{\n    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(new MemoConsumerImpl());\n    arrayMemo.createArray();\n    arrayMemo.createHashMap();\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/内存消耗测试.md","raw":"---\ntitle: 内存消耗测试\ndate: 2017-09-25 15:42:23\ntags:\n---\n``` Java\npublic interface MemoryConsumer{\n    public void createArray();\n    public void createHashMap();\n}\n\npublic class MemoConsumerImpl implements MemoryConsumer{\n    private ArrayList arr = null;\n    private HashMap hash = null;\n    public void createArray(){\n        arr = new ArrayList(1000);\n    }\n    public void createHashMap(){\n        hash = new HashMap(1000);\n    }\n}\n\npublic class Memory{\n    public static long used(){\n        long total = Runtime.getRuntime().totalMemory();\n        long free = Runtime.getRuntime().freeMemory();\n        return (totao - free);\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = Memory.used();\n            result = method.invoke(obj,args);\n            long end = Memory.used();\n            Log.e(\"test\",method.getName()+\" test spend:\"+(end - start)+\" bytes\");\n        }catch(Exception e){\n            e.printStaceTrace();\n        }\n    }\n}\n\ntry{\n    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(new MemoConsumerImpl());\n    arrayMemo.createArray();\n    arrayMemo.createHashMap();\n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"内存消耗测试","published":1,"updated":"2017-09-25T07:43:06.054Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh00011eddxxc0y89fe","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoConsumerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ArrayList arr = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> HashMap hash = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        arr = <span class=\"keyword\">new</span> ArrayList(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        hash = <span class=\"keyword\">new</span> HashMap(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memory</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">used</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> total = Runtime.getRuntime().totalMemory();</div><div class=\"line\">        <span class=\"keyword\">long</span> free = Runtime.getRuntime().freeMemory();</div><div class=\"line\">        <span class=\"keyword\">return</span> (totao - free);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),<span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = Memory.used();</div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = Memory.used();</div><div class=\"line\">            Log.e(<span class=\"string\">\"test\"</span>,method.getName()+<span class=\"string\">\" test spend:\"</span>+(end - start)+<span class=\"string\">\" bytes\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStaceTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(<span class=\"keyword\">new</span> MemoConsumerImpl());</div><div class=\"line\">    arrayMemo.createArray();</div><div class=\"line\">    arrayMemo.createHashMap();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemoConsumerImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">MemoryConsumer</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> ArrayList arr = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> HashMap hash = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createArray</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        arr = <span class=\"keyword\">new</span> ArrayList(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createHashMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        hash = <span class=\"keyword\">new</span> HashMap(<span class=\"number\">1000</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memory</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">used</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> total = Runtime.getRuntime().totalMemory();</div><div class=\"line\">        <span class=\"keyword\">long</span> free = Runtime.getRuntime().freeMemory();</div><div class=\"line\">        <span class=\"keyword\">return</span> (totao - free);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),<span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = Memory.used();</div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = Memory.used();</div><div class=\"line\">            Log.e(<span class=\"string\">\"test\"</span>,method.getName()+<span class=\"string\">\" test spend:\"</span>+(end - start)+<span class=\"string\">\" bytes\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStaceTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    MemoryConsumer arrayMemo = (MemoryConsumer)Handler.newInstance(<span class=\"keyword\">new</span> MemoConsumerImpl());</div><div class=\"line\">    arrayMemo.createArray();</div><div class=\"line\">    arrayMemo.createHashMap();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"减缓按键长按事件的处理速度","date":"2017-09-21T08:53:58.000Z","_content":"``` Java\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(event.getRepeatCount() % 3 != 0){    //添加了这段代码\n        return true;\n    }\n    ......\n}\n```","source":"_posts/减缓按键长按事件的处理速度.md","raw":"---\ntitle: 减缓按键长按事件的处理速度\ndate: 2017-09-21 16:53:58\ntags:\n---\n``` Java\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(event.getRepeatCount() % 3 != 0){    //添加了这段代码\n        return true;\n    }\n    ......\n}\n```","slug":"减缓按键长按事件的处理速度","published":1,"updated":"2017-09-21T08:54:41.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh10012eddx2yusrrip","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(event.getRepeatCount() % <span class=\"number\">3</span> != <span class=\"number\">0</span>)&#123;    <span class=\"comment\">//添加了这段代码</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(event.getRepeatCount() % <span class=\"number\">3</span> != <span class=\"number\">0</span>)&#123;    <span class=\"comment\">//添加了这段代码</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"动态壁纸的学习和使用","date":"2017-09-25T06:37:21.000Z","_content":"可以参考 [Android 仿火萤视频桌面 神奇的LiveWallPaper]( http://blog.csdn.net/lmj623565791/article/details/72170299)\n\n1. 创建一个类集成 WallpaperService\n``` Java\npublic class MyWallpaperService extends WallpaperService {\n    @Override\n    public Engine onCreateEngine() {\n        Log.e(\"zhangqi\", \"createEngine()\");\n        return new MyEngine();\n    }\n    class MyEngine extends Engine {\n        public void onSurfaceCreated(SurfaceHolder holder) {\n            Canvas canvas = holder.lockCanvas(null);\n            canvas.draw.....                        //在这里画图\n            holder.unlockCanvasAndPost(canvas);\n        }\n    }\n}\n```\n2. 在 AndroidManifest.xml 文件中注册\n``` xml\n<!-- 上面的WallpaperService -->\n<service\n    android:name=\"com.sagereal.zq.MyWallpaperService\"                            \n    android:label=\"@string/app_name\"\n    android:permission=\"android.permission.BIND_WALLPAPER\" >\n    <intent-filter>\n        <action android:name=\"android.service.wallpaper.WallpaperService\" />\n    </intent-filter>\n    <meta-data\n        android:name=\"android.service.wallpaper\"\n        android:resource=\"@xml/wallpaper\" /> <!-- 下面的wallpaper.xml配置文件 -->\n</service>\n```\n3. 创建添加 res/xml/wallpaper.xml 文件\n``` Java\n<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:thumbnail=\"@drawable/ic_launcher\"                                     //动态壁纸列表中的缩略图\n    android:description=\"@string/description\" />                                //动态壁纸列表中的动态壁纸名称\n```\n\n##### 如何过滤出所有动态壁纸的apk\n``` Java\npublic static final String SERVICE_INTERFACE = \"android.service.wallpaper.WallpaperService\";\nList<ResolveInfo> list = mPackageManager.queryIntentServices(new Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);\n```","source":"_posts/动态壁纸的学习和使用.md","raw":"---\ntitle: 动态壁纸的学习和使用\ndate: 2017-09-25 14:37:21\ntags:\n---\n可以参考 [Android 仿火萤视频桌面 神奇的LiveWallPaper]( http://blog.csdn.net/lmj623565791/article/details/72170299)\n\n1. 创建一个类集成 WallpaperService\n``` Java\npublic class MyWallpaperService extends WallpaperService {\n    @Override\n    public Engine onCreateEngine() {\n        Log.e(\"zhangqi\", \"createEngine()\");\n        return new MyEngine();\n    }\n    class MyEngine extends Engine {\n        public void onSurfaceCreated(SurfaceHolder holder) {\n            Canvas canvas = holder.lockCanvas(null);\n            canvas.draw.....                        //在这里画图\n            holder.unlockCanvasAndPost(canvas);\n        }\n    }\n}\n```\n2. 在 AndroidManifest.xml 文件中注册\n``` xml\n<!-- 上面的WallpaperService -->\n<service\n    android:name=\"com.sagereal.zq.MyWallpaperService\"                            \n    android:label=\"@string/app_name\"\n    android:permission=\"android.permission.BIND_WALLPAPER\" >\n    <intent-filter>\n        <action android:name=\"android.service.wallpaper.WallpaperService\" />\n    </intent-filter>\n    <meta-data\n        android:name=\"android.service.wallpaper\"\n        android:resource=\"@xml/wallpaper\" /> <!-- 下面的wallpaper.xml配置文件 -->\n</service>\n```\n3. 创建添加 res/xml/wallpaper.xml 文件\n``` Java\n<wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:thumbnail=\"@drawable/ic_launcher\"                                     //动态壁纸列表中的缩略图\n    android:description=\"@string/description\" />                                //动态壁纸列表中的动态壁纸名称\n```\n\n##### 如何过滤出所有动态壁纸的apk\n``` Java\npublic static final String SERVICE_INTERFACE = \"android.service.wallpaper.WallpaperService\";\nList<ResolveInfo> list = mPackageManager.queryIntentServices(new Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);\n```","slug":"动态壁纸的学习和使用","published":1,"updated":"2017-09-30T02:46:15.503Z","_id":"cj85iygh20013eddxyqsz1lmt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>可以参考 <a href=\"http://blog.csdn.net/lmj623565791/article/details/72170299\" target=\"_blank\" rel=\"external\">Android 仿火萤视频桌面 神奇的LiveWallPaper</a></p>\n<ol>\n<li><p>创建一个类集成 WallpaperService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyWallpaperService</span> <span class=\"keyword\">extends</span> <span class=\"title\">WallpaperService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Engine <span class=\"title\">onCreateEngine</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Log.e(<span class=\"string\">\"zhangqi\"</span>, <span class=\"string\">\"createEngine()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyEngine();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyEngine</span> <span class=\"keyword\">extends</span> <span class=\"title\">Engine</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceCreated</span><span class=\"params\">(SurfaceHolder holder)</span> </span>&#123;</div><div class=\"line\">            Canvas canvas = holder.lockCanvas(<span class=\"keyword\">null</span>);</div><div class=\"line\">            canvas.draw.....                        <span class=\"comment\">//在这里画图</span></div><div class=\"line\">            holder.unlockCanvasAndPost(canvas);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>在 AndroidManifest.xml 文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 上面的WallpaperService --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.sagereal.zq.MyWallpaperService\"</span>                            </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:label</span>=<span class=\"string\">\"@string/app_name\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:permission</span>=<span class=\"string\">\"android.permission.BIND_WALLPAPER\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/wallpaper\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 下面的wallpaper.xml配置文件 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>创建添加 res/xml/wallpaper.xml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;wallpaper xmlns:android=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    android:thumbnail=<span class=\"string\">\"@drawable/ic_launcher\"</span>                                     <span class=\"comment\">//动态壁纸列表中的缩略图</span></div><div class=\"line\">    android:description=<span class=\"string\">\"@string/description\"</span> /&gt;                                <span class=\"comment\">//动态壁纸列表中的动态壁纸名称</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"如何过滤出所有动态壁纸的apk\"><a href=\"#如何过滤出所有动态壁纸的apk\" class=\"headerlink\" title=\"如何过滤出所有动态壁纸的apk\"></a>如何过滤出所有动态壁纸的apk</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SERVICE_INTERFACE = <span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span>;</div><div class=\"line\">List&lt;ResolveInfo&gt; list = mPackageManager.queryIntentServices(<span class=\"keyword\">new</span> Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>可以参考 <a href=\"http://blog.csdn.net/lmj623565791/article/details/72170299\" target=\"_blank\" rel=\"external\">Android 仿火萤视频桌面 神奇的LiveWallPaper</a></p>\n<ol>\n<li><p>创建一个类集成 WallpaperService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyWallpaperService</span> <span class=\"keyword\">extends</span> <span class=\"title\">WallpaperService</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Engine <span class=\"title\">onCreateEngine</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Log.e(<span class=\"string\">\"zhangqi\"</span>, <span class=\"string\">\"createEngine()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyEngine();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyEngine</span> <span class=\"keyword\">extends</span> <span class=\"title\">Engine</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceCreated</span><span class=\"params\">(SurfaceHolder holder)</span> </span>&#123;</div><div class=\"line\">            Canvas canvas = holder.lockCanvas(<span class=\"keyword\">null</span>);</div><div class=\"line\">            canvas.draw.....                        <span class=\"comment\">//在这里画图</span></div><div class=\"line\">            holder.unlockCanvasAndPost(canvas);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>在 AndroidManifest.xml 文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 上面的WallpaperService --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.sagereal.zq.MyWallpaperService\"</span>                            </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:label</span>=<span class=\"string\">\"@string/app_name\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:permission</span>=<span class=\"string\">\"android.permission.BIND_WALLPAPER\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta-data</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.service.wallpaper\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:resource</span>=<span class=\"string\">\"@xml/wallpaper\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 下面的wallpaper.xml配置文件 --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>创建添加 res/xml/wallpaper.xml 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;wallpaper xmlns:android=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    android:thumbnail=<span class=\"string\">\"@drawable/ic_launcher\"</span>                                     <span class=\"comment\">//动态壁纸列表中的缩略图</span></div><div class=\"line\">    android:description=<span class=\"string\">\"@string/description\"</span> /&gt;                                <span class=\"comment\">//动态壁纸列表中的动态壁纸名称</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"如何过滤出所有动态壁纸的apk\"><a href=\"#如何过滤出所有动态壁纸的apk\" class=\"headerlink\" title=\"如何过滤出所有动态壁纸的apk\"></a>如何过滤出所有动态壁纸的apk</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SERVICE_INTERFACE = <span class=\"string\">\"android.service.wallpaper.WallpaperService\"</span>;</div><div class=\"line\">List&lt;ResolveInfo&gt; list = mPackageManager.queryIntentServices(<span class=\"keyword\">new</span> Intent(WallpaperService.SERVICE_INTERFACE), PackageManager.GET_META_DATA);</div></pre></td></tr></table></figure>"},{"title":"反编译查看google向导设置息屏时间121000","date":"2017-09-25T07:32:18.000Z","_content":"通过反编译/vendor/google/apps/SetupWizard_default_dark.apk\n可以看到在 com.google.setupwizard.BaseActivity.java 文件中有\n``` Java\nprotected void onSetupStart(){\n    mUserData.put(\"screenTimeout\", Integer.valueOf(Settings.System.getInt(getContentResolver(), \"screen_off_timeout\", 121000)));\n    Settings.System.putInt(getContentResolver(), \"screen_off_timeout\", 121000);            //在这个地方将息屏时间设置为 121000\n    if (ROTATION_LOCKED)\n        lockRotation();\n}\n```\n在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法\n``` Java\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    while (true)\n    {\n        return;\n        str1 = \"icicle\";\n        break;\n        label280: str2 = \"false\";\n        break label43;\n        label287: bool1 = false;\n        break label121;\n        label293: bool2 = false;\n        break label163;\n        label299: bool4 = false;\n        break label213;\n        label305: if ((bool1) || (!isHomeActivity()))\n        this.mClearAccountsDone = true;\n        if (paramBundle == null) {\n            onSetupStart();\n            startWarmSimCheck();\n            startWelcomeActivity();\n        }\n    }\n}\n```\n\n``` xml\n<activity\n    android:theme=\"@7F090013\"\n    android:name=\"SetupWizardActivity\"        //这个activity是启动activity\n    android:excludeFromRecents=\"true\"\n    android:launchMode=\"1\"\n    android:immersive=\"true\">\n    <intent-filter android:priority=\"5\" >\n        <action android:name=\"android.intent.action.MAIN\" />\n        <action android:name=\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"/>\n        <category android:name=\"android.intent.category.HOME\"/>\n        <category android:name=\"android.intent.category.DEFAULT\" />\n    </intent-filter>\n</activity>\n```","source":"_posts/反编译查看google向导设置息屏时间121000.md","raw":"---\ntitle: 反编译查看google向导设置息屏时间121000\ndate: 2017-09-25 15:32:18\ntags:\n---\n通过反编译/vendor/google/apps/SetupWizard_default_dark.apk\n可以看到在 com.google.setupwizard.BaseActivity.java 文件中有\n``` Java\nprotected void onSetupStart(){\n    mUserData.put(\"screenTimeout\", Integer.valueOf(Settings.System.getInt(getContentResolver(), \"screen_off_timeout\", 121000)));\n    Settings.System.putInt(getContentResolver(), \"screen_off_timeout\", 121000);            //在这个地方将息屏时间设置为 121000\n    if (ROTATION_LOCKED)\n        lockRotation();\n}\n```\n在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法\n``` Java\nprotected void onCreate(Bundle paramBundle) {\n    ...\n    while (true)\n    {\n        return;\n        str1 = \"icicle\";\n        break;\n        label280: str2 = \"false\";\n        break label43;\n        label287: bool1 = false;\n        break label121;\n        label293: bool2 = false;\n        break label163;\n        label299: bool4 = false;\n        break label213;\n        label305: if ((bool1) || (!isHomeActivity()))\n        this.mClearAccountsDone = true;\n        if (paramBundle == null) {\n            onSetupStart();\n            startWarmSimCheck();\n            startWelcomeActivity();\n        }\n    }\n}\n```\n\n``` xml\n<activity\n    android:theme=\"@7F090013\"\n    android:name=\"SetupWizardActivity\"        //这个activity是启动activity\n    android:excludeFromRecents=\"true\"\n    android:launchMode=\"1\"\n    android:immersive=\"true\">\n    <intent-filter android:priority=\"5\" >\n        <action android:name=\"android.intent.action.MAIN\" />\n        <action android:name=\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"/>\n        <category android:name=\"android.intent.category.HOME\"/>\n        <category android:name=\"android.intent.category.DEFAULT\" />\n    </intent-filter>\n</activity>\n```","slug":"反编译查看google向导设置息屏时间121000","published":1,"updated":"2017-09-25T07:33:22.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh20014eddxgeusyrt0","content":"<p>通过反编译/vendor/google/apps/SetupWizard_default_dark.apk<br>可以看到在 com.google.setupwizard.BaseActivity.java 文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupStart</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    mUserData.put(<span class=\"string\">\"screenTimeout\"</span>, Integer.valueOf(Settings.System.getInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>)));</div><div class=\"line\">    Settings.System.putInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>);            <span class=\"comment\">//在这个地方将息屏时间设置为 121000</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (ROTATION_LOCKED)</div><div class=\"line\">        lockRotation();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle paramBundle)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">        str1 = <span class=\"string\">\"icicle\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        label280: str2 = <span class=\"string\">\"false\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label43;</div><div class=\"line\">        label287: bool1 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label121;</div><div class=\"line\">        label293: bool2 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label163;</div><div class=\"line\">        label299: bool4 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label213;</div><div class=\"line\">        label305: <span class=\"keyword\">if</span> ((bool1) || (!isHomeActivity()))</div><div class=\"line\">        <span class=\"keyword\">this</span>.mClearAccountsDone = <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (paramBundle == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            onSetupStart();</div><div class=\"line\">            startWarmSimCheck();</div><div class=\"line\">            startWelcomeActivity();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@7F090013\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"SetupWizardActivity\"</span>        //这个<span class=\"attr\">activity</span>是启动<span class=\"attr\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:excludeFromRecents</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"1\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:immersive</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span> <span class=\"attr\">android:priority</span>=<span class=\"string\">\"5\"</span> &gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.MAIN\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.HOME\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>通过反编译/vendor/google/apps/SetupWizard_default_dark.apk<br>可以看到在 com.google.setupwizard.BaseActivity.java 文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupStart</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    mUserData.put(<span class=\"string\">\"screenTimeout\"</span>, Integer.valueOf(Settings.System.getInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>)));</div><div class=\"line\">    Settings.System.putInt(getContentResolver(), <span class=\"string\">\"screen_off_timeout\"</span>, <span class=\"number\">121000</span>);            <span class=\"comment\">//在这个地方将息屏时间设置为 121000</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (ROTATION_LOCKED)</div><div class=\"line\">        lockRotation();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 com.google.setupwizard.SetupWizardActivity.java 文件中调用上面的 onSetupStart() 方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle paramBundle)</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">        str1 = <span class=\"string\">\"icicle\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        label280: str2 = <span class=\"string\">\"false\"</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label43;</div><div class=\"line\">        label287: bool1 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label121;</div><div class=\"line\">        label293: bool2 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label163;</div><div class=\"line\">        label299: bool4 = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">break</span> label213;</div><div class=\"line\">        label305: <span class=\"keyword\">if</span> ((bool1) || (!isHomeActivity()))</div><div class=\"line\">        <span class=\"keyword\">this</span>.mClearAccountsDone = <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (paramBundle == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            onSetupStart();</div><div class=\"line\">            startWarmSimCheck();</div><div class=\"line\">            startWelcomeActivity();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@7F090013\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"SetupWizardActivity\"</span>        //这个<span class=\"attr\">activity</span>是启动<span class=\"attr\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:excludeFromRecents</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"1\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:immersive</span>=<span class=\"string\">\"true\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span> <span class=\"attr\">android:priority</span>=<span class=\"string\">\"5\"</span> &gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.MAIN\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.DEVICE_INITIALIZATION_WIZARD\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.HOME\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"同时支持两个文件名不同的布局","date":"2017-09-22T02:50:09.000Z","_content":"res/layout/main_onepane.xml\nres/layout/main_twopanes.xml\n\nres/values-xlarge/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_onepane</item>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了\n</resources>\n```\n\nres/values-sw600dp/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_twopanes</item>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了\n</resources>\n```","source":"_posts/同时支持两个文件名不同的布局.md","raw":"---\ntitle: 同时支持两个文件名不同的布局\ndate: 2017-09-22 10:50:09\ntags:\n---\nres/layout/main_onepane.xml\nres/layout/main_twopanes.xml\n\nres/values-xlarge/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_onepane</item>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了\n</resources>\n```\n\nres/values-sw600dp/layout.xml\n``` xml\n<resources>\n    <item name=\"main\" type=\"layout\">@layout/main_twopanes</item>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了\n</resources>\n```","slug":"同时支持两个文件名不同的布局","published":1,"updated":"2017-09-22T02:53:54.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh30015eddx32p00dve","content":"<p>res/layout/main_onepane.xml<br>res/layout/main_twopanes.xml</p>\n<p>res/values-xlarge/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_onepane<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>res/values-sw600dp/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_twopanes<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>res/layout/main_onepane.xml<br>res/layout/main_twopanes.xml</p>\n<p>res/values-xlarge/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_onepane<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_onepane.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>res/values-sw600dp/layout.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"layout\"</span>&gt;</span>@layout/main_twopanes<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span>\t//这里就可以直接使用@layout/main来获取main_twopanes.xml的布局了</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"圆形的Imageview","date":"2017-09-22T02:31:57.000Z","_content":"``` Java\nimport android.content.Context;  \nimport android.graphics.Bitmap;  \nimport android.graphics.Bitmap.Config;  \nimport android.graphics.Canvas;  \nimport android.graphics.Paint;  \nimport android.graphics.PorterDuff.Mode;  \nimport android.graphics.PorterDuffXfermode;  \nimport android.graphics.Rect;  \nimport android.graphics.drawable.BitmapDrawable;  \nimport android.graphics.drawable.Drawable;  \nimport android.util.AttributeSet;  \nimport android.widget.ImageView;  \nimport android.graphics.Matrix;\n  \n/** \n * 圆形的Imageview \n * @since 2012-11-02 \n *  \n * @author bingyang.djj \n *  \n */  \npublic class CircleImageView extends ImageView {  \n    private Paint paint = new Paint();  \n  \n    public CircleImageView(Context context) {  \n        super(context);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs) {  \n        super(context, attrs);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs, int defStyle) {  \n        super(context, attrs, defStyle);  \n    }  \n  \n    @Override  \n    protected void onDraw(Canvas canvas) {  \n        Drawable drawable = getDrawable();  \n        if (null != drawable) {  \n            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  \n            Matrix matrix = new Matrix();\n            float x = (float)100/bitmap1.getWidth();\n            float y = (float)100/bitmap1.getHeight();\n            matrix.postScale(x, y);\n            Bitmap bitmap = Bitmap.createBitmap(bitmap1, 0, 0, bitmap1.getWidth(), bitmap1.getHeight(), matrix, true);\n            Bitmap b = toRoundCorner(bitmap, 14);  \n            final Rect rect = new Rect(0, 0, b.getWidth(),  b.getHeight());  \n            paint.reset();  \n            canvas.drawBitmap(b, rect, rect, paint);  \n  \n        } else {  \n            super.onDraw(canvas);  \n        }  \n    }  \n  \n    private Bitmap toRoundCorner(Bitmap bitmap, int pixels) {  \n        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  \n        Canvas canvas = new Canvas(output);  \n        final int color = 0xff424242;  \n        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());  \n        paint.setAntiAlias(true);  \n        canvas.drawARGB(0, 0, 0, 0);  \n        paint.setColor(color);  \n        int x = bitmap.getWidth();  \n        canvas.drawCircle(x / 2, x / 2, x / 2, paint);  \n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  \n        canvas.drawBitmap(bitmap, rect, rect, paint);  \n        return output;  \n    }\n}\n```","source":"_posts/圆形的Imageview.md","raw":"---\ntitle: 圆形的Imageview\ndate: 2017-09-22 10:31:57\ntags:\n---\n``` Java\nimport android.content.Context;  \nimport android.graphics.Bitmap;  \nimport android.graphics.Bitmap.Config;  \nimport android.graphics.Canvas;  \nimport android.graphics.Paint;  \nimport android.graphics.PorterDuff.Mode;  \nimport android.graphics.PorterDuffXfermode;  \nimport android.graphics.Rect;  \nimport android.graphics.drawable.BitmapDrawable;  \nimport android.graphics.drawable.Drawable;  \nimport android.util.AttributeSet;  \nimport android.widget.ImageView;  \nimport android.graphics.Matrix;\n  \n/** \n * 圆形的Imageview \n * @since 2012-11-02 \n *  \n * @author bingyang.djj \n *  \n */  \npublic class CircleImageView extends ImageView {  \n    private Paint paint = new Paint();  \n  \n    public CircleImageView(Context context) {  \n        super(context);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs) {  \n        super(context, attrs);  \n    }  \n  \n    public CircleImageView(Context context, AttributeSet attrs, int defStyle) {  \n        super(context, attrs, defStyle);  \n    }  \n  \n    @Override  \n    protected void onDraw(Canvas canvas) {  \n        Drawable drawable = getDrawable();  \n        if (null != drawable) {  \n            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  \n            Matrix matrix = new Matrix();\n            float x = (float)100/bitmap1.getWidth();\n            float y = (float)100/bitmap1.getHeight();\n            matrix.postScale(x, y);\n            Bitmap bitmap = Bitmap.createBitmap(bitmap1, 0, 0, bitmap1.getWidth(), bitmap1.getHeight(), matrix, true);\n            Bitmap b = toRoundCorner(bitmap, 14);  \n            final Rect rect = new Rect(0, 0, b.getWidth(),  b.getHeight());  \n            paint.reset();  \n            canvas.drawBitmap(b, rect, rect, paint);  \n  \n        } else {  \n            super.onDraw(canvas);  \n        }  \n    }  \n  \n    private Bitmap toRoundCorner(Bitmap bitmap, int pixels) {  \n        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  \n        Canvas canvas = new Canvas(output);  \n        final int color = 0xff424242;  \n        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());  \n        paint.setAntiAlias(true);  \n        canvas.drawARGB(0, 0, 0, 0);  \n        paint.setColor(color);  \n        int x = bitmap.getWidth();  \n        canvas.drawCircle(x / 2, x / 2, x / 2, paint);  \n        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));  \n        canvas.drawBitmap(bitmap, rect, rect, paint);  \n        return output;  \n    }\n}\n```","slug":"圆形的Imageview","published":1,"updated":"2017-09-22T02:33:06.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh30016eddx2b411395","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.content.Context;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap.Config;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Paint;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuff.Mode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuffXfermode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Rect;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.BitmapDrawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.ImageView;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Matrix;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\"> * 圆形的Imageview </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 2012-11-02 </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> bingyang.djj </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> */</span>  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircleImageView</span> <span class=\"keyword\">extends</span> <span class=\"title\">ImageView</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> Paint paint = <span class=\"keyword\">new</span> Paint();  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"meta\">@Override</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;  </div><div class=\"line\">        Drawable drawable = getDrawable();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != drawable) &#123;  </div><div class=\"line\">            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  </div><div class=\"line\">            Matrix matrix = <span class=\"keyword\">new</span> Matrix();</div><div class=\"line\">            <span class=\"keyword\">float</span> x = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getWidth();</div><div class=\"line\">            <span class=\"keyword\">float</span> y = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getHeight();</div><div class=\"line\">            matrix.postScale(x, y);</div><div class=\"line\">            Bitmap bitmap = Bitmap.createBitmap(bitmap1, <span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap1.getWidth(), bitmap1.getHeight(), matrix, <span class=\"keyword\">true</span>);</div><div class=\"line\">            Bitmap b = toRoundCorner(bitmap, <span class=\"number\">14</span>);  </div><div class=\"line\">            <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, b.getWidth(),  b.getHeight());  </div><div class=\"line\">            paint.reset();  </div><div class=\"line\">            canvas.drawBitmap(b, rect, rect, paint);  </div><div class=\"line\">  </div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  </div><div class=\"line\">            <span class=\"keyword\">super</span>.onDraw(canvas);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">toRoundCorner</span><span class=\"params\">(Bitmap bitmap, <span class=\"keyword\">int</span> pixels)</span> </span>&#123;  </div><div class=\"line\">        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  </div><div class=\"line\">        Canvas canvas = <span class=\"keyword\">new</span> Canvas(output);  </div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> color = <span class=\"number\">0xff424242</span>;  </div><div class=\"line\">        <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight());  </div><div class=\"line\">        paint.setAntiAlias(<span class=\"keyword\">true</span>);  </div><div class=\"line\">        canvas.drawARGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);  </div><div class=\"line\">        paint.setColor(color);  </div><div class=\"line\">        <span class=\"keyword\">int</span> x = bitmap.getWidth();  </div><div class=\"line\">        canvas.drawCircle(x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, paint);  </div><div class=\"line\">        paint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.SRC_IN));  </div><div class=\"line\">        canvas.drawBitmap(bitmap, rect, rect, paint);  </div><div class=\"line\">        <span class=\"keyword\">return</span> output;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> android.content.Context;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Bitmap.Config;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Canvas;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Paint;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuff.Mode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.PorterDuffXfermode;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Rect;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.BitmapDrawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.drawable.Drawable;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.util.AttributeSet;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.ImageView;  </div><div class=\"line\"><span class=\"keyword\">import</span> android.graphics.Matrix;</div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">/** </span></div><div class=\"line\"><span class=\"comment\"> * 圆形的Imageview </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 2012-11-02 </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> bingyang.djj </span></div><div class=\"line\"><span class=\"comment\"> *  </span></div><div class=\"line\"><span class=\"comment\"> */</span>  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CircleImageView</span> <span class=\"keyword\">extends</span> <span class=\"title\">ImageView</span> </span>&#123;  </div><div class=\"line\">    <span class=\"keyword\">private</span> Paint paint = <span class=\"keyword\">new</span> Paint();  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CircleImageView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;  </div><div class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"meta\">@Override</span>  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;  </div><div class=\"line\">        Drawable drawable = getDrawable();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != drawable) &#123;  </div><div class=\"line\">            Bitmap bitmap1 = ((BitmapDrawable) drawable).getBitmap();  </div><div class=\"line\">            Matrix matrix = <span class=\"keyword\">new</span> Matrix();</div><div class=\"line\">            <span class=\"keyword\">float</span> x = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getWidth();</div><div class=\"line\">            <span class=\"keyword\">float</span> y = (<span class=\"keyword\">float</span>)<span class=\"number\">100</span>/bitmap1.getHeight();</div><div class=\"line\">            matrix.postScale(x, y);</div><div class=\"line\">            Bitmap bitmap = Bitmap.createBitmap(bitmap1, <span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap1.getWidth(), bitmap1.getHeight(), matrix, <span class=\"keyword\">true</span>);</div><div class=\"line\">            Bitmap b = toRoundCorner(bitmap, <span class=\"number\">14</span>);  </div><div class=\"line\">            <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, b.getWidth(),  b.getHeight());  </div><div class=\"line\">            paint.reset();  </div><div class=\"line\">            canvas.drawBitmap(b, rect, rect, paint);  </div><div class=\"line\">  </div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;  </div><div class=\"line\">            <span class=\"keyword\">super</span>.onDraw(canvas);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">  </div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">toRoundCorner</span><span class=\"params\">(Bitmap bitmap, <span class=\"keyword\">int</span> pixels)</span> </span>&#123;  </div><div class=\"line\">        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);  </div><div class=\"line\">        Canvas canvas = <span class=\"keyword\">new</span> Canvas(output);  </div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> color = <span class=\"number\">0xff424242</span>;  </div><div class=\"line\">        <span class=\"keyword\">final</span> Rect rect = <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight());  </div><div class=\"line\">        paint.setAntiAlias(<span class=\"keyword\">true</span>);  </div><div class=\"line\">        canvas.drawARGB(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);  </div><div class=\"line\">        paint.setColor(color);  </div><div class=\"line\">        <span class=\"keyword\">int</span> x = bitmap.getWidth();  </div><div class=\"line\">        canvas.drawCircle(x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, x / <span class=\"number\">2</span>, paint);  </div><div class=\"line\">        paint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.SRC_IN));  </div><div class=\"line\">        canvas.drawBitmap(bitmap, rect, rect, paint);  </div><div class=\"line\">        <span class=\"keyword\">return</span> output;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"在关闭飞行模式之后蓝牙打不开","date":"2017-09-22T02:47:44.000Z","_content":"frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java\n``` Java\nmBluetoothTileView.setOnClickListener(new OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);\n        boolean isAirplaneToggleable = toggleableRadio == null ? false : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);\n        boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,0) == 1;\n        if(!isAirplaneModeOn || isAirplaneToggleable){\n            mBluetoothStateTracker.toggleState(mContext);\n        }\n    }\n});\n```","source":"_posts/在关闭飞行模式之后蓝牙打不开.md","raw":"---\ntitle: 在关闭飞行模式之后蓝牙打不开\ndate: 2017-09-22 10:47:44\ntags:\n---\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java\n``` Java\nmBluetoothTileView.setOnClickListener(new OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);\n        boolean isAirplaneToggleable = toggleableRadio == null ? false : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);\n        boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,0) == 1;\n        if(!isAirplaneModeOn || isAirplaneToggleable){\n            mBluetoothStateTracker.toggleState(mContext);\n        }\n    }\n});\n```","slug":"在关闭飞行模式之后蓝牙打不开","published":1,"updated":"2017-09-22T02:48:36.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh30017eddxh5t1qn4q","content":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">mBluetoothTileView.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneToggleable = toggleableRadio == <span class=\"keyword\">null</span> ? <span class=\"keyword\">false</span> : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,<span class=\"number\">0</span>) == <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(!isAirplaneModeOn || isAirplaneToggleable)&#123;</div><div class=\"line\">            mBluetoothStateTracker.toggleState(mContext);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/toolbar/QuickSettingsConnectionModel.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">mBluetoothTileView.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        String toggleableRadio = Settings.Global.getString(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_TOGGLEABLE_RADIOS);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneToggleable = toggleableRadio == <span class=\"keyword\">null</span> ? <span class=\"keyword\">false</span> : toggleableRadio.contains(Settings.Global.RADIO_BLUETOOTH);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.AIRPLANE_MODE_ON,<span class=\"number\">0</span>) == <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(!isAirplaneModeOn || isAirplaneToggleable)&#123;</div><div class=\"line\">            mBluetoothStateTracker.toggleState(mContext);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n"},{"title":"在刷机之后Camera有可能会消失","date":"2017-09-25T07:02:46.000Z","_content":"packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有\n``` Java\npublic void onReceive(Context context, Intent intent) {\n    boolean needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();\n    if (!needCameraActivity) {\n        for (int i = 0; i < ACTIVITIES.length; i++) {\n            //private static final String ACTIVITIES[] = {\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"};\n            disableComponent(context, ACTIVITIES[i]);                        //这里接收到广播之后会将相机全都屏蔽掉\n        }\n    }\n    disableComponent(context, \"com.android.camera.DisableCameraReceiver\");    //\n}\n```\n\n``` xml\n<receiver android:name=\"com.android.camera.DisableCameraReceiver\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？\n    </intent-filter>\n</receiver>\n```","source":"_posts/在刷机之后Camera有可能会消失.md","raw":"---\ntitle: 在刷机之后Camera有可能会消失\ndate: 2017-09-25 15:02:46\ntags:\n---\npackages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有\n``` Java\npublic void onReceive(Context context, Intent intent) {\n    boolean needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();\n    if (!needCameraActivity) {\n        for (int i = 0; i < ACTIVITIES.length; i++) {\n            //private static final String ACTIVITIES[] = {\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"};\n            disableComponent(context, ACTIVITIES[i]);                        //这里接收到广播之后会将相机全都屏蔽掉\n        }\n    }\n    disableComponent(context, \"com.android.camera.DisableCameraReceiver\");    //\n}\n```\n\n``` xml\n<receiver android:name=\"com.android.camera.DisableCameraReceiver\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？\n    </intent-filter>\n</receiver>\n```","slug":"在刷机之后Camera有可能会消失","published":1,"updated":"2017-09-25T07:16:35.015Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh40018eddxfw1dhzsm","content":"<p>packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();</div><div class=\"line\">    <span class=\"keyword\">if</span> (!needCameraActivity) &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ACTIVITIES.length; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//private static final String ACTIVITIES[] = &#123;\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"&#125;;</span></div><div class=\"line\">            disableComponent(context, ACTIVITIES[i]);                        <span class=\"comment\">//这里接收到广播之后会将相机全都屏蔽掉</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    disableComponent(context, <span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>);    <span class=\"comment\">//</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span>        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Camera/src/com/android/camera/DisableCameraReceiver.java     文件中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">boolean</span> needCameraActivity = FeatureSwitcher.isOnlyCheckBackCamera() ? hasBackCamera() : hasCamera();</div><div class=\"line\">    <span class=\"keyword\">if</span> (!needCameraActivity) &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; ACTIVITIES.length; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//private static final String ACTIVITIES[] = &#123;\"com.android.camera.CameraLauncher\", \"com.android.camera.VideoCamera\", \"com.android.camera.Camera\"&#125;;</span></div><div class=\"line\">            disableComponent(context, ACTIVITIES[i]);                        <span class=\"comment\">//这里接收到广播之后会将相机全都屏蔽掉</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    disableComponent(context, <span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>);    <span class=\"comment\">//</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.camera.DisableCameraReceiver\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span>        //在开机之后就会注册这个广播接收器，为什么有的时候不会消失？？？</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"如何去掉AccentedEnglish","date":"2017-09-22T06:01:34.000Z","_content":"KK:\n[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。\n切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。\n添加这个语言项具体为如下红色部分:\n``` Java\nLocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)\npublic static ArrayAdapter<LocaleInfo> constructAdapter(Context context, final int layoutId, final int fieldId, final boolean isInDeveloperMode) {\n    final Resources resources = context.getResources();\n    ArrayList<String> localeList = new ArrayList<String>(Arrays.asList(Resources.getSystem().getAssets().getLocales()));\n    if (isInDeveloperMode) {\n        if (!localeList.contains(\"zz_ZZ\")) {\n            localeList.add(\"zz_ZZ\");    //把这段代码去掉就可以了\n        }\n        /** - TODO: Enable when zz_ZY Pseudolocale is complete\n         *  if (!localeList.contains(\"zz_ZY\")) {\n         *      localeList.add(\"zz_ZY\");\n         * }\n         */\n    }\n}\n```\n只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(\"zz_ZZ\") 注释掉。","source":"_posts/如何去掉AccentedEnglish.md","raw":"---\ntitle: 如何去掉AccentedEnglish\ndate: 2017-09-22 14:01:34\ntags:\n---\nKK:\n[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。\n切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。\n添加这个语言项具体为如下红色部分:\n``` Java\nLocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)\npublic static ArrayAdapter<LocaleInfo> constructAdapter(Context context, final int layoutId, final int fieldId, final boolean isInDeveloperMode) {\n    final Resources resources = context.getResources();\n    ArrayList<String> localeList = new ArrayList<String>(Arrays.asList(Resources.getSystem().getAssets().getLocales()));\n    if (isInDeveloperMode) {\n        if (!localeList.contains(\"zz_ZZ\")) {\n            localeList.add(\"zz_ZZ\");    //把这段代码去掉就可以了\n        }\n        /** - TODO: Enable when zz_ZY Pseudolocale is complete\n         *  if (!localeList.contains(\"zz_ZY\")) {\n         *      localeList.add(\"zz_ZY\");\n         * }\n         */\n    }\n}\n```\n只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(\"zz_ZZ\") 注释掉。","slug":"如何去掉AccentedEnglish","published":1,"updated":"2017-09-22T06:05:14.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh40019eddxfhygqfeb","content":"<p>KK:<br>[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。<br>切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。<br>添加这个语言项具体为如下红色部分:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">LocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayAdapter&lt;LocaleInfo&gt; <span class=\"title\">constructAdapter</span><span class=\"params\">(Context context, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fieldId, <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> isInDeveloperMode)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Resources resources = context.getResources();</div><div class=\"line\">    ArrayList&lt;String&gt; localeList = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;(Arrays.asList(Resources.getSystem().getAssets().getLocales()));</div><div class=\"line\">    <span class=\"keyword\">if</span> (isInDeveloperMode) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!localeList.contains(<span class=\"string\">\"zz_ZZ\"</span>)) &#123;</div><div class=\"line\">            localeList.add(<span class=\"string\">\"zz_ZZ\"</span>);    <span class=\"comment\">//把这段代码去掉就可以了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/** - <span class=\"doctag\">TODO:</span> Enable when zz_ZY Pseudolocale is complete</span></div><div class=\"line\"><span class=\"comment\">         *  if (!localeList.contains(\"zz_ZY\")) &#123;</span></div><div class=\"line\"><span class=\"comment\">         *      localeList.add(\"zz_ZY\");</span></div><div class=\"line\"><span class=\"comment\">         * &#125;</span></div><div class=\"line\"><span class=\"comment\">         */</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(“zz_ZZ”) 注释掉。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>KK:<br>[Developer] Accented English是一种虚拟mapping出来的语言，source code的resource中并没有实际的values-zz-rZZ 的resource与之对应。<br>切换到该语言也是仅仅Setting UI的字串发生变化.这是为开发者模式设计的，对于使用者没有多大作用。<br>添加这个语言项具体为如下红色部分:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">LocalePicker.java (frameworks\\base\\core\\java\\com\\android\\internal\\app)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayAdapter&lt;LocaleInfo&gt; <span class=\"title\">constructAdapter</span><span class=\"params\">(Context context, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> layoutId, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> fieldId, <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> isInDeveloperMode)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Resources resources = context.getResources();</div><div class=\"line\">    ArrayList&lt;String&gt; localeList = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;(Arrays.asList(Resources.getSystem().getAssets().getLocales()));</div><div class=\"line\">    <span class=\"keyword\">if</span> (isInDeveloperMode) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!localeList.contains(<span class=\"string\">\"zz_ZZ\"</span>)) &#123;</div><div class=\"line\">            localeList.add(<span class=\"string\">\"zz_ZZ\"</span>);    <span class=\"comment\">//把这段代码去掉就可以了</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/** - <span class=\"doctag\">TODO:</span> Enable when zz_ZY Pseudolocale is complete</span></div><div class=\"line\"><span class=\"comment\">         *  if (!localeList.contains(\"zz_ZY\")) &#123;</span></div><div class=\"line\"><span class=\"comment\">         *      localeList.add(\"zz_ZY\");</span></div><div class=\"line\"><span class=\"comment\">         * &#125;</span></div><div class=\"line\"><span class=\"comment\">         */</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>只有在开发模式下才有,如果要去掉该项，可以把 localeList.add(“zz_ZZ”) 注释掉。</p>\n"},{"title":"如何在下载好图片之后更新Gallery","date":"2017-09-22T05:55:31.000Z","_content":"``` Java\nsendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(savePath))));\n```","source":"_posts/如何在下载好图片之后更新Gallery.md","raw":"---\ntitle: 如何在下载好图片之后更新Gallery\ndate: 2017-09-22 13:55:31\ntags:\n---\n``` Java\nsendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(new File(savePath))));\n```","slug":"如何在下载好图片之后更新Gallery","published":1,"updated":"2017-09-22T05:56:05.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh5001aeddxggb4mzel","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(<span class=\"keyword\">new</span> File(savePath))));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(<span class=\"keyword\">new</span> File(savePath))));</div></pre></td></tr></table></figure>"},{"title":"如何编译ICU资源","date":"2017-09-22T04:02:45.000Z","_content":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\n下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/\n### A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\n#### 1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\n``` bash\n$ mkdir external/icu4c/icuBuild\n$ cd external/icu4c/icuBuild\n```\n#### 2. 执行icuConfigureRun Linux命令，生成make文件\n``` bash\n$.././runConfigureICU Linux\n```\n#### 3. 执行make -j2命令\n``` bash\n$ make -j2\n```\n#### 4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\n``` bash\n$ adb remount\n$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/\n$ adb reboot\n```\n \nKK：icudt51l.dat\nAndroid L：icudt53l.dat\n（M、N）无需建立临时目录\n1.进入到 external/icu/icu4c/source/ 目录下的\n2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件\n3.执行 make INCLUDE_UNI_CORE_DATA=1\n \n### B. COPY所需文件\n（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件\nKK版本是icudt5l.dat和icudt5l-all.dat\n> \n注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。\n\n\n(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:\n``` Java\nM:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata\nN:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata\n```\n### C. 重新编译工程","source":"_posts/如何编译ICU资源.md","raw":"---\ntitle: 如何编译ICU资源\ndate: 2017-09-22 12:02:45\ntags:\n---\n如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\n下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/\n### A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\n#### 1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\n``` bash\n$ mkdir external/icu4c/icuBuild\n$ cd external/icu4c/icuBuild\n```\n#### 2. 执行icuConfigureRun Linux命令，生成make文件\n``` bash\n$.././runConfigureICU Linux\n```\n#### 3. 执行make -j2命令\n``` bash\n$ make -j2\n```\n#### 4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\n``` bash\n$ adb remount\n$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/\n$ adb reboot\n```\n \nKK：icudt51l.dat\nAndroid L：icudt53l.dat\n（M、N）无需建立临时目录\n1.进入到 external/icu/icu4c/source/ 目录下的\n2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件\n3.执行 make INCLUDE_UNI_CORE_DATA=1\n \n### B. COPY所需文件\n（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件\nKK版本是icudt5l.dat和icudt5l-all.dat\n> \n注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。\n\n\n(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:\n``` Java\nM:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata\nN:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata\n```\n### C. 重新编译工程","slug":"如何编译ICU资源","published":1,"updated":"2017-09-22T04:13:42.636Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh5001beddxqfheeff3","content":"<p>如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤<br>下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/</p>\n<h3 id=\"A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\"><a href=\"#A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\" class=\"headerlink\" title=\"A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\"></a>A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源</h3><h4 id=\"1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\"><a href=\"#1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\" class=\"headerlink\" title=\"1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\"></a>1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir external/icu4c/icuBuild</div><div class=\"line\">$ <span class=\"built_in\">cd</span> external/icu4c/icuBuild</div></pre></td></tr></table></figure>\n<h4 id=\"2-执行icuConfigureRun-Linux命令，生成make文件\"><a href=\"#2-执行icuConfigureRun-Linux命令，生成make文件\" class=\"headerlink\" title=\"2. 执行icuConfigureRun Linux命令，生成make文件\"></a>2. 执行icuConfigureRun Linux命令，生成make文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.././runConfigureICU Linux</div></pre></td></tr></table></figure>\n<h4 id=\"3-执行make-j2命令\"><a href=\"#3-执行make-j2命令\" class=\"headerlink\" title=\"3. 执行make -j2命令\"></a>3. 执行make -j2命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make -j2</div></pre></td></tr></table></figure>\n<h4 id=\"4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\"><a href=\"#4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\" class=\"headerlink\" title=\"4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\"></a>4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb remount</div><div class=\"line\">$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/</div><div class=\"line\">$ adb reboot</div></pre></td></tr></table></figure>\n<p>KK：icudt51l.dat<br>Android L：icudt53l.dat<br>（M、N）无需建立临时目录<br>1.进入到 external/icu/icu4c/source/ 目录下的<br>2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件<br>3.执行 make INCLUDE_UNI_CORE_DATA=1</p>\n<h3 id=\"B-COPY所需文件\"><a href=\"#B-COPY所需文件\" class=\"headerlink\" title=\"B. COPY所需文件\"></a>B. COPY所需文件</h3><p>（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件<br>KK版本是icudt5l.dat和icudt5l-all.dat</p>\n<blockquote>\n<p>注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。</p>\n</blockquote>\n<p>(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata</div><div class=\"line\">N:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata</div></pre></td></tr></table></figure></p>\n<h3 id=\"C-重新编译工程\"><a href=\"#C-重新编译工程\" class=\"headerlink\" title=\"C. 重新编译工程\"></a>C. 重新编译工程</h3>","site":{"data":{}},"excerpt":"","more":"<p>如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤<br>下面是KK的icu资源的路径为例子，如果是Android L请改为external/icu/icu4c/source/</p>\n<h3 id=\"A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\"><a href=\"#A-（KK-L）需要建立临时目录，并且在临时目录中编译ICU资源\" class=\"headerlink\" title=\"A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源\"></a>A. （KK,L）需要建立临时目录，并且在临时目录中编译ICU资源</h3><h4 id=\"1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\"><a href=\"#1-在external-icu4c下新建临时目录icubuild，进入icubuild目录\" class=\"headerlink\" title=\"1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录\"></a>1. 在external/icu4c下新建临时目录icubuild，进入icubuild目录</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mkdir external/icu4c/icuBuild</div><div class=\"line\">$ <span class=\"built_in\">cd</span> external/icu4c/icuBuild</div></pre></td></tr></table></figure>\n<h4 id=\"2-执行icuConfigureRun-Linux命令，生成make文件\"><a href=\"#2-执行icuConfigureRun-Linux命令，生成make文件\" class=\"headerlink\" title=\"2. 执行icuConfigureRun Linux命令，生成make文件\"></a>2. 执行icuConfigureRun Linux命令，生成make文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.././runConfigureICU Linux</div></pre></td></tr></table></figure>\n<h4 id=\"3-执行make-j2命令\"><a href=\"#3-执行make-j2命令\" class=\"headerlink\" title=\"3. 执行make -j2命令\"></a>3. 执行make -j2命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make -j2</div></pre></td></tr></table></figure>\n<h4 id=\"4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\"><a href=\"#4-将生成的external-icu4c-icuBuild-data-out-tmp-icudtxxl-dat-push到手机测试\" class=\"headerlink\" title=\"4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试\"></a>4. 将生成的external/icu4c/icuBuild/data/out/tmp/icudtxxl.dat push到手机测试</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ adb remount</div><div class=\"line\">$ adb push external/icu4c/icuBuild/data/out/tmp/ icuxxl.dat system/usr/icu/</div><div class=\"line\">$ adb reboot</div></pre></td></tr></table></figure>\n<p>KK：icudt51l.dat<br>Android L：icudt53l.dat<br>（M、N）无需建立临时目录<br>1.进入到 external/icu/icu4c/source/ 目录下的<br>2.在该目录下执行 ./runConfigureICU Linux命令生成MAKE文件<br>3.执行 make INCLUDE_UNI_CORE_DATA=1</p>\n<h3 id=\"B-COPY所需文件\"><a href=\"#B-COPY所需文件\" class=\"headerlink\" title=\"B. COPY所需文件\"></a>B. COPY所需文件</h3><p>（KK ，L）将第一步生成的external\\icu4c\\icubuild\\data\\out\\tmp\\icudtxxl.dat复制到external\\icu4c\\stubdata下并改名为icudtxxl-all.dat，覆盖原来的同名文件<br>KK版本是icudt5l.dat和icudt5l-all.dat</p>\n<blockquote>\n<p>注意：Android L是没有icudt53l-all.dat文件的，直接把icudt53l.dat拷贝过来替换原来的文件即可。</p>\n</blockquote>\n<p>(M、N)将生成的icudtxxl.dat 文件拷贝到对应目录下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M:cp external/icu/icu4c/source/data/out/tmp/icudt55l.dat   $AOSP/external/icu/icu4c/source/stubdata</div><div class=\"line\">N:cp external/icu/icu4c/source/data/out/tmp/icudt56l.dat   $AOSP/external/icu/icu4c/source/stubdata</div></pre></td></tr></table></figure></p>\n<h3 id=\"C-重新编译工程\"><a href=\"#C-重新编译工程\" class=\"headerlink\" title=\"C. 重新编译工程\"></a>C. 重新编译工程</h3>"},{"title":"如何解析voicemail-conf.xml文件","date":"2017-09-22T03:16:02.000Z","_content":"frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java\n``` Java\nprivate void loadVoiceMail() {\n    FileReader vmReader;\n    final File vmFile = new File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);\n    try {\n        vmReader = new FileReader(vmFile);\n    } catch (FileNotFoundException e) {\n        Log.w(LOG_TAG, \"Can't open \" + Environment.getRootDirectory() + \"/\" + PARTNER_VOICEMAIL_PATH);\n        return;\n    }\n    try {\n        XmlPullParser parser = Xml.newPullParser();\n        parser.setInput(vmReader);\n        XmlUtils.beginDocument(parser, \"voicemail\");\n        while (true) {\n            XmlUtils.nextElement(parser);\n            String name = parser.getName();\n            if (!\"voicemail\".equals(name)) {\n                break;\n            }\n            String[] data = new String[SIZE];\n            String numeric = parser.getAttributeValue(null, \"numeric\");\n            data[NAME] = parser.getAttributeValue(null, \"carrier\");\n            data[NUMBER] = parser.getAttributeValue(null, \"vmnumber\");\n            data[TAG] = parser.getAttributeValue(null, \"vmtag\");\n            CarrierVmMap.put(numeric, data);\n        }\n    } catch (XmlPullParserException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } catch (IOException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } finally {\n        try {\n            if (vmReader != null) {\n                vmReader.close();\n            }\n        } catch (IOException e) {}\n    }\n}\n```","source":"_posts/如何解析voicemail-conf-xml文件.md","raw":"---\ntitle: 如何解析voicemail-conf.xml文件\ndate: 2017-09-22 11:16:02\ntags:\n---\nframeworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java\n``` Java\nprivate void loadVoiceMail() {\n    FileReader vmReader;\n    final File vmFile = new File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);\n    try {\n        vmReader = new FileReader(vmFile);\n    } catch (FileNotFoundException e) {\n        Log.w(LOG_TAG, \"Can't open \" + Environment.getRootDirectory() + \"/\" + PARTNER_VOICEMAIL_PATH);\n        return;\n    }\n    try {\n        XmlPullParser parser = Xml.newPullParser();\n        parser.setInput(vmReader);\n        XmlUtils.beginDocument(parser, \"voicemail\");\n        while (true) {\n            XmlUtils.nextElement(parser);\n            String name = parser.getName();\n            if (!\"voicemail\".equals(name)) {\n                break;\n            }\n            String[] data = new String[SIZE];\n            String numeric = parser.getAttributeValue(null, \"numeric\");\n            data[NAME] = parser.getAttributeValue(null, \"carrier\");\n            data[NUMBER] = parser.getAttributeValue(null, \"vmnumber\");\n            data[TAG] = parser.getAttributeValue(null, \"vmtag\");\n            CarrierVmMap.put(numeric, data);\n        }\n    } catch (XmlPullParserException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } catch (IOException e) {\n        Log.w(LOG_TAG, \"Exception in Voicemail parser \" + e);\n    } finally {\n        try {\n            if (vmReader != null) {\n                vmReader.close();\n            }\n        } catch (IOException e) {}\n    }\n}\n```","slug":"如何解析voicemail-conf-xml文件","published":1,"updated":"2017-09-22T03:16:39.964Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh6001ceddx44h47txh","content":"<p>frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">loadVoiceMail</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    FileReader vmReader;</div><div class=\"line\">    <span class=\"keyword\">final</span> File vmFile = <span class=\"keyword\">new</span> File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        vmReader = <span class=\"keyword\">new</span> FileReader(vmFile);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Can't open \"</span> + Environment.getRootDirectory() + <span class=\"string\">\"/\"</span> + PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        XmlPullParser parser = Xml.newPullParser();</div><div class=\"line\">        parser.setInput(vmReader);</div><div class=\"line\">        XmlUtils.beginDocument(parser, <span class=\"string\">\"voicemail\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            XmlUtils.nextElement(parser);</div><div class=\"line\">            String name = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"voicemail\"</span>.equals(name)) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            String[] data = <span class=\"keyword\">new</span> String[SIZE];</div><div class=\"line\">            String numeric = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"numeric\"</span>);</div><div class=\"line\">            data[NAME] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"carrier\"</span>);</div><div class=\"line\">            data[NUMBER] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmnumber\"</span>);</div><div class=\"line\">            data[TAG] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmtag\"</span>);</div><div class=\"line\">            CarrierVmMap.put(numeric, data);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (XmlPullParserException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (vmReader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                vmReader.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/VoiceMailConstants.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">loadVoiceMail</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    FileReader vmReader;</div><div class=\"line\">    <span class=\"keyword\">final</span> File vmFile = <span class=\"keyword\">new</span> File(Environment.getRootDirectory(),PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        vmReader = <span class=\"keyword\">new</span> FileReader(vmFile);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Can't open \"</span> + Environment.getRootDirectory() + <span class=\"string\">\"/\"</span> + PARTNER_VOICEMAIL_PATH);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        XmlPullParser parser = Xml.newPullParser();</div><div class=\"line\">        parser.setInput(vmReader);</div><div class=\"line\">        XmlUtils.beginDocument(parser, <span class=\"string\">\"voicemail\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            XmlUtils.nextElement(parser);</div><div class=\"line\">            String name = parser.getName();</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"voicemail\"</span>.equals(name)) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            String[] data = <span class=\"keyword\">new</span> String[SIZE];</div><div class=\"line\">            String numeric = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"numeric\"</span>);</div><div class=\"line\">            data[NAME] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"carrier\"</span>);</div><div class=\"line\">            data[NUMBER] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmnumber\"</span>);</div><div class=\"line\">            data[TAG] = parser.getAttributeValue(<span class=\"keyword\">null</span>, <span class=\"string\">\"vmtag\"</span>);</div><div class=\"line\">            CarrierVmMap.put(numeric, data);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (XmlPullParserException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">        Log.w(LOG_TAG, <span class=\"string\">\"Exception in Voicemail parser \"</span> + e);</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (vmReader != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                vmReader.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"如何让EditText不自动获取焦点","date":"2017-09-25T06:56:43.000Z","_content":"在 EditText 的父控件中添加如下代码即可\n``` xml\nandroid:focusable=\"true\"  \nandroid:focusableInTouchMode=\"true\"\n```\n例如：\n``` xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"            //看这里\n    android:focusableInTouchMode=\"true\" //和这里\n    android:orientation=\"horizontal\" >\n    <EditText\n        android:id=\"@+id/et_keyword\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\" />\n\n    <Button\n        android:id=\"@+id/btn_search\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/search\" />\n</LinearLayout>\n```","source":"_posts/如何让EditText不自动获取焦点.md","raw":"---\ntitle: 如何让EditText不自动获取焦点\ndate: 2017-09-25 14:56:43\ntags:\n---\n在 EditText 的父控件中添加如下代码即可\n``` xml\nandroid:focusable=\"true\"  \nandroid:focusableInTouchMode=\"true\"\n```\n例如：\n``` xml\n<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"            //看这里\n    android:focusableInTouchMode=\"true\" //和这里\n    android:orientation=\"horizontal\" >\n    <EditText\n        android:id=\"@+id/et_keyword\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\" />\n\n    <Button\n        android:id=\"@+id/btn_search\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/search\" />\n</LinearLayout>\n```","slug":"如何让EditText不自动获取焦点","published":1,"updated":"2017-09-25T06:58:01.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh6001deddxldm9bncs","content":"<p>在 EditText 的父控件中添加如下代码即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:focusable=\"true\"  </div><div class=\"line\">android:focusableInTouchMode=\"true\"</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"true\"</span>            //看这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusableInTouchMode</span>=<span class=\"string\">\"true\"</span> //和这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/et_keyword\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/btn_search\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"@string/search\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在 EditText 的父控件中添加如下代码即可<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:focusable=\"true\"  </div><div class=\"line\">android:focusableInTouchMode=\"true\"</div></pre></td></tr></table></figure></p>\n<p>例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"true\"</span>            //看这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:focusableInTouchMode</span>=<span class=\"string\">\"true\"</span> //和这里</span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/et_keyword\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/btn_search\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></div><div class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"@string/search\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"如何让Launcher支持横屏显示","date":"2017-09-21T08:21:27.000Z","_content":"[FAQ15487](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ15487)\n\nN/M:\nLauncher默认支持横屏显示，只需要按如下操作即可开启横屏显示：\n桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关\n\nL:\n* 1.修改AndroidManifest.xml\n``` xml\n<activity\n    android:name=\"com.android.launcher3.Launcher\"\n    android:launchMode=\"singleTask\"\n    android:clearTaskOnLaunch=\"true\"\n    android:stateNotNeeded=\"true\"\n    android:theme=\"@style/Theme\"\n    android:configChanges=\"mcc|mnc\"\n    android:windowSoftInputMode=\"adjustPan\"\n    android:screenOrientation=\"sensor\"> <!--modify to sensor -->\n```\n \n* 2.修改Utilities.java的isRotationEnabled方法\n``` Java\npublic static boolean isRotationEnabled(Context c) {\n    return true;//直接返回true\n}\n```\n \n此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:\n \n* 3.修改res/values/config.xml\n``` xml\n<!--hotseat -->\n<bool name=\"hotseat_transpose_layout_with_orientation\">false</bool> <!--改为false-->\n```\n \n* 4.修改Hotseat.java的onFinishInflate方法\n``` Java\n@Override\nprotected void onFinishInflate() {\n    super.onFinishInflate();\n    LauncherAppState app = LauncherAppState.getInstance();\n    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();\n    mAllAppsButtonRank = grid.hotseatAllAppsRank;\n    mContent = (CellLayout) findViewById(R.id.layout);\n    if (grid.isLandscape && !grid.isLargeTablet()) {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1); //modify\n    } else {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1);\n    }\n    mContent.setIsHotseat(true);\n    Log.i(TAG, \"onFinishInflate,(int) grid.numHotseatIcons: \" + (int) grid.numHotseatIcons);\n    resetLayout();\n}\n```","source":"_posts/如何让Launcher支持横屏显示.md","raw":"---\ntitle: 如何让Launcher支持横屏显示\ndate: 2017-09-21 16:21:27\ntags:\n---\n[FAQ15487](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ15487)\n\nN/M:\nLauncher默认支持横屏显示，只需要按如下操作即可开启横屏显示：\n桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关\n\nL:\n* 1.修改AndroidManifest.xml\n``` xml\n<activity\n    android:name=\"com.android.launcher3.Launcher\"\n    android:launchMode=\"singleTask\"\n    android:clearTaskOnLaunch=\"true\"\n    android:stateNotNeeded=\"true\"\n    android:theme=\"@style/Theme\"\n    android:configChanges=\"mcc|mnc\"\n    android:windowSoftInputMode=\"adjustPan\"\n    android:screenOrientation=\"sensor\"> <!--modify to sensor -->\n```\n \n* 2.修改Utilities.java的isRotationEnabled方法\n``` Java\npublic static boolean isRotationEnabled(Context c) {\n    return true;//直接返回true\n}\n```\n \n此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:\n \n* 3.修改res/values/config.xml\n``` xml\n<!--hotseat -->\n<bool name=\"hotseat_transpose_layout_with_orientation\">false</bool> <!--改为false-->\n```\n \n* 4.修改Hotseat.java的onFinishInflate方法\n``` Java\n@Override\nprotected void onFinishInflate() {\n    super.onFinishInflate();\n    LauncherAppState app = LauncherAppState.getInstance();\n    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();\n    mAllAppsButtonRank = grid.hotseatAllAppsRank;\n    mContent = (CellLayout) findViewById(R.id.layout);\n    if (grid.isLandscape && !grid.isLargeTablet()) {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1); //modify\n    } else {\n        mContent.setGridSize((int) grid.numHotseatIcons, 1);\n    }\n    mContent.setIsHotseat(true);\n    Log.i(TAG, \"onFinishInflate,(int) grid.numHotseatIcons: \" + (int) grid.numHotseatIcons);\n    resetLayout();\n}\n```","slug":"如何让Launcher支持横屏显示","published":1,"updated":"2017-09-21T08:33:45.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh7001eeddx2ic114l8","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ15487\" target=\"_blank\" rel=\"external\">FAQ15487</a></p>\n<p>N/M:<br>Launcher默认支持横屏显示，只需要按如下操作即可开启横屏显示：<br>桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关</p>\n<p>L:</p>\n<ul>\n<li>1.修改AndroidManifest.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.launcher3.Launcher\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"singleTask\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clearTaskOnLaunch</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:stateNotNeeded</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/Theme\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:configChanges</span>=<span class=\"string\">\"mcc|mnc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:windowSoftInputMode</span>=<span class=\"string\">\"adjustPan\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:screenOrientation</span>=<span class=\"string\">\"sensor\"</span>&gt;</span> <span class=\"comment\">&lt;!--modify to sensor --&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>2.修改Utilities.java的isRotationEnabled方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRotationEnabled</span><span class=\"params\">(Context c)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;<span class=\"comment\">//直接返回true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:</p>\n<ul>\n<li>3.修改res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--hotseat --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hotseat_transpose_layout_with_orientation\"</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span> <span class=\"comment\">&lt;!--改为false--&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>4.修改Hotseat.java的onFinishInflate方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinishInflate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onFinishInflate();</div><div class=\"line\">    LauncherAppState app = LauncherAppState.getInstance();</div><div class=\"line\">    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();</div><div class=\"line\">    mAllAppsButtonRank = grid.hotseatAllAppsRank;</div><div class=\"line\">    mContent = (CellLayout) findViewById(R.id.layout);</div><div class=\"line\">    <span class=\"keyword\">if</span> (grid.isLandscape &amp;&amp; !grid.isLargeTablet()) &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>); <span class=\"comment\">//modify</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mContent.setIsHotseat(<span class=\"keyword\">true</span>);</div><div class=\"line\">    Log.i(TAG, <span class=\"string\">\"onFinishInflate,(int) grid.numHotseatIcons: \"</span> + (<span class=\"keyword\">int</span>) grid.numHotseatIcons);</div><div class=\"line\">    resetLayout();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ15487\" target=\"_blank\" rel=\"external\">FAQ15487</a></p>\n<p>N/M:<br>Launcher默认支持横屏显示，只需要按如下操作即可开启横屏显示：<br>桌面空白处长按→进入OverviewMode→点击设置→打开允许旋转的开关</p>\n<p>L:</p>\n<ul>\n<li>1.修改AndroidManifest.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.android.launcher3.Launcher\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:launchMode</span>=<span class=\"string\">\"singleTask\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:clearTaskOnLaunch</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:stateNotNeeded</span>=<span class=\"string\">\"true\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/Theme\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:configChanges</span>=<span class=\"string\">\"mcc|mnc\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:windowSoftInputMode</span>=<span class=\"string\">\"adjustPan\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:screenOrientation</span>=<span class=\"string\">\"sensor\"</span>&gt;</span> <span class=\"comment\">&lt;!--modify to sensor --&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>2.修改Utilities.java的isRotationEnabled方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isRotationEnabled</span><span class=\"params\">(Context c)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;<span class=\"comment\">//直接返回true</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此时旋转手机，Launcher会横竖屏切换。但hotseat会显示在屏幕的右方。如果要让hotseat显示在屏幕底部，可以按照如下步骤操作:</p>\n<ul>\n<li>3.修改res/values/config.xml<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!--hotseat --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bool</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hotseat_transpose_layout_with_orientation\"</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">bool</span>&gt;</span> <span class=\"comment\">&lt;!--改为false--&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>4.修改Hotseat.java的onFinishInflate方法<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinishInflate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onFinishInflate();</div><div class=\"line\">    LauncherAppState app = LauncherAppState.getInstance();</div><div class=\"line\">    DeviceProfile grid = app.getDynamicGrid().getDeviceProfile();</div><div class=\"line\">    mAllAppsButtonRank = grid.hotseatAllAppsRank;</div><div class=\"line\">    mContent = (CellLayout) findViewById(R.id.layout);</div><div class=\"line\">    <span class=\"keyword\">if</span> (grid.isLandscape &amp;&amp; !grid.isLargeTablet()) &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>); <span class=\"comment\">//modify</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        mContent.setGridSize((<span class=\"keyword\">int</span>) grid.numHotseatIcons, <span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mContent.setIsHotseat(<span class=\"keyword\">true</span>);</div><div class=\"line\">    Log.i(TAG, <span class=\"string\">\"onFinishInflate,(int) grid.numHotseatIcons: \"</span> + (<span class=\"keyword\">int</span>) grid.numHotseatIcons);</div><div class=\"line\">    resetLayout();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"如何通过代码动态设置语言","date":"2017-09-22T05:46:40.000Z","_content":"``` Java\nResources resources = getResources();//获得res资源对象\nConfiguration config = resources.getConfiguration();//获得设置对象\nDisplayMetrics dm = resources.getDisplayMetrics();//获得屏幕参数：主要是分辨率，像素等。\nconfig.locale = Locale.SIMPLIFIED_CHINESE; //简体中文\nresources.updateConfiguration(config, dm);\n```\n> \nen 英文 \nen_US 英文 (美国) \nar 阿拉伯文 \nar_AE 阿拉伯文 (阿拉伯联合酋长国) \nar_BH 阿拉伯文 (巴林) \nar_DZ 阿拉伯文 (阿尔及利亚) \nar_EG 阿拉伯文 (埃及) \nar_IQ 阿拉伯文 (伊拉克) \nar_JO 阿拉伯文 (约旦) \nar_KW 阿拉伯文 (科威特) \nar_LB 阿拉伯文 (黎巴嫩) \nar_LY 阿拉伯文 (利比亚) \nar_MA 阿拉伯文 (摩洛哥) \nar_OM 阿拉伯文 (阿曼) \nar_QA 阿拉伯文 (卡塔尔) \nar_SA 阿拉伯文 (沙特阿拉伯) \nar_SD 阿拉伯文 (苏丹) \nar_SY 阿拉伯文 (叙利亚) \nar_TN 阿拉伯文 (突尼斯) \nar_YE 阿拉伯文 (也门) \nbe 白俄罗斯文 \nbe_BY 白俄罗斯文 (白俄罗斯) \nbg 保加利亚文 ","source":"_posts/如何通过代码动态设置语言.md","raw":"---\ntitle: 如何通过代码动态设置语言\ndate: 2017-09-22 13:46:40\ntags:\n---\n``` Java\nResources resources = getResources();//获得res资源对象\nConfiguration config = resources.getConfiguration();//获得设置对象\nDisplayMetrics dm = resources.getDisplayMetrics();//获得屏幕参数：主要是分辨率，像素等。\nconfig.locale = Locale.SIMPLIFIED_CHINESE; //简体中文\nresources.updateConfiguration(config, dm);\n```\n> \nen 英文 \nen_US 英文 (美国) \nar 阿拉伯文 \nar_AE 阿拉伯文 (阿拉伯联合酋长国) \nar_BH 阿拉伯文 (巴林) \nar_DZ 阿拉伯文 (阿尔及利亚) \nar_EG 阿拉伯文 (埃及) \nar_IQ 阿拉伯文 (伊拉克) \nar_JO 阿拉伯文 (约旦) \nar_KW 阿拉伯文 (科威特) \nar_LB 阿拉伯文 (黎巴嫩) \nar_LY 阿拉伯文 (利比亚) \nar_MA 阿拉伯文 (摩洛哥) \nar_OM 阿拉伯文 (阿曼) \nar_QA 阿拉伯文 (卡塔尔) \nar_SA 阿拉伯文 (沙特阿拉伯) \nar_SD 阿拉伯文 (苏丹) \nar_SY 阿拉伯文 (叙利亚) \nar_TN 阿拉伯文 (突尼斯) \nar_YE 阿拉伯文 (也门) \nbe 白俄罗斯文 \nbe_BY 白俄罗斯文 (白俄罗斯) \nbg 保加利亚文 ","slug":"如何通过代码动态设置语言","published":1,"updated":"2017-09-22T05:47:26.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh8001geddxr3qz3onx","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Resources resources = getResources();<span class=\"comment\">//获得res资源对象</span></div><div class=\"line\">Configuration config = resources.getConfiguration();<span class=\"comment\">//获得设置对象</span></div><div class=\"line\">DisplayMetrics dm = resources.getDisplayMetrics();<span class=\"comment\">//获得屏幕参数：主要是分辨率，像素等。</span></div><div class=\"line\">config.locale = Locale.SIMPLIFIED_CHINESE; <span class=\"comment\">//简体中文</span></div><div class=\"line\">resources.updateConfiguration(config, dm);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>en 英文<br>en_US 英文 (美国)<br>ar 阿拉伯文<br>ar_AE 阿拉伯文 (阿拉伯联合酋长国)<br>ar_BH 阿拉伯文 (巴林)<br>ar_DZ 阿拉伯文 (阿尔及利亚)<br>ar_EG 阿拉伯文 (埃及)<br>ar_IQ 阿拉伯文 (伊拉克)<br>ar_JO 阿拉伯文 (约旦)<br>ar_KW 阿拉伯文 (科威特)<br>ar_LB 阿拉伯文 (黎巴嫩)<br>ar_LY 阿拉伯文 (利比亚)<br>ar_MA 阿拉伯文 (摩洛哥)<br>ar_OM 阿拉伯文 (阿曼)<br>ar_QA 阿拉伯文 (卡塔尔)<br>ar_SA 阿拉伯文 (沙特阿拉伯)<br>ar_SD 阿拉伯文 (苏丹)<br>ar_SY 阿拉伯文 (叙利亚)<br>ar_TN 阿拉伯文 (突尼斯)<br>ar_YE 阿拉伯文 (也门)<br>be 白俄罗斯文<br>be_BY 白俄罗斯文 (白俄罗斯)<br>bg 保加利亚文 </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Resources resources = getResources();<span class=\"comment\">//获得res资源对象</span></div><div class=\"line\">Configuration config = resources.getConfiguration();<span class=\"comment\">//获得设置对象</span></div><div class=\"line\">DisplayMetrics dm = resources.getDisplayMetrics();<span class=\"comment\">//获得屏幕参数：主要是分辨率，像素等。</span></div><div class=\"line\">config.locale = Locale.SIMPLIFIED_CHINESE; <span class=\"comment\">//简体中文</span></div><div class=\"line\">resources.updateConfiguration(config, dm);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>en 英文<br>en_US 英文 (美国)<br>ar 阿拉伯文<br>ar_AE 阿拉伯文 (阿拉伯联合酋长国)<br>ar_BH 阿拉伯文 (巴林)<br>ar_DZ 阿拉伯文 (阿尔及利亚)<br>ar_EG 阿拉伯文 (埃及)<br>ar_IQ 阿拉伯文 (伊拉克)<br>ar_JO 阿拉伯文 (约旦)<br>ar_KW 阿拉伯文 (科威特)<br>ar_LB 阿拉伯文 (黎巴嫩)<br>ar_LY 阿拉伯文 (利比亚)<br>ar_MA 阿拉伯文 (摩洛哥)<br>ar_OM 阿拉伯文 (阿曼)<br>ar_QA 阿拉伯文 (卡塔尔)<br>ar_SA 阿拉伯文 (沙特阿拉伯)<br>ar_SD 阿拉伯文 (苏丹)<br>ar_SY 阿拉伯文 (叙利亚)<br>ar_TN 阿拉伯文 (突尼斯)<br>ar_YE 阿拉伯文 (也门)<br>be 白俄罗斯文<br>be_BY 白俄罗斯文 (白俄罗斯)<br>bg 保加利亚文 </p>\n</blockquote>\n"},{"title":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤","date":"2017-09-22T04:02:28.000Z","_content":"","source":"_posts/如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤.md","raw":"---\ntitle: 如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤\ndate: 2017-09-22 12:02:28\ntags:\n---\n","slug":"如果只是测试修改后效果，执行步骤A即可；如果需要build后生效，则需要执行全部步骤","published":1,"updated":"2017-09-22T04:02:28.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh9001heddx5ota8r08","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"客制化USB CDROM的显示名称","date":"2017-09-25T06:50:59.000Z","_content":"该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。\niAmCdRom.iso路径：alps/system/mobile_toolkit\n\nAttention:\n1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。\n2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。","source":"_posts/客制化USB-CDROM.md","raw":"---\ntitle: 客制化USB CDROM的显示名称\ndate: 2017-09-25 14:50:59\ntags:\n---\n该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。\niAmCdRom.iso路径：alps/system/mobile_toolkit\n\nAttention:\n1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。\n2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。","slug":"客制化USB-CDROM","published":1,"updated":"2017-09-25T06:52:15.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygh9001ieddxp0g3gegb","content":"<p>该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。<br>iAmCdRom.iso路径：alps/system/mobile_toolkit</p>\n<p>Attention:<br>1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。<br>2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>该盘符的显示与code无关。是制作iso镜像文件的卷标。制作iso镜像的工具可在网上自行下载，把卷标客制化后，镜像文件的文件名修改为iAmCdRom.iso替换原来的镜像文件，rebuild project即可。<br>iAmCdRom.iso路径：alps/system/mobile_toolkit</p>\n<p>Attention:<br>1.iso镜像文件不能太小，否则会导致无法识别。这是缘于扇区大小的限制。建议几百K以上。<br>2.制作iso文件时指定盘符名。以PowerISO为例（非MTK软件，请自行获取）。</p>\n"},{"title":"工厂方法模式","date":"2017-09-22T05:16:45.000Z","_content":"``` Java\npublic abstract class Product{\n    public void template_method(){\n        System.out.println(hook_method());\n    }\n    protected abstract String hook_method();\n}\n\npublic abstract class Client{\n    protected Product obj = null;                //这里组合了一个Product对象\n    public void anOperation(){\n        factoryMethod();\n        obj.template_method();                    //调用Product的方法\n    }\n    protected abstract void factoryMethod();\n}\n\npublic class IntegerNumber extends Product{\n    private int value;\n    IntegerNumber(int v){\n        value = v;\n    }\n    protected String hook_method(){\n        return String.valueOf(value);\n    }\n}\n\npublic class ConcreteClient extends Client{\n    protected void factoryMethod(){\n        obj = new IntegerNumber(1250);            //在这里初始化Product对象\n    }\n}\n\npublic class Main{\n    public static void main(String[] args){\n        Client sc = new ConcreteClient();\n        sc.anOperation();\n    }\n}\n```","source":"_posts/工厂方法模式.md","raw":"---\ntitle: 工厂方法模式\ndate: 2017-09-22 13:16:45\ntags:\n---\n``` Java\npublic abstract class Product{\n    public void template_method(){\n        System.out.println(hook_method());\n    }\n    protected abstract String hook_method();\n}\n\npublic abstract class Client{\n    protected Product obj = null;                //这里组合了一个Product对象\n    public void anOperation(){\n        factoryMethod();\n        obj.template_method();                    //调用Product的方法\n    }\n    protected abstract void factoryMethod();\n}\n\npublic class IntegerNumber extends Product{\n    private int value;\n    IntegerNumber(int v){\n        value = v;\n    }\n    protected String hook_method(){\n        return String.valueOf(value);\n    }\n}\n\npublic class ConcreteClient extends Client{\n    protected void factoryMethod(){\n        obj = new IntegerNumber(1250);            //在这里初始化Product对象\n    }\n}\n\npublic class Main{\n    public static void main(String[] args){\n        Client sc = new ConcreteClient();\n        sc.anOperation();\n    }\n}\n```","slug":"工厂方法模式","published":1,"updated":"2017-09-22T05:17:07.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygha001jeddxw3d0lnjq","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(hook_method());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> Product obj = <span class=\"keyword\">null</span>;                <span class=\"comment\">//这里组合了一个Product对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anOperation</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        factoryMethod();</div><div class=\"line\">        obj.template_method();                    <span class=\"comment\">//调用Product的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</div><div class=\"line\">    IntegerNumber(<span class=\"keyword\">int</span> v)&#123;</div><div class=\"line\">        value = v;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(value);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        obj = <span class=\"keyword\">new</span> IntegerNumber(<span class=\"number\">1250</span>);            <span class=\"comment\">//在这里初始化Product对象</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Client sc = <span class=\"keyword\">new</span> ConcreteClient();</div><div class=\"line\">        sc.anOperation();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">template_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        System.out.println(hook_method());</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">protected</span> Product obj = <span class=\"keyword\">null</span>;                <span class=\"comment\">//这里组合了一个Product对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">anOperation</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        factoryMethod();</div><div class=\"line\">        obj.template_method();                    <span class=\"comment\">//调用Product的方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntegerNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value;</div><div class=\"line\">    IntegerNumber(<span class=\"keyword\">int</span> v)&#123;</div><div class=\"line\">        value = v;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">hook_method</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> String.valueOf(value);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Client</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">factoryMethod</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        obj = <span class=\"keyword\">new</span> IntegerNumber(<span class=\"number\">1250</span>);            <span class=\"comment\">//在这里初始化Product对象</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Client sc = <span class=\"keyword\">new</span> ConcreteClient();</div><div class=\"line\">        sc.anOperation();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"工厂测试中SD卡测试失败","date":"2017-09-21T04:56:08.000Z","_content":"SD项测试失败log如下\n```\n01-01 00:11:49.832: I/SDCardTest(3240): Write fail\n01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)\n01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more\n01-01 00:11:49.833: I/SDCardTest(3240): file read fial\n01-01 00:11:49.897: I/SDCardTest(3240): Write pass\n01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa\n```\n需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.WRITE_MEDIA_STORAGE\" />\n```\n不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加\n```\nLOCAL_PRIVILEGED_MODULE := true\n```","source":"_posts/工厂测试中SD卡测试失败.md","raw":"---\ntitle: 工厂测试中SD卡测试失败\ndate: 2017-09-21 12:56:08\ntags:\n---\nSD项测试失败log如下\n```\n01-01 00:11:49.832: I/SDCardTest(3240): Write fail\n01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\n01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)\n01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more\n01-01 00:11:49.833: I/SDCardTest(3240): file read fial\n01-01 00:11:49.897: I/SDCardTest(3240): Write pass\n01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa\n```\n需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.WRITE_MEDIA_STORAGE\" />\n```\n不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加\n```\nLOCAL_PRIVILEGED_MODULE := true\n```","slug":"工厂测试中SD卡测试失败","published":1,"updated":"2017-09-21T05:58:19.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygha001keddxmly1f0w9","content":"<p>SD项测试失败log如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Write fail</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more</div><div class=\"line\">01-01 00:11:49.833: I/SDCardTest(3240): file read fial</div><div class=\"line\">01-01 00:11:49.897: I/SDCardTest(3240): Write pass</div><div class=\"line\">01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa</div></pre></td></tr></table></figure></p>\n<p>需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.WRITE_MEDIA_STORAGE\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LOCAL_PRIVILEGED_MODULE := true</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>SD项测试失败log如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Write fail</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): java.io.IOException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:950)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.testWrite(SDCardTest.java:269)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.sdCardSwap(SDCardTest.java:96)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.example.factorydevelopx.SDCardTest.onCreate(SDCardTest.java:71)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Activity.performCreate(Activity.java:5264)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1088)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2302)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2390)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.access$800(ActivityThread.java:151)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1321)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat dalvik.system.NativeStart.main(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): Caused by: libcore.io.ErrnoException: open failed: EACCES (Permission denied)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.Posix.open(Native Method)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \tat java.io.File.createNewFile(File.java:943)</div><div class=\"line\">01-01 00:11:49.832: I/SDCardTest(3240): \t... 17 more</div><div class=\"line\">01-01 00:11:49.833: I/SDCardTest(3240): file read fial</div><div class=\"line\">01-01 00:11:49.897: I/SDCardTest(3240): Write pass</div><div class=\"line\">01-01 00:11:49.975: I/SDCardTest(3240): file.delete psaa</div></pre></td></tr></table></figure></p>\n<p>需要在 alps/packages/apps/FactoryDevelopX/AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.WRITE_MEDIA_STORAGE\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>不需要在 alps/packages/apps/FactoryDevelopX/Android.mk 文件中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LOCAL_PRIVILEGED_MODULE := true</div></pre></td></tr></table></figure></p>\n"},{"title":"应用开机自启动","date":"2017-09-22T01:01:43.000Z","_content":"### 方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\n\n> \n原理:监听接收 android.intent.action.BOOT_COMPLETED 广播\n\n添加开机广播接收器\n``` Java\npublic class BootReceiver extends BroadcastReceiver{\n    public void onReceive(Context context,Intent intent){\n        Intent mIntent = new Intent(context,MainActivity.class);\n        startActivity(mIntent);\n    }\n}\n```\n\n在 AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n```\n\n在 AndroidManifest.xml 文件中注册开机广播接收器\n``` xml\n<receiver android:name=\"BootReceiver\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</receiver>\n```\n\n### 方法二.在开机向导之后开机自启动\n\n> \n原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:\n//OOBE\nmediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java\n``` Java\nprivate void finishOOBE() {\n    ...\n    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 1);\n    ...\n}\n```\n\n//SetupWizard\ncom/google/android/setupwizard/BaseActivity.java\n``` Java\nprotected void onSetupComplete(boolean paramBoolean){\n    ...\n    Settings.Secure.putInt(getContentResolver(), \"user_setup_complete\", 1);\n    ...\n}\n```\n\n//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听\n在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有\n``` Java\nprivate void resetUserSetupObserver() {\n    ...\n    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), true, mUserSetupObserver, mCurrentUserId);\n    ...\n}\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        final boolean userSetup = 0 != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 0 , mCurrentUserId);\n        if (mSettingsButton != null && mHasFlipSettings) {\n            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);\n        }\n        if (mSettingsPanel != null) {\n            mSettingsPanel.setEnabled(userSetup);\n        }\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            if (!mUserSetup && mStatusBarView != null){\n                animateCollapseQuickSettings();\n            }\n        }\n    }\n};\n```\n\n初步修改后的代码如下\n``` Java\nboolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;            //设置标志位，只有在恢复出厂设置的时候启动一次\nif(userSetup && isFirstBoot){\n    try{\n        Intent intent = new Intent();\n        intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n        mContext.startActivity(intent);\n        Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);                            //将标志为设置为1，表示启动成功\n    } catch(Exception e) {\n        e.printStackTrace();        //这里加try,catch防止内置的APK face2face 丢失\n    }\n}\n```\n\n但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？\n从Log中可以看出:\n\n正常启动的Log:\n```\n01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1\n01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2\n01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard\n01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254\n01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid\n01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])\n01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0\n01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2\n01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0\n01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request\n01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About\n01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781\n01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489\n01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About\n```\n\n异常不启动的Log:\n```\n01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1\n01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1\n01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity\n01-01 00:01:12.944667   720  1147 I am_create_task: [0,4\n01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608\n01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0\n01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2\n01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652\n01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard\n01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302\n01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved\n01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0\n01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher\n01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208\n01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3\n01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher\n01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208\n01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了\n01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm\n```\n\n根据这种情况，再次做了修改\n``` Java\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        ...\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            boolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;\n            if(userSetup && isFirstBoot){\n                try{\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n                    mContext.startActivity(intent);\n                    Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);\n                    new Thread(new Runnable(){                    //在这个地方启动一个线程，再次启动这个应用\n                        public void run(){\n                            try{\n                                while(!isStartSuccess){\n                                    Thread.sleep(2000);\n                                    handler.sendEmptyMessage(1);\n                                }\n                            }catch(Exception e){\n                                e.printStackTrace();\n                            }\n                        }\n                    }).start();\n                }catch(Exception e){\n                    e.printStackTrace();\n                }\n            }\n            ...\n        }\n    }\n};\nprivate boolean isStartSuccess = false;\nHandler handler = new Handler(){\n    public void handleMessage(Message msg){\n        switch(msg.what){\n            case 1:\n                String topActivityName = getTopActivityName(mContext);\n                if(topActivityName != null && topActivityName.contains(\"za.co.axon.mdas.roid\")){\n                    isStartSuccess = true;\n                } else {\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    mContext.startActivity(intent);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n};\n\n/**获取栈顶Activity的名称*/\nprivate String getTopActivityName(Context context) {\n    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n    List<android.app.ActivityManager.RunningTaskInfo> runningTaskInfos = activityManager.getRunningTasks(1);\n    if (runningTaskInfos != null) {\n        return (runningTaskInfos.get(0).topActivity).toString();\n    } else {\n        return null;\n    }\n}\n```","source":"_posts/应用开机自启动.md","raw":"---\ntitle: 应用开机自启动\ndate: 2017-09-22 09:01:43\ntags:\n---\n### 方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\n\n> \n原理:监听接收 android.intent.action.BOOT_COMPLETED 广播\n\n添加开机广播接收器\n``` Java\npublic class BootReceiver extends BroadcastReceiver{\n    public void onReceive(Context context,Intent intent){\n        Intent mIntent = new Intent(context,MainActivity.class);\n        startActivity(mIntent);\n    }\n}\n```\n\n在 AndroidManifest.xml 文件中添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n```\n\n在 AndroidManifest.xml 文件中注册开机广播接收器\n``` xml\n<receiver android:name=\"BootReceiver\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</receiver>\n```\n\n### 方法二.在开机向导之后开机自启动\n\n> \n原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:\n//OOBE\nmediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java\n``` Java\nprivate void finishOOBE() {\n    ...\n    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 1);\n    ...\n}\n```\n\n//SetupWizard\ncom/google/android/setupwizard/BaseActivity.java\n``` Java\nprotected void onSetupComplete(boolean paramBoolean){\n    ...\n    Settings.Secure.putInt(getContentResolver(), \"user_setup_complete\", 1);\n    ...\n}\n```\n\n//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听\n在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有\n``` Java\nprivate void resetUserSetupObserver() {\n    ...\n    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), true, mUserSetupObserver, mCurrentUserId);\n    ...\n}\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        final boolean userSetup = 0 != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, 0 , mCurrentUserId);\n        if (mSettingsButton != null && mHasFlipSettings) {\n            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);\n        }\n        if (mSettingsPanel != null) {\n            mSettingsPanel.setEnabled(userSetup);\n        }\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            if (!mUserSetup && mStatusBarView != null){\n                animateCollapseQuickSettings();\n            }\n        }\n    }\n};\n```\n\n初步修改后的代码如下\n``` Java\nboolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;            //设置标志位，只有在恢复出厂设置的时候启动一次\nif(userSetup && isFirstBoot){\n    try{\n        Intent intent = new Intent();\n        intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n        mContext.startActivity(intent);\n        Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);                            //将标志为设置为1，表示启动成功\n    } catch(Exception e) {\n        e.printStackTrace();        //这里加try,catch防止内置的APK face2face 丢失\n    }\n}\n```\n\n但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？\n从Log中可以看出:\n\n正常启动的Log:\n```\n01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1\n01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2\n01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard\n01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254\n01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid\n01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])\n01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0\n01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2\n01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0\n01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash\n01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request\n01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash\n01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About\n01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781\n01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489\n01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About\n```\n\n异常不启动的Log:\n```\n01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760\n01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1\n01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1\n01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity\n01-01 00:01:12.944667   720  1147 I am_create_task: [0,4\n01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608\n01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0\n01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2\n01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652\n01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard\n01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302\n01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved\n01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved\n01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0\n01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher\n01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208\n01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3\n01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64\n01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher\n01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208\n01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了\n01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm\n```\n\n根据这种情况，再次做了修改\n``` Java\nprivate ContentObserver mUserSetupObserver = new ContentObserver(new Handler()) {\n    @Override\n    public void onChange(boolean selfChange) {\n        ...\n        if (userSetup != mUserSetup) {\n            mUserSetup = userSetup;\n            boolean isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), \"isFirstBoot\", 0) == 0;\n            if(userSetup && isFirstBoot){\n                try{\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);\n                    mContext.startActivity(intent);\n                    Settings.Secure.putInt(mContext.getContentResolver(), \"isFirstBoot\", 1);\n                    new Thread(new Runnable(){                    //在这个地方启动一个线程，再次启动这个应用\n                        public void run(){\n                            try{\n                                while(!isStartSuccess){\n                                    Thread.sleep(2000);\n                                    handler.sendEmptyMessage(1);\n                                }\n                            }catch(Exception e){\n                                e.printStackTrace();\n                            }\n                        }\n                    }).start();\n                }catch(Exception e){\n                    e.printStackTrace();\n                }\n            }\n            ...\n        }\n    }\n};\nprivate boolean isStartSuccess = false;\nHandler handler = new Handler(){\n    public void handleMessage(Message msg){\n        switch(msg.what){\n            case 1:\n                String topActivityName = getTopActivityName(mContext);\n                if(topActivityName != null && topActivityName.contains(\"za.co.axon.mdas.roid\")){\n                    isStartSuccess = true;\n                } else {\n                    Intent intent = new Intent();\n                    intent.setComponent(new android.content.ComponentName(\"za.co.axon.mdas.roid\",\"za.co.axon.mdas.roid.Splash\"));\n                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    mContext.startActivity(intent);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n};\n\n/**获取栈顶Activity的名称*/\nprivate String getTopActivityName(Context context) {\n    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n    List<android.app.ActivityManager.RunningTaskInfo> runningTaskInfos = activityManager.getRunningTasks(1);\n    if (runningTaskInfos != null) {\n        return (runningTaskInfos.get(0).topActivity).toString();\n    } else {\n        return null;\n    }\n}\n```","slug":"应用开机自启动","published":1,"updated":"2017-09-22T01:11:31.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghb001leddxbjn0z4nv","content":"<h3 id=\"方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"><a href=\"#方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\" class=\"headerlink\" title=\"方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"></a>方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久</h3><blockquote>\n<p>原理:监听接收 android.intent.action.BOOT_COMPLETED 广播</p>\n</blockquote>\n<p>添加开机广播接收器<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context,Intent intent)</span></span>&#123;</div><div class=\"line\">        Intent mIntent = <span class=\"keyword\">new</span> Intent(context,MainActivity.class);</div><div class=\"line\">        startActivity(mIntent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中注册开机广播接收器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BootReceiver\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-在开机向导之后开机自启动\"><a href=\"#方法二-在开机向导之后开机自启动\" class=\"headerlink\" title=\"方法二.在开机向导之后开机自启动\"></a>方法二.在开机向导之后开机自启动</h3><blockquote>\n<p>原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:<br>//OOBE<br>mediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">finishOOBE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>//SetupWizard<br>com/google/android/setupwizard/BaseActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupComplete</span><span class=\"params\">(<span class=\"keyword\">boolean</span> paramBoolean)</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), <span class=\"string\">\"user_setup_complete\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听<br>在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">resetUserSetupObserver</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), <span class=\"keyword\">true</span>, mUserSetupObserver, mCurrentUserId);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> userSetup = <span class=\"number\">0</span> != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">0</span> , mCurrentUserId);</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsButton != <span class=\"keyword\">null</span> &amp;&amp; mHasFlipSettings) &#123;</div><div class=\"line\">            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsPanel != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mSettingsPanel.setEnabled(userSetup);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!mUserSetup &amp;&amp; mStatusBarView != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                animateCollapseQuickSettings();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>初步修改后的代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;            <span class=\"comment\">//设置标志位，只有在恢复出厂设置的时候启动一次</span></div><div class=\"line\"><span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">        intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">        mContext.startActivity(intent);</div><div class=\"line\">        Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);                            <span class=\"comment\">//将标志为设置为1，表示启动成功</span></div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();        <span class=\"comment\">//这里加try,catch防止内置的APK face2face 丢失</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？<br>从Log中可以看出:</p>\n<p>正常启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1</div><div class=\"line\">01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254</div><div class=\"line\">01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid</div><div class=\"line\">01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])</div><div class=\"line\">01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0</div><div class=\"line\">01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0</div><div class=\"line\">01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request</div><div class=\"line\">01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About</div><div class=\"line\">01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781</div><div class=\"line\">01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489</div><div class=\"line\">01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About</div></pre></td></tr></table></figure></p>\n<p>异常不启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1</div><div class=\"line\">01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1</div><div class=\"line\">01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity</div><div class=\"line\">01-01 00:01:12.944667   720  1147 I am_create_task: [0,4</div><div class=\"line\">01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608</div><div class=\"line\">01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0</div><div class=\"line\">01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652</div><div class=\"line\">01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302</div><div class=\"line\">01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0</div><div class=\"line\">01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208</div><div class=\"line\">01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3</div><div class=\"line\">01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208</div><div class=\"line\">01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了</div><div class=\"line\">01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm</div></pre></td></tr></table></figure></p>\n<p>根据这种情况，再次做了修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">                <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                    Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable()&#123;                    <span class=\"comment\">//在这个地方启动一个线程，再次启动这个应用</span></div><div class=\"line\">                        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                                <span class=\"keyword\">while</span>(!isStartSuccess)&#123;</div><div class=\"line\">                                    Thread.sleep(<span class=\"number\">2000</span>);</div><div class=\"line\">                                    handler.sendEmptyMessage(<span class=\"number\">1</span>);</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;).start();</div><div class=\"line\">                &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isStartSuccess = <span class=\"keyword\">false</span>;</div><div class=\"line\">Handler handler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>(msg.what)&#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                String topActivityName = getTopActivityName(mContext);</div><div class=\"line\">                <span class=\"keyword\">if</span>(topActivityName != <span class=\"keyword\">null</span> &amp;&amp; topActivityName.contains(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>))&#123;</div><div class=\"line\">                    isStartSuccess = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**获取栈顶Activity的名称*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getTopActivityName</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">    List&lt;android.app.ActivityManager.RunningTaskInfo&gt; runningTaskInfos = activityManager.getRunningTasks(<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> (runningTaskInfos != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (runningTaskInfos.get(<span class=\"number\">0</span>).topActivity).toString();</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"><a href=\"#方法一-开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\" class=\"headerlink\" title=\"方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久\"></a>方法一.开机自启动，注册广播的方式，这种方式比较慢，一般需要很久</h3><blockquote>\n<p>原理:监听接收 android.intent.action.BOOT_COMPLETED 广播</p>\n</blockquote>\n<p>添加开机广播接收器<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context,Intent intent)</span></span>&#123;</div><div class=\"line\">        Intent mIntent = <span class=\"keyword\">new</span> Intent(context,MainActivity.class);</div><div class=\"line\">        startActivity(mIntent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中添加权限<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>在 AndroidManifest.xml 文件中注册开机广播接收器<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"BootReceiver\"</span> &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.LAUNCHER\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"方法二-在开机向导之后开机自启动\"><a href=\"#方法二-在开机向导之后开机自启动\" class=\"headerlink\" title=\"方法二.在开机向导之后开机自启动\"></a>方法二.在开机向导之后开机自启动</h3><blockquote>\n<p>原理:在开机向导结束之后会修改数据库将 Settings.Secure.USER_SETUP_COMPLETE 的值修改为 1，Google开机向导和OOBE开机向导都会修改这个值,具体代码如下:<br>//OOBE<br>mediatek/packages/apps/OOBE/src/com/mediatek/oobe/basic/MainActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">finishOOBE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>//SetupWizard<br>com/google/android/setupwizard/BaseActivity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSetupComplete</span><span class=\"params\">(<span class=\"keyword\">boolean</span> paramBoolean)</span></span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    Settings.Secure.putInt(getContentResolver(), <span class=\"string\">\"user_setup_complete\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//再SystemUI中已经有了对 Settings.Secure.USER_SETUP_COMPLETE 的监听<br>在 frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java 中有<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">resetUserSetupObserver</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    mContext.getContentResolver().registerContentObserver(Settings.Secure.getUriFor(Settings.Secure.USER_SETUP_COMPLETE), <span class=\"keyword\">true</span>, mUserSetupObserver, mCurrentUserId);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> userSetup = <span class=\"number\">0</span> != Settings.Secure.getIntForUser(mContext.getContentResolver(), Settings.Secure.USER_SETUP_COMPLETE, <span class=\"number\">0</span> , mCurrentUserId);</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsButton != <span class=\"keyword\">null</span> &amp;&amp; mHasFlipSettings) &#123;</div><div class=\"line\">            mSettingsButton.setVisibility(userSetup ? View.VISIBLE : View.INVISIBLE);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (mSettingsPanel != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            mSettingsPanel.setEnabled(userSetup);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!mUserSetup &amp;&amp; mStatusBarView != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                animateCollapseQuickSettings();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>初步修改后的代码如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;            <span class=\"comment\">//设置标志位，只有在恢复出厂设置的时候启动一次</span></div><div class=\"line\"><span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">        intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">        mContext.startActivity(intent);</div><div class=\"line\">        Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);                            <span class=\"comment\">//将标志为设置为1，表示启动成功</span></div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();        <span class=\"comment\">//这里加try,catch防止内置的APK face2face 丢失</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但经过强度测试之后发现了一个小问题，概率性的出现应用程序不启动的现象？<br>从Log中可以看出:</p>\n<p>正常启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:19.656195   719  1095 I am_create_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:19.656700   719  1095 I wm_task_created: [4,1</div><div class=\"line\">01-01 00:01:19.656803   719  1095 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:19.700131   719  1157 I am_proc_died: [0,1169,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:19.705203   719  1157 I am_destroy_service: [0,1107535152,1254</div><div class=\"line\">01-01 00:01:19.732961   719  1157 I am_finish_activity: [0,1110412608,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.847742   719  1157 I am_finish_activity: [0,1112688672,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:19.940255   719  1157 I am_proc_start: [0,2045,10039,za.co.axon.mdas.roid,activity,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.019586   719   730 I am_proc_bound: [0,2045,za.co.axon.mdas.roid</div><div class=\"line\">01-01 00:01:20.253625   719   730 I am_restart_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.315298   719   742 I notification_enqueue: [com.mediatek.mtklogger,2130837522,NULL,0,Notification(pri=0 contentView=com.mediatek.mtklogger/0x109006b vibrate=null sound=null defaults=0x0 flags=0x60 kind=[null])</div><div class=\"line\">01-01 00:01:20.316353   719   719 I notification_cancel: [com.mediatek.mtklogger,2130837522,NULL,0,0,0</div><div class=\"line\">01-01 00:01:20.532800  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.571890   719  1157 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:20.572002   719  1157 I am_create_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About,NULL,NULL,NULL,0</div><div class=\"line\">01-01 00:01:20.582907   719  1157 I am_pause_activity: [0,1113075664,za.co.axon.mdas.roid/.Splash</div><div class=\"line\">01-01 00:01:20.593922   719  1014 I am_finish_activity: [0,1113075664,4,za.co.axon.mdas.roid/.Splash,app-request</div><div class=\"line\">01-01 00:01:20.636227  2045  2045 I am_on_paused_called: [0,za.co.axon.mdas.roid.Splash</div><div class=\"line\">01-01 00:01:20.667373   719  2043 I am_restart_activity: [0,1110419464,4,za.co.axon.mdas.roid/.About</div><div class=\"line\">01-01 00:01:20.723902   719  1157 I am_create_service: [0,1114379064,.SIMProcessorService,10003,1781</div><div class=\"line\">01-01 00:01:20.785342   719  1563 I am_create_service: [0,1114110688,.DownloadService,10005,1489</div><div class=\"line\">01-01 00:01:20.847981   719   735 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:20.915881  2045  2045 I am_on_resume_called: [0,za.co.axon.mdas.roid.About</div></pre></td></tr></table></figure></p>\n<p>异常不启动的Log:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">01-01 00:01:12.916516   720  1170 I am_create_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,NULL,NULL,NULL,272629760</div><div class=\"line\">01-01 00:01:12.916972   720  1170 I wm_task_created: [3,1</div><div class=\"line\">01-01 00:01:12.917066   720  1170 I wm_task_moved: [3,1,1</div><div class=\"line\">01-01 00:01:12.917903   720  1170 I am_pause_activity: [0,1107807432,com.google.android.setupwizard/.NoAccountTosActivity</div><div class=\"line\">01-01 00:01:12.944667   720  1147 I am_create_task: [0,4</div><div class=\"line\">01-01 00:01:12.944957   720  1147 I am_create_activity: [0,1111200792,4,com.android.launcher3/.Launcher,android.intent.action.MAIN,NULL,NULL,270532608</div><div class=\"line\">01-01 00:01:12.945345   720  1147 I wm_task_created: [4,0</div><div class=\"line\">01-01 00:01:12.945431   720  1147 I wm_task_moved: [4,1,2</div><div class=\"line\">01-01 00:01:13.121927   720  1122 I am_create_service: [0,1109984720,.SIMProcessorService,10003,1652</div><div class=\"line\">01-01 00:01:13.201850   720   732 I am_proc_died: [0,1188,com.google.android.setupwizard</div><div class=\"line\">01-01 00:01:13.203463   720   732 I am_destroy_service: [0,1110166664,1302</div><div class=\"line\">01-01 00:01:13.210043   720   732 I am_finish_activity: [0,1107807432,2,com.google.android.setupwizard/.NoAccountTosActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.242921   720   732 I am_finish_activity: [0,1108071280,2,com.google.android.setupwizard/.DateTimeSetupActivity,proc died without state saved</div><div class=\"line\">01-01 00:01:13.263721   157   157 I sf_frame_dur: [com.google.android.setupwizard/com.google.android.setupwizard.NoAccountTosActivity,2,3,0,0,2,0,0</div><div class=\"line\">01-01 00:01:13.329596   720   732 I am_proc_start: [0,1924,10012,com.android.launcher3,activity,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:13.339900   720  1090 I am_create_service: [0,1113635320,.DownloadService,10005,1208</div><div class=\"line\">01-01 00:01:13.420749   720   736 I am_proc_bound: [0,1924,com.android.launcher3</div><div class=\"line\">01-01 00:01:13.481537   720   968 I notification_cancel_all: [com.android.providers.downloads,0,0,64</div><div class=\"line\">01-01 00:01:14.885420   720   736 I am_restart_activity: [0,1111200792,4,com.android.launcher3/.Launcher</div><div class=\"line\">01-01 00:01:14.903973   720  1090 I am_destroy_service: [0,1113635320,1208</div><div class=\"line\">01-01 00:01:14.912448   720   743 I am_finish_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,no-history        //za.co.axon.mdas.roid.Splash 被莫名其妙地 finish 掉了</div><div class=\"line\">01-01 00:01:14.918549   720   743 I am_destroy_activity: [0,1113616608,3,za.co.axon.mdas.roid/.Splash,finish-imm</div></pre></td></tr></table></figure></p>\n<p>根据这种情况，再次做了修改<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> ContentObserver mUserSetupObserver = <span class=\"keyword\">new</span> ContentObserver(<span class=\"keyword\">new</span> Handler()) &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onChange</span><span class=\"params\">(<span class=\"keyword\">boolean</span> selfChange)</span> </span>&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        <span class=\"keyword\">if</span> (userSetup != mUserSetup) &#123;</div><div class=\"line\">            mUserSetup = userSetup;</div><div class=\"line\">            <span class=\"keyword\">boolean</span> isFirstBoot = Settings.Secure.getInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">0</span>) == <span class=\"number\">0</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(userSetup &amp;&amp; isFirstBoot)&#123;</div><div class=\"line\">                <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                    Settings.Secure.putInt(mContext.getContentResolver(), <span class=\"string\">\"isFirstBoot\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable()&#123;                    <span class=\"comment\">//在这个地方启动一个线程，再次启动这个应用</span></div><div class=\"line\">                        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                                <span class=\"keyword\">while</span>(!isStartSuccess)&#123;</div><div class=\"line\">                                    Thread.sleep(<span class=\"number\">2000</span>);</div><div class=\"line\">                                    handler.sendEmptyMessage(<span class=\"number\">1</span>);</div><div class=\"line\">                                &#125;</div><div class=\"line\">                            &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                                e.printStackTrace();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;).start();</div><div class=\"line\">                &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">                    e.printStackTrace();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            ...</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> isStartSuccess = <span class=\"keyword\">false</span>;</div><div class=\"line\">Handler handler = <span class=\"keyword\">new</span> Handler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span>(msg.what)&#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                String topActivityName = getTopActivityName(mContext);</div><div class=\"line\">                <span class=\"keyword\">if</span>(topActivityName != <span class=\"keyword\">null</span> &amp;&amp; topActivityName.contains(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>))&#123;</div><div class=\"line\">                    isStartSuccess = <span class=\"keyword\">true</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">                    intent.setComponent(<span class=\"keyword\">new</span> android.content.ComponentName(<span class=\"string\">\"za.co.axon.mdas.roid\"</span>,<span class=\"string\">\"za.co.axon.mdas.roid.Splash\"</span>));</div><div class=\"line\">                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                    mContext.startActivity(intent);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**获取栈顶Activity的名称*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getTopActivityName</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">    ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">    List&lt;android.app.ActivityManager.RunningTaskInfo&gt; runningTaskInfos = activityManager.getRunningTasks(<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> (runningTaskInfos != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (runningTaskInfos.get(<span class=\"number\">0</span>).topActivity).toString();</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"性能测试","date":"2017-09-25T07:43:40.000Z","_content":"``` Java\npublic interface Testing{\n    public void testArrayList();\n    public void testLinkedList(); \n}\n\npublic class TestImpl implements Testing{\n    private List link = new LinkedList();\n    private List array = new ArrayList();\n    public TestImpl(){\n        for(int i = 0 ;i < 10000;i++){\n            array.add(new Integer(i));\n            link.add(new Integer(i));\n        }\n    }\n    public void testArrayList(){\n        for(int i=0;i<10000;i++){\n            array.get(i);\n        }\n    }\n    public void testlinkedList(){\n        for(int i = 0;i<10000;i++){\n            link.get(i);\n        }\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        //1.类加载器，2.实现的接口，3.此类的实例\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = System.currentTimeMillis();    //调用方法之前\n            result = method.invoke(obj,args);\n            long end = System.currentTimeMillis();        //调用方法之后\n            //在这里计算性能\n        }catch(InvocationTargetException e){\n            throw e.getTargetException();\n        }catch(Exception e){\n            throw new RuntimeException(\"unexpected invocation exception:\"+e.getMessage());\n        }finally{\n            Log.e(\"Handler\",\"end method \" + method.getName());\n        }\n        return result;\n    }\n}\n\n\n//测试\ntry{\n    Testing testing = (Testing)Handler.newInstance(new TestingImpl());\n    testing.testArrayList();    \n    testing.testLinkedList();    \n}catch(Exception e){\n    e.printStackTrace();\n}\n```","source":"_posts/性能测试.md","raw":"---\ntitle: 性能测试\ndate: 2017-09-25 15:43:40\ntags:\n---\n``` Java\npublic interface Testing{\n    public void testArrayList();\n    public void testLinkedList(); \n}\n\npublic class TestImpl implements Testing{\n    private List link = new LinkedList();\n    private List array = new ArrayList();\n    public TestImpl(){\n        for(int i = 0 ;i < 10000;i++){\n            array.add(new Integer(i));\n            link.add(new Integer(i));\n        }\n    }\n    public void testArrayList(){\n        for(int i=0;i<10000;i++){\n            array.get(i);\n        }\n    }\n    public void testlinkedList(){\n        for(int i = 0;i<10000;i++){\n            link.get(i);\n        }\n    }\n}\n\npublic class Handler implements InvocationHandler{\n    private Object obj;\n    public Handler(Object obj){\n        this.obj = obj;\n    }\n    public static Object newInstance(Object obj){\n        //1.类加载器，2.实现的接口，3.此类的实例\n        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), new Handler(obj));\n        return result;\n    }\n    public Object invoke(Object proxy,Method method,Object[] args) throws Throwable{\n        Object result;\n        try{\n            long start = System.currentTimeMillis();    //调用方法之前\n            result = method.invoke(obj,args);\n            long end = System.currentTimeMillis();        //调用方法之后\n            //在这里计算性能\n        }catch(InvocationTargetException e){\n            throw e.getTargetException();\n        }catch(Exception e){\n            throw new RuntimeException(\"unexpected invocation exception:\"+e.getMessage());\n        }finally{\n            Log.e(\"Handler\",\"end method \" + method.getName());\n        }\n        return result;\n    }\n}\n\n\n//测试\ntry{\n    Testing testing = (Testing)Handler.newInstance(new TestingImpl());\n    testing.testArrayList();    \n    testing.testLinkedList();    \n}catch(Exception e){\n    e.printStackTrace();\n}\n```","slug":"性能测试","published":1,"updated":"2017-09-25T07:44:04.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghc001meddxfj71v1gq","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testLinkedList</span><span class=\"params\">()</span></span>; </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List link = <span class=\"keyword\">new</span> LinkedList();</div><div class=\"line\">    <span class=\"keyword\">private</span> List array = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestImpl</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; <span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">            link.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testlinkedList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            link.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"comment\">//1.类加载器，2.实现的接口，3.此类的实例</span></div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), <span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = System.currentTimeMillis();    <span class=\"comment\">//调用方法之前</span></div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = System.currentTimeMillis();        <span class=\"comment\">//调用方法之后</span></div><div class=\"line\">            <span class=\"comment\">//在这里计算性能</span></div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(InvocationTargetException e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> e.getTargetException();</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"unexpected invocation exception:\"</span>+e.getMessage());</div><div class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">            Log.e(<span class=\"string\">\"Handler\"</span>,<span class=\"string\">\"end method \"</span> + method.getName());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    Testing testing = (Testing)Handler.newInstance(<span class=\"keyword\">new</span> TestingImpl());</div><div class=\"line\">    testing.testArrayList();    </div><div class=\"line\">    testing.testLinkedList();    </div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testLinkedList</span><span class=\"params\">()</span></span>; </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">Testing</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> List link = <span class=\"keyword\">new</span> LinkedList();</div><div class=\"line\">    <span class=\"keyword\">private</span> List array = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestImpl</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; <span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">            link.add(<span class=\"keyword\">new</span> Integer(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testArrayList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            array.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testlinkedList</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</div><div class=\"line\">            link.get(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> <span class=\"keyword\">implements</span> <span class=\"title\">InvocationHandler</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Object obj;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Handler</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.obj = obj;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title\">newInstance</span><span class=\"params\">(Object obj)</span></span>&#123;</div><div class=\"line\">        <span class=\"comment\">//1.类加载器，2.实现的接口，3.此类的实例</span></div><div class=\"line\">        Object result = Proxy.newProxyInstance(obj.getClass().getClassLoader(), obj.getClass().getInterfaces(), <span class=\"keyword\">new</span> Handler(obj));</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">invoke</span><span class=\"params\">(Object proxy,Method method,Object[] args)</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        Object result;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> start = System.currentTimeMillis();    <span class=\"comment\">//调用方法之前</span></div><div class=\"line\">            result = method.invoke(obj,args);</div><div class=\"line\">            <span class=\"keyword\">long</span> end = System.currentTimeMillis();        <span class=\"comment\">//调用方法之后</span></div><div class=\"line\">            <span class=\"comment\">//在这里计算性能</span></div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(InvocationTargetException e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> e.getTargetException();</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"unexpected invocation exception:\"</span>+e.getMessage());</div><div class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</div><div class=\"line\">            Log.e(<span class=\"string\">\"Handler\"</span>,<span class=\"string\">\"end method \"</span> + method.getName());</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//测试</span></div><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    Testing testing = (Testing)Handler.newInstance(<span class=\"keyword\">new</span> TestingImpl());</div><div class=\"line\">    testing.testArrayList();    </div><div class=\"line\">    testing.testLinkedList();    </div><div class=\"line\">&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"提高进程优先级","date":"2017-09-21T03:08:41.000Z","_content":"### 方法1:\n找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=\"true\"』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=\"true\"』\n具体修改示例如下:\npackage/apps/Mms/AndroidMannifest.xml\n``` xml\nandroid:label=\"@string/app_label\"\nandroid:icon=\"@drawable/app_icon\"\nandroid:allowBackup=\"false\"\nandroid:persistent=\"true\" \n```\n\n### 方法2:\n提高进程优先级\n``` Java\nstartForeground(1, new Notification());\n```\n降低进程优先级\n``` Java\nstopForeground(true);\n```\nonStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作\n这个方法可以将对应AP的ADJ临时提高到2。","source":"_posts/提高进程优先级.md","raw":"---\ntitle: 提高进程优先级\ndate: 2017-09-21 11:08:41\ntags:\n---\n### 方法1:\n找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=\"true\"』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=\"true\"』\n具体修改示例如下:\npackage/apps/Mms/AndroidMannifest.xml\n``` xml\nandroid:label=\"@string/app_label\"\nandroid:icon=\"@drawable/app_icon\"\nandroid:allowBackup=\"false\"\nandroid:persistent=\"true\" \n```\n\n### 方法2:\n提高进程优先级\n``` Java\nstartForeground(1, new Notification());\n```\n降低进程优先级\n``` Java\nstopForeground(true);\n```\nonStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作\n这个方法可以将对应AP的ADJ临时提高到2。","slug":"提高进程优先级","published":1,"updated":"2017-09-21T05:58:53.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghc001neddxpm65e1dc","content":"<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1:\"></a>方法1:</h3><p>找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=”true”』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=”true”』<br>具体修改示例如下:<br>package/apps/Mms/AndroidMannifest.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:label=\"@string/app_label\"</div><div class=\"line\">android:icon=\"@drawable/app_icon\"</div><div class=\"line\">android:allowBackup=\"false\"</div><div class=\"line\">android:persistent=\"true\"</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><p>提高进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startForeground(<span class=\"number\">1</span>, <span class=\"keyword\">new</span> Notification());</div></pre></td></tr></table></figure></p>\n<p>降低进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stopForeground(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>onStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作<br>这个方法可以将对应AP的ADJ临时提高到2。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1:\"></a>方法1:</h3><p>找到这个进程对应的AndroidMannifest.xml文件，在其中添加属性『android:persistent=”true”』， 这样可以将该进程设置为常驻内存进程，就可以降低被Kill的概率。以Acore进程为例， 在 /package/apps/Mms/AndroidMannifest.xml 文件中增加一行『android:persistent=”true”』<br>具体修改示例如下:<br>package/apps/Mms/AndroidMannifest.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:label=\"@string/app_label\"</div><div class=\"line\">android:icon=\"@drawable/app_icon\"</div><div class=\"line\">android:allowBackup=\"false\"</div><div class=\"line\">android:persistent=\"true\"</div></pre></td></tr></table></figure></p>\n<h3 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2:\"></a>方法2:</h3><p>提高进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startForeground(<span class=\"number\">1</span>, <span class=\"keyword\">new</span> Notification());</div></pre></td></tr></table></figure></p>\n<p>降低进程优先级<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">stopForeground(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure></p>\n<p>onStart() 方法中进行提高优先级操作，然后在onStop()方法中进行降低优先级操作<br>这个方法可以将对应AP的ADJ临时提高到2。</p>\n"},{"title":"收到短信后未振动手机","date":"2017-09-22T05:25:09.000Z","_content":"packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java\n``` Java\nupdateNotification(){\n\t...\n    /// M:Code analyze 014, for brazil request, when calling still have sound @{\n    int state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();\n    if (state != TelephonyManager.CALL_STATE_IDLE) {\n        //playTone(context, ToneGenerator.TONE_SUP_DIAL);\n        defaults |= Notification.DEFAULT_VIBRATE;\t//添加这句代码即可\n    } else {\n        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? null : Uri.parse(ringtoneStr));\n    }\n    ...\n}\n\n```","source":"_posts/收到短信后未振动手机.md","raw":"---\ntitle: 收到短信后未振动手机\ndate: 2017-09-22 13:25:09\ntags:\n---\npackages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java\n``` Java\nupdateNotification(){\n\t...\n    /// M:Code analyze 014, for brazil request, when calling still have sound @{\n    int state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();\n    if (state != TelephonyManager.CALL_STATE_IDLE) {\n        //playTone(context, ToneGenerator.TONE_SUP_DIAL);\n        defaults |= Notification.DEFAULT_VIBRATE;\t//添加这句代码即可\n    } else {\n        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? null : Uri.parse(ringtoneStr));\n    }\n    ...\n}\n\n```","slug":"收到短信后未振动手机","published":1,"updated":"2017-09-22T05:26:31.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghd001oeddxkubzjc4q","content":"<p>packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">updateNotification()&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">/// M:Code analyze 014, for brazil request, when calling still have sound @&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();</div><div class=\"line\">    <span class=\"keyword\">if</span> (state != TelephonyManager.CALL_STATE_IDLE) &#123;</div><div class=\"line\">        <span class=\"comment\">//playTone(context, ToneGenerator.TONE_SUP_DIAL);</span></div><div class=\"line\">        defaults |= Notification.DEFAULT_VIBRATE;\t<span class=\"comment\">//添加这句代码即可</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? <span class=\"keyword\">null</span> : Uri.parse(ringtoneStr));</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Mms/src/com/android/mms/transaction/MessagingNotification.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">updateNotification()&#123;</div><div class=\"line\">\t...</div><div class=\"line\">    <span class=\"comment\">/// M:Code analyze 014, for brazil request, when calling still have sound @&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> state = ((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE)).getCallState();</div><div class=\"line\">    <span class=\"keyword\">if</span> (state != TelephonyManager.CALL_STATE_IDLE) &#123;</div><div class=\"line\">        <span class=\"comment\">//playTone(context, ToneGenerator.TONE_SUP_DIAL);</span></div><div class=\"line\">        defaults |= Notification.DEFAULT_VIBRATE;\t<span class=\"comment\">//添加这句代码即可</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        noti.setSound(TextUtils.isEmpty(ringtoneStr) ? <span class=\"keyword\">null</span> : Uri.parse(ringtoneStr));</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"数据连接默认开关","date":"2017-09-22T03:18:36.000Z","_content":"对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。\n单卡项目:\n适用版本GB,GB2,ICS,ICS2,JB\n其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的\n有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开\n\n双卡项目:\nAndroid V2.3(GB,GB2):\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n\nAndroid V4.0(ICS,ICS2):\n需要两个地方进行修改：\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能\n\nAndroid V4.1(JB)\n也需要两个步骤:\n1.将mGPRSOn设置成true:\n1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：\n``` Java\ntry{\n\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);\n} catch (Exception e){\n\te.printStackTrace();\n}\nif (mTelephonyExt != null) {\n    if (mTelephonyExt.isDefaultDataOn()){\n    \tmGPRSOn = true;\n    }\n\t\n    if (mTelephonyExt.isAutoSwitchDataToEnabledSim())\n        mAutoSwitchDataToEnabledSim = true;\n    } else {\n        loge(\"PhoneProxy(): mTelephonyExt is null!!!\");\n    }\n}\n//然后将private boolean mGPRSOn = false;改成true即可\n```\n2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP**\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP**.java中加上下面这个方法：\n``` Java\npublic boolean isDefaultDataOn() {\n\treturn true;\n}\n```","source":"_posts/数据连接默认开关.md","raw":"---\ntitle: 数据连接默认开关\ndate: 2017-09-22 11:18:36\ntags:\n---\n对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。\n单卡项目:\n适用版本GB,GB2,ICS,ICS2,JB\n其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的\n有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开\n\n双卡项目:\nAndroid V2.3(GB,GB2):\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n\nAndroid V4.0(ICS,ICS2):\n需要两个地方进行修改：\n1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。\n该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡\n2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能\n\nAndroid V4.1(JB)\n也需要两个步骤:\n1.将mGPRSOn设置成true:\n1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：\n``` Java\ntry{\n\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);\n} catch (Exception e){\n\te.printStackTrace();\n}\nif (mTelephonyExt != null) {\n    if (mTelephonyExt.isDefaultDataOn()){\n    \tmGPRSOn = true;\n    }\n\t\n    if (mTelephonyExt.isAutoSwitchDataToEnabledSim())\n        mAutoSwitchDataToEnabledSim = true;\n    } else {\n        loge(\"PhoneProxy(): mTelephonyExt is null!!!\");\n    }\n}\n//然后将private boolean mGPRSOn = false;改成true即可\n```\n2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP**\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP**.java中加上下面这个方法：\n``` Java\npublic boolean isDefaultDataOn() {\n\treturn true;\n}\n```","slug":"数据连接默认开关","published":1,"updated":"2017-09-22T03:21:39.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghd001peddxf7ie3kq8","content":"<p>对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。<br>单卡项目:<br>适用版本GB,GB2,ICS,ICS2,JB<br>其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的<br>有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开</p>\n<p>双卡项目:<br>Android V2.3(GB,GB2):<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡</p>\n<p>Android V4.0(ICS,ICS2):<br>需要两个地方进行修改：<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡<br>2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能</p>\n<p>Android V4.1(JB)<br>也需要两个步骤:<br>1.将mGPRSOn设置成true:<br>1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">if</span> (mTelephonyExt != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isDefaultDataOn())&#123;</div><div class=\"line\">    \tmGPRSOn = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isAutoSwitchDataToEnabledSim())</div><div class=\"line\">        mAutoSwitchDataToEnabledSim = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        loge(<span class=\"string\">\"PhoneProxy(): mTelephonyExt is null!!!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//然后将private boolean mGPRSOn = false;改成true即可</span></div></pre></td></tr></table></figure></p>\n<p>2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP<strong>\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP</strong>.java中加上下面这个方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isDefaultDataOn</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于单卡和双卡工程，统一通过lib调用TelephonyExt.isDefaultDataOn()确认是否默认打开或关闭， lib与运营商定制有关，如联通的默认的数据连接开关设置可参考：TelephonyExtOP02。<br>单卡项目:<br>适用版本GB,GB2,ICS,ICS2,JB<br>其数据连接都是由\\alps\\mediatek\\config\\工程名\\ProjectConfig.mk下的MTK_DEFAULT_DATA_OFF = no这个值来控制的<br>有MTK_DEFAULT_DATA_OFF=yes即默认关闭,设置成false就是默认打开</p>\n<p>双卡项目:<br>Android V2.3(GB,GB2):<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡</p>\n<p>Android V4.0(ICS,ICS2):<br>需要两个地方进行修改：<br>1.check一下PhoneProxy.java文件，看其中是否有一个变量mGPRSOn可以通过这个变量来控制数据开关的行为。<br>该值默认是false的，也就是默认GPRS是Off的，如果把它设为true，就会变成：如果插一张卡就设置为那张卡，如果是两张卡默认为卡槽1中的卡<br>2.请将framework\\base\\core\\java\\android\\provider\\settings.java文件中MOBILE_DATA_DEFAULT这个变量的值修改成1，然后再编译测试此功能</p>\n<p>Android V4.1(JB)<br>也需要两个步骤:<br>1.将mGPRSOn设置成true:<br>1）如果是当前无论是哪个项目都需要将数据连接打开的话，直接将PhoneProxy.java文件的下面这段代码去掉：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\tmTelephonyExt = MediatekClassFactory.createInstance(ITelephonyExt.class);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</div><div class=\"line\">\te.printStackTrace();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">if</span> (mTelephonyExt != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isDefaultDataOn())&#123;</div><div class=\"line\">    \tmGPRSOn = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">\t</div><div class=\"line\">    <span class=\"keyword\">if</span> (mTelephonyExt.isAutoSwitchDataToEnabledSim())</div><div class=\"line\">        mAutoSwitchDataToEnabledSim = <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        loge(<span class=\"string\">\"PhoneProxy(): mTelephonyExt is null!!!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//然后将private boolean mGPRSOn = false;改成true即可</span></div></pre></td></tr></table></figure></p>\n<p>2）如果是针对不同的运营商项目有不同的定制需求的话，需要将mediatek\\operator\\OP<strong>\\frameworks\\java\\com\\mediatek\\op\\telephony下TelephonyExtOP</strong>.java中加上下面这个方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isDefaultDataOn</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"杀进程的脚本","date":"2017-09-21T06:15:19.000Z","_content":"``` bash\n#!/bin/bash\n\nPID=`adb shell ps | grep $1 | awk '{print $2}'`\necho \"adb shell kill $1 : $PID\"\nresult=`adb shell kill $PID`\necho \"$result\"\n```","source":"_posts/杀进程的脚本.md","raw":"---\ntitle: 杀进程的脚本\ndate: 2017-09-21 14:15:19\ntags:\n---\n``` bash\n#!/bin/bash\n\nPID=`adb shell ps | grep $1 | awk '{print $2}'`\necho \"adb shell kill $1 : $PID\"\nresult=`adb shell kill $PID`\necho \"$result\"\n```","slug":"杀进程的脚本","published":1,"updated":"2017-09-21T06:15:56.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghe001qeddxhvb5ju6d","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\">PID=`adb shell ps | grep <span class=\"variable\">$1</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"adb shell kill <span class=\"variable\">$1</span> : <span class=\"variable\">$PID</span>\"</span></div><div class=\"line\">result=`adb shell <span class=\"built_in\">kill</span> <span class=\"variable\">$PID</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$result</span>\"</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\">PID=`adb shell ps | grep <span class=\"variable\">$1</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"adb shell kill <span class=\"variable\">$1</span> : <span class=\"variable\">$PID</span>\"</span></div><div class=\"line\">result=`adb shell <span class=\"built_in\">kill</span> <span class=\"variable\">$PID</span>`</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$result</span>\"</span></div></pre></td></tr></table></figure>"},{"title":"根据SDK版本号判断使用哪个类中的方法","date":"2017-09-22T01:56:15.000Z","_content":"``` Java\nclass MethodInLowSdk{\n    public static void aMethod();\n}\nclass MethodInHighSdk{\n    public static void aMethod();\n}\n\nvoid callAMethodByVersion(){\n    if(android.os.Build.VERSION.SDK_INT > low_sdk){\n        MethodInHighSdk.aMethod();\n    }else{\n        MethodInLowSdk.aMethod();\n    }\n}\n```","source":"_posts/根据SDK版本号判断使用哪个类中的方法.md","raw":"---\ntitle: 根据SDK版本号判断使用哪个类中的方法\ndate: 2017-09-22 09:56:15\ntags:\n---\n``` Java\nclass MethodInLowSdk{\n    public static void aMethod();\n}\nclass MethodInHighSdk{\n    public static void aMethod();\n}\n\nvoid callAMethodByVersion(){\n    if(android.os.Build.VERSION.SDK_INT > low_sdk){\n        MethodInHighSdk.aMethod();\n    }else{\n        MethodInLowSdk.aMethod();\n    }\n}\n```","slug":"根据SDK版本号判断使用哪个类中的方法","published":1,"updated":"2017-09-22T01:56:42.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghe001reddxuos041a1","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInLowSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInHighSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">callAMethodByVersion</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(android.os.Build.VERSION.SDK_INT &gt; low_sdk)&#123;</div><div class=\"line\">        MethodInHighSdk.aMethod();</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        MethodInLowSdk.aMethod();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInLowSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodInHighSdk</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">aMethod</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">callAMethodByVersion</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(android.os.Build.VERSION.SDK_INT &gt; low_sdk)&#123;</div><div class=\"line\">        MethodInHighSdk.aMethod();</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        MethodInLowSdk.aMethod();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"根据控件的ID名称获取控件的ID值","date":"2017-09-21T05:10:29.000Z","_content":"frameworks/base/core/java/android/app/Activity.java\n``` Java\nprivate View findViewByName(String name){\n    return findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n\nprivate View findViewByName(View parent, String name){\n    return parent.findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n```\n具体用法如下\n``` Java\nView setting_autodownload_layout = findViewByName(\"setting_autodownload_layout\");\n```","source":"_posts/根据控件的ID名称获取控件的ID值.md","raw":"---\ntitle: 根据控件的ID名称获取控件的ID值\ndate: 2017-09-21 13:10:29\ntags:\n---\nframeworks/base/core/java/android/app/Activity.java\n``` Java\nprivate View findViewByName(String name){\n    return findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n\nprivate View findViewByName(View parent, String name){\n    return parent.findViewById(getResources().getIdentifier(name, \"id\", getPackageName()));\n}\n```\n具体用法如下\n``` Java\nView setting_autodownload_layout = findViewByName(\"setting_autodownload_layout\");\n```","slug":"根据控件的ID名称获取控件的ID值","published":1,"updated":"2017-09-21T05:55:23.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghf001seddxfjsp97p0","content":"<p>frameworks/base/core/java/android/app/Activity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(View parent, String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> parent.findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>具体用法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">View setting_autodownload_layout = findViewByName(<span class=\"string\">\"setting_autodownload_layout\"</span>);</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/core/java/android/app/Activity.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> View <span class=\"title\">findViewByName</span><span class=\"params\">(View parent, String name)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> parent.findViewById(getResources().getIdentifier(name, <span class=\"string\">\"id\"</span>, getPackageName()));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>具体用法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">View setting_autodownload_layout = findViewByName(<span class=\"string\">\"setting_autodownload_layout\"</span>);</div></pre></td></tr></table></figure></p>\n"},{"title":"沉浸式学习","date":"2017-09-29T06:27:53.000Z","_content":"#### 1.隐藏状态栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 2.状态栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 3.隐藏导航栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 4.导航栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t//导航栏光明\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 5.真正的沉浸式\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    public void onWindowFocusChanged(boolean hasFocus) {\n        super.onWindowFocusChanged(hasFocus);\n        if (hasFocus && Build.VERSION.SDK_INT >= 19) {\n            View decorView = getWindow().getDecorView();\n            decorView.setSystemUiVisibility(\n                View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\n        }\n    }\n}\n```","source":"_posts/沉浸式学习.md","raw":"---\ntitle: 沉浸式学习\ndate: 2017-09-29 14:27:53\ntags:\n---\n#### 1.隐藏状态栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 2.状态栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 3.隐藏导航栏\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        View decorView = getWindow().getDecorView();\n        int option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;\n        decorView.setSystemUiVisibility(option);\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 4.导航栏透明\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        if (Build.VERSION.SDK_INT >= 21) {\n            View decorView = getWindow().getDecorView();\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n            decorView.setSystemUiVisibility(option);\n            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t//导航栏光明\n            getWindow().setStatusBarColor(Color.TRANSPARENT);\n        }\n        ActionBar actionBar = getSupportActionBar();\n        actionBar.hide();\n    }\n}\n```\n#### 5.真正的沉浸式\n``` Java\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    @Override\n    public void onWindowFocusChanged(boolean hasFocus) {\n        super.onWindowFocusChanged(hasFocus);\n        if (hasFocus && Build.VERSION.SDK_INT >= 19) {\n            View decorView = getWindow().getDecorView();\n            decorView.setSystemUiVisibility(\n                View.SYSTEM_UI_FLAG_LAYOUT_STABLE\n                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n                | View.SYSTEM_UI_FLAG_FULLSCREEN\n                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);\n        }\n    }\n}\n```","slug":"沉浸式学习","published":1,"updated":"2017-09-29T06:45:29.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghf001teddxzghdv7il","content":"<h4 id=\"1-隐藏状态栏\"><a href=\"#1-隐藏状态栏\" class=\"headerlink\" title=\"1.隐藏状态栏\"></a>1.隐藏状态栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2-状态栏透明\"><a href=\"#2-状态栏透明\" class=\"headerlink\" title=\"2.状态栏透明\"></a>2.状态栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-隐藏导航栏\"><a href=\"#3-隐藏导航栏\" class=\"headerlink\" title=\"3.隐藏导航栏\"></a>3.隐藏导航栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"4-导航栏透明\"><a href=\"#4-导航栏透明\" class=\"headerlink\" title=\"4.导航栏透明\"></a>4.导航栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t<span class=\"comment\">//导航栏光明</span></div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"5-真正的沉浸式\"><a href=\"#5-真正的沉浸式\" class=\"headerlink\" title=\"5.真正的沉浸式\"></a>5.真正的沉浸式</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</div><div class=\"line\">        <span class=\"keyword\">if</span> (hasFocus &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class=\"number\">19</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            decorView.setSystemUiVisibility(</div><div class=\"line\">                View.SYSTEM_UI_FLAG_LAYOUT_STABLE</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-隐藏状态栏\"><a href=\"#1-隐藏状态栏\" class=\"headerlink\" title=\"1.隐藏状态栏\"></a>1.隐藏状态栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"2-状态栏透明\"><a href=\"#2-状态栏透明\" class=\"headerlink\" title=\"2.状态栏透明\"></a>2.状态栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"3-隐藏导航栏\"><a href=\"#3-隐藏导航栏\" class=\"headerlink\" title=\"3.隐藏导航栏\"></a>3.隐藏导航栏</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        View decorView = getWindow().getDecorView();</div><div class=\"line\">        <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class=\"line\">        decorView.setSystemUiVisibility(option);</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"4-导航栏透明\"><a href=\"#4-导航栏透明\" class=\"headerlink\" title=\"4.导航栏透明\"></a>4.导航栏透明</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">        <span class=\"keyword\">if</span> (Build.VERSION.SDK_INT &gt;= <span class=\"number\">21</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            <span class=\"keyword\">int</span> option = View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;</div><div class=\"line\">            decorView.setSystemUiVisibility(option);</div><div class=\"line\">            getWindow().setNavigationBarColor(Color.TRANSPARENT);\t<span class=\"comment\">//导航栏光明</span></div><div class=\"line\">            getWindow().setStatusBarColor(Color.TRANSPARENT);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ActionBar actionBar = getSupportActionBar();</div><div class=\"line\">        actionBar.hide();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"5-真正的沉浸式\"><a href=\"#5-真正的沉浸式\" class=\"headerlink\" title=\"5.真正的沉浸式\"></a>5.真正的沉浸式</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onWindowFocusChanged</span><span class=\"params\">(<span class=\"keyword\">boolean</span> hasFocus)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onWindowFocusChanged(hasFocus);</div><div class=\"line\">        <span class=\"keyword\">if</span> (hasFocus &amp;&amp; Build.VERSION.SDK_INT &gt;= <span class=\"number\">19</span>) &#123;</div><div class=\"line\">            View decorView = getWindow().getDecorView();</div><div class=\"line\">            decorView.setSystemUiVisibility(</div><div class=\"line\">                View.SYSTEM_UI_FLAG_LAYOUT_STABLE</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_FULLSCREEN</div><div class=\"line\">                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"添加MoreRingtone菜单","date":"2017-09-22T06:08:38.000Z","_content":"``` Java\n//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java\npublic void setRingtonePickerParams(Intent intent) {\n    //把这个改为true就可以显示 More Ringtones ... 选项了\n\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, true);    \n    mHasMoreRingtone = true;\n}\n```","source":"_posts/添加MoreRingtone菜单.md","raw":"---\ntitle: 添加MoreRingtone菜单\ndate: 2017-09-22 14:08:38\ntags:\n---\n``` Java\n//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java\npublic void setRingtonePickerParams(Intent intent) {\n    //把这个改为true就可以显示 More Ringtones ... 选项了\n\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, true);    \n    mHasMoreRingtone = true;\n}\n```","slug":"添加MoreRingtone菜单","published":1,"updated":"2017-09-22T06:10:39.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghg001ueddxmrwwbf7u","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRingtonePickerParams</span><span class=\"params\">(Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//把这个改为true就可以显示 More Ringtones ... 选项了</span></div><div class=\"line\">\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, <span class=\"keyword\">true</span>);    </div><div class=\"line\">    mHasMoreRingtone = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//packages/apps/Settings/ext/src/com/mediatek/settings/ext/DefaultAudioProfileExt.java</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRingtonePickerParams</span><span class=\"params\">(Intent intent)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//把这个改为true就可以显示 More Ringtones ... 选项了</span></div><div class=\"line\">\tintent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_MORE_RINGTONES, <span class=\"keyword\">true</span>);    </div><div class=\"line\">    mHasMoreRingtone = <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"添加代码禁用GoogleCamera","date":"2017-09-22T05:50:36.000Z","_content":"``` Java\n在RestoreRotationReceiver.java添加如下代码即可\npublic void onReceive(Context context, Intent intent) {\n    String action = intent.getAction();\n    Log.v(\"RestoreRotationReceiver_IPO\", action);\n    if (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(\"android.intent.action.ACTION_BOOT_IPO\")) {\n        try{\n            context.getPackageManager().setApplicationEnabledSetting(\"com.google.android.GoogleCamera\",android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    ...\n    }\n}\n```","source":"_posts/添加代码禁用GoogleCamera.md","raw":"---\ntitle: 添加代码禁用GoogleCamera\ndate: 2017-09-22 13:50:36\ntags:\n---\n``` Java\n在RestoreRotationReceiver.java添加如下代码即可\npublic void onReceive(Context context, Intent intent) {\n    String action = intent.getAction();\n    Log.v(\"RestoreRotationReceiver_IPO\", action);\n    if (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(\"android.intent.action.ACTION_BOOT_IPO\")) {\n        try{\n            context.getPackageManager().setApplicationEnabledSetting(\"com.google.android.GoogleCamera\",android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    ...\n    }\n}\n```","slug":"添加代码禁用GoogleCamera","published":1,"updated":"2017-09-22T05:51:41.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghg001veddx0x2uslm8","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">在RestoreRotationReceiver.java添加如下代码即可</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    String action = intent.getAction();</div><div class=\"line\">    Log.v(<span class=\"string\">\"RestoreRotationReceiver_IPO\"</span>, action);</div><div class=\"line\">    <span class=\"keyword\">if</span> (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(<span class=\"string\">\"android.intent.action.ACTION_BOOT_IPO\"</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            context.getPackageManager().setApplicationEnabledSetting(<span class=\"string\">\"com.google.android.GoogleCamera\"</span>,android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">在RestoreRotationReceiver.java添加如下代码即可</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    String action = intent.getAction();</div><div class=\"line\">    Log.v(<span class=\"string\">\"RestoreRotationReceiver_IPO\"</span>, action);</div><div class=\"line\">    <span class=\"keyword\">if</span> (action.equals(Intent.ACTION_BOOT_COMPLETED)|| action.equals(<span class=\"string\">\"android.intent.action.ACTION_BOOT_IPO\"</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            context.getPackageManager().setApplicationEnabledSetting(<span class=\"string\">\"com.google.android.GoogleCamera\"</span>,android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED,android.content.pm.PackageManager.DONT_KILL_APP);</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    ...</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"添加水印效果","date":"2017-09-22T01:44:20.000Z","_content":"#### a.新建一个名为setup.conf的文件\n写入以下内容:B79A939390%20\t\t\t\t\t\n这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出\n然后把这个conf文件push到手机的system/etc目录下\n\n#### b.以加水印字串“hello world,this is my mark”为例\n修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,\n注释掉WaterMark构造函数中的这一句:\n``` Java\nmText = builder.toString();\n```\n加上这一句:\n``` Java\nmText = \"xxx\";  //xxx表示你想要加为水印的字符串\n```\n\n#### c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\n\n//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nvoid createWatermarkInTransaction() {\n    if (mWatermark != null) {\n        return;\n    }\n    File file = new File(\"/system/etc/setup.conf\");\t\t\t//读取setup.conf文件\n    FileInputStream in = null;\n    DataInputStream ind = null;\n    try {\n        in = new FileInputStream(file);\n        ind = new DataInputStream(in);\n        String line = ind.readLine();\n        if (line != null) {\n            String[] toks = line.split(\"%\");\n            if (toks != null && toks.length > 0) {\n                mWatermark = new Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);\n            }\n        }\n    } catch (FileNotFoundException e) {\n    } catch (IOException e) {\n    } finally {\n        if (ind != null) {\n            try {\n                ind.close();\n            } catch (IOException e) {\n            }\n        } else if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","source":"_posts/添加水印效果.md","raw":"---\ntitle: 添加水印效果\ndate: 2017-09-22 09:44:20\ntags:\n---\n#### a.新建一个名为setup.conf的文件\n写入以下内容:B79A939390%20\t\t\t\t\t\n这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出\n然后把这个conf文件push到手机的system/etc目录下\n\n#### b.以加水印字串“hello world,this is my mark”为例\n修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,\n注释掉WaterMark构造函数中的这一句:\n``` Java\nmText = builder.toString();\n```\n加上这一句:\n``` Java\nmText = \"xxx\";  //xxx表示你想要加为水印的字符串\n```\n\n#### c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\n\n//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java\n``` Java\nvoid createWatermarkInTransaction() {\n    if (mWatermark != null) {\n        return;\n    }\n    File file = new File(\"/system/etc/setup.conf\");\t\t\t//读取setup.conf文件\n    FileInputStream in = null;\n    DataInputStream ind = null;\n    try {\n        in = new FileInputStream(file);\n        ind = new DataInputStream(in);\n        String line = ind.readLine();\n        if (line != null) {\n            String[] toks = line.split(\"%\");\n            if (toks != null && toks.length > 0) {\n                mWatermark = new Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);\n            }\n        }\n    } catch (FileNotFoundException e) {\n    } catch (IOException e) {\n    } finally {\n        if (ind != null) {\n            try {\n                ind.close();\n            } catch (IOException e) {\n            }\n        } else if (in != null) {\n            try {\n                in.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n}\n```","slug":"添加水印效果","published":1,"updated":"2017-09-22T01:48:39.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghh001weddx5qovas48","content":"<h4 id=\"a-新建一个名为setup-conf的文件\"><a href=\"#a-新建一个名为setup-conf的文件\" class=\"headerlink\" title=\"a.新建一个名为setup.conf的文件\"></a>a.新建一个名为setup.conf的文件</h4><p>写入以下内容:B79A939390%20<br>这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出<br>然后把这个conf文件push到手机的system/etc目录下</p>\n<h4 id=\"b-以加水印字串“hello-world-this-is-my-mark”为例\"><a href=\"#b-以加水印字串“hello-world-this-is-my-mark”为例\" class=\"headerlink\" title=\"b.以加水印字串“hello world,this is my mark”为例\"></a>b.以加水印字串“hello world,this is my mark”为例</h4><p>修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,<br>注释掉WaterMark构造函数中的这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = builder.toString();</div></pre></td></tr></table></figure></p>\n<p>加上这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = <span class=\"string\">\"xxx\"</span>;  <span class=\"comment\">//xxx表示你想要加为水印的字符串</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\"><a href=\"#c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\" class=\"headerlink\" title=\"c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\"></a>c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.</h4><p>//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createWatermarkInTransaction</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWatermark != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/etc/setup.conf\"</span>);\t\t\t<span class=\"comment\">//读取setup.conf文件</span></div><div class=\"line\">    FileInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    DataInputStream ind = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        in = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">        ind = <span class=\"keyword\">new</span> DataInputStream(in);</div><div class=\"line\">        String line = ind.readLine();</div><div class=\"line\">        <span class=\"keyword\">if</span> (line != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            String[] toks = line.split(<span class=\"string\">\"%\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (toks != <span class=\"keyword\">null</span> &amp;&amp; toks.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                mWatermark = <span class=\"keyword\">new</span> Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (ind != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                ind.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"a-新建一个名为setup-conf的文件\"><a href=\"#a-新建一个名为setup-conf的文件\" class=\"headerlink\" title=\"a.新建一个名为setup.conf的文件\"></a>a.新建一个名为setup.conf的文件</h4><p>写入以下内容:B79A939390%20<br>这个字符串就是hello,从 createWatermarkInTransaction() 这个代码中可以看出<br>然后把这个conf文件push到手机的system/etc目录下</p>\n<h4 id=\"b-以加水印字串“hello-world-this-is-my-mark”为例\"><a href=\"#b-以加水印字串“hello-world-this-is-my-mark”为例\" class=\"headerlink\" title=\"b.以加水印字串“hello world,this is my mark”为例\"></a>b.以加水印字串“hello world,this is my mark”为例</h4><p>修改 : WaterMark.java(frameworks/base/services/java/com/android/server/wm)文件,<br>注释掉WaterMark构造函数中的这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = builder.toString();</div></pre></td></tr></table></figure></p>\n<p>加上这一句:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mText = <span class=\"string\">\"xxx\"</span>;  <span class=\"comment\">//xxx表示你想要加为水印的字符串</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\"><a href=\"#c-重新编译生成services-jar文件并push到手机的system-framework下-reboot手机\" class=\"headerlink\" title=\"c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.\"></a>c.重新编译生成services.jar文件并push到手机的system/framework下, reboot手机.</h4><p>//frameworks/base/services/java/com/android/server/wm/WindowManagerService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createWatermarkInTransaction</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWatermark != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/etc/setup.conf\"</span>);\t\t\t<span class=\"comment\">//读取setup.conf文件</span></div><div class=\"line\">    FileInputStream in = <span class=\"keyword\">null</span>;</div><div class=\"line\">    DataInputStream ind = <span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        in = <span class=\"keyword\">new</span> FileInputStream(file);</div><div class=\"line\">        ind = <span class=\"keyword\">new</span> DataInputStream(in);</div><div class=\"line\">        String line = ind.readLine();</div><div class=\"line\">        <span class=\"keyword\">if</span> (line != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            String[] toks = line.split(<span class=\"string\">\"%\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (toks != <span class=\"keyword\">null</span> &amp;&amp; toks.length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                mWatermark = <span class=\"keyword\">new</span> Watermark(getDefaultDisplayContentLocked().getDisplay(), mRealDisplayMetrics, mFxSession, toks);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (ind != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                ind.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                in.close();</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"游戏框架","date":"2017-09-25T07:44:48.000Z","_content":"``` Java\npublic class GameControl extends View implements Runnable{\n\tpublic int mIGameStatus = -1;\n\tpublic boolean mBLoop = false;\n\tpublic  GameControl(Context context){\n\t\tsuper(context);\n\t}\n\tpublic void initGame(){\n\t\tmBLoop = true;\n\t\tmIGameStatus = GameDefinition.Game_Logo;\n\t\tThread t = new Thread(this);\n\t\tt.start();\n\t}\n\tprotected void onDraw(Canvas canvas){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tpublic void run(){\n\t\twhile(mBLoop){\n\t\t\ttry{\n\t\t\t\tThread.sleep(500);\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tpostInvalidate();\n\t\t}\n\t}\n\tboolean onKeyDown(int keyCode){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n\tboolean onKeyUp(int keyCode){\n\t\treturn true;\n\t}\n\tpublic boolean onTouchEvent(MotionEvent event){\n\t\tint iAction = event.getAction();\n\t\tif(iAction == MotionEvent.ACTION_CANCEL){\n\t\t\t\n\t\t}else if(iAction == MotionEvent.ACTION_DOWN){\n\t\t}else if(iAction == MotionEvent.ACTION_MOVE){\n\t\t}\n\t\tint x = (int)event.getX();\n\t\tint y = (int)event.getY();\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n}\n\npublic abstract class GameObject{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic abstract void loadProperties(Vector v);\n\tpublic String toString(){\n\t\treturn (\"id=\"+id);\n\t}\n}\n\npublic class GameObjectQueue extends Hashtable{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic Object find(String gameObjectId){\n\t\tif(this.containsKey(gameObjectId)){\n\t\t\treturn this.get(gameObjectId);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic Object[] list(){\n\t\tObject[] result = new Object[this.size()];\n\t\tEnumeration enumer = this.elements();\n\t\tint i = 0;\n\t\twhile(enumer.hasMoreElements()){\n\t\t\tresult[i++] = enumer.nextElements();\n\t\t}\n\t\treturn result;\n\t}\n}\n\npublic class SimpleLayer extends GameObject{\n\tpublic static int WALKARENA = 1;\n\tpublic static int NO_WALKARENA = 2;\n\t@get\n\tprivate int[] mapData = null;\n\t@get\n\tprivate int tileWidth = 0;\n\t@get\n\tprivate int tileHeight = 0;\n\t@get\n\tprivate int tileCols = 0;\n\t@get\n\tprivate int tileRows = 0;\n\t@get,set\n\tprivate TiledLayer layer = null;\n\t@get\n\tprivate int type = 0;\n\t@get\n\tprivate String imageURL = null;\n\tpublic SimpleLayer(){\n\t\tsuper();\n\t}\n\tprivate int[] StringToIntArray(String s){\n\t\ts = StringExtension.removeToken(s,new String[]{\"\\t\",\" \",\"\\r\",\"\\n\"});\n\t\tObject[] objArr = StringExtension.split(new StringBuffer(s),\",\",StringExtension.INTEGER_ARRAY,false);\n\t\treturn StringExtension.objectArrayBatchToIntArray(objArr);\n\t}\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.tileWidth = Integer.parseInt((String)v.elementAt(1));\n\t\tthis.tileHeight = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.tileCols = Integer.parseInt((String)v.elementAt(3));\n\t\tthis.tileRows = Integer.parseInt((String)v.elementAt(4));\n\t\tthis.type = Integer.parseInt((String)v.elementAt(5));\n\t\tthis.imgURL = (String)v.elementAt(6);\n\t\tthis.mapData = StringToIntArray((String)v.elementAt(7));\n\t}\n\tpublic TiledLayer getLayer(){\n\t\treturn layer;\n\t}\n}\n\npublic class SimpleMap extends GameObject{\n\t@get,set\n\tprivate GameObjectQueue layerSet = null;\t//图层集合\n\t@get,set\n\tprivate GameObjectQueue npcSet = null;\t\t//NPC集合\n\t@get,set\n\tprivate GameObjectQueue mapLink = null;\t\t//连接器集合\n\t@get\n\tprivate int width = 0;\t\t\t\t\t\t//地图宽度\n\t@get\n\tprivate int height = 0;\t\t\t\t\t\t//地图高度\n\t@get\n\tprivate String name = null;\t\t\t\t\t//地图名称\n\tpublic SimpleMap(){\n\t\tsuper();\n\t}\n\t@Override\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.name = (String)v.elementAt(1);\n\t\tthis.width = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.height = Integer.parseInt((String)v.elementAt(3));\n\t}\n\tpublic String toString(){...}\n}\n\n//这里的Sprite类在什么地方？？？\npublic class Animator extends Sprite{\n\tprivate Calculagraph cal = null;\n\tpublic Animator(Bitmap img,int frameWidth,int frameHeight,int loopTime)\n}\n```","source":"_posts/游戏框架.md","raw":"---\ntitle: 游戏框架\ndate: 2017-09-25 15:44:48\ntags:\n---\n``` Java\npublic class GameControl extends View implements Runnable{\n\tpublic int mIGameStatus = -1;\n\tpublic boolean mBLoop = false;\n\tpublic  GameControl(Context context){\n\t\tsuper(context);\n\t}\n\tpublic void initGame(){\n\t\tmBLoop = true;\n\t\tmIGameStatus = GameDefinition.Game_Logo;\n\t\tThread t = new Thread(this);\n\t\tt.start();\n\t}\n\tprotected void onDraw(Canvas canvas){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tpublic void run(){\n\t\twhile(mBLoop){\n\t\t\ttry{\n\t\t\t\tThread.sleep(500);\n\t\t\t}catch(Exception e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tpostInvalidate();\n\t\t}\n\t}\n\tboolean onKeyDown(int keyCode){\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n\tboolean onKeyUp(int keyCode){\n\t\treturn true;\n\t}\n\tpublic boolean onTouchEvent(MotionEvent event){\n\t\tint iAction = event.getAction();\n\t\tif(iAction == MotionEvent.ACTION_CANCEL){\n\t\t\t\n\t\t}else if(iAction == MotionEvent.ACTION_DOWN){\n\t\t}else if(iAction == MotionEvent.ACTION_MOVE){\n\t\t}\n\t\tint x = (int)event.getX();\n\t\tint y = (int)event.getY();\n\t\tswitch(mIGameStatus){\n\t\t\tcase GameDefinition.Game_Logo:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_MainMenu:\n\t\t\t\tbreak;\n\t\t\tcase GameDefinition.Game_Help:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn true;\n\t}\n}\n\npublic abstract class GameObject{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic abstract void loadProperties(Vector v);\n\tpublic String toString(){\n\t\treturn (\"id=\"+id);\n\t}\n}\n\npublic class GameObjectQueue extends Hashtable{\n\tprivate String id = null;\n\tpublic String getId(){\n\t\treturn id;\n\t}\n\tpublic void setId(String id){\n\t\tthis.id = id;\n\t}\n\tpublic Object find(String gameObjectId){\n\t\tif(this.containsKey(gameObjectId)){\n\t\t\treturn this.get(gameObjectId);\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic Object[] list(){\n\t\tObject[] result = new Object[this.size()];\n\t\tEnumeration enumer = this.elements();\n\t\tint i = 0;\n\t\twhile(enumer.hasMoreElements()){\n\t\t\tresult[i++] = enumer.nextElements();\n\t\t}\n\t\treturn result;\n\t}\n}\n\npublic class SimpleLayer extends GameObject{\n\tpublic static int WALKARENA = 1;\n\tpublic static int NO_WALKARENA = 2;\n\t@get\n\tprivate int[] mapData = null;\n\t@get\n\tprivate int tileWidth = 0;\n\t@get\n\tprivate int tileHeight = 0;\n\t@get\n\tprivate int tileCols = 0;\n\t@get\n\tprivate int tileRows = 0;\n\t@get,set\n\tprivate TiledLayer layer = null;\n\t@get\n\tprivate int type = 0;\n\t@get\n\tprivate String imageURL = null;\n\tpublic SimpleLayer(){\n\t\tsuper();\n\t}\n\tprivate int[] StringToIntArray(String s){\n\t\ts = StringExtension.removeToken(s,new String[]{\"\\t\",\" \",\"\\r\",\"\\n\"});\n\t\tObject[] objArr = StringExtension.split(new StringBuffer(s),\",\",StringExtension.INTEGER_ARRAY,false);\n\t\treturn StringExtension.objectArrayBatchToIntArray(objArr);\n\t}\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.tileWidth = Integer.parseInt((String)v.elementAt(1));\n\t\tthis.tileHeight = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.tileCols = Integer.parseInt((String)v.elementAt(3));\n\t\tthis.tileRows = Integer.parseInt((String)v.elementAt(4));\n\t\tthis.type = Integer.parseInt((String)v.elementAt(5));\n\t\tthis.imgURL = (String)v.elementAt(6);\n\t\tthis.mapData = StringToIntArray((String)v.elementAt(7));\n\t}\n\tpublic TiledLayer getLayer(){\n\t\treturn layer;\n\t}\n}\n\npublic class SimpleMap extends GameObject{\n\t@get,set\n\tprivate GameObjectQueue layerSet = null;\t//图层集合\n\t@get,set\n\tprivate GameObjectQueue npcSet = null;\t\t//NPC集合\n\t@get,set\n\tprivate GameObjectQueue mapLink = null;\t\t//连接器集合\n\t@get\n\tprivate int width = 0;\t\t\t\t\t\t//地图宽度\n\t@get\n\tprivate int height = 0;\t\t\t\t\t\t//地图高度\n\t@get\n\tprivate String name = null;\t\t\t\t\t//地图名称\n\tpublic SimpleMap(){\n\t\tsuper();\n\t}\n\t@Override\n\tpublic void loadProperties(Vector v){\n\t\tthis.setId((String)v.elementAt(0));\n\t\tthis.name = (String)v.elementAt(1);\n\t\tthis.width = Integer.parseInt((String)v.elementAt(2));\n\t\tthis.height = Integer.parseInt((String)v.elementAt(3));\n\t}\n\tpublic String toString(){...}\n}\n\n//这里的Sprite类在什么地方？？？\npublic class Animator extends Sprite{\n\tprivate Calculagraph cal = null;\n\tpublic Animator(Bitmap img,int frameWidth,int frameHeight,int loopTime)\n}\n```","slug":"游戏框架","published":1,"updated":"2017-09-25T07:45:00.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghh001xeddxivt7vef8","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameControl</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> mIGameStatus = -<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> mBLoop = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">GameControl</span><span class=\"params\">(Context context)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>(context);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initGame</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tmBLoop = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\tmIGameStatus = GameDefinition.Game_Logo;</div><div class=\"line\">\t\tThread t = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);</div><div class=\"line\">\t\tt.start();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(mBLoop)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">500</span>);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpostInvalidate();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyUp</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> iAction = event.getAction();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_CANCEL)&#123;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_DOWN)&#123;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_MOVE)&#123;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>)event.getX();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>)event.getY();</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (<span class=\"string\">\"id=\"</span>+id);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObjectQueue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Hashtable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">find</span><span class=\"params\">(String gameObjectId)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.containsKey(gameObjectId))&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.get(gameObjectId);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">public</span> Object[] list()&#123;</div><div class=\"line\">\t\tObject[] result = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.size()];</div><div class=\"line\">\t\tEnumeration enumer = <span class=\"keyword\">this</span>.elements();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(enumer.hasMoreElements())&#123;</div><div class=\"line\">\t\t\tresult[i++] = enumer.nextElements();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleLayer</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> WALKARENA = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> NO_WALKARENA = <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] mapData = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileWidth = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileHeight = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileCols = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileRows = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> TiledLayer layer = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> type = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String imageURL = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] StringToIntArray(String s)&#123;</div><div class=\"line\">\t\ts = StringExtension.removeToken(s,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"\\t\"</span>,<span class=\"string\">\" \"</span>,<span class=\"string\">\"\\r\"</span>,<span class=\"string\">\"\\n\"</span>&#125;);</div><div class=\"line\">\t\tObject[] objArr = StringExtension.split(<span class=\"keyword\">new</span> StringBuffer(s),<span class=\"string\">\",\"</span>,StringExtension.INTEGER_ARRAY,<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> StringExtension.objectArrayBatchToIntArray(objArr);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileWidth = Integer.parseInt((String)v.elementAt(<span class=\"number\">1</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileHeight = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileCols = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileRows = Integer.parseInt((String)v.elementAt(<span class=\"number\">4</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.type = Integer.parseInt((String)v.elementAt(<span class=\"number\">5</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.imgURL = (String)v.elementAt(<span class=\"number\">6</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.mapData = StringToIntArray((String)v.elementAt(<span class=\"number\">7</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TiledLayer <span class=\"title\">getLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> layer;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleMap</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue layerSet = <span class=\"keyword\">null</span>;\t<span class=\"comment\">//图层集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue npcSet = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//NPC集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue mapLink = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//连接器集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图宽度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图高度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name = <span class=\"keyword\">null</span>;\t\t\t\t\t<span class=\"comment\">//地图名称</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = (String)v.elementAt(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.width = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.height = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;...&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//这里的Sprite类在什么地方？？？</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Sprite</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> Calculagraph cal = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Animator</span><span class=\"params\">(Bitmap img,<span class=\"keyword\">int</span> frameWidth,<span class=\"keyword\">int</span> frameHeight,<span class=\"keyword\">int</span> loopTime)</span></span></div><div class=\"line\"><span class=\"function\">&#125;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameControl</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> mIGameStatus = -<span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> mBLoop = <span class=\"keyword\">false</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">GameControl</span><span class=\"params\">(Context context)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>(context);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initGame</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tmBLoop = <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\tmIGameStatus = GameDefinition.Game_Logo;</div><div class=\"line\">\t\tThread t = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">this</span>);</div><div class=\"line\">\t\tt.start();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(mBLoop)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</div><div class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">500</span>);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">\t\t\t\te.printStackTrace();</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpostInvalidate();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyUp</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> iAction = event.getAction();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_CANCEL)&#123;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_DOWN)&#123;</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(iAction == MotionEvent.ACTION_MOVE)&#123;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>)event.getX();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>)event.getY();</div><div class=\"line\">\t\t<span class=\"keyword\">switch</span>(mIGameStatus)&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Logo:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_MainMenu:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">case</span> GameDefinition.Game_Help:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (<span class=\"string\">\"id=\"</span>+id);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameObjectQueue</span> <span class=\"keyword\">extends</span> <span class=\"title\">Hashtable</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> String id = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getId</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(String id)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">find</span><span class=\"params\">(String gameObjectId)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.containsKey(gameObjectId))&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.get(gameObjectId);</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">public</span> Object[] list()&#123;</div><div class=\"line\">\t\tObject[] result = <span class=\"keyword\">new</span> Object[<span class=\"keyword\">this</span>.size()];</div><div class=\"line\">\t\tEnumeration enumer = <span class=\"keyword\">this</span>.elements();</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span>(enumer.hasMoreElements())&#123;</div><div class=\"line\">\t\t\tresult[i++] = enumer.nextElements();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> result;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleLayer</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> WALKARENA = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> NO_WALKARENA = <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] mapData = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileWidth = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileHeight = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileCols = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> tileRows = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> TiledLayer layer = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> type = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String imageURL = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] StringToIntArray(String s)&#123;</div><div class=\"line\">\t\ts = StringExtension.removeToken(s,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"\\t\"</span>,<span class=\"string\">\" \"</span>,<span class=\"string\">\"\\r\"</span>,<span class=\"string\">\"\\n\"</span>&#125;);</div><div class=\"line\">\t\tObject[] objArr = StringExtension.split(<span class=\"keyword\">new</span> StringBuffer(s),<span class=\"string\">\",\"</span>,StringExtension.INTEGER_ARRAY,<span class=\"keyword\">false</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> StringExtension.objectArrayBatchToIntArray(objArr);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileWidth = Integer.parseInt((String)v.elementAt(<span class=\"number\">1</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileHeight = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileCols = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.tileRows = Integer.parseInt((String)v.elementAt(<span class=\"number\">4</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.type = Integer.parseInt((String)v.elementAt(<span class=\"number\">5</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.imgURL = (String)v.elementAt(<span class=\"number\">6</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.mapData = StringToIntArray((String)v.elementAt(<span class=\"number\">7</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> TiledLayer <span class=\"title\">getLayer</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> layer;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SimpleMap</span> <span class=\"keyword\">extends</span> <span class=\"title\">GameObject</span></span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue layerSet = <span class=\"keyword\">null</span>;\t<span class=\"comment\">//图层集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue npcSet = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//NPC集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span>,set</div><div class=\"line\">\t<span class=\"keyword\">private</span> GameObjectQueue mapLink = <span class=\"keyword\">null</span>;\t\t<span class=\"comment\">//连接器集合</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图宽度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">//地图高度</span></div><div class=\"line\">\t<span class=\"meta\">@get</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> String name = <span class=\"keyword\">null</span>;\t\t\t\t\t<span class=\"comment\">//地图名称</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SimpleMap</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loadProperties</span><span class=\"params\">(Vector v)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.setId((String)v.elementAt(<span class=\"number\">0</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.name = (String)v.elementAt(<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.width = Integer.parseInt((String)v.elementAt(<span class=\"number\">2</span>));</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.height = Integer.parseInt((String)v.elementAt(<span class=\"number\">3</span>));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;...&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//这里的Sprite类在什么地方？？？</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animator</span> <span class=\"keyword\">extends</span> <span class=\"title\">Sprite</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> Calculagraph cal = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Animator</span><span class=\"params\">(Bitmap img,<span class=\"keyword\">int</span> frameWidth,<span class=\"keyword\">int</span> frameHeight,<span class=\"keyword\">int</span> loopTime)</span></span></div><div class=\"line\"><span class=\"function\">&#125;</span></div></pre></td></tr></table></figure>"},{"title":"短信转彩信条数限制","date":"2017-09-21T05:03:48.000Z","_content":"packages/apps/Mms/res/xml/mms_config.xml\n``` xml\n<int name=\"smsToMmsTextThreshold\">8</int>\n```","source":"_posts/短信转彩信条数限制.md","raw":"---\ntitle: 短信转彩信条数限制\ndate: 2017-09-21 13:03:48\ntags:\n---\npackages/apps/Mms/res/xml/mms_config.xml\n``` xml\n<int name=\"smsToMmsTextThreshold\">8</int>\n```","slug":"短信转彩信条数限制","published":1,"updated":"2017-09-21T05:55:35.017Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghi001yeddxeaziupn0","content":"<p>packages/apps/Mms/res/xml/mms_config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">int</span> <span class=\"attr\">name</span>=<span class=\"string\">\"smsToMmsTextThreshold\"</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">int</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Mms/res/xml/mms_config.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">int</span> <span class=\"attr\">name</span>=<span class=\"string\">\"smsToMmsTextThreshold\"</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">int</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"第一次插卡弹出apn对话框","date":"2017-09-22T02:42:23.000Z","_content":"\n### 方法a:跳转\n``` Java\n//单卡的时候跳转到ApnSettings\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.settings\", \"com.android.settings.ApnSettings\"));\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n``` Java\n//双卡的时候跳转到MultipleSimActivity\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.phone\", \"com.mediatek.settings.MultipleSimActivity\"));\t\t//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n\n### 方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\n``` Java\nprivate void showApnDialog(){\n    AlertDialog.Builder builder = new AlertDialog.Builder(Launcher.this);\n    builder.setTitle(\"APN Config\");\n    builder.setMessage(\"The default APN Config maybe incorrect, whether reselect?\");\n    builder.setPositiveButton(\"yes\",new DialogInterface.OnClickListener(){\n        @Override\n        public void onClick(DialogInterface dialog,int which){\n            Intent intent = new Intent();\n            intent.setClassName(\"com.android.phone\", \"com.android.phone.MobileNetworkSettings\");\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            startActivity(intent);\n        }\n    });\n    builder.setNegativeButton(\"no\",null);\n    builder.create().show();\n}\n```","source":"_posts/第一次插卡弹出apn对话框.md","raw":"---\ntitle: 第一次插卡弹出apn对话框\ndate: 2017-09-22 10:42:23\ntags:\n---\n\n### 方法a:跳转\n``` Java\n//单卡的时候跳转到ApnSettings\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.settings\", \"com.android.settings.ApnSettings\"));\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n``` Java\n//双卡的时候跳转到MultipleSimActivity\nIntent intent = new Intent();\nintent.setComponent(new ComponentName(\"com.android.phone\", \"com.mediatek.settings.MultipleSimActivity\"));\t\t//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\nstartActivity(intent);\n```\n\n### 方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\n``` Java\nprivate void showApnDialog(){\n    AlertDialog.Builder builder = new AlertDialog.Builder(Launcher.this);\n    builder.setTitle(\"APN Config\");\n    builder.setMessage(\"The default APN Config maybe incorrect, whether reselect?\");\n    builder.setPositiveButton(\"yes\",new DialogInterface.OnClickListener(){\n        @Override\n        public void onClick(DialogInterface dialog,int which){\n            Intent intent = new Intent();\n            intent.setClassName(\"com.android.phone\", \"com.android.phone.MobileNetworkSettings\");\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            startActivity(intent);\n        }\n    });\n    builder.setNegativeButton(\"no\",null);\n    builder.create().show();\n}\n```","slug":"第一次插卡弹出apn对话框","published":1,"updated":"2017-09-22T02:44:36.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghi001zeddxk2zzzrvq","content":"<h3 id=\"方法a-跳转\"><a href=\"#方法a-跳转\" class=\"headerlink\" title=\"方法a:跳转\"></a>方法a:跳转</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//单卡的时候跳转到ApnSettings</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.settings\"</span>, <span class=\"string\">\"com.android.settings.ApnSettings\"</span>));</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//双卡的时候跳转到MultipleSimActivity</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.mediatek.settings.MultipleSimActivity\"</span>));\t\t<span class=\"comment\">//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名</span></div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h3 id=\"方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\"><a href=\"#方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\" class=\"headerlink\" title=\"方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\"></a>方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showApnDialog</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(Launcher.<span class=\"keyword\">this</span>);</div><div class=\"line\">    builder.setTitle(<span class=\"string\">\"APN Config\"</span>);</div><div class=\"line\">    builder.setMessage(<span class=\"string\">\"The default APN Config maybe incorrect, whether reselect?\"</span>);</div><div class=\"line\">    builder.setPositiveButton(<span class=\"string\">\"yes\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()&#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog,<span class=\"keyword\">int</span> which)</span></span>&#123;</div><div class=\"line\">            Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">            intent.setClassName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.android.phone.MobileNetworkSettings\"</span>);</div><div class=\"line\">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">            startActivity(intent);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    builder.setNegativeButton(<span class=\"string\">\"no\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">    builder.create().show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法a-跳转\"><a href=\"#方法a-跳转\" class=\"headerlink\" title=\"方法a:跳转\"></a>方法a:跳转</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//单卡的时候跳转到ApnSettings</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.settings\"</span>, <span class=\"string\">\"com.android.settings.ApnSettings\"</span>));</div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//双卡的时候跳转到MultipleSimActivity</span></div><div class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">intent.setComponent(<span class=\"keyword\">new</span> ComponentName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.mediatek.settings.MultipleSimActivity\"</span>));\t\t<span class=\"comment\">//这里注意前面的包名，应该写manifest.xml中的报名，而不是Activity中的包名</span></div><div class=\"line\">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h3 id=\"方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\"><a href=\"#方法b-在Launcher-java中的dataDialog的onDismissListener-中调用showApnDialog\" class=\"headerlink\" title=\"方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()\"></a>方法b:在Launcher.java中的dataDialog的onDismissListener()中调用showApnDialog()</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showApnDialog</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    AlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(Launcher.<span class=\"keyword\">this</span>);</div><div class=\"line\">    builder.setTitle(<span class=\"string\">\"APN Config\"</span>);</div><div class=\"line\">    builder.setMessage(<span class=\"string\">\"The default APN Config maybe incorrect, whether reselect?\"</span>);</div><div class=\"line\">    builder.setPositiveButton(<span class=\"string\">\"yes\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()&#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog,<span class=\"keyword\">int</span> which)</span></span>&#123;</div><div class=\"line\">            Intent intent = <span class=\"keyword\">new</span> Intent();</div><div class=\"line\">            intent.setClassName(<span class=\"string\">\"com.android.phone\"</span>, <span class=\"string\">\"com.android.phone.MobileNetworkSettings\"</span>);</div><div class=\"line\">            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">            startActivity(intent);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    builder.setNegativeButton(<span class=\"string\">\"no\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">    builder.create().show();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"给APK进行系统签名","date":"2017-09-25T06:53:17.000Z","_content":"在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，\n然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8 \n然后三个文件+apk文件，同一个路径下。\n执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\n然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。","source":"_posts/给APK进行系统签名.md","raw":"---\ntitle: 给APK进行系统签名\ndate: 2017-09-25 14:53:17\ntags:\n---\n在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，\n然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8 \n然后三个文件+apk文件，同一个路径下。\n执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\n然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。","slug":"给APK进行系统签名","published":1,"updated":"2017-09-25T06:53:40.787Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghj0020eddxruod1403","content":"<p>在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，<br>然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8<br>然后三个文件+apk文件，同一个路径下。<br>执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk<br>然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在已经编译好的工程中:out/host/linux-x86/framework/signapk.jar　取出 signapk.jar　文件，<br>然后从　build/target/product/security/项目名字/ 下面取出另外两个文件　platform.x509.pem　和　platform.pk8<br>然后三个文件+apk文件，同一个路径下。<br>执行签名操作 java –jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk<br>然后apk就相当于签名，获取了系统权限。当然，名字实际上也重新命名了。</p>\n"},{"title":"网络请求","date":"2017-09-22T05:01:47.000Z","_content":"1. Http\n``` Java\n//HttpClient:\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nHttpResponse response = httpClient.execute(httpGet);\nHttpEntity entity = response.getEntity();\nif(entity != null){\n    InputStream inputStream = entity.getContent();\n    int length;\n    byte[] buffer = new byte[2048];\n    String temp = \"\";\n    StringBuilder builder = new StringBuilder();\n    while((length = inputStream.read(buffer)) != -1){\n        temp = new String(buffer,0,length);\n        builder.append(temp);\n    }\n}\n\n//请求参数的几种常用方法\n//HttpGet\n\nHttpGet httpGet = new HttpGet(\"http://www.google.com/search?hl=en&q=httpclient&btnG=Google+Search&aq=f&oq\");\n\n//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",\"q=httpclient&btnG=Google+Search&aq=f&oq\",null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());    //这个和上面HttpGet的URL是一样的\n\n//通过List<NameValuePair>提交参数\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"q\",\"httpClient\"));\nparams.add(new BasicNameValuePair(\"btnG\",\"Google Search\"));\nparams.add(new BasicNameValuePair(\"aq\",\"f\"));\nparams.add(new BasicNameValuePair(\"oq\",null));\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",URLEncodedUtils.format(params,\"UTF-8\"),null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());\n\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.getProtocolVersion()                    //协议版本\nresponse.getStatusLine().getStatusCode();        //响应状态码\nresponse.getStatusLine().getReasonPhrase();        //响应状态字符串\nresponse.getStatusLine().toString();            //响应全报文\n\n//响应头\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.addHeader(\"Set-Cookie\",\"c1=a; path=/; domain=localhost\");\nresponse.addHeader(\"Set-Cookie\",\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\");\nHeader h1 = response.getFirstHeader(\"Set-Cookie\");\nHeader h2 = response.getLastHeader(\"Set-Cookie\");\n//遍历方法1\nHeader[] hs = response.getHeaders(\"Set-Cookie\");                \n//遍历方法2\nHeaderIterator it = response.headerIterator(\"Set-Cookie\");        \nwhile(it.hasNext()){\n    System.out.println(it.next());\n}\n//遍历方法3\nHeaderElementIterator it = new BasicHeaderElementIterator(response.headerIterator(\"Set-Cookie\"));\nwhile(it.hasNext()){\n    HeaderElement element = it.nextElement();\n    NameValuePair[] params = element.getParameters();\n    for(int i = 0; i < params.length; i++){\n        \n    }\n}\n```\n\n2. FileEntiry\n``` Java\nFile file = new File(\"somefile.txt\");\nFileEntity entity = new FileEntity(file,\"text/plain; charset=\\\"UTF-8\\\"\");\nHttpPost httpPost = new HttpPost(\"http://localhost/action.do\");\nhttpPost.setEntity(entity);\n```\n\n3. ContentProducer\n``` Java\nContentProducer contentProducer = new ContentProducer(){\n    public void writeTo(OutputStream outStream) throws IOException{\n        Writer writer = new OutputStreamWriter(outStream,\"UTF-8\");\n        writer.write(\"<response>\");\n        writer.write(\"    <content>\");\n        writer.write(\"    important stuff\");\n        writer.write(\"    </content>\");\n        writer.write(\"</response>\");\n        writer.flush();\n    }\n};\nHttpEntity entity = new EntityTemplate(contentProducer);\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n4. HTML表单\n``` Java\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"param1\",\"value1\"));\nparams.add(new BasicNameValuePair(\"param2\",\"value2\"));\nUrlEncodedFormEntity entity = new UrlEncodedFormEntity(params,\"UTF-8\");\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n5. 响应控制器?\n``` Java\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nResponseHandler<byte[]> handler = new ResponseHandler<byte[]>(){\n    public byte[] handleResponse(HttpResonse response) throws ClientProtocolException,IOException{\n        HttpEntity entity = response.getEntity();\n        if(entity != null){\n            return EntityUtils.toByteArray(entity);\n        }else{\n            return null;\n        }\n    }\n};\nbyte[] response = httpClient.execute(httpGet,handler);\n```\n\n6. DefaultHttpClient\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpRequestRetryHandler myRetryHandler = new HttpRequestRetryHandler(){\n    public boolean retryRequest(IOException e,int executionCount,HttpContext context){\n        if(executionCount >= 5){\n            return false;\n        }\n        if(exception instanceof NoHttpResponseException){\n            return true;\n        }\n        if(exception instanceof SSLHandshakeException){\n            return false;\n        }\n        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);\n        boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n        if(idempotent){\n            return true;\n        }\n        return false;\n    }\n};\nhttpClient.setHttpRequestRetryHandler(myRetryHandler);\n```\n\n7. DefaultHttpClient2\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpContext localContext = new BasicHttpContext();\nAtomicInteger count = new AtomicInteger(1);\nlocalContext.setAttribute(\"count\",count);\nhttpClient.addRequestInterceptor(new HttpRequestInterceptor(){\n    public void process(final HttpRequest request,final HttpContext context) throws HttpExeption,IOException{\n        AtomicInteger count = (AtomicInteger)context.getAttribute(\"count\");\n        request.addHeader(\"count\",Integer.toString(count.getAndIncrement()));\n    }\n});\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nfor(int i = 0;i < 10; i++){\n    HttpResponse response = httpClient.execute(httpGet,localContext);\n    HttpEntity entity = response.getEntity();\n    if(entity != null){\n        entity.consumeContent();\n    }\n}\n```\n\n8. PlainSocketFactory\n``` Java\nPlainSocketFactory psf = PlainSocketFactory.getSocketFactory();\nSocket socket = psf.createSocket();\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\npsf.connectSocket(socket,\"localhost\",8080,null,-1,params);\n```\n\n9. SSL\n``` Java\nTrustManager easyTrustManager = new X509TrustManager(){\n    public void checkClientTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public void checkServerTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public X509Certificate[] getAcceptedIssuers(){\n    \treturn null;\n    }\n};\nSSLContext sslcontext = SSLContext.getInstance(\"TLS\");\nsslcontext.init(null,new TrustManager[]{easyTrustManager},null);\nSSLSocketFactory sf = new SSLSocketFactory(sslcontext);\nSSLSocket socket = (SSLSocket)sf.createSocket();\nsocket.setEnabledCipherSuites(new String[]{\"SSL_RSA_WITH_RC4_128_MD5\"});\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\nsf.connectionSocket(socket,\"localhost\",443,null,-1,parmas);\n```","source":"_posts/网络请求.md","raw":"---\ntitle: 网络请求\ndate: 2017-09-22 13:01:47\ntags:\n---\n1. Http\n``` Java\n//HttpClient:\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nHttpResponse response = httpClient.execute(httpGet);\nHttpEntity entity = response.getEntity();\nif(entity != null){\n    InputStream inputStream = entity.getContent();\n    int length;\n    byte[] buffer = new byte[2048];\n    String temp = \"\";\n    StringBuilder builder = new StringBuilder();\n    while((length = inputStream.read(buffer)) != -1){\n        temp = new String(buffer,0,length);\n        builder.append(temp);\n    }\n}\n\n//请求参数的几种常用方法\n//HttpGet\n\nHttpGet httpGet = new HttpGet(\"http://www.google.com/search?hl=en&q=httpclient&btnG=Google+Search&aq=f&oq\");\n\n//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",\"q=httpclient&btnG=Google+Search&aq=f&oq\",null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());    //这个和上面HttpGet的URL是一样的\n\n//通过List<NameValuePair>提交参数\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"q\",\"httpClient\"));\nparams.add(new BasicNameValuePair(\"btnG\",\"Google Search\"));\nparams.add(new BasicNameValuePair(\"aq\",\"f\"));\nparams.add(new BasicNameValuePair(\"oq\",null));\nURI uri = URIUtils.createURI(\"http\",\"www.google.com\",-1,\"/search\",URLEncodedUtils.format(params,\"UTF-8\"),null);\nHttpGet httpGet = new HttpGet(uri);\nSystem.out.println(httpGet.getURI());\n\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.getProtocolVersion()                    //协议版本\nresponse.getStatusLine().getStatusCode();        //响应状态码\nresponse.getStatusLine().getReasonPhrase();        //响应状态字符串\nresponse.getStatusLine().toString();            //响应全报文\n\n//响应头\nHttpResponse response = new BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,\"OK\");\nresponse.addHeader(\"Set-Cookie\",\"c1=a; path=/; domain=localhost\");\nresponse.addHeader(\"Set-Cookie\",\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\");\nHeader h1 = response.getFirstHeader(\"Set-Cookie\");\nHeader h2 = response.getLastHeader(\"Set-Cookie\");\n//遍历方法1\nHeader[] hs = response.getHeaders(\"Set-Cookie\");                \n//遍历方法2\nHeaderIterator it = response.headerIterator(\"Set-Cookie\");        \nwhile(it.hasNext()){\n    System.out.println(it.next());\n}\n//遍历方法3\nHeaderElementIterator it = new BasicHeaderElementIterator(response.headerIterator(\"Set-Cookie\"));\nwhile(it.hasNext()){\n    HeaderElement element = it.nextElement();\n    NameValuePair[] params = element.getParameters();\n    for(int i = 0; i < params.length; i++){\n        \n    }\n}\n```\n\n2. FileEntiry\n``` Java\nFile file = new File(\"somefile.txt\");\nFileEntity entity = new FileEntity(file,\"text/plain; charset=\\\"UTF-8\\\"\");\nHttpPost httpPost = new HttpPost(\"http://localhost/action.do\");\nhttpPost.setEntity(entity);\n```\n\n3. ContentProducer\n``` Java\nContentProducer contentProducer = new ContentProducer(){\n    public void writeTo(OutputStream outStream) throws IOException{\n        Writer writer = new OutputStreamWriter(outStream,\"UTF-8\");\n        writer.write(\"<response>\");\n        writer.write(\"    <content>\");\n        writer.write(\"    important stuff\");\n        writer.write(\"    </content>\");\n        writer.write(\"</response>\");\n        writer.flush();\n    }\n};\nHttpEntity entity = new EntityTemplate(contentProducer);\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n4. HTML表单\n``` Java\nList<NameValuePair> params = new ArrayList<NameValuePair>();\nparams.add(new BasicNameValuePair(\"param1\",\"value1\"));\nparams.add(new BasicNameValuePair(\"param2\",\"value2\"));\nUrlEncodedFormEntity entity = new UrlEncodedFormEntity(params,\"UTF-8\");\nHttpPost httpPost = new HttpPost(\"http://localhost/handler.do\");\nhttpPost.setEntity(entity);\n```\n\n5. 响应控制器?\n``` Java\nHttpClient httpClient = new DefaultHttpClient();\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nResponseHandler<byte[]> handler = new ResponseHandler<byte[]>(){\n    public byte[] handleResponse(HttpResonse response) throws ClientProtocolException,IOException{\n        HttpEntity entity = response.getEntity();\n        if(entity != null){\n            return EntityUtils.toByteArray(entity);\n        }else{\n            return null;\n        }\n    }\n};\nbyte[] response = httpClient.execute(httpGet,handler);\n```\n\n6. DefaultHttpClient\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpRequestRetryHandler myRetryHandler = new HttpRequestRetryHandler(){\n    public boolean retryRequest(IOException e,int executionCount,HttpContext context){\n        if(executionCount >= 5){\n            return false;\n        }\n        if(exception instanceof NoHttpResponseException){\n            return true;\n        }\n        if(exception instanceof SSLHandshakeException){\n            return false;\n        }\n        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);\n        boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n        if(idempotent){\n            return true;\n        }\n        return false;\n    }\n};\nhttpClient.setHttpRequestRetryHandler(myRetryHandler);\n```\n\n7. DefaultHttpClient2\n``` Java\nDefaultHttpClient httpClient = new DefaultHttpClient();\nHttpContext localContext = new BasicHttpContext();\nAtomicInteger count = new AtomicInteger(1);\nlocalContext.setAttribute(\"count\",count);\nhttpClient.addRequestInterceptor(new HttpRequestInterceptor(){\n    public void process(final HttpRequest request,final HttpContext context) throws HttpExeption,IOException{\n        AtomicInteger count = (AtomicInteger)context.getAttribute(\"count\");\n        request.addHeader(\"count\",Integer.toString(count.getAndIncrement()));\n    }\n});\nHttpGet httpGet = new HttpGet(\"http://localhost/\");\nfor(int i = 0;i < 10; i++){\n    HttpResponse response = httpClient.execute(httpGet,localContext);\n    HttpEntity entity = response.getEntity();\n    if(entity != null){\n        entity.consumeContent();\n    }\n}\n```\n\n8. PlainSocketFactory\n``` Java\nPlainSocketFactory psf = PlainSocketFactory.getSocketFactory();\nSocket socket = psf.createSocket();\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\npsf.connectSocket(socket,\"localhost\",8080,null,-1,params);\n```\n\n9. SSL\n``` Java\nTrustManager easyTrustManager = new X509TrustManager(){\n    public void checkClientTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public void checkServerTrusted(X509Certificate[] chain,String authType) throws CertificateException{\n    }\n    public X509Certificate[] getAcceptedIssuers(){\n    \treturn null;\n    }\n};\nSSLContext sslcontext = SSLContext.getInstance(\"TLS\");\nsslcontext.init(null,new TrustManager[]{easyTrustManager},null);\nSSLSocketFactory sf = new SSLSocketFactory(sslcontext);\nSSLSocket socket = (SSLSocket)sf.createSocket();\nsocket.setEnabledCipherSuites(new String[]{\"SSL_RSA_WITH_RC4_128_MD5\"});\nHttpParams params = new BasicHttpParams();\nparams.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,1000L);\nsf.connectionSocket(socket,\"localhost\",443,null,-1,parmas);\n```","slug":"网络请求","published":1,"updated":"2017-09-22T05:11:37.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghj0021eddxa8ncuret","content":"<ol>\n<li><p>Http</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//HttpClient:</span></div><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">HttpResponse response = httpClient.execute(httpGet);</div><div class=\"line\">HttpEntity entity = response.getEntity();</div><div class=\"line\"><span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    InputStream inputStream = entity.getContent();</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2048</span>];</div><div class=\"line\">    String temp = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">while</span>((length = inputStream.read(buffer)) != -<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        temp = <span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,length);</div><div class=\"line\">        builder.append(temp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请求参数的几种常用方法</span></div><div class=\"line\"><span class=\"comment\">//HttpGet</span></div><div class=\"line\"></div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://www.google.com/search?hl=en&amp;q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)</span></div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,<span class=\"string\">\"q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());    <span class=\"comment\">//这个和上面HttpGet的URL是一样的</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通过List&lt;NameValuePair&gt;提交参数</span></div><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"q\"</span>,<span class=\"string\">\"httpClient\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"btnG\"</span>,<span class=\"string\">\"Google Search\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"aq\"</span>,<span class=\"string\">\"f\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"oq\"</span>,<span class=\"keyword\">null</span>));</div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,URLEncodedUtils.format(params,<span class=\"string\">\"UTF-8\"</span>),<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());</div><div class=\"line\"></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.getProtocolVersion()                    <span class=\"comment\">//协议版本</span></div><div class=\"line\">response.getStatusLine().getStatusCode();        <span class=\"comment\">//响应状态码</span></div><div class=\"line\">response.getStatusLine().getReasonPhrase();        <span class=\"comment\">//响应状态字符串</span></div><div class=\"line\">response.getStatusLine().toString();            <span class=\"comment\">//响应全报文</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//响应头</span></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c1=a; path=/; domain=localhost\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\"</span>);</div><div class=\"line\">Header h1 = response.getFirstHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\">Header h2 = response.getLastHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\"><span class=\"comment\">//遍历方法1</span></div><div class=\"line\">Header[] hs = response.getHeaders(<span class=\"string\">\"Set-Cookie\"</span>);                </div><div class=\"line\"><span class=\"comment\">//遍历方法2</span></div><div class=\"line\">HeaderIterator it = response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>);        </div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    System.out.println(it.next());</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//遍历方法3</span></div><div class=\"line\">HeaderElementIterator it = <span class=\"keyword\">new</span> BasicHeaderElementIterator(response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>));</div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    HeaderElement element = it.nextElement();</div><div class=\"line\">    NameValuePair[] params = element.getParameters();</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; params.length; i++)&#123;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>FileEntiry</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"somefile.txt\"</span>);</div><div class=\"line\">FileEntity entity = <span class=\"keyword\">new</span> FileEntity(file,<span class=\"string\">\"text/plain; charset=\\\"UTF-8\\\"\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/action.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>ContentProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentProducer contentProducer = <span class=\"keyword\">new</span> ContentProducer()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outStream)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</div><div class=\"line\">        Writer writer = <span class=\"keyword\">new</span> OutputStreamWriter(outStream,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;response&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    important stuff\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;/content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;/response&gt;\"</span>);</div><div class=\"line\">        writer.flush();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">HttpEntity entity = <span class=\"keyword\">new</span> EntityTemplate(contentProducer);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML表单</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param1\"</span>,<span class=\"string\">\"value1\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param2\"</span>,<span class=\"string\">\"value2\"</span>));</div><div class=\"line\">UrlEncodedFormEntity entity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(params,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>响应控制器?</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt; handler = <span class=\"keyword\">new</span> ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt;()&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] handleResponse(HttpResonse response) <span class=\"keyword\">throws</span> ClientProtocolException,IOException&#123;</div><div class=\"line\">        HttpEntity entity = response.getEntity();</div><div class=\"line\">        <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EntityUtils.toByteArray(entity);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] response = httpClient.execute(httpGet,handler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpRequestRetryHandler myRetryHandler = <span class=\"keyword\">new</span> HttpRequestRetryHandler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">retryRequest</span><span class=\"params\">(IOException e,<span class=\"keyword\">int</span> executionCount,HttpContext context)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(executionCount &gt;= <span class=\"number\">5</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> NoHttpResponseException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> SSLHandshakeException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> idempotent = !(request <span class=\"keyword\">instanceof</span> HttpEntityEnclosingRequest);</div><div class=\"line\">        <span class=\"keyword\">if</span>(idempotent)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">httpClient.setHttpRequestRetryHandler(myRetryHandler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient2</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpContext localContext = <span class=\"keyword\">new</span> BasicHttpContext();</div><div class=\"line\">AtomicInteger count = <span class=\"keyword\">new</span> AtomicInteger(<span class=\"number\">1</span>);</div><div class=\"line\">localContext.setAttribute(<span class=\"string\">\"count\"</span>,count);</div><div class=\"line\">httpClient.addRequestInterceptor(<span class=\"keyword\">new</span> HttpRequestInterceptor()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(<span class=\"keyword\">final</span> HttpRequest request,<span class=\"keyword\">final</span> HttpContext context)</span> <span class=\"keyword\">throws</span> HttpExeption,IOException</span>&#123;</div><div class=\"line\">        AtomicInteger count = (AtomicInteger)context.getAttribute(<span class=\"string\">\"count\"</span>);</div><div class=\"line\">        request.addHeader(<span class=\"string\">\"count\"</span>,Integer.toString(count.getAndIncrement()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>; i++)&#123;</div><div class=\"line\">    HttpResponse response = httpClient.execute(httpGet,localContext);</div><div class=\"line\">    HttpEntity entity = response.getEntity();</div><div class=\"line\">    <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        entity.consumeContent();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>PlainSocketFactory</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PlainSocketFactory psf = PlainSocketFactory.getSocketFactory();</div><div class=\"line\">Socket socket = psf.createSocket();</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">psf.connectSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">8080</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,params);</div></pre></td></tr></table></figure>\n</li>\n<li><p>SSL</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">TrustManager easyTrustManager = <span class=\"keyword\">new</span> X509TrustManager()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers()&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">SSLContext sslcontext = SSLContext.getInstance(<span class=\"string\">\"TLS\"</span>);</div><div class=\"line\">sslcontext.init(<span class=\"keyword\">null</span>,<span class=\"keyword\">new</span> TrustManager[]&#123;easyTrustManager&#125;,<span class=\"keyword\">null</span>);</div><div class=\"line\">SSLSocketFactory sf = <span class=\"keyword\">new</span> SSLSocketFactory(sslcontext);</div><div class=\"line\">SSLSocket socket = (SSLSocket)sf.createSocket();</div><div class=\"line\">socket.setEnabledCipherSuites(<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"SSL_RSA_WITH_RC4_128_MD5\"</span>&#125;);</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">sf.connectionSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">443</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,parmas);</div></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>Http</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//HttpClient:</span></div><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">HttpResponse response = httpClient.execute(httpGet);</div><div class=\"line\">HttpEntity entity = response.getEntity();</div><div class=\"line\"><span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">    InputStream inputStream = entity.getContent();</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">2048</span>];</div><div class=\"line\">    String temp = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">while</span>((length = inputStream.read(buffer)) != -<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        temp = <span class=\"keyword\">new</span> String(buffer,<span class=\"number\">0</span>,length);</div><div class=\"line\">        builder.append(temp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//请求参数的几种常用方法</span></div><div class=\"line\"><span class=\"comment\">//HttpGet</span></div><div class=\"line\"></div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://www.google.com/search?hl=en&amp;q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//URIUtils:URIUtils.createURI(scheme, host, port, path, query, fragment)</span></div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,<span class=\"string\">\"q=httpclient&amp;btnG=Google+Search&amp;aq=f&amp;oq\"</span>,<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());    <span class=\"comment\">//这个和上面HttpGet的URL是一样的</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通过List&lt;NameValuePair&gt;提交参数</span></div><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"q\"</span>,<span class=\"string\">\"httpClient\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"btnG\"</span>,<span class=\"string\">\"Google Search\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"aq\"</span>,<span class=\"string\">\"f\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"oq\"</span>,<span class=\"keyword\">null</span>));</div><div class=\"line\">URI uri = URIUtils.createURI(<span class=\"string\">\"http\"</span>,<span class=\"string\">\"www.google.com\"</span>,-<span class=\"number\">1</span>,<span class=\"string\">\"/search\"</span>,URLEncodedUtils.format(params,<span class=\"string\">\"UTF-8\"</span>),<span class=\"keyword\">null</span>);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(uri);</div><div class=\"line\">System.out.println(httpGet.getURI());</div><div class=\"line\"></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.getProtocolVersion()                    <span class=\"comment\">//协议版本</span></div><div class=\"line\">response.getStatusLine().getStatusCode();        <span class=\"comment\">//响应状态码</span></div><div class=\"line\">response.getStatusLine().getReasonPhrase();        <span class=\"comment\">//响应状态字符串</span></div><div class=\"line\">response.getStatusLine().toString();            <span class=\"comment\">//响应全报文</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//响应头</span></div><div class=\"line\">HttpResponse response = <span class=\"keyword\">new</span> BasicHttpResponse(HttpVersion.HTTP_1_1,HttpStatus.SC_OK,<span class=\"string\">\"OK\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c1=a; path=/; domain=localhost\"</span>);</div><div class=\"line\">response.addHeader(<span class=\"string\">\"Set-Cookie\"</span>,<span class=\"string\">\"c2=b; path=\\\"\\\",c3=c; domain=\\\"localhost\\\"\"</span>);</div><div class=\"line\">Header h1 = response.getFirstHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\">Header h2 = response.getLastHeader(<span class=\"string\">\"Set-Cookie\"</span>);</div><div class=\"line\"><span class=\"comment\">//遍历方法1</span></div><div class=\"line\">Header[] hs = response.getHeaders(<span class=\"string\">\"Set-Cookie\"</span>);                </div><div class=\"line\"><span class=\"comment\">//遍历方法2</span></div><div class=\"line\">HeaderIterator it = response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>);        </div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    System.out.println(it.next());</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//遍历方法3</span></div><div class=\"line\">HeaderElementIterator it = <span class=\"keyword\">new</span> BasicHeaderElementIterator(response.headerIterator(<span class=\"string\">\"Set-Cookie\"</span>));</div><div class=\"line\"><span class=\"keyword\">while</span>(it.hasNext())&#123;</div><div class=\"line\">    HeaderElement element = it.nextElement();</div><div class=\"line\">    NameValuePair[] params = element.getParameters();</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; params.length; i++)&#123;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>FileEntiry</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">File file = <span class=\"keyword\">new</span> File(<span class=\"string\">\"somefile.txt\"</span>);</div><div class=\"line\">FileEntity entity = <span class=\"keyword\">new</span> FileEntity(file,<span class=\"string\">\"text/plain; charset=\\\"UTF-8\\\"\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/action.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>ContentProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">ContentProducer contentProducer = <span class=\"keyword\">new</span> ContentProducer()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outStream)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</div><div class=\"line\">        Writer writer = <span class=\"keyword\">new</span> OutputStreamWriter(outStream,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;response&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    important stuff\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"    &lt;/content&gt;\"</span>);</div><div class=\"line\">        writer.write(<span class=\"string\">\"&lt;/response&gt;\"</span>);</div><div class=\"line\">        writer.flush();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">HttpEntity entity = <span class=\"keyword\">new</span> EntityTemplate(contentProducer);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>HTML表单</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">List&lt;NameValuePair&gt; params = <span class=\"keyword\">new</span> ArrayList&lt;NameValuePair&gt;();</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param1\"</span>,<span class=\"string\">\"value1\"</span>));</div><div class=\"line\">params.add(<span class=\"keyword\">new</span> BasicNameValuePair(<span class=\"string\">\"param2\"</span>,<span class=\"string\">\"value2\"</span>));</div><div class=\"line\">UrlEncodedFormEntity entity = <span class=\"keyword\">new</span> UrlEncodedFormEntity(params,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">HttpPost httpPost = <span class=\"keyword\">new</span> HttpPost(<span class=\"string\">\"http://localhost/handler.do\"</span>);</div><div class=\"line\">httpPost.setEntity(entity);</div></pre></td></tr></table></figure>\n</li>\n<li><p>响应控制器?</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\">ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt; handler = <span class=\"keyword\">new</span> ResponseHandler&lt;<span class=\"keyword\">byte</span>[]&gt;()&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] handleResponse(HttpResonse response) <span class=\"keyword\">throws</span> ClientProtocolException,IOException&#123;</div><div class=\"line\">        HttpEntity entity = response.getEntity();</div><div class=\"line\">        <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> EntityUtils.toByteArray(entity);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">byte</span>[] response = httpClient.execute(httpGet,handler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpRequestRetryHandler myRetryHandler = <span class=\"keyword\">new</span> HttpRequestRetryHandler()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">retryRequest</span><span class=\"params\">(IOException e,<span class=\"keyword\">int</span> executionCount,HttpContext context)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(executionCount &gt;= <span class=\"number\">5</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> NoHttpResponseException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(exception <span class=\"keyword\">instanceof</span> SSLHandshakeException)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        HttpRequest request = (HttpRequest)context.getAttribute(ExecutionContext.HTTP_REQUEST);</div><div class=\"line\">        <span class=\"keyword\">boolean</span> idempotent = !(request <span class=\"keyword\">instanceof</span> HttpEntityEnclosingRequest);</div><div class=\"line\">        <span class=\"keyword\">if</span>(idempotent)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">httpClient.setHttpRequestRetryHandler(myRetryHandler);</div></pre></td></tr></table></figure>\n</li>\n<li><p>DefaultHttpClient2</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">DefaultHttpClient httpClient = <span class=\"keyword\">new</span> DefaultHttpClient();</div><div class=\"line\">HttpContext localContext = <span class=\"keyword\">new</span> BasicHttpContext();</div><div class=\"line\">AtomicInteger count = <span class=\"keyword\">new</span> AtomicInteger(<span class=\"number\">1</span>);</div><div class=\"line\">localContext.setAttribute(<span class=\"string\">\"count\"</span>,count);</div><div class=\"line\">httpClient.addRequestInterceptor(<span class=\"keyword\">new</span> HttpRequestInterceptor()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span><span class=\"params\">(<span class=\"keyword\">final</span> HttpRequest request,<span class=\"keyword\">final</span> HttpContext context)</span> <span class=\"keyword\">throws</span> HttpExeption,IOException</span>&#123;</div><div class=\"line\">        AtomicInteger count = (AtomicInteger)context.getAttribute(<span class=\"string\">\"count\"</span>);</div><div class=\"line\">        request.addHeader(<span class=\"string\">\"count\"</span>,Integer.toString(count.getAndIncrement()));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">HttpGet httpGet = <span class=\"keyword\">new</span> HttpGet(<span class=\"string\">\"http://localhost/\"</span>);</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">10</span>; i++)&#123;</div><div class=\"line\">    HttpResponse response = httpClient.execute(httpGet,localContext);</div><div class=\"line\">    HttpEntity entity = response.getEntity();</div><div class=\"line\">    <span class=\"keyword\">if</span>(entity != <span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">        entity.consumeContent();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>PlainSocketFactory</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">PlainSocketFactory psf = PlainSocketFactory.getSocketFactory();</div><div class=\"line\">Socket socket = psf.createSocket();</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">psf.connectSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">8080</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,params);</div></pre></td></tr></table></figure>\n</li>\n<li><p>SSL</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">TrustManager easyTrustManager = <span class=\"keyword\">new</span> X509TrustManager()&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain,String authType)</span> <span class=\"keyword\">throws</span> CertificateException</span>&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers()&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">SSLContext sslcontext = SSLContext.getInstance(<span class=\"string\">\"TLS\"</span>);</div><div class=\"line\">sslcontext.init(<span class=\"keyword\">null</span>,<span class=\"keyword\">new</span> TrustManager[]&#123;easyTrustManager&#125;,<span class=\"keyword\">null</span>);</div><div class=\"line\">SSLSocketFactory sf = <span class=\"keyword\">new</span> SSLSocketFactory(sslcontext);</div><div class=\"line\">SSLSocket socket = (SSLSocket)sf.createSocket();</div><div class=\"line\">socket.setEnabledCipherSuites(<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"SSL_RSA_WITH_RC4_128_MD5\"</span>&#125;);</div><div class=\"line\">HttpParams params = <span class=\"keyword\">new</span> BasicHttpParams();</div><div class=\"line\">params.setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT,<span class=\"number\">1000L</span>);</div><div class=\"line\">sf.connectionSocket(socket,<span class=\"string\">\"localhost\"</span>,<span class=\"number\">443</span>,<span class=\"keyword\">null</span>,-<span class=\"number\">1</span>,parmas);</div></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"耳机模式下播放音乐再拍照音乐会卡顿","date":"2017-09-21T08:46:39.000Z","_content":"M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp\n``` cpp\n//mp->setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了\n```\n\nM:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java\n``` Java\n//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED\nAudioAttributes attrs = new AudioAttributes.Builder().build();\n\ncase AUDIO_STREAM_ENFORCED_AUDIBLE:\n    attr->flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;\n    // intended fall through, attributes in common with STREAM_SYSTEM\n```","source":"_posts/耳机模式下播放音乐再拍照音乐会卡顿.md","raw":"---\ntitle: 耳机模式下播放音乐再拍照音乐会卡顿\ndate: 2017-09-21 16:46:39\ntags:\n---\nM:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp\n``` cpp\n//mp->setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了\n```\n\nM:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java\n``` Java\n//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED\nAudioAttributes attrs = new AudioAttributes.Builder().build();\n\ncase AUDIO_STREAM_ENFORCED_AUDIBLE:\n    attr->flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;\n    // intended fall through, attributes in common with STREAM_SYSTEM\n```","slug":"耳机模式下播放音乐再拍照音乐会卡顿","published":1,"updated":"2017-09-21T08:47:57.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghk0022eddxpt22q8ny","content":"<p>M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mp-&gt;setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了</span></div></pre></td></tr></table></figure></p>\n<p>M:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED</span></div><div class=\"line\">AudioAttributes attrs = <span class=\"keyword\">new</span> AudioAttributes.Builder().build();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">case</span> AUDIO_STREAM_ENFORCED_AUDIBLE:</div><div class=\"line\">    attr-&gt;flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;</div><div class=\"line\">    <span class=\"comment\">// intended fall through, attributes in common with STREAM_SYSTEM</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>M:alps/frameworks/av/services/camera/libcameraservice/CameraService.cpp<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//mp-&gt;setAudioStreamType(AUDIO_STREAM_ENFORCED_AUDIBLE);    //注释掉这一行就可以了</span></div></pre></td></tr></table></figure></p>\n<p>M:alps/vendor/mediatek/proprietary/packages/apps/Camera/src/com/mediatek/camera/util/CaptureSound.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//AudioAttributes attrs = new AudioAttributes.Builder().setInternalLegacyStreamType(AudioManager.STREAM_SYSTEM_ENFORCED).build();//去掉STREAM_SYSTEM_ENFORCED</span></div><div class=\"line\">AudioAttributes attrs = <span class=\"keyword\">new</span> AudioAttributes.Builder().build();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">case</span> AUDIO_STREAM_ENFORCED_AUDIBLE:</div><div class=\"line\">    attr-&gt;flags  |= AUDIO_FLAG_AUDIBILITY_ENFORCED;</div><div class=\"line\">    <span class=\"comment\">// intended fall through, attributes in common with STREAM_SYSTEM</span></div></pre></td></tr></table></figure></p>\n"},{"title":"联系人编辑界面上的号码输入框无法输入加号","date":"2017-09-21T08:57:34.000Z","_content":"### 问题分析:\n> \n可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法\n\npackages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java\n``` Java\npublic boolean onLongClick(View view) {\n    ......\n    case R.id.zero: {\n        removePreviousDigitIfPossible();        //删除之前输入的 \"0\"\n        keyPressed(KeyEvent.KEYCODE_PLUS);      //输入 \"+\"\n        stopTone();\n        mPressedDialpadKeys.remove(view);\n        return true;\n    }\n    ......\n}\nprivate void removePreviousDigitIfPossible() {\n    final Editable editable = mDigits.getText();\n    final int currentPosition = mDigits.getSelectionStart();\n    if (currentPosition > 0) {\n        mDigits.setSelection(currentPosition);\n        mDigits.getText().delete(currentPosition - 1, currentPosition);\n    }\n}\nprivate void keyPressed(int keyCode) {\n    ......\n    mDigits.onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入\n    final int length = mDigits.length();\n    if (length == mDigits.getSelectionStart() && length == mDigits.getSelectionEnd()) {\n        mDigits.setCursorVisible(false);\n    }\n    mDigits.setCursorVisible(true);\n}\n```\n\n但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件\n```\npublic class DigitsEditText extends EditText {\n    public DigitsEditText(Context context) {\n        super(context);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    public DigitsEditText(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    @Override\n    public boolean dispatchKeyEvent(KeyEvent event) {\n        if(event.getRepeatCount() > 0 && lockLongPressKey){\n            if(KeyEvent.KEYCODE_0 <= event.getKeyCode() && event.getKeyCode() <= KeyEvent.KEYCODE_9){\n                return true;\n            }else if(KeyEvent.KEYCODE_STAR == event.getKeyCode()){\n                return true;\n            }else if(KeyEvent.KEYCODE_POUND == event.getKeyCode()){\n                return true;\n            }\n        }\n        return super.dispatchKeyEvent(event);\n    }\n    private boolean lockLongPressKey = false;\n    private final static int MSG_LONG_CLICK = 777;\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if(event.getRepeatCount() > 0 && !lockLongPressKey){\n            event.startTracking();\n            lockLongPressKey = true;\n            Message msg = new Message();\n            msg.what = MSG_LONG_CLICK;\n            msg.arg1 = keyCode;\n            handler.sendMessageDelayed(msg, 500);\n            return true;\n        }\n        return super.onKeyDown(keyCode, event);\n    }\n    private Handler handler = new Handler(){\n        public void handleMessage(Message msg){\n            if(msg.what == MSG_LONG_CLICK){\n                if(mOnKeyLongClickListener != null){\n                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);\n                }\n            }\n        }\n    };\n    public interface OnKeyLongClickListener{\n        public void onKeyLongClick(int keyCode);\n    }\n    private OnKeyLongClickListener mOnKeyLongClickListener;\n    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener){\n        mOnKeyLongClickListener = onKeyLongClickListener;\n    }\n    @Override\n    public boolean onKeyUp(int keyCode, KeyEvent event) {\n        if(lockLongPressKey){\n            lockLongPressKey = false;\n            handler.removeMessages(MSG_LONG_CLICK);\n            return true;\n        }\n        return super.onKeyUp(keyCode, event);\n    }\n}\n```\n### 长按 onKey 方法的实现原理如下:\n> \na. 在 onKeyDown() 的时候发送一个延时500ms的消息\nb. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件\n","source":"_posts/联系人编辑界面上的号码输入框无法输入加号.md","raw":"---\ntitle: 联系人编辑界面上的号码输入框无法输入加号\ndate: 2017-09-21 16:57:34\ntags:\n---\n### 问题分析:\n> \n可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法\n\npackages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java\n``` Java\npublic boolean onLongClick(View view) {\n    ......\n    case R.id.zero: {\n        removePreviousDigitIfPossible();        //删除之前输入的 \"0\"\n        keyPressed(KeyEvent.KEYCODE_PLUS);      //输入 \"+\"\n        stopTone();\n        mPressedDialpadKeys.remove(view);\n        return true;\n    }\n    ......\n}\nprivate void removePreviousDigitIfPossible() {\n    final Editable editable = mDigits.getText();\n    final int currentPosition = mDigits.getSelectionStart();\n    if (currentPosition > 0) {\n        mDigits.setSelection(currentPosition);\n        mDigits.getText().delete(currentPosition - 1, currentPosition);\n    }\n}\nprivate void keyPressed(int keyCode) {\n    ......\n    mDigits.onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入\n    final int length = mDigits.length();\n    if (length == mDigits.getSelectionStart() && length == mDigits.getSelectionEnd()) {\n        mDigits.setCursorVisible(false);\n    }\n    mDigits.setCursorVisible(true);\n}\n```\n\n但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件\n```\npublic class DigitsEditText extends EditText {\n    public DigitsEditText(Context context) {\n        super(context);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    public DigitsEditText(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);\n        setShowSoftInputOnFocus(false);\n    }\n    @Override\n    public boolean dispatchKeyEvent(KeyEvent event) {\n        if(event.getRepeatCount() > 0 && lockLongPressKey){\n            if(KeyEvent.KEYCODE_0 <= event.getKeyCode() && event.getKeyCode() <= KeyEvent.KEYCODE_9){\n                return true;\n            }else if(KeyEvent.KEYCODE_STAR == event.getKeyCode()){\n                return true;\n            }else if(KeyEvent.KEYCODE_POUND == event.getKeyCode()){\n                return true;\n            }\n        }\n        return super.dispatchKeyEvent(event);\n    }\n    private boolean lockLongPressKey = false;\n    private final static int MSG_LONG_CLICK = 777;\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if(event.getRepeatCount() > 0 && !lockLongPressKey){\n            event.startTracking();\n            lockLongPressKey = true;\n            Message msg = new Message();\n            msg.what = MSG_LONG_CLICK;\n            msg.arg1 = keyCode;\n            handler.sendMessageDelayed(msg, 500);\n            return true;\n        }\n        return super.onKeyDown(keyCode, event);\n    }\n    private Handler handler = new Handler(){\n        public void handleMessage(Message msg){\n            if(msg.what == MSG_LONG_CLICK){\n                if(mOnKeyLongClickListener != null){\n                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);\n                }\n            }\n        }\n    };\n    public interface OnKeyLongClickListener{\n        public void onKeyLongClick(int keyCode);\n    }\n    private OnKeyLongClickListener mOnKeyLongClickListener;\n    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener){\n        mOnKeyLongClickListener = onKeyLongClickListener;\n    }\n    @Override\n    public boolean onKeyUp(int keyCode, KeyEvent event) {\n        if(lockLongPressKey){\n            lockLongPressKey = false;\n            handler.removeMessages(MSG_LONG_CLICK);\n            return true;\n        }\n        return super.onKeyUp(keyCode, event);\n    }\n}\n```\n### 长按 onKey 方法的实现原理如下:\n> \na. 在 onKeyDown() 的时候发送一个延时500ms的消息\nb. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件\n","slug":"联系人编辑界面上的号码输入框无法输入加号","published":1,"updated":"2017-09-21T09:00:29.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghk0023eddx2tb1abnx","content":"<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析:\"></a>问题分析:</h3><blockquote>\n<p>可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法</p>\n</blockquote>\n<p>packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"keyword\">case</span> R.id.zero: &#123;</div><div class=\"line\">        removePreviousDigitIfPossible();        <span class=\"comment\">//删除之前输入的 \"0\"</span></div><div class=\"line\">        keyPressed(KeyEvent.KEYCODE_PLUS);      <span class=\"comment\">//输入 \"+\"</span></div><div class=\"line\">        stopTone();</div><div class=\"line\">        mPressedDialpadKeys.remove(view);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">removePreviousDigitIfPossible</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Editable editable = mDigits.getText();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> currentPosition = mDigits.getSelectionStart();</div><div class=\"line\">    <span class=\"keyword\">if</span> (currentPosition &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        mDigits.setSelection(currentPosition);</div><div class=\"line\">        mDigits.getText().delete(currentPosition - <span class=\"number\">1</span>, currentPosition);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    mDigits.onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));<span class=\"comment\">//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> length = mDigits.length();</div><div class=\"line\">    <span class=\"keyword\">if</span> (length == mDigits.getSelectionStart() &amp;&amp; length == mDigits.getSelectionEnd()) &#123;</div><div class=\"line\">        mDigits.setCursorVisible(<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mDigits.setCursorVisible(<span class=\"keyword\">true</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DigitsEditText extends EditText &#123;</div><div class=\"line\">    public DigitsEditText(Context context) &#123;</div><div class=\"line\">        super(context);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    public DigitsEditText(Context context, AttributeSet attrs) &#123;</div><div class=\"line\">        super(context, attrs);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean dispatchKeyEvent(KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; lockLongPressKey)&#123;</div><div class=\"line\">            if(KeyEvent.KEYCODE_0 &lt;= event.getKeyCode() &amp;&amp; event.getKeyCode() &lt;= KeyEvent.KEYCODE_9)&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_STAR == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_POUND == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.dispatchKeyEvent(event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private boolean lockLongPressKey = false;</div><div class=\"line\">    private final static int MSG_LONG_CLICK = 777;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; !lockLongPressKey)&#123;</div><div class=\"line\">            event.startTracking();</div><div class=\"line\">            lockLongPressKey = true;</div><div class=\"line\">            Message msg = new Message();</div><div class=\"line\">            msg.what = MSG_LONG_CLICK;</div><div class=\"line\">            msg.arg1 = keyCode;</div><div class=\"line\">            handler.sendMessageDelayed(msg, 500);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyDown(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private Handler handler = new Handler()&#123;</div><div class=\"line\">        public void handleMessage(Message msg)&#123;</div><div class=\"line\">            if(msg.what == MSG_LONG_CLICK)&#123;</div><div class=\"line\">                if(mOnKeyLongClickListener != null)&#123;</div><div class=\"line\">                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    public interface OnKeyLongClickListener&#123;</div><div class=\"line\">        public void onKeyLongClick(int keyCode);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private OnKeyLongClickListener mOnKeyLongClickListener;</div><div class=\"line\">    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener)&#123;</div><div class=\"line\">        mOnKeyLongClickListener = onKeyLongClickListener;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyUp(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(lockLongPressKey)&#123;</div><div class=\"line\">            lockLongPressKey = false;</div><div class=\"line\">            handler.removeMessages(MSG_LONG_CLICK);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyUp(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"长按-onKey-方法的实现原理如下\"><a href=\"#长按-onKey-方法的实现原理如下\" class=\"headerlink\" title=\"长按 onKey 方法的实现原理如下:\"></a>长按 onKey 方法的实现原理如下:</h3><blockquote>\n<p>a. 在 onKeyDown() 的时候发送一个延时500ms的消息<br>b. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析:\"></a>问题分析:</h3><blockquote>\n<p>可以参照拨号盘界面上的号码输入框的实现方法，通过跟踪代码发现长按0键之后会调用如下方法</p>\n</blockquote>\n<p>packages/apps/Dialer/src/com/android/dialer/dialpad/DialpadFragment.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    <span class=\"keyword\">case</span> R.id.zero: &#123;</div><div class=\"line\">        removePreviousDigitIfPossible();        <span class=\"comment\">//删除之前输入的 \"0\"</span></div><div class=\"line\">        keyPressed(KeyEvent.KEYCODE_PLUS);      <span class=\"comment\">//输入 \"+\"</span></div><div class=\"line\">        stopTone();</div><div class=\"line\">        mPressedDialpadKeys.remove(view);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ......</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">removePreviousDigitIfPossible</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">final</span> Editable editable = mDigits.getText();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> currentPosition = mDigits.getSelectionStart();</div><div class=\"line\">    <span class=\"keyword\">if</span> (currentPosition &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">        mDigits.setSelection(currentPosition);</div><div class=\"line\">        mDigits.getText().delete(currentPosition - <span class=\"number\">1</span>, currentPosition);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">keyPressed</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode)</span> </span>&#123;</div><div class=\"line\">    ......</div><div class=\"line\">    mDigits.onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));<span class=\"comment\">//关键代码，重新发送 keycode 的 event 事件，模拟按键的输入</span></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> length = mDigits.length();</div><div class=\"line\">    <span class=\"keyword\">if</span> (length == mDigits.getSelectionStart() &amp;&amp; length == mDigits.getSelectionEnd()) &#123;</div><div class=\"line\">        mDigits.setCursorVisible(<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    mDigits.setCursorVisible(<span class=\"keyword\">true</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>但是很遗憾，EditText默认没有 onKey 的长按监听事件，我们需要自己重写EditText，添加 onKey 的长按监听事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class DigitsEditText extends EditText &#123;</div><div class=\"line\">    public DigitsEditText(Context context) &#123;</div><div class=\"line\">        super(context);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    public DigitsEditText(Context context, AttributeSet attrs) &#123;</div><div class=\"line\">        super(context, attrs);</div><div class=\"line\">        setInputType(getInputType() | InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS);</div><div class=\"line\">        setShowSoftInputOnFocus(false);</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean dispatchKeyEvent(KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; lockLongPressKey)&#123;</div><div class=\"line\">            if(KeyEvent.KEYCODE_0 &lt;= event.getKeyCode() &amp;&amp; event.getKeyCode() &lt;= KeyEvent.KEYCODE_9)&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_STAR == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;else if(KeyEvent.KEYCODE_POUND == event.getKeyCode())&#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.dispatchKeyEvent(event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private boolean lockLongPressKey = false;</div><div class=\"line\">    private final static int MSG_LONG_CLICK = 777;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(event.getRepeatCount() &gt; 0 &amp;&amp; !lockLongPressKey)&#123;</div><div class=\"line\">            event.startTracking();</div><div class=\"line\">            lockLongPressKey = true;</div><div class=\"line\">            Message msg = new Message();</div><div class=\"line\">            msg.what = MSG_LONG_CLICK;</div><div class=\"line\">            msg.arg1 = keyCode;</div><div class=\"line\">            handler.sendMessageDelayed(msg, 500);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyDown(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private Handler handler = new Handler()&#123;</div><div class=\"line\">        public void handleMessage(Message msg)&#123;</div><div class=\"line\">            if(msg.what == MSG_LONG_CLICK)&#123;</div><div class=\"line\">                if(mOnKeyLongClickListener != null)&#123;</div><div class=\"line\">                    mOnKeyLongClickListener.onKeyLongClick(msg.arg1);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    public interface OnKeyLongClickListener&#123;</div><div class=\"line\">        public void onKeyLongClick(int keyCode);</div><div class=\"line\">    &#125;</div><div class=\"line\">    private OnKeyLongClickListener mOnKeyLongClickListener;</div><div class=\"line\">    public void setOnKeyLongClickListener(OnKeyLongClickListener onKeyLongClickListener)&#123;</div><div class=\"line\">        mOnKeyLongClickListener = onKeyLongClickListener;</div><div class=\"line\">    &#125;</div><div class=\"line\">    @Override</div><div class=\"line\">    public boolean onKeyUp(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">        if(lockLongPressKey)&#123;</div><div class=\"line\">            lockLongPressKey = false;</div><div class=\"line\">            handler.removeMessages(MSG_LONG_CLICK);</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return super.onKeyUp(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"长按-onKey-方法的实现原理如下\"><a href=\"#长按-onKey-方法的实现原理如下\" class=\"headerlink\" title=\"长按 onKey 方法的实现原理如下:\"></a>长按 onKey 方法的实现原理如下:</h3><blockquote>\n<p>a. 在 onKeyDown() 的时候发送一个延时500ms的消息<br>b. 在 onKeyUp() 的时候移除这个消息，如果Handler接收到了这个消息，就处理长按事件，如果Handler没有接收到这个消息，就处理短按事件</p>\n</blockquote>\n"},{"title":"背光亮度设置后待机界面快捷图标不会随之变化","date":"2017-09-22T03:23:09.000Z","_content":"packages/apps/Settings/src/com/android/settings/BrightnessPreference.java\n``` Java\nonDialogClosed(){\n    ...\n    getContext().sendBroadcast(new Intent(\"action.update_brightness\"));\t//发送广播\n    ...\n}\n```\n\npackages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java\n``` Java\nonReceiver(){\n    else if(\"action.update_brightness\".equals(action)){\n        ...//接收广播\n    }\n}\n\n```\n\n//在packages/apps/Settings/AndroidManifest.xml文件中添加\n``` Java\n<receiver android:name=\".widget.SettingsAppWidgetProvider\">\n    <action android:name=\"action.update_brightness\"/>\n</receiver>\n```","source":"_posts/背光亮度设置后待机界面快捷图标不会随之变化.md","raw":"---\ntitle: 背光亮度设置后待机界面快捷图标不会随之变化\ndate: 2017-09-22 11:23:09\ntags:\n---\npackages/apps/Settings/src/com/android/settings/BrightnessPreference.java\n``` Java\nonDialogClosed(){\n    ...\n    getContext().sendBroadcast(new Intent(\"action.update_brightness\"));\t//发送广播\n    ...\n}\n```\n\npackages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java\n``` Java\nonReceiver(){\n    else if(\"action.update_brightness\".equals(action)){\n        ...//接收广播\n    }\n}\n\n```\n\n//在packages/apps/Settings/AndroidManifest.xml文件中添加\n``` Java\n<receiver android:name=\".widget.SettingsAppWidgetProvider\">\n    <action android:name=\"action.update_brightness\"/>\n</receiver>\n```","slug":"背光亮度设置后待机界面快捷图标不会随之变化","published":1,"updated":"2017-09-22T03:57:45.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghl0024eddxhm6em333","content":"<p>packages/apps/Settings/src/com/android/settings/BrightnessPreference.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onDialogClosed()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"action.update_brightness\"</span>));\t<span class=\"comment\">//发送广播</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onReceiver()&#123;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">\"action.update_brightness\"</span>.equals(action))&#123;</div><div class=\"line\">        ...<span class=\"comment\">//接收广播</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//在packages/apps/Settings/AndroidManifest.xml文件中添加<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;receiver android:name=<span class=\"string\">\".widget.SettingsAppWidgetProvider\"</span>&gt;</div><div class=\"line\">    &lt;action android:name=<span class=\"string\">\"action.update_brightness\"</span>/&gt;</div><div class=\"line\">&lt;/receiver&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>packages/apps/Settings/src/com/android/settings/BrightnessPreference.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onDialogClosed()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"action.update_brightness\"</span>));\t<span class=\"comment\">//发送广播</span></div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">onReceiver()&#123;</div><div class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"string\">\"action.update_brightness\"</span>.equals(action))&#123;</div><div class=\"line\">        ...<span class=\"comment\">//接收广播</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//在packages/apps/Settings/AndroidManifest.xml文件中添加<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;receiver android:name=<span class=\"string\">\".widget.SettingsAppWidgetProvider\"</span>&gt;</div><div class=\"line\">    &lt;action android:name=<span class=\"string\">\"action.update_brightness\"</span>/&gt;</div><div class=\"line\">&lt;/receiver&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"自定义EditText的光标颜色","date":"2017-09-21T05:36:32.000Z","_content":"### 方法一、通过XML文件设置\nTextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的\nandroid:textCursorDrawable=\"@null\"，\"@null\"作用是让光标颜色和text color一样\n\n也可以自定义游标的颜色\ncolor_cursor.xml\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">\n    <size android:width=\"1dp\" />\n    <solid android:color=\"#008000\" />\n</shape>\n```\n使用如下:\n``` xml\n<EditText android:textCursorDrawable=\"@drawable/color_cursor\" />\n```\n\n方法二、通过代码设置\n遗憾的是 TextView 默认没有设置游标颜色的方法\n在 TextView.java 中找到\n``` Java\n    case com.android.internal.R.styleable.TextView_textCursorDrawable:\n        mCursorDrawableRes = a.getResourceId(attr, 0);\n        break;\n        ...\nint mCursorDrawableRes;     //这个值是不可以被直接访问的\n```\n\n于是就想到可以使用反射来设置游标的颜色\n``` Java\ntry {\n    Field f = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n    f.setAccessible(true);\n    f.set(editText, R.drawable.cursor_color);\n} catch (Exception ignored) {\n}\n```\n\n也可以使用如下封装好的方法\n``` Java\nprivate void setTextCursorColor(TextView et, int color){\n    try {\n        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n        fCursorDrawableRes.setAccessible(true);\n        int mCursorDrawableRes = fCursorDrawableRes.getInt(et);\n        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(\"mEditor\");\n        fEditor.setAccessible(true);\n        Object editor = fEditor.get(et);\n        Class<?> clazz = editor.getClass();\n        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(\"mCursorDrawable\");\n        fCursorDrawable.setAccessible(true);\n        android.graphics.drawable.Drawable[] drawables = new android.graphics.drawable.Drawable[1];\n        drawables[0] = et.getContext().getResources().getDrawable(mCursorDrawableRes);\n        drawables[0].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);\n        fCursorDrawable.set(editor, drawables);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```","source":"_posts/自定义EditText的光标颜色.md","raw":"---\ntitle: 自定义EditText的光标颜色\ndate: 2017-09-21 13:36:32\ntags:\n---\n### 方法一、通过XML文件设置\nTextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的\nandroid:textCursorDrawable=\"@null\"，\"@null\"作用是让光标颜色和text color一样\n\n也可以自定义游标的颜色\ncolor_cursor.xml\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">\n    <size android:width=\"1dp\" />\n    <solid android:color=\"#008000\" />\n</shape>\n```\n使用如下:\n``` xml\n<EditText android:textCursorDrawable=\"@drawable/color_cursor\" />\n```\n\n方法二、通过代码设置\n遗憾的是 TextView 默认没有设置游标颜色的方法\n在 TextView.java 中找到\n``` Java\n    case com.android.internal.R.styleable.TextView_textCursorDrawable:\n        mCursorDrawableRes = a.getResourceId(attr, 0);\n        break;\n        ...\nint mCursorDrawableRes;     //这个值是不可以被直接访问的\n```\n\n于是就想到可以使用反射来设置游标的颜色\n``` Java\ntry {\n    Field f = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n    f.setAccessible(true);\n    f.set(editText, R.drawable.cursor_color);\n} catch (Exception ignored) {\n}\n```\n\n也可以使用如下封装好的方法\n``` Java\nprivate void setTextCursorColor(TextView et, int color){\n    try {\n        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(\"mCursorDrawableRes\");\n        fCursorDrawableRes.setAccessible(true);\n        int mCursorDrawableRes = fCursorDrawableRes.getInt(et);\n        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(\"mEditor\");\n        fEditor.setAccessible(true);\n        Object editor = fEditor.get(et);\n        Class<?> clazz = editor.getClass();\n        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(\"mCursorDrawable\");\n        fCursorDrawable.setAccessible(true);\n        android.graphics.drawable.Drawable[] drawables = new android.graphics.drawable.Drawable[1];\n        drawables[0] = et.getContext().getResources().getDrawable(mCursorDrawableRes);\n        drawables[0].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);\n        fCursorDrawable.set(editor, drawables);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n```","slug":"自定义EditText的光标颜色","published":1,"updated":"2017-09-22T00:58:22.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghl0025eddx5vmb7ky3","content":"<h3 id=\"方法一、通过XML文件设置\"><a href=\"#方法一、通过XML文件设置\" class=\"headerlink\" title=\"方法一、通过XML文件设置\"></a>方法一、通过XML文件设置</h3><p>TextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的<br>android:textCursorDrawable=”@null”，”@null”作用是让光标颜色和text color一样</p>\n<p>也可以自定义游标的颜色<br>color_cursor.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#008000\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>使用如下:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span> <span class=\"attr\">android:textCursorDrawable</span>=<span class=\"string\">\"@drawable/color_cursor\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>方法二、通过代码设置<br>遗憾的是 TextView 默认没有设置游标颜色的方法<br>在 TextView.java 中找到<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">case</span> com.android.internal.R.styleable.TextView_textCursorDrawable:</div><div class=\"line\">        mCursorDrawableRes = a.getResourceId(attr, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        ...</div><div class=\"line\"><span class=\"keyword\">int</span> mCursorDrawableRes;     <span class=\"comment\">//这个值是不可以被直接访问的</span></div></pre></td></tr></table></figure></p>\n<p>于是就想到可以使用反射来设置游标的颜色<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Field f = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">    f.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">    f.set(editText, R.drawable.cursor_color);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception ignored) &#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>也可以使用如下封装好的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setTextCursorColor</span><span class=\"params\">(TextView et, <span class=\"keyword\">int</span> color)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">        fCursorDrawableRes.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> mCursorDrawableRes = fCursorDrawableRes.getInt(et);</div><div class=\"line\">        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(<span class=\"string\">\"mEditor\"</span>);</div><div class=\"line\">        fEditor.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        Object editor = fEditor.get(et);</div><div class=\"line\">        Class&lt;?&gt; clazz = editor.getClass();</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(<span class=\"string\">\"mCursorDrawable\"</span>);</div><div class=\"line\">        fCursorDrawable.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        android.graphics.drawable.Drawable[] drawables = <span class=\"keyword\">new</span> android.graphics.drawable.Drawable[<span class=\"number\">1</span>];</div><div class=\"line\">        drawables[<span class=\"number\">0</span>] = et.getContext().getResources().getDrawable(mCursorDrawableRes);</div><div class=\"line\">        drawables[<span class=\"number\">0</span>].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);</div><div class=\"line\">        fCursorDrawable.set(editor, drawables);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"方法一、通过XML文件设置\"><a href=\"#方法一、通过XML文件设置\" class=\"headerlink\" title=\"方法一、通过XML文件设置\"></a>方法一、通过XML文件设置</h3><p>TextView 有一个属性 android:textCursorDrawable，这个属性是用来控制光标颜色的<br>android:textCursorDrawable=”@null”，”@null”作用是让光标颜色和text color一样</p>\n<p>也可以自定义游标的颜色<br>color_cursor.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#008000\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>使用如下:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span> <span class=\"attr\">android:textCursorDrawable</span>=<span class=\"string\">\"@drawable/color_cursor\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>方法二、通过代码设置<br>遗憾的是 TextView 默认没有设置游标颜色的方法<br>在 TextView.java 中找到<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"keyword\">case</span> com.android.internal.R.styleable.TextView_textCursorDrawable:</div><div class=\"line\">        mCursorDrawableRes = a.getResourceId(attr, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">break</span>;</div><div class=\"line\">        ...</div><div class=\"line\"><span class=\"keyword\">int</span> mCursorDrawableRes;     <span class=\"comment\">//这个值是不可以被直接访问的</span></div></pre></td></tr></table></figure></p>\n<p>于是就想到可以使用反射来设置游标的颜色<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span> &#123;</div><div class=\"line\">    Field f = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">    f.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">    f.set(editText, R.drawable.cursor_color);</div><div class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception ignored) &#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>也可以使用如下封装好的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">setTextCursorColor</span><span class=\"params\">(TextView et, <span class=\"keyword\">int</span> color)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawableRes = TextView.class.getDeclaredField(<span class=\"string\">\"mCursorDrawableRes\"</span>);</div><div class=\"line\">        fCursorDrawableRes.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> mCursorDrawableRes = fCursorDrawableRes.getInt(et);</div><div class=\"line\">        java.lang.reflect.Field fEditor = TextView.class.getDeclaredField(<span class=\"string\">\"mEditor\"</span>);</div><div class=\"line\">        fEditor.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        Object editor = fEditor.get(et);</div><div class=\"line\">        Class&lt;?&gt; clazz = editor.getClass();</div><div class=\"line\">        java.lang.reflect.Field fCursorDrawable = clazz.getDeclaredField(<span class=\"string\">\"mCursorDrawable\"</span>);</div><div class=\"line\">        fCursorDrawable.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        android.graphics.drawable.Drawable[] drawables = <span class=\"keyword\">new</span> android.graphics.drawable.Drawable[<span class=\"number\">1</span>];</div><div class=\"line\">        drawables[<span class=\"number\">0</span>] = et.getContext().getResources().getDrawable(mCursorDrawableRes);</div><div class=\"line\">        drawables[<span class=\"number\">0</span>].setColorFilter(color, android.graphics.PorterDuff.Mode.SRC_IN);</div><div class=\"line\">        fCursorDrawable.set(editor, drawables);</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"获取SIM卡的IMSI号码","date":"2017-09-22T02:38:33.000Z","_content":"//强哥的方法\n``` Java\nTelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);\nString mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);\n```\n//MTK的方法\n``` Java\nimport com.android.internal.telephony.Phone;\nimport com.android.internal.telephony.PhoneFactory;\nimport com.android.internal.telephony.RIL;\nprivate static final int EVENT_GET_IMSI_DONE = 1;\n\nPhone phone = PhoneFactory.getDefaultPhone();\nphone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));\npublic void handleMessage(Message msg) {\n    switch (msg.what){\n        case EVENT_GET_IMSI_DONE:\n            isRecordLoadResponse = true;\n            ar = (AsyncResult)msg.obj;\n            if (ar.exception != null) {\n                Log.e(LOG_TAG, \"Exception querying IMSI, Exception:\" + ar.exception);\n                break;\n            }\n            imsi = (String) ar.result;\n            Log.d(LOG_TAG, \"IMSI: \" + imsi.substring(0, 6) + \"xxxxxxx\");\n            break;\n        default:\n            break;\n    }\n}\n```","source":"_posts/获取SIM卡的IMSI号码.md","raw":"---\ntitle: 获取SIM卡的IMSI号码\ndate: 2017-09-22 10:38:33\ntags:\n---\n//强哥的方法\n``` Java\nTelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);\nString mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);\n```\n//MTK的方法\n``` Java\nimport com.android.internal.telephony.Phone;\nimport com.android.internal.telephony.PhoneFactory;\nimport com.android.internal.telephony.RIL;\nprivate static final int EVENT_GET_IMSI_DONE = 1;\n\nPhone phone = PhoneFactory.getDefaultPhone();\nphone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));\npublic void handleMessage(Message msg) {\n    switch (msg.what){\n        case EVENT_GET_IMSI_DONE:\n            isRecordLoadResponse = true;\n            ar = (AsyncResult)msg.obj;\n            if (ar.exception != null) {\n                Log.e(LOG_TAG, \"Exception querying IMSI, Exception:\" + ar.exception);\n                break;\n            }\n            imsi = (String) ar.result;\n            Log.d(LOG_TAG, \"IMSI: \" + imsi.substring(0, 6) + \"xxxxxxx\");\n            break;\n        default:\n            break;\n    }\n}\n```","slug":"获取SIM卡的IMSI号码","published":1,"updated":"2017-09-22T02:40:30.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghm0026eddxwonhd6nv","content":"<p>//强哥的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);</div><div class=\"line\">String mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);</div></pre></td></tr></table></figure></p>\n<p>//MTK的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.Phone;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.PhoneFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.RIL;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> EVENT_GET_IMSI_DONE = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">Phone phone = PhoneFactory.getDefaultPhone();</div><div class=\"line\">phone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (msg.what)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> EVENT_GET_IMSI_DONE:</div><div class=\"line\">            isRecordLoadResponse = <span class=\"keyword\">true</span>;</div><div class=\"line\">            ar = (AsyncResult)msg.obj;</div><div class=\"line\">            <span class=\"keyword\">if</span> (ar.exception != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                Log.e(LOG_TAG, <span class=\"string\">\"Exception querying IMSI, Exception:\"</span> + ar.exception);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            imsi = (String) ar.result;</div><div class=\"line\">            Log.d(LOG_TAG, <span class=\"string\">\"IMSI: \"</span> + imsi.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) + <span class=\"string\">\"xxxxxxx\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>//强哥的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);</div><div class=\"line\">String mIMSI = tm.getSubscriberIdGemini(PhoneConstants.GEMINI_SIM_1);</div></pre></td></tr></table></figure></p>\n<p>//MTK的方法<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.Phone;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.PhoneFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> com.android.internal.telephony.RIL;</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> EVENT_GET_IMSI_DONE = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">Phone phone = PhoneFactory.getDefaultPhone();</div><div class=\"line\">phone.mCM.getIMSI(obtainMessage(EVENT_GET_IMSI_DONE));</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (msg.what)&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> EVENT_GET_IMSI_DONE:</div><div class=\"line\">            isRecordLoadResponse = <span class=\"keyword\">true</span>;</div><div class=\"line\">            ar = (AsyncResult)msg.obj;</div><div class=\"line\">            <span class=\"keyword\">if</span> (ar.exception != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                Log.e(LOG_TAG, <span class=\"string\">\"Exception querying IMSI, Exception:\"</span> + ar.exception);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            imsi = (String) ar.result;</div><div class=\"line\">            Log.d(LOG_TAG, <span class=\"string\">\"IMSI: \"</span> + imsi.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) + <span class=\"string\">\"xxxxxxx\"</span>);</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        <span class=\"keyword\">default</span>:</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"解析assets文件夹下的xml文件","date":"2017-09-22T02:47:01.000Z","_content":"``` Java\nSAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(\"apns-conf.xml\"), apnHandler);\n```","source":"_posts/解析assets文件夹下的xml文件.md","raw":"---\ntitle: 解析assets文件夹下的xml文件\ndate: 2017-09-22 10:47:01\ntags:\n---\n``` Java\nSAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(\"apns-conf.xml\"), apnHandler);\n```","slug":"解析assets文件夹下的xml文件","published":1,"updated":"2017-09-22T02:47:16.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghm0027eddxelah04b0","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(<span class=\"string\">\"apns-conf.xml\"</span>), apnHandler);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SAXParserFactory.newInstance().newSAXParser().parse(getResources().getAssets().open(<span class=\"string\">\"apns-conf.xml\"</span>), apnHandler);</div></pre></td></tr></table></figure>"},{"title":"解析res/drawable下图片的另一种方式","date":"2017-09-25T06:42:58.000Z","_content":"``` Java\nif(width == 540) {\n    path = \"/res/drawable-960x540/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 480){\n    path = \"/res/drawable-800x480/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 720){\n    path = \"/res/drawable-1280x720/paillette_\" + pailletteIndex + \".png\";\n}else{\n    path = \"/res/drawable/paillette_\" + pailletteIndex + \".png\"; \n}    \npaillette_array[0] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\n```","source":"_posts/解析res-drawable下图片的另一种方式.md","raw":"---\ntitle: 解析res/drawable下图片的另一种方式\ndate: 2017-09-25 14:42:58\ntags:\n---\n``` Java\nif(width == 540) {\n    path = \"/res/drawable-960x540/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 480){\n    path = \"/res/drawable-800x480/paillette_\" + pailletteIndex + \".png\"; \n}else if(width == 720){\n    path = \"/res/drawable-1280x720/paillette_\" + pailletteIndex + \".png\";\n}else{\n    path = \"/res/drawable/paillette_\" + pailletteIndex + \".png\"; \n}    \npaillette_array[0] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));\n```","slug":"解析res-drawable下图片的另一种方式","published":1,"updated":"2017-09-25T06:43:52.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghn0028eddxbfupq8xh","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(width == <span class=\"number\">540</span>) &#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-960x540/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">480</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-800x480/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">720</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-1280x720/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;    </div><div class=\"line\">paillette_array[<span class=\"number\">0</span>] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(width == <span class=\"number\">540</span>) &#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-960x540/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">480</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-800x480/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(width == <span class=\"number\">720</span>)&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable-1280x720/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    path = <span class=\"string\">\"/res/drawable/paillette_\"</span> + pailletteIndex + <span class=\"string\">\".png\"</span>; </div><div class=\"line\">&#125;    </div><div class=\"line\">paillette_array[<span class=\"number\">0</span>] = BitmapFactory.decodeStream(getClass().getResourceAsStream(path));</div></pre></td></tr></table></figure>"},{"title":"设置seekbar每一格的进度","date":"2017-09-21T08:49:12.000Z","_content":"``` Java\nSeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);\nmSlider.setKeyProgressIncrement(val);\n```","source":"_posts/设置seekbar每一格的进度.md","raw":"---\ntitle: 设置seekbar每一格的进度\ndate: 2017-09-21 16:49:12\ntags:\n---\n``` Java\nSeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);\nmSlider.setKeyProgressIncrement(val);\n```","slug":"设置seekbar每一格的进度","published":1,"updated":"2017-09-21T08:49:55.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghn0029eddx7drj7sh2","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);</div><div class=\"line\">mSlider.setKeyProgressIncrement(val);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SeekBar mSlider = (SeekBar)findViewById(R.id.seekbar);</div><div class=\"line\">mSlider.setKeyProgressIncrement(val);</div></pre></td></tr></table></figure>"},{"title":"通过代码创建快捷方式","date":"2017-09-21T06:12:51.000Z","_content":"``` Java\nprivate void createShortcut(String title, String url) {\n    Intent intent = new Intent(INSTALL_SHORTCUT);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, \"Baidu\");\n    Intent shortcutIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    long urlHash = url.hashCode();\n    long uniqueId = (urlHash << 32) | shortcutIntent.hashCode();\n    shortcutIntent.putExtra(\"com.android.browser.application_id\", Long.toString(uniqueId));\n    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));\n    sendBroadcast(intent);\n}\n```","source":"_posts/通过代码创建快捷方式.md","raw":"---\ntitle: 通过代码创建快捷方式\ndate: 2017-09-21 14:12:51\ntags:\n---\n``` Java\nprivate void createShortcut(String title, String url) {\n    Intent intent = new Intent(INSTALL_SHORTCUT);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, \"Baidu\");\n    Intent shortcutIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n    long urlHash = url.hashCode();\n    long uniqueId = (urlHash << 32) | shortcutIntent.hashCode();\n    shortcutIntent.putExtra(\"com.android.browser.application_id\", Long.toString(uniqueId));\n    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);\n    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));\n    sendBroadcast(intent);\n}\n```","slug":"通过代码创建快捷方式","published":1,"updated":"2017-09-21T06:13:35.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygho002aeddxhphm2caa","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createShortcut</span><span class=\"params\">(String title, String url)</span> </span>&#123;</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(INSTALL_SHORTCUT);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, <span class=\"string\">\"Baidu\"</span>);</div><div class=\"line\">    Intent shortcutIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url));</div><div class=\"line\">    <span class=\"keyword\">long</span> urlHash = url.hashCode();</div><div class=\"line\">    <span class=\"keyword\">long</span> uniqueId = (urlHash &lt;&lt; <span class=\"number\">32</span>) | shortcutIntent.hashCode();</div><div class=\"line\">    shortcutIntent.putExtra(<span class=\"string\">\"com.android.browser.application_id\"</span>, Long.toString(uniqueId));</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));</div><div class=\"line\">    sendBroadcast(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createShortcut</span><span class=\"params\">(String title, String url)</span> </span>&#123;</div><div class=\"line\">    Intent intent = <span class=\"keyword\">new</span> Intent(INSTALL_SHORTCUT);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_NAME, <span class=\"string\">\"Baidu\"</span>);</div><div class=\"line\">    Intent shortcutIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url));</div><div class=\"line\">    <span class=\"keyword\">long</span> urlHash = url.hashCode();</div><div class=\"line\">    <span class=\"keyword\">long</span> uniqueId = (urlHash &lt;&lt; <span class=\"number\">32</span>) | shortcutIntent.hashCode();</div><div class=\"line\">    shortcutIntent.putExtra(<span class=\"string\">\"com.android.browser.application_id\"</span>, Long.toString(uniqueId));</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);</div><div class=\"line\">    intent.putExtra(Intent.EXTRA_SHORTCUT_ICON, BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher));</div><div class=\"line\">    sendBroadcast(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"通过代码动态设置view的selector","date":"2017-09-21T06:09:58.000Z","_content":"``` Java\nprivate StateListDrawable getStateDrawable(Context context, int normalId, int focusedId, int pressedId) {\n    StateListDrawable stateListDrawable = new StateListDrawable();\n    Drawable normalDrawable = normalId == -1 ? null : context.getResources().getDrawable(normalId);\n    Drawable focusedDrawable = focusedId == -1 ? null : context.getResources().getDrawable(focusedId);\n    Drawable pressedDrawable = pressedId == -1 ? null : context.getResources().getDrawable(pressedId);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled }, normalDrawable);\n    stateListDrawable.addState(new int[] {}, normalDrawable);\n    return stateListDrawable;\n}\n```\n使用方法如下:\n```\nbtn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));\n```","source":"_posts/通过代码动态设置view的selector.md","raw":"---\ntitle: 通过代码动态设置view的selector\ndate: 2017-09-21 14:09:58\ntags:\n---\n``` Java\nprivate StateListDrawable getStateDrawable(Context context, int normalId, int focusedId, int pressedId) {\n    StateListDrawable stateListDrawable = new StateListDrawable();\n    Drawable normalDrawable = normalId == -1 ? null : context.getResources().getDrawable(normalId);\n    Drawable focusedDrawable = focusedId == -1 ? null : context.getResources().getDrawable(focusedId);\n    Drawable pressedDrawable = pressedId == -1 ? null : context.getResources().getDrawable(pressedId);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled, android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_focused }, focusedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_pressed }, pressedDrawable);\n    stateListDrawable.addState(new int[] { android.R.attr.state_enabled }, normalDrawable);\n    stateListDrawable.addState(new int[] {}, normalDrawable);\n    return stateListDrawable;\n}\n```\n使用方法如下:\n```\nbtn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));\n```","slug":"通过代码动态设置view的selector","published":1,"updated":"2017-09-21T06:10:52.597Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iygho002beddxo487xz71","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> StateListDrawable <span class=\"title\">getStateDrawable</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> normalId, <span class=\"keyword\">int</span> focusedId, <span class=\"keyword\">int</span> pressedId)</span> </span>&#123;</div><div class=\"line\">    StateListDrawable stateListDrawable = <span class=\"keyword\">new</span> StateListDrawable();</div><div class=\"line\">    Drawable normalDrawable = normalId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(normalId);</div><div class=\"line\">    Drawable focusedDrawable = focusedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(focusedId);</div><div class=\"line\">    Drawable pressedDrawable = pressedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(pressedId);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled &#125;, normalDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123;&#125;, normalDrawable);</div><div class=\"line\">    <span class=\"keyword\">return</span> stateListDrawable;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">btn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> StateListDrawable <span class=\"title\">getStateDrawable</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> normalId, <span class=\"keyword\">int</span> focusedId, <span class=\"keyword\">int</span> pressedId)</span> </span>&#123;</div><div class=\"line\">    StateListDrawable stateListDrawable = <span class=\"keyword\">new</span> StateListDrawable();</div><div class=\"line\">    Drawable normalDrawable = normalId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(normalId);</div><div class=\"line\">    Drawable focusedDrawable = focusedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(focusedId);</div><div class=\"line\">    Drawable pressedDrawable = pressedId == -<span class=\"number\">1</span> ? <span class=\"keyword\">null</span> : context.getResources().getDrawable(pressedId);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_focused &#125;, focusedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_pressed &#125;, pressedDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled &#125;, normalDrawable);</div><div class=\"line\">    stateListDrawable.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123;&#125;, normalDrawable);</div><div class=\"line\">    <span class=\"keyword\">return</span> stateListDrawable;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用方法如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">btn_state.setBackground(getStateDrawable(mContext, R.drawable.dialog_button_normal, R.drawable.dialog_button_focused, R.drawable.dialog_button_pressed));</div></pre></td></tr></table></figure></p>\n"},{"title":"通过代码模拟触屏和按键事件","date":"2017-09-21T06:03:52.000Z","_content":"### 模拟触屏事件\n>tips:必须在子线程中运行\n\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 240, 600, 0));\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 240, 600, 0));\n```\n\n### 模拟长按事件\n``` Java\npublic static void longClickView(InstrumentationTestCase test, View v) {\n    int[] xy = new int[2];\n    v.getLocationOnScreen(xy);\n\n    final int viewWidth = v.getWidth();\n    final int viewHeight = v.getHeight();\n\n    final float x = xy[0] + (viewWidth / 2.0f);\n    float y = xy[1] + (viewHeight / 2.0f);\n\n    Instrumentation inst = test.getInstrumentation();\n\n    long downTime = SystemClock.uptimeMillis();\n    long eventTime = SystemClock.uptimeMillis();\n\n    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    eventTime = SystemClock.uptimeMillis();\n    final int touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / 2, y + touchSlop / 2, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    try {\n        Thread.sleep((long)(ViewConfiguration.getLongPressTimeout() * 1.5f));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    eventTime = SystemClock.uptimeMillis();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n}\n```\n### 模拟按键事件\n#### 方法a.\n``` Java\nnew EditText(context).onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t//模拟按键的点击事件,这里必须需要一个EditText才可以\n```\n#### 方法b.\n``` Java\n//这个也可以通过命令行发送\tadb shell input keyevent 82\nProcess process = Runtime.getRuntime().exec(\"input keyevent 82\");\t\t\t\t\t\t//模拟按键的点击事件,82相当于上面的keyCode\n```\n#### 方法c.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);\n```\n#### 方法d.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));\n```","source":"_posts/通过代码模拟触屏和按键事件.md","raw":"---\ntitle: 通过代码模拟触屏和按键事件\ndate: 2017-09-21 14:03:52\ntags:\n---\n### 模拟触屏事件\n>tips:必须在子线程中运行\n\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 240, 600, 0));\ninstrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 240, 600, 0));\n```\n\n### 模拟长按事件\n``` Java\npublic static void longClickView(InstrumentationTestCase test, View v) {\n    int[] xy = new int[2];\n    v.getLocationOnScreen(xy);\n\n    final int viewWidth = v.getWidth();\n    final int viewHeight = v.getHeight();\n\n    final float x = xy[0] + (viewWidth / 2.0f);\n    float y = xy[1] + (viewHeight / 2.0f);\n\n    Instrumentation inst = test.getInstrumentation();\n\n    long downTime = SystemClock.uptimeMillis();\n    long eventTime = SystemClock.uptimeMillis();\n\n    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    eventTime = SystemClock.uptimeMillis();\n    final int touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / 2, y + touchSlop / 2, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n\n    try {\n        Thread.sleep((long)(ViewConfiguration.getLongPressTimeout() * 1.5f));\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    eventTime = SystemClock.uptimeMillis();\n    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, 0);\n    inst.sendPointerSync(event);\n    inst.waitForIdleSync();\n}\n```\n### 模拟按键事件\n#### 方法a.\n``` Java\nnew EditText(context).onKeyDown(keyCode, new KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t//模拟按键的点击事件,这里必须需要一个EditText才可以\n```\n#### 方法b.\n``` Java\n//这个也可以通过命令行发送\tadb shell input keyevent 82\nProcess process = Runtime.getRuntime().exec(\"input keyevent 82\");\t\t\t\t\t\t//模拟按键的点击事件,82相当于上面的keyCode\n```\n#### 方法c.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);\n```\n#### 方法d.\n``` Java\nInstrumentation instrumentation = new Instrumentation();\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));\ninstrumentation.sendKeySync(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));\n```","slug":"通过代码模拟触屏和按键事件","published":1,"updated":"2017-09-21T07:33:42.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghp002ceddxsslww7du","content":"<h3 id=\"模拟触屏事件\"><a href=\"#模拟触屏事件\" class=\"headerlink\" title=\"模拟触屏事件\"></a>模拟触屏事件</h3><blockquote>\n<p>tips:必须在子线程中运行</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div></pre></td></tr></table></figure>\n<h3 id=\"模拟长按事件\"><a href=\"#模拟长按事件\" class=\"headerlink\" title=\"模拟长按事件\"></a>模拟长按事件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">longClickView</span><span class=\"params\">(InstrumentationTestCase test, View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] xy = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</div><div class=\"line\">    v.getLocationOnScreen(xy);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewWidth = v.getWidth();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewHeight = v.getHeight();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> x = xy[<span class=\"number\">0</span>] + (viewWidth / <span class=\"number\">2.0f</span>);</div><div class=\"line\">    <span class=\"keyword\">float</span> y = xy[<span class=\"number\">1</span>] + (viewHeight / <span class=\"number\">2.0f</span>);</div><div class=\"line\"></div><div class=\"line\">    Instrumentation inst = test.getInstrumentation();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">long</span> downTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">long</span> eventTime = SystemClock.uptimeMillis();</div><div class=\"line\"></div><div class=\"line\">    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / <span class=\"number\">2</span>, y + touchSlop / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Thread.sleep((<span class=\"keyword\">long</span>)(ViewConfiguration.getLongPressTimeout() * <span class=\"number\">1.5f</span>));</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"模拟按键事件\"><a href=\"#模拟按键事件\" class=\"headerlink\" title=\"模拟按键事件\"></a>模拟按键事件</h3><h4 id=\"方法a\"><a href=\"#方法a\" class=\"headerlink\" title=\"方法a.\"></a>方法a.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> EditText(context).onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t<span class=\"comment\">//模拟按键的点击事件,这里必须需要一个EditText才可以</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法b\"><a href=\"#方法b\" class=\"headerlink\" title=\"方法b.\"></a>方法b.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这个也可以通过命令行发送\tadb shell input keyevent 82</span></div><div class=\"line\">Process process = Runtime.getRuntime().exec(<span class=\"string\">\"input keyevent 82\"</span>);\t\t\t\t\t\t<span class=\"comment\">//模拟按键的点击事件,82相当于上面的keyCode</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法c\"><a href=\"#方法c\" class=\"headerlink\" title=\"方法c.\"></a>方法c.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);</div></pre></td></tr></table></figure>\n<h4 id=\"方法d\"><a href=\"#方法d\" class=\"headerlink\" title=\"方法d.\"></a>方法d.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"模拟触屏事件\"><a href=\"#模拟触屏事件\" class=\"headerlink\" title=\"模拟触屏事件\"></a>模拟触屏事件</h3><blockquote>\n<p>tips:必须在子线程中运行</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div><div class=\"line\">instrumentation.sendPointerSync(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, <span class=\"number\">240</span>, <span class=\"number\">600</span>, <span class=\"number\">0</span>));</div></pre></td></tr></table></figure>\n<h3 id=\"模拟长按事件\"><a href=\"#模拟长按事件\" class=\"headerlink\" title=\"模拟长按事件\"></a>模拟长按事件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">longClickView</span><span class=\"params\">(InstrumentationTestCase test, View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span>[] xy = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</div><div class=\"line\">    v.getLocationOnScreen(xy);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewWidth = v.getWidth();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> viewHeight = v.getHeight();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> x = xy[<span class=\"number\">0</span>] + (viewWidth / <span class=\"number\">2.0f</span>);</div><div class=\"line\">    <span class=\"keyword\">float</span> y = xy[<span class=\"number\">1</span>] + (viewHeight / <span class=\"number\">2.0f</span>);</div><div class=\"line\"></div><div class=\"line\">    Instrumentation inst = test.getInstrumentation();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">long</span> downTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">long</span> eventTime = SystemClock.uptimeMillis();</div><div class=\"line\"></div><div class=\"line\">    MotionEvent event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_DOWN, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> touchSlop = ViewConfiguration.get(v.getContext()).getScaledTouchSlop();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_MOVE, x + touchSlop / <span class=\"number\">2</span>, y + touchSlop / <span class=\"number\">2</span>, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Thread.sleep((<span class=\"keyword\">long</span>)(ViewConfiguration.getLongPressTimeout() * <span class=\"number\">1.5f</span>));</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    eventTime = SystemClock.uptimeMillis();</div><div class=\"line\">    event = MotionEvent.obtain(downTime, eventTime, MotionEvent.ACTION_UP, x, y, <span class=\"number\">0</span>);</div><div class=\"line\">    inst.sendPointerSync(event);</div><div class=\"line\">    inst.waitForIdleSync();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"模拟按键事件\"><a href=\"#模拟按键事件\" class=\"headerlink\" title=\"模拟按键事件\"></a>模拟按键事件</h3><h4 id=\"方法a\"><a href=\"#方法a\" class=\"headerlink\" title=\"方法a.\"></a>方法a.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> EditText(context).onKeyDown(keyCode, <span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, keyCode));\t<span class=\"comment\">//模拟按键的点击事件,这里必须需要一个EditText才可以</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法b\"><a href=\"#方法b\" class=\"headerlink\" title=\"方法b.\"></a>方法b.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这个也可以通过命令行发送\tadb shell input keyevent 82</span></div><div class=\"line\">Process process = Runtime.getRuntime().exec(<span class=\"string\">\"input keyevent 82\"</span>);\t\t\t\t\t\t<span class=\"comment\">//模拟按键的点击事件,82相当于上面的keyCode</span></div></pre></td></tr></table></figure>\n<h4 id=\"方法c\"><a href=\"#方法c\" class=\"headerlink\" title=\"方法c.\"></a>方法c.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeyDownUpSync(KeyEvent.KEYCODE_MENU);</div></pre></td></tr></table></figure>\n<h4 id=\"方法d\"><a href=\"#方法d\" class=\"headerlink\" title=\"方法d.\"></a>方法d.</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Instrumentation instrumentation = <span class=\"keyword\">new</span> Instrumentation();</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MENU));</div><div class=\"line\">instrumentation.sendKeySync(<span class=\"keyword\">new</span> KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_MENU));</div></pre></td></tr></table></figure>"},{"title":"通过反射修改全局默认字体","date":"2017-09-29T05:11:42.000Z","_content":"在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。\n\n完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。\n\n``` Java\nprivate final static String CUSTOM_FONT = \"fonts/custom_font.ttf\";\npublic static void changeDefaultFont(Context ctx){\n    try{\n        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);\n        Field defaultField = Typeface.class.getDeclaredField(\"SERIF\");\n        defaultField.setAccessible(true);\n        defaultField.set(null, typeface);\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}\n```","source":"_posts/通过反射修改全局默认字体.md","raw":"---\ntitle: 通过反射修改全局默认字体\ndate: 2017-09-29 13:11:42\ntags:\n---\n在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。\n\n完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。\n\n``` Java\nprivate final static String CUSTOM_FONT = \"fonts/custom_font.ttf\";\npublic static void changeDefaultFont(Context ctx){\n    try{\n        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);\n        Field defaultField = Typeface.class.getDeclaredField(\"SERIF\");\n        defaultField.setAccessible(true);\n        defaultField.set(null, typeface);\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}\n```","slug":"通过反射修改全局默认字体","published":1,"updated":"2017-09-29T05:14:59.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghq002deddx0opg6t0t","content":"<p>在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。</p>\n<p>完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String CUSTOM_FONT = <span class=\"string\">\"fonts/custom_font.ttf\"</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">changeDefaultFont</span><span class=\"params\">(Context ctx)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);</div><div class=\"line\">        Field defaultField = Typeface.class.getDeclaredField(<span class=\"string\">\"SERIF\"</span>);</div><div class=\"line\">        defaultField.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        defaultField.set(<span class=\"keyword\">null</span>, typeface);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在 Typeface 中，是有一些被标记为 static final 的默认字体，因为上一步的 Theme 中，就是设置的 serif ，所以我们这里替换它就好了。</p>\n<p>完整的方法非常的简单，就是通过反射拿到 Typeface.SERIF，然后使用反射将它修改成我们需要的字体即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String CUSTOM_FONT = <span class=\"string\">\"fonts/custom_font.ttf\"</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">changeDefaultFont</span><span class=\"params\">(Context ctx)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        Typeface typeface = Typeface.createFromAsset(cts.getAssets(), CUSTOM_FONT);</div><div class=\"line\">        Field defaultField = Typeface.class.getDeclaredField(<span class=\"string\">\"SERIF\"</span>);</div><div class=\"line\">        defaultField.setAccessible(<span class=\"keyword\">true</span>);</div><div class=\"line\">        defaultField.set(<span class=\"keyword\">null</span>, typeface);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"通过反射获取FeatureOption中的所有字段的值","date":"2017-09-25T06:48:36.000Z","_content":"``` Java\nprivate String getFields() {\n    StringBuilder builder = new StringBuilder();\n    try {\n        Class clazz = Class.forName(\"com.mediatek.common.featureoption.FeatureOption\");  //通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值\n        Field[] fields = clazz.getDeclaredFields();\n        for (int i = 0; i < fields.length; i++) {\n            if (\"boolean\".equalsIgnoreCase(fields[i].getType().getName())) {\n                Log.e(\"test\", fields[i].getName() + \":\" + fields[i].getBoolean(clazz));\n                builder.append(fields[i].getName() + \":\" + fields[i].getBoolean(clazz) + \"\\n\");\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return builder.toString();\n}\n```","source":"_posts/通过反射获取FeatureOption中的所有字段的值.md","raw":"---\ntitle: 通过反射获取FeatureOption中的所有字段的值\ndate: 2017-09-25 14:48:36\ntags:\n---\n``` Java\nprivate String getFields() {\n    StringBuilder builder = new StringBuilder();\n    try {\n        Class clazz = Class.forName(\"com.mediatek.common.featureoption.FeatureOption\");  //通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值\n        Field[] fields = clazz.getDeclaredFields();\n        for (int i = 0; i < fields.length; i++) {\n            if (\"boolean\".equalsIgnoreCase(fields[i].getType().getName())) {\n                Log.e(\"test\", fields[i].getName() + \":\" + fields[i].getBoolean(clazz));\n                builder.append(fields[i].getName() + \":\" + fields[i].getBoolean(clazz) + \"\\n\");\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n    return builder.toString();\n}\n```","slug":"通过反射获取FeatureOption中的所有字段的值","published":1,"updated":"2017-09-25T06:49:24.483Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghq002eeddx9ur6xw3b","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFields</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Class clazz = Class.forName(<span class=\"string\">\"com.mediatek.common.featureoption.FeatureOption\"</span>);  <span class=\"comment\">//通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值</span></div><div class=\"line\">        Field[] fields = clazz.getDeclaredFields();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">\"boolean\"</span>.equalsIgnoreCase(fields[i].getType().getName())) &#123;</div><div class=\"line\">                Log.e(<span class=\"string\">\"test\"</span>, fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz));</div><div class=\"line\">                builder.append(fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz) + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> builder.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFields</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        Class clazz = Class.forName(<span class=\"string\">\"com.mediatek.common.featureoption.FeatureOption\"</span>);  <span class=\"comment\">//通过反射可以获取 FeatureOption.java文件中定义的所有的宏还有宏的值</span></div><div class=\"line\">        Field[] fields = clazz.getDeclaredFields();</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"string\">\"boolean\"</span>.equalsIgnoreCase(fields[i].getType().getName())) &#123;</div><div class=\"line\">                Log.e(<span class=\"string\">\"test\"</span>, fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz));</div><div class=\"line\">                builder.append(fields[i].getName() + <span class=\"string\">\":\"</span> + fields[i].getBoolean(clazz) + <span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> builder.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"配置AGPS","date":"2017-09-22T05:34:36.000Z","_content":"[FAQ03537](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ03537)\npackages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java\n``` Java\nonCreate(){\n    ...\n    //这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中\n    mAgpsProfileManager.updateAgpsProfile(\"/etc/agps_profiles_conf.xml\");\n    ...\n}\n```\n添加一个AGPS\n``` Java\n<agps_profile code=\"Nextel Localización\"\n    slp_name=\"Nextel Localización\"\n    backup_slp_name_var=\"Nextel_SPL_Name\"\n    address=\"supl.nexteldata.com.mx\"\n    port=\"7275\"\n    tls=\"1\"\n    show_type=\"0\"\n/>\n```\n修改默认AGPS\n``` Java\n<agps_conf_para \n    ...\n    default_profile=\"Nextel Localización\"     //修改这个地方\n    ...\n/>\n```","source":"_posts/配置AGPS.md","raw":"---\ntitle: 配置AGPS\ndate: 2017-09-22 13:34:36\ntags:\n---\n[FAQ03537](https://online.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ03537)\npackages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java\n``` Java\nonCreate(){\n    ...\n    //这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中\n    mAgpsProfileManager.updateAgpsProfile(\"/etc/agps_profiles_conf.xml\");\n    ...\n}\n```\n添加一个AGPS\n``` Java\n<agps_profile code=\"Nextel Localización\"\n    slp_name=\"Nextel Localización\"\n    backup_slp_name_var=\"Nextel_SPL_Name\"\n    address=\"supl.nexteldata.com.mx\"\n    port=\"7275\"\n    tls=\"1\"\n    show_type=\"0\"\n/>\n```\n修改默认AGPS\n``` Java\n<agps_conf_para \n    ...\n    default_profile=\"Nextel Localización\"     //修改这个地方\n    ...\n/>\n```","slug":"配置AGPS","published":1,"updated":"2017-09-22T05:36:52.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghr002feddxuduwm4s5","content":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ03537\" target=\"_blank\" rel=\"external\">FAQ03537</a><br>packages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"comment\">//这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中</span></div><div class=\"line\">    mAgpsProfileManager.updateAgpsProfile(<span class=\"string\">\"/etc/agps_profiles_conf.xml\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>添加一个AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_profile code=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    slp_name=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    backup_slp_name_var=<span class=\"string\">\"Nextel_SPL_Name\"</span></div><div class=\"line\">    address=<span class=\"string\">\"supl.nexteldata.com.mx\"</span></div><div class=\"line\">    port=<span class=\"string\">\"7275\"</span></div><div class=\"line\">    tls=<span class=\"string\">\"1\"</span></div><div class=\"line\">    show_type=<span class=\"string\">\"0\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<p>修改默认AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_conf_para </div><div class=\"line\">    ...</div><div class=\"line\">    default_profile=<span class=\"string\">\"Nextel Localización\"</span>     <span class=\"comment\">//修改这个地方</span></div><div class=\"line\">    ...</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://online.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ03537\" target=\"_blank\" rel=\"external\">FAQ03537</a><br>packages/apps/settings/src/com/mediatek/lbs/AgpsSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate()&#123;</div><div class=\"line\">    ...</div><div class=\"line\">    <span class=\"comment\">//这个文件在mediatek/frameworks/base/agps/etc/agps_profiles_conf.xml文件中</span></div><div class=\"line\">    mAgpsProfileManager.updateAgpsProfile(<span class=\"string\">\"/etc/agps_profiles_conf.xml\"</span>);</div><div class=\"line\">    ...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>添加一个AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_profile code=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    slp_name=<span class=\"string\">\"Nextel Localización\"</span></div><div class=\"line\">    backup_slp_name_var=<span class=\"string\">\"Nextel_SPL_Name\"</span></div><div class=\"line\">    address=<span class=\"string\">\"supl.nexteldata.com.mx\"</span></div><div class=\"line\">    port=<span class=\"string\">\"7275\"</span></div><div class=\"line\">    tls=<span class=\"string\">\"1\"</span></div><div class=\"line\">    show_type=<span class=\"string\">\"0\"</span></div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n<p>修改默认AGPS<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;agps_conf_para </div><div class=\"line\">    ...</div><div class=\"line\">    default_profile=<span class=\"string\">\"Nextel Localización\"</span>     <span class=\"comment\">//修改这个地方</span></div><div class=\"line\">    ...</div><div class=\"line\">/&gt;</div></pre></td></tr></table></figure></p>\n"},{"title":"隐藏QuickSettings中的AutoRotate菜单","date":"2017-09-22T02:26:49.000Z","_content":"frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java\n``` Java\nif (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) {\n    parent.addView(rotationLockTile);\n    rotationLockTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n} else {\n    parent.addView(autoRotateTile);\n    autoRotateTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n}\n```","source":"_posts/隐藏QuickSettings中的AutoRotate菜单.md","raw":"---\ntitle: 隐藏QuickSettings中的AutoRotate菜单\ndate: 2017-09-22 10:26:49\ntags:\n---\nframeworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java\n``` Java\nif (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) {\n    parent.addView(rotationLockTile);\n    rotationLockTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n} else {\n    parent.addView(autoRotateTile);\n    autoRotateTile.setVisibility(View.GONE);\t\t//这里把它给隐藏了\n}\n```","slug":"隐藏QuickSettings中的AutoRotate菜单","published":1,"updated":"2017-09-22T02:27:26.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghr002geddx42uo956g","content":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) &#123;</div><div class=\"line\">    parent.addView(rotationLockTile);</div><div class=\"line\">    rotationLockTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    parent.addView(autoRotateTile);</div><div class=\"line\">    autoRotateTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/QuickSettings.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (mContext.getResources().getBoolean(R.bool.quick_settings_show_rotation_lock)) &#123;</div><div class=\"line\">    parent.addView(rotationLockTile);</div><div class=\"line\">    rotationLockTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    parent.addView(autoRotateTile);</div><div class=\"line\">    autoRotateTile.setVisibility(View.GONE);\t\t<span class=\"comment\">//这里把它给隐藏了</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"隐藏三个点的Overflow菜单","date":"2017-09-21T05:23:56.000Z","_content":"frameworks/base/core/java/android/view/ViewConfiguration.java\n``` Java\npublic boolean hasPermanentMenuKey() {\n    // return sHasPermanentMenuKey;\n    if(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU){\n    \treturn sHasPermanentMenuKey;\n    }else{\n    \treturn false; //add menu key\n    }\n}\n```","source":"_posts/隐藏三个点的Overflow菜单.md","raw":"---\ntitle: 隐藏三个点的Overflow菜单\ndate: 2017-09-21 13:23:56\ntags:\n---\nframeworks/base/core/java/android/view/ViewConfiguration.java\n``` Java\npublic boolean hasPermanentMenuKey() {\n    // return sHasPermanentMenuKey;\n    if(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU){\n    \treturn sHasPermanentMenuKey;\n    }else{\n    \treturn false; //add menu key\n    }\n}\n```","slug":"隐藏三个点的Overflow菜单","published":1,"updated":"2017-09-21T06:01:45.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghs002heddx65322sk7","content":"<p>frameworks/base/core/java/android/view/ViewConfiguration.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPermanentMenuKey</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// return sHasPermanentMenuKey;</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> sHasPermanentMenuKey;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; <span class=\"comment\">//add menu key</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>frameworks/base/core/java/android/view/ViewConfiguration.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasPermanentMenuKey</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// return sHasPermanentMenuKey;</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(com.mediatek.common.featureoption.FeatureOption.SAGEREAL_REMOVE_SETTING_MENU)&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> sHasPermanentMenuKey;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>; <span class=\"comment\">//add menu key</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"预置了PDFViewer之后会报错","date":"2017-09-22T02:28:20.000Z","_content":"报错log如下:\n```\n12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main\n12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918\n12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn't load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/system/app/Pdfviewer.apk\"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)\n```\n\n需要将PDFViewer中的lib库提取出来，编译进去\n``` Makefile\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFgenerator\nLOCAL_SRC_FILES := libs/libLCEFgenerator.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFnativeU\nLOCAL_SRC_FILES := libs/libLCEFnativeU.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n```","source":"_posts/预置了PDFViewer之后会报错.md","raw":"---\ntitle: 预置了PDFViewer之后会报错\ndate: 2017-09-22 10:28:20\ntags:\n---\n报错log如下:\n```\n12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main\n12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918\n12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn't load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file \"/system/app/Pdfviewer.apk\"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)\n12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)\n```\n\n需要将PDFViewer中的lib库提取出来，编译进去\n``` Makefile\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFgenerator\nLOCAL_SRC_FILES := libs/libLCEFgenerator.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := libLCEFnativeU\nLOCAL_SRC_FILES := libs/libLCEFnativeU.so\nLOCAL_MODULE_SUFFIX := .so\nLOCAL_MODULE_CLASS := SHARED_LIBRARIES\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE_PATH := $(PRODUCT_OUT)/system/lib\ninclude $(BUILD_PREBUILT)\n```","slug":"预置了PDFViewer之后会报错","published":1,"updated":"2017-09-22T02:29:25.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyghs002ieddxdb55pla4","content":"<p>报错log如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn&apos;t load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/system/app/Pdfviewer.apk&quot;],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)</div></pre></td></tr></table></figure></p>\n<p>需要将PDFViewer中的lib库提取出来，编译进去<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFgenerator</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFgenerator.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFnativeU</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFnativeU.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>报错log如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): FATAL EXCEPTION: main</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): Process: com.google.android.apps.pdfviewer, PID: 4918</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): java.lang.UnsatisfiedLinkError: Couldn&apos;t load foxit from loader dalvik.system.PathClassLoader[DexPathList[[zip file &quot;/system/app/Pdfviewer.apk&quot;],nativeLibraryDirectories=[/vendor/lib, /system/lib]]]: findLibrary returned null</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.Runtime.loadLibrary(Runtime.java:365)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.System.loadLibrary(System.java:553)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocument.loadLibfoxit(PdfDocument.java:169)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.google.android.apps.viewer.pdflib.PdfDocumentService.onBind(PdfDocumentService.java:29)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.handleBindService(ActivityThread.java:2757)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.access$1900(ActivityThread.java:151)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1408)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Handler.dispatchMessage(Handler.java:110)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.os.Looper.loop(Looper.java:193)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat android.app.ActivityThread.main(ActivityThread.java:5299)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invokeNative(Native Method)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat java.lang.reflect.Method.invoke(Method.java:515)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:825)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:641)</div><div class=\"line\">12-01 11:26:14.609: E/AndroidRuntime(4918): \tat dalvik.system.NativeStart.main(Native Method)</div></pre></td></tr></table></figure></p>\n<p>需要将PDFViewer中的lib库提取出来，编译进去<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFgenerator</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFgenerator.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></div><div class=\"line\">LOCAL_MODULE := libLCEFnativeU</div><div class=\"line\">LOCAL_SRC_FILES := libs/libLCEFnativeU.so</div><div class=\"line\">LOCAL_MODULE_SUFFIX := .so</div><div class=\"line\">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class=\"line\">LOCAL_MODULE_TAGS := optional</div><div class=\"line\">LOCAL_MODULE_PATH := <span class=\"variable\">$(PRODUCT_OUT)</span>/system/lib</div><div class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_PREBUILT)</span></div></pre></td></tr></table></figure></p>\n"},{"title":"预置桌面快捷方式","date":"2017-09-21T08:51:19.000Z","_content":"launcher:uri 可以通过launcher的数据库查看\n``` xml\n<shortcut\n    launcher:uri=\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"\n    launcher:icon=\"@drawable/ic_launcher_application\"\n    launcher:title=\"@string/jinshan_title\" \n    launcher:screen=\"\"\n    launcher:x=\"\"\n    launcher:y=\"\"/>\n```","source":"_posts/预置桌面快捷方式.md","raw":"---\ntitle: 预置桌面快捷方式\ndate: 2017-09-21 16:51:19\ntags:\n---\nlauncher:uri 可以通过launcher的数据库查看\n``` xml\n<shortcut\n    launcher:uri=\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"\n    launcher:icon=\"@drawable/ic_launcher_application\"\n    launcher:title=\"@string/jinshan_title\" \n    launcher:screen=\"\"\n    launcher:x=\"\"\n    launcher:y=\"\"/>\n```","slug":"预置桌面快捷方式","published":1,"updated":"2017-09-21T08:53:08.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyght002jeddx16psqjsb","content":"<p>launcher:uri 可以通过launcher的数据库查看<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shortcut</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:uri</span>=<span class=\"string\">\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:icon</span>=<span class=\"string\">\"@drawable/ic_launcher_application\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:title</span>=<span class=\"string\">\"@string/jinshan_title\"</span> </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:screen</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:x</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:y</span>=<span class=\"string\">\"\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>launcher:uri 可以通过launcher的数据库查看<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shortcut</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:uri</span>=<span class=\"string\">\"#Intent;action=android.intent.action.MAIN;launchFlags=0x10200000;component=com.cleanmaster.mguard/com.cleanmaster.processcleaner.ProcessCleanerActivity;end\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:icon</span>=<span class=\"string\">\"@drawable/ic_launcher_application\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:title</span>=<span class=\"string\">\"@string/jinshan_title\"</span> </span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:screen</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:x</span>=<span class=\"string\">\"\"</span></span></div><div class=\"line\"><span class=\"tag\">    <span class=\"attr\">launcher:y</span>=<span class=\"string\">\"\"</span>/&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"默认打开wifi热点","date":"2017-09-25T07:20:04.000Z","_content":"[FAQ10275](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ10275)怎样默认打开便携式WIFI热点 \n\n\n//frameworks/base/services/java/com/android/server/wifi/WifiService.java\n``` Java\npublic void checkAndStartSoftAp() {\t\t\t\t\t\t\t\t\t\t//在 WifiService 中添加这个方法\n    mWifiStateMachine.autoConnectInit();\n    boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, 0) != 0;\n    if (mWifiStateMachine.hasCustomizedAutoConnect() && isAirplaneModeOn) {\n        SXlog.i(TAG, \"Don't enable softAp when airplane mode is on for customization.\");\n    } else {\n        Slog.i(TAG, \"WifiService starting up with softAp\");\n        setWifiApEnabled(null, true);\n    }\n}\n```\n\n//frameworks/base/services/java/com/android/server/SystemServer.java\n在 initAndLoop() 方法中将\n``` Java\nwifi.checkAndStartWifi();\n```\n替换为\n``` Java\nwifi.checkAndStartSoftAp();\t\t//调用上面添加的方法\n```","source":"_posts/默认打开wifi热点.md","raw":"---\ntitle: 默认打开wifi热点\ndate: 2017-09-25 15:20:04\ntags:\n---\n[FAQ10275](https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&FAQID=FAQ10275)怎样默认打开便携式WIFI热点 \n\n\n//frameworks/base/services/java/com/android/server/wifi/WifiService.java\n``` Java\npublic void checkAndStartSoftAp() {\t\t\t\t\t\t\t\t\t\t//在 WifiService 中添加这个方法\n    mWifiStateMachine.autoConnectInit();\n    boolean isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, 0) != 0;\n    if (mWifiStateMachine.hasCustomizedAutoConnect() && isAirplaneModeOn) {\n        SXlog.i(TAG, \"Don't enable softAp when airplane mode is on for customization.\");\n    } else {\n        Slog.i(TAG, \"WifiService starting up with softAp\");\n        setWifiApEnabled(null, true);\n    }\n}\n```\n\n//frameworks/base/services/java/com/android/server/SystemServer.java\n在 initAndLoop() 方法中将\n``` Java\nwifi.checkAndStartWifi();\n```\n替换为\n``` Java\nwifi.checkAndStartSoftAp();\t\t//调用上面添加的方法\n```","slug":"默认打开wifi热点","published":1,"updated":"2017-09-25T07:24:29.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj85iyght002keddxpukdyqj9","content":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ10275\" target=\"_blank\" rel=\"external\">FAQ10275</a>怎样默认打开便携式WIFI热点 </p>\n<p>//frameworks/base/services/java/com/android/server/wifi/WifiService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkAndStartSoftAp</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//在 WifiService 中添加这个方法</span></div><div class=\"line\">    mWifiStateMachine.autoConnectInit();</div><div class=\"line\">    <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, <span class=\"number\">0</span>) != <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWifiStateMachine.hasCustomizedAutoConnect() &amp;&amp; isAirplaneModeOn) &#123;</div><div class=\"line\">        SXlog.i(TAG, <span class=\"string\">\"Don't enable softAp when airplane mode is on for customization.\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"WifiService starting up with softAp\"</span>);</div><div class=\"line\">        setWifiApEnabled(<span class=\"keyword\">null</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//frameworks/base/services/java/com/android/server/SystemServer.java<br>在 initAndLoop() 方法中将<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartWifi();</div></pre></td></tr></table></figure></p>\n<p>替换为<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartSoftAp();\t\t<span class=\"comment\">//调用上面添加的方法</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://onlinesso.mediatek.com/Pages/FAQ.aspx?List=SW&amp;FAQID=FAQ10275\" target=\"_blank\" rel=\"external\">FAQ10275</a>怎样默认打开便携式WIFI热点 </p>\n<p>//frameworks/base/services/java/com/android/server/wifi/WifiService.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkAndStartSoftAp</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//在 WifiService 中添加这个方法</span></div><div class=\"line\">    mWifiStateMachine.autoConnectInit();</div><div class=\"line\">    <span class=\"keyword\">boolean</span> isAirplaneModeOn = Settings.Global.getInt(mContext.getContentResolver(), Settings.Global.AIRPLANE_MODE_ON, <span class=\"number\">0</span>) != <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (mWifiStateMachine.hasCustomizedAutoConnect() &amp;&amp; isAirplaneModeOn) &#123;</div><div class=\"line\">        SXlog.i(TAG, <span class=\"string\">\"Don't enable softAp when airplane mode is on for customization.\"</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        Slog.i(TAG, <span class=\"string\">\"WifiService starting up with softAp\"</span>);</div><div class=\"line\">        setWifiApEnabled(<span class=\"keyword\">null</span>, <span class=\"keyword\">true</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>//frameworks/base/services/java/com/android/server/SystemServer.java<br>在 initAndLoop() 方法中将<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartWifi();</div></pre></td></tr></table></figure></p>\n<p>替换为<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wifi.checkAndStartSoftAp();\t\t<span class=\"comment\">//调用上面添加的方法</span></div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}